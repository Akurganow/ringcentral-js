{"version":3,"sources":["core/Cache.ts","core/Log.ts","core/Utils.ts","core/Observable.ts","core/PageVisibility.ts","mocks/Mock.ts","mocks/Registry.ts","externals/Externals.ts","http/ApiResponse.ts","http/Client.ts","platform/Queue.ts","platform/Platform.ts","subscription/Subscription.ts","pubnub/PubnubMock.ts","pubnub/PubnubFactory.ts","SDK.ts","http/ClientMock.ts","platform/Auth.ts"],"names":["RingCentral","RingCentral.sdk","RingCentral.sdk.core","RingCentral.sdk.core.Cache","RingCentral.sdk.core.Cache.constructor","RingCentral.sdk.core.Cache.setPrefix","RingCentral.sdk.core.Cache.setItem","RingCentral.sdk.core.Cache.removeItem","RingCentral.sdk.core.Cache.getItem","RingCentral.sdk.core.Cache.clean","RingCentral.sdk.core.Cache._prefixKey","RingCentral.sdk.core.Log","RingCentral.sdk.core.Log.constructor","RingCentral.sdk.core.Log.disableAll","RingCentral.sdk.core.Log.enableAll","RingCentral.sdk.core.Log.debug","RingCentral.sdk.core.Log.info","RingCentral.sdk.core.Log.warn","RingCentral.sdk.core.Log.error","RingCentral.sdk.core.Log.stack","RingCentral.sdk.core.Log._parseArguments","RingCentral.sdk.core.utils","RingCentral.sdk.core.utils.extend","RingCentral.sdk.core.utils.forEach","RingCentral.sdk.core.utils.queryStringify","RingCentral.sdk.core.utils.parseQueryString","RingCentral.sdk.core.utils.isEmail","RingCentral.sdk.core.utils.isPhoneNumber","RingCentral.sdk.core.utils.argumentsToArray","RingCentral.sdk.core.utils.isDate","RingCentral.sdk.core.utils.isFunction","RingCentral.sdk.core.utils.isArray","RingCentral.sdk.core.utils.isWindow","RingCentral.sdk.core.utils.isNan","RingCentral.sdk.core.utils.type","RingCentral.sdk.core.utils.isPlainObject","RingCentral.sdk.core.utils.getProperty","RingCentral.sdk.core.utils.poll","RingCentral.sdk.core.utils.stopPolling","RingCentral.sdk.core.utils.parseString","RingCentral.sdk.core.utils.parseNumber","RingCentral.sdk.core.utils.isNodeJS","RingCentral.sdk.core.utils.isBrowser","RingCentral.sdk.core.Observable","RingCentral.sdk.core.Observable.constructor","RingCentral.sdk.core.Observable.hasListeners","RingCentral.sdk.core.Observable.on","RingCentral.sdk.core.Observable.emit","RingCentral.sdk.core.Observable.off","RingCentral.sdk.core.Observable.destroy","RingCentral.sdk.core.PageVisibility","RingCentral.sdk.core.PageVisibility.constructor","RingCentral.sdk.core.PageVisibility.visible","RingCentral.sdk.mocks","RingCentral.sdk.mocks.Mock","RingCentral.sdk.mocks.Mock.constructor","RingCentral.sdk.mocks.Mock.path","RingCentral.sdk.mocks.Mock.method","RingCentral.sdk.mocks.Mock.test","RingCentral.sdk.mocks.Mock.getResponse","RingCentral.sdk.mocks.Mock.createResponse","RingCentral.sdk.mocks.Registry","RingCentral.sdk.mocks.Registry.constructor","RingCentral.sdk.mocks.Registry.add","RingCentral.sdk.mocks.Registry.clear","RingCentral.sdk.mocks.Registry.find","RingCentral.sdk.mocks.Registry.apiCall","RingCentral.sdk.mocks.Registry.authentication","RingCentral.sdk.mocks.Registry.logout","RingCentral.sdk.mocks.Registry.presenceLoad","RingCentral.sdk.mocks.Registry.subscribeGeneric","RingCentral.sdk.mocks.Registry.subscribeOnPresence","RingCentral.sdk.mocks.Registry.tokenRefresh","RingCentral.sdk.externals","RingCentral.sdk.externals.get","RingCentral.sdk.http","RingCentral.sdk.http.ApiResponse","RingCentral.sdk.http.ApiResponse.constructor","RingCentral.sdk.http.ApiResponse.response","RingCentral.sdk.http.ApiResponse.request","RingCentral.sdk.http.ApiResponse.ok","RingCentral.sdk.http.ApiResponse.text","RingCentral.sdk.http.ApiResponse.json","RingCentral.sdk.http.ApiResponse.error","RingCentral.sdk.http.ApiResponse.multipart","RingCentral.sdk.http.ApiResponse.multipartJson","RingCentral.sdk.http.ApiResponse._isContentType","RingCentral.sdk.http.ApiResponse._getContentType","RingCentral.sdk.http.ApiResponse._isMultipart","RingCentral.sdk.http.ApiResponse._isUrlEncoded","RingCentral.sdk.http.ApiResponse._isJson","RingCentral.sdk.http.ApiResponse.create","RingCentral.sdk.http.Client","RingCentral.sdk.http.Client.constructor","RingCentral.sdk.http.Client.sendRequest","RingCentral.sdk.http.Client._loadResponse","RingCentral.sdk.http.Client.makeError","RingCentral.sdk.http.Client.cloneResponse","RingCentral.sdk.http.Client.createResponse","RingCentral.sdk.http.Client.createRequest","RingCentral.sdk.platform","RingCentral.sdk.platform.Queue","RingCentral.sdk.platform.Queue.constructor","RingCentral.sdk.platform.Queue.isPaused","RingCentral.sdk.platform.Queue.pause","RingCentral.sdk.platform.Queue.resume","RingCentral.sdk.platform.Queue.poll","RingCentral.sdk.platform.Queue.releaseTimeout","RingCentral.sdk.platform.Queue.pollInterval","RingCentral.sdk.platform.Queue.setReleaseTimeout","RingCentral.sdk.platform.Queue.setPollInterval","RingCentral.sdk.platform.Platform","RingCentral.sdk.platform.Platform.constructor","RingCentral.sdk.platform.Platform.auth","RingCentral.sdk.platform.Platform.createUrl","RingCentral.sdk.platform.Platform.authUrl","RingCentral.sdk.platform.Platform.parseAuthRedirectUrl","RingCentral.sdk.platform.Platform.loggedIn","RingCentral.sdk.platform.Platform.login","RingCentral.sdk.platform.Platform.refresh","RingCentral.sdk.platform.Platform.logout","RingCentral.sdk.platform.Platform.inflateRequest","RingCentral.sdk.platform.Platform.sendRequest","RingCentral.sdk.platform.Platform.send","RingCentral.sdk.platform.Platform.get","RingCentral.sdk.platform.Platform.post","RingCentral.sdk.platform.Platform.put","RingCentral.sdk.platform.Platform.delete","RingCentral.sdk.platform.Platform._tokenRequest","RingCentral.sdk.platform.Platform._ensureAuthentication","RingCentral.sdk.platform.Platform._isAccessTokenValid","RingCentral.sdk.platform.Platform._refreshPolling","RingCentral.sdk.platform.Platform._apiKey","RingCentral.sdk.platform.Platform._authHeader","RingCentral.sdk.subscription","RingCentral.sdk.subscription.Subscription","RingCentral.sdk.subscription.Subscription.constructor","RingCentral.sdk.subscription.Subscription.alive","RingCentral.sdk.subscription.Subscription.setSubscription","RingCentral.sdk.subscription.Subscription.subscription","RingCentral.sdk.subscription.Subscription.register","RingCentral.sdk.subscription.Subscription.addEvents","RingCentral.sdk.subscription.Subscription.setEvents","RingCentral.sdk.subscription.Subscription.subscribe","RingCentral.sdk.subscription.Subscription.renew","RingCentral.sdk.subscription.Subscription.remove","RingCentral.sdk.subscription.Subscription.reset","RingCentral.sdk.subscription.Subscription.destroy","RingCentral.sdk.subscription.Subscription._getFullEventFilters","RingCentral.sdk.subscription.Subscription._setTimeout","RingCentral.sdk.subscription.Subscription._clearTimeout","RingCentral.sdk.subscription.Subscription._decrypt","RingCentral.sdk.subscription.Subscription._notify","RingCentral.sdk.subscription.Subscription._subscribeAtPubnub","RingCentral.sdk.pubnub","RingCentral.sdk.pubnub.PubnubMock","RingCentral.sdk.pubnub.PubnubMock.constructor","RingCentral.sdk.pubnub.PubnubMock.ready","RingCentral.sdk.pubnub.PubnubMock.subscribe","RingCentral.sdk.pubnub.PubnubMock.unsubscribe","RingCentral.sdk.pubnub.PubnubMock.receiveMessage","RingCentral.sdk.pubnub.PubnubMockFactory","RingCentral.sdk.pubnub.PubnubMockFactory.constructor","RingCentral.sdk.pubnub.PubnubMockFactory.init","RingCentral.sdk.pubnub.PubnubFactory","RingCentral.sdk.pubnub.PubnubFactory.constructor","RingCentral.sdk.pubnub.PubnubFactory.getPubnub","RingCentral.sdk.SDK","RingCentral.sdk.SDK.constructor","RingCentral.sdk.SDK.platform","RingCentral.sdk.SDK.cache","RingCentral.sdk.SDK.createSubscription","RingCentral.sdk.SDK.createPageVisibility","RingCentral.sdk.SDK.createObservable","RingCentral.sdk.SDK.log","RingCentral.sdk.SDK.utils","RingCentral.sdk.SDK.mockRegistry","RingCentral.sdk.http.ClientMock","RingCentral.sdk.http.ClientMock.constructor","RingCentral.sdk.http.ClientMock._loadResponse","RingCentral.sdk.platform.Auth","RingCentral.sdk.platform.Auth.constructor","RingCentral.sdk.platform.Auth.accessToken","RingCentral.sdk.platform.Auth.refreshToken","RingCentral.sdk.platform.Auth.tokenType","RingCentral.sdk.platform.Auth.data","RingCentral.sdk.platform.Auth.setData","RingCentral.sdk.platform.Auth.accessTokenValid","RingCentral.sdk.platform.Auth.refreshTokenValid","RingCentral.sdk.platform.Auth.cancelAccessToken","RingCentral.sdk.platform.Auth.forceAuthentication","RingCentral.sdk.platform.Auth.setRemember","RingCentral.sdk.platform.Auth.remember"],"mappings":"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","file":"ringcentral.js","sourcesContent":["module RingCentral.sdk.core {\n\n    export class Cache {\n\n        private _storage:Storage;\n        private _prefix:string;\n\n        constructor(storage:Storage|any, prefix?:string) {\n            this.setPrefix(prefix);\n            this._storage = storage;\n        }\n\n        setPrefix(prefix?:string) {\n            this._prefix = prefix || 'rc-';\n            return this;\n        }\n\n        setItem(key, data) {\n            this._storage[this._prefixKey(key)] = JSON.stringify(data);\n            return this;\n        }\n\n        removeItem(key) {\n            delete this._storage[this._prefixKey(key)];\n            return this;\n        }\n\n        getItem(key) {\n            var item = this._storage[this._prefixKey(key)];\n            if (!item) return null;\n            return JSON.parse(item);\n        }\n\n        clean() {\n\n            for (var key in this._storage) {\n\n                if (!this._storage.hasOwnProperty(key)) continue;\n\n                if (key.indexOf(this._prefix) === 0) {\n                    delete this._storage[key];\n                }\n\n            }\n\n            return this;\n\n        }\n\n        protected _prefixKey(key) {\n            return this._prefix + key;\n        }\n\n    }\n\n}\n\n","module RingCentral.sdk.core {\n\n    /**\n     * TODO Fix public vars\n     */\n    export class Log {\n\n        public _console:Console;\n        public logDebug:boolean;\n        public logInfo:boolean;\n        public logWarnings:boolean;\n        public logErrors:boolean;\n        public addTimestamps:boolean;\n\n        constructor(console?:Console) {\n\n            if (!console) {\n                console = <Console>{ // safety\n                    log: () => {},\n                    warn: () => {},\n                    info: () => {},\n                    error: () => {}\n                };\n            }\n\n            this._console = console;\n\n            this.logDebug = false;\n            this.logInfo = false;\n            this.logWarnings = false;\n            this.logErrors = false;\n\n            this.addTimestamps = false;\n\n        }\n\n        disableAll() {\n            this.logDebug = false;\n            this.logInfo = false;\n            this.logWarnings = false;\n            this.logErrors = false;\n        }\n\n        enableAll() {\n            this.logDebug = true;\n            this.logInfo = true;\n            this.logWarnings = true;\n            this.logErrors = true;\n        }\n\n        debug(...args) {\n            if (this.logDebug) this._console.log.apply(this._console, this._parseArguments(arguments));\n        }\n\n        info(...args) {\n            if (this.logInfo) this._console.info.apply(this._console, this._parseArguments(arguments));\n        }\n\n        warn(...args) {\n            if (this.logWarnings) this._console.warn.apply(this._console, this._parseArguments(arguments));\n        }\n\n        error(...args) {\n            if (this.logErrors) this._console.error.apply(this._console, this._parseArguments(arguments));\n        }\n\n        stack() {\n            var e = <any> new Error();\n            if (e.hasOwnProperty('stack')) {\n                return e.stack.replace('Error\\n', 'Stack Trace\\n');\n            }\n        }\n\n        protected _parseArguments(args) {\n            args = utils.argumentsToArray(args);\n            if (this.addTimestamps) args.unshift(new Date().toLocaleString(), '-');\n            return args;\n        }\n\n    }\n\n    export var log = new Log();\n\n}","module RingCentral.sdk.core.utils {\n\n    var hasOwn = Object.prototype.hasOwnProperty,\n        toString = Object.prototype.toString,\n        rdigit = /\\d/,\n        class2type = {};\n\n    // Populate the class2type map\n    'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach((name) => {\n        class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n    });\n\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    export function extend(targetObject:any, sourceObject:any, ...args) {\n\n        var options, name, src, copy, copyIsArray, clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments.length,\n            deep = false;\n\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !isFunction(target)) {\n            target = {};\n        }\n\n        for (; i < length; i++) {\n\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n\n                // Extend the base object\n                for (name in options) {\n\n                    src = target[name];\n                    copy = options[name];\n\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && isArray(src) ? src : [];\n                        } else {\n                            clone = src && isPlainObject(src) ? src : {};\n                        }\n\n                        // Never move original objects, clone them\n                        target[name] = extend(deep, clone, copy);\n\n                        // Don't bring in undefined values\n                    } else if (copy !== undefined) {\n\n                        target[name] = copy;\n\n                    }\n                }\n            }\n        }\n\n        // Return the modified object\n        return target;\n\n    }\n\n    export function forEach(object, cb) {\n\n        for (var i in object) {\n\n            if (!object.hasOwnProperty(i)) continue;\n\n            var res = cb(object[i], i);\n\n            if (res === false) break;\n\n        }\n\n    }\n\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    export function queryStringify(parameters) {\n\n        var array = [];\n\n        forEach(parameters, (v, i) => {\n\n            if (isArray(v)) {\n                v.forEach((vv) => {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            } else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n\n        });\n\n        return array.join('&');\n\n    }\n\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    export function parseQueryString(queryString:string):any {\n\n        var argsParsed = {},\n            self = this;\n\n        queryString.split('&').forEach((arg) => {\n\n            arg = decodeURIComponent(arg);\n\n            if (arg.indexOf('=') == -1) {\n\n                argsParsed[arg.trim()] = true;\n\n            } else {\n\n                var pair = arg.split('='),\n                    key = pair[0].trim(),\n                    value = pair[1].trim();\n\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key])) argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                } else {\n                    argsParsed[key] = value;\n                }\n\n            }\n\n        });\n\n        return argsParsed;\n\n    }\n\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    export function isEmail(v:string, multiple:boolean):boolean {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        } else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n\n    }\n\n    export function isPhoneNumber(v:string):boolean {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    }\n\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    export function argumentsToArray(args:any) {\n        return Array.prototype.slice.call(args || [], 0);\n    }\n\n    export function isDate(obj:any):boolean {\n        return type(obj) === \"date\";\n    }\n\n    export function isFunction(obj:any):boolean {\n        return type(obj) === \"function\";\n    }\n\n    export function isArray(obj:any):boolean {\n        return Array.isArray ? Array.isArray(obj) : type(obj) === \"array\";\n    }\n\n    // A crude way of determining if an object is a window\n    export function isWindow(obj:any):boolean {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    }\n\n    export function isNan(obj:any):boolean {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    }\n\n    export function type(obj:any):string {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    }\n\n    export function isPlainObject(obj:any):boolean {\n\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || type(obj) !== \"object\" || obj.nodeType || isWindow(obj)) {\n            return false;\n        }\n\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n\n        var key;\n        for (key in obj) {}\n\n        return key === undefined || hasOwn.call(obj, key);\n\n    }\n\n    export function getProperty(obj:any, property:string):any {\n\n        return property\n            .split(/[.[\\]]/)\n            .reduce((res, part) => {\n                if (!res) return undefined;\n                return part ? res[part] : res;\n            }, obj);\n\n    }\n\n    export function poll(fn, interval?:number, timeout?:any):any { //NodeJS.Timer|number\n\n        stopPolling(timeout);\n\n        interval = interval || 1000;\n\n        var next = (delay?:number):any => {\n\n            delay = delay || interval;\n\n            interval = delay;\n\n            return setTimeout(() => {\n\n                fn(next, delay);\n\n            }, delay);\n\n        };\n\n        return next();\n\n    }\n\n    export function stopPolling(timeout) {\n        if (timeout) clearTimeout(timeout);\n    }\n\n    export function parseString(s:any):string {\n        return s ? s.toString() : '';\n    }\n\n    export function parseNumber(n:any):number {\n        if (!n) return 0;\n        n = parseFloat(n);\n        return isNan(n) ? 0 : n;\n    }\n\n    export function isNodeJS():boolean {\n        return (typeof process !== 'undefined');\n    }\n\n    export function isBrowser():boolean {\n        return (typeof window !== 'undefined');\n    }\n\n}","/// <reference path=\"./Log.ts\" />\n/// <reference path=\"./Utils.ts\" />\n\nmodule RingCentral.sdk.core {\n\n    /**\n     * @see https://github.com/Microsoft/TypeScript/issues/275\n     */\n    export class Observable<T extends Observable<any>> {\n\n        private _listeners:any;\n\n        constructor() {\n            if (!(this instanceof Observable)) throw new Error('Observable(): New operator was omitted');\n            this.off();\n        }\n\n        hasListeners(event) {\n            return (event in this._listeners);\n        }\n\n        on(events:any, callback:(...args)=>any):T {\n\n            if (typeof events == 'string') events = [events];\n            if (!events) throw new Error('No events to subscribe to');\n            if (typeof callback !== 'function') throw new Error('Callback must be a function');\n\n            events.forEach((event:string) => {\n\n                if (!this.hasListeners(event)) this._listeners[event] = [];\n\n                this._listeners[event].push(callback);\n\n            });\n\n            return <any>this;\n\n        }\n\n        emit(event:string, ...args):any {\n\n            var result = null;\n\n            if (!this.hasListeners(event)) return null;\n\n            this._listeners[event].some((callback:()=>any) => {\n\n                result = callback.apply(this, args);\n                return (result === false);\n\n            });\n\n            return result;\n\n        }\n\n        off(event?:string, callback?):T {\n\n            if (!event) {\n\n                this._listeners = {};\n\n            } else {\n\n                if (!callback) {\n\n                    delete this._listeners[event];\n\n                } else {\n\n                    if (!this.hasListeners(event)) return <any>this;\n\n                    this._listeners[event].forEach((cb, i) => {\n\n                        if (cb === callback) delete this._listeners[event][i];\n\n                    });\n\n                }\n\n            }\n\n            return <any>this;\n\n        }\n\n        destroy():T {\n            this.off();\n            log.debug('Observable.destroy(): Listeners were destroyed');\n            return <T>this;\n        }\n\n    }\n\n}\n\n\n","/// <reference path=\"./Observable.ts\" />\n\nmodule RingCentral.sdk.core {\n\n    export class PageVisibility extends Observable<PageVisibility> {\n\n        public events = {\n            change: 'change'\n        };\n\n        protected _visible:boolean;\n\n        constructor() {\n\n            super();\n\n            var hidden = \"hidden\",\n                onchange = (evt) => {\n\n                    evt = evt || window.event;\n\n                    var v = 'visible',\n                        h = 'hidden',\n                        evtMap = {\n                            focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n                        };\n\n                    this._visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n\n                    this.emit(this.events.change, this._visible);\n\n                };\n\n            this._visible = true;\n\n            if (typeof document == 'undefined' || typeof window == 'undefined') return;\n\n            // Standards:\n\n            if (hidden in document)\n                document.addEventListener(\"visibilitychange\", onchange);\n            else if ((hidden = \"mozHidden\") in document)\n                document.addEventListener(\"mozvisibilitychange\", onchange);\n            else if ((hidden = \"webkitHidden\") in document)\n                document.addEventListener(\"webkitvisibilitychange\", onchange);\n            else if ((hidden = \"msHidden\") in document)\n                document.addEventListener(\"msvisibilitychange\", onchange);\n            // IE 9 and lower:\n            else if ('onfocusin' in <any>document)\n                (<any>document).onfocusin = (<any>document).onfocusout = onchange;\n            // All others:\n            else\n                window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n\n        }\n\n        visible() {\n            return this._visible;\n        }\n\n    }\n\n}","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n\nmodule RingCentral.sdk.mocks {\n\n    export class Mock {\n\n        protected _method:string;\n        protected _path:string;\n        protected _delay:number;\n        protected _json:any;\n        protected _status:number;\n        protected _statusText:string;\n\n        constructor(method:string, path:string, json?:any, status?:number, statusText?:string, delay?:number) {\n            this._method = method.toUpperCase();\n            this._path = path;\n            this._json = json || {};\n            this._delay = delay || 10;\n            this._status = status || 200;\n            this._statusText = statusText || 'OK';\n        }\n\n        path() {\n            return this._path;\n        }\n\n        method() {\n            return this._method;\n        }\n\n        test(request:Request) {\n\n            return request.url.indexOf(this._path) > -1 &&\n                   request.method.toUpperCase() == this._method;\n\n        }\n\n        getResponse(request:Request):Response|Promise<Response> {\n\n            return new externals._Promise((resolve, reject) => {\n\n                setTimeout(() => {\n\n                    resolve(this.createResponse(this._json));\n\n                }, this._delay);\n\n            });\n\n        }\n\n        createResponse(json?:any, init?:ResponseInit|any) {\n\n            init = init || {};\n\n            init.status = init.status || this._status;\n            init.statusText = init.statusText || this._statusText;\n\n            var str = JSON.stringify(json),\n                res = http.Client.createResponse(str, init);\n\n            res.headers.set(http.ApiResponse.contentType, http.ApiResponse.jsonContentType);\n\n            return res;\n\n        }\n\n    }\n\n}","/// <reference path=\"./Mock.ts\" />\n\nmodule RingCentral.sdk.mocks {\n\n    export class Registry {\n\n        protected _mocks:Mock[];\n\n        constructor() {\n            this._mocks = [];\n        }\n\n        add(mock:Mock) {\n            this._mocks.push(mock);\n            return this;\n        }\n\n        clear() {\n            this._mocks = [];\n            return this;\n        }\n\n        find(request:Request):Mock {\n\n            //console.log('Registry is looking for', request);\n\n            var mock = this._mocks.shift();\n\n            if (!mock) throw new Error('No mock in registry for request ' + request.method + ' ' + request.url);\n\n            if (!mock.test(request)) throw new Error('Wrong request ' + request.method + ' ' + request.url +\n                                                     ' for expected mock ' + mock.method() + ' ' + mock.path());\n\n            return mock;\n\n        }\n\n        apiCall(method:string, path:string, response:any, status?:number, statusText?:string) {\n\n            this.add(new Mock(method, path, response, status, statusText));\n\n            return this;\n\n        }\n\n        authentication() {\n\n            this.apiCall('POST', '/restapi/oauth/token', {\n                'access_token': 'ACCESS_TOKEN',\n                'token_type': 'bearer',\n                'expires_in': 3600,\n                'refresh_token': 'REFRESH_TOKEN',\n                'refresh_token_expires_in': 60480,\n                'scope': 'SMS RCM Foo Boo',\n                'expireTime': new Date().getTime() + 3600000\n            });\n\n            return this;\n\n        }\n\n        logout() {\n\n            this.apiCall('POST', '/restapi/oauth/revoke', {});\n\n            return this;\n\n        }\n\n        presenceLoad(id) {\n\n            this.apiCall('GET', '/restapi/v1.0/account/~/extension/' + id + '/presence', {\n                \"uri\": \"https://platform.ringcentral.com/restapi/v1.0/account/123/extension/\" + id + \"/presence\",\n                \"extension\": {\n                    \"uri\": \"https://platform.ringcentral.com/restapi/v1.0/account/123/extension/\" + id,\n                    \"id\": id,\n                    \"extensionNumber\": \"101\"\n                },\n                \"activeCalls\": [],\n                \"presenceStatus\": \"Available\",\n                \"telephonyStatus\": \"Ringing\",\n                \"userStatus\": \"Available\",\n                \"dndStatus\": \"TakeAllCalls\",\n                \"extensionId\": id\n            });\n\n            return this;\n\n        }\n\n        subscribeGeneric(expiresIn?:number) {\n\n            expiresIn = expiresIn || 15 * 60 * 60;\n\n            var date = new Date();\n\n            this.apiCall('POST', '/restapi/v1.0/subscription', {\n                'eventFilters': [\n                    '/restapi/v1.0/account/~/extension/~/presence'\n                ],\n                'expirationTime': new Date(date.getTime() + (expiresIn * 1000)).toISOString(),\n                'expiresIn': expiresIn,\n                'deliveryMode': {\n                    'transportType': 'PubNub',\n                    'encryption': false,\n                    'address': '123_foo',\n                    'subscriberKey': 'sub-c-foo',\n                    'secretKey': 'sec-c-bar'\n                },\n                'id': 'foo-bar-baz',\n                'creationTime': date.toISOString(),\n                'status': 'Active',\n                'uri': 'https://platform.ringcentral.com/restapi/v1.0/subscription/foo-bar-baz'\n            });\n\n            return this;\n\n        }\n\n        subscribeOnPresence(id?:string, detailed?:boolean) {\n\n            id = id || '1';\n\n            var date = new Date();\n\n            this.apiCall('POST', '/restapi/v1.0/subscription', {\n                'eventFilters': ['/restapi/v1.0/account/~/extension/' + id + '/presence' + (detailed ? '?detailedTelephonyState=true' : '')],\n                'expirationTime': new Date(date.getTime() + (15 * 60 * 60 * 1000)).toISOString(),\n                'deliveryMode': {\n                    'transportType': 'PubNub',\n                    'encryption': true,\n                    'address': '123_foo',\n                    'subscriberKey': 'sub-c-foo',\n                    'secretKey': 'sec-c-bar',\n                    'encryptionAlgorithm': 'AES',\n                    'encryptionKey': 'VQwb6EVNcQPBhE/JgFZ2zw=='\n                },\n                'creationTime': date.toISOString(),\n                'id': 'foo-bar-baz',\n                'status': 'Active',\n                'uri': 'https://platform.ringcentral.com/restapi/v1.0/subscription/foo-bar-baz'\n            });\n\n            return this;\n\n        }\n\n        tokenRefresh(failure?:boolean) {\n\n            if (!failure) {\n\n                this.apiCall('POST', '/restapi/oauth/token', {\n                    'access_token': 'ACCESS_TOKEN_FROM_REFRESH',\n                    'token_type': 'bearer',\n                    'expires_in': 3600,\n                    'refresh_token': 'REFRESH_TOKEN_FROM_REFRESH',\n                    'refresh_token_expires_in': 60480,\n                    'scope': 'SMS RCM Foo Boo'\n                });\n\n            } else {\n\n                this.apiCall('POST', '/restapi/oauth/token', {\n                    'message': 'Wrong token',\n                    'error_description': 'Wrong token',\n                    'description': 'Wrong token'\n                }, 400);\n\n            }\n\n            return this;\n\n        }\n\n    }\n\n}","/// <reference path=\"../externals.d.ts\" />\n\nmodule RingCentral.sdk.externals {\n\n    export var _Promise:typeof Promise;\n    export var _fetch:Fetch;\n    export var _Response:typeof Response;\n    export var _Request:typeof Request;\n    export var _Headers:typeof Headers;\n    export var _PUBNUB:PUBNUB;\n\n    export function get() {\n\n        var root = Function('return this')();\n\n        if (!_PUBNUB) _PUBNUB = root.PUBNUB;\n        if (!_Promise) _Promise = root.Promise;\n        if (!_fetch) _fetch = root.fetch;\n        if (!_Headers) _Headers = root.Headers;\n        if (!_Request) _Request = root.Request;\n        if (!_Response) _Response = root.Response;\n\n        return externals;\n\n    }\n\n}\n\n","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n\nmodule RingCentral.sdk.http {\n\n    /**\n     * @TODO Bring back tests\n     */\n    export class ApiResponse {\n\n        static contentType = 'Content-Type';\n        static jsonContentType = 'application/json';\n        static multipartContentType = 'multipart/mixed';\n        static urlencodedContentType = 'application/x-www-form-urlencoded';\n        static headerSeparator = ':';\n        static bodySeparator = '\\n\\n';\n        static boundarySeparator = '--';\n\n        protected _json:any;\n        protected _text:string;\n        protected _request:Request;\n        protected _response:Response;\n        protected _multipartTransactions:ApiResponse[];\n\n        constructor(request?:Request, response?:Response, responseText?:string) {\n\n            this._text = responseText;\n            this._request = request;\n            this._response = response;\n            this._json = null;\n            this._multipartTransactions = null;\n\n        }\n\n        response() {\n            return this._response;\n        }\n\n        request() {\n            return this._request;\n        }\n\n        ok() {\n            return this._response && this._response.ok;\n        }\n\n        text() {\n            return this._text;\n        }\n\n        json() {\n\n            if (!this._isJson()) throw new Error('Response is not JSON');\n\n            if (!this._json) {\n                this._json = this._text ? JSON.parse(this._text) : null;\n            }\n\n            return this._json;\n\n        }\n\n        error(skipOKCheck?:boolean) {\n\n            if (this.ok() && !skipOKCheck) return null;\n\n            var message = (this._response && this._response.status ? this._response.status + ' ' : '') +\n                          (this._response && this._response.statusText ? this._response.statusText : '');\n\n            try {\n\n                var json = this.json();\n\n                if (json.message) message = json.message;\n                if (json.error_description) message = json.error_description;\n                if (json.description) message = json.description;\n\n            } catch (ex) {}\n\n            return message;\n\n        }\n\n        multipart():ApiResponse[] {\n\n            if (!this._isMultipart()) throw new Error('Response is not multipart');\n\n            if (null === this._multipartTransactions) {\n\n                // Step 1. Split multipart response\n\n                if (!this._text) throw new Error('No response body');\n\n                var boundary = this._response.headers.get('Content-Type').match(/boundary=([^;]+)/i)[1];\n\n                if (!boundary) throw new Error('Cannot find boundary');\n\n                var parts = this._text.toString().split(ApiResponse.boundarySeparator + boundary);\n\n                if (parts[0].trim() === '') parts.shift();\n                if (parts[parts.length - 1].trim() == ApiResponse.boundarySeparator) parts.pop();\n\n                if (parts.length < 1) throw new Error('No parts in body');\n\n                // Step 2. Parse status info\n\n                var statusInfo = ApiResponse.create(parts.shift(), this._response.status, this._response.statusText);\n\n                // Step 3. Parse all other parts\n\n                this._multipartTransactions = parts.map((part:string, i) => { //FIXME It will not work since parts contain both headers and body\n\n                    var status = statusInfo.json().response[i].status;\n\n                    return ApiResponse.create(part, status);\n\n                });\n\n            }\n\n            return this._multipartTransactions;\n\n        }\n\n        /**\n         * Short-hand method to get only JSON content of responses\n         */\n        multipartJson():any[] {\n\n            return this.multipart().map((res)=> {\n                return res.json();\n            });\n\n        }\n\n        protected _isContentType(contentType:string):boolean {\n            return this._getContentType().indexOf(contentType) > -1;\n        }\n\n        protected _getContentType():string {\n            return this._response.headers.get(ApiResponse.contentType) || '';\n        }\n\n        protected _isMultipart():boolean {\n            return this._isContentType(ApiResponse.multipartContentType);\n        }\n\n        protected _isUrlEncoded():boolean {\n            return this._isContentType(ApiResponse.urlencodedContentType);\n        }\n\n        protected _isJson():boolean {\n            return this._isContentType(ApiResponse.jsonContentType);\n        }\n\n        /**\n         * Method is used to create Transaction objects from string parts of multipart/mixed response\n         * @param text\n         * @param status\n         * @param statusText\n         * @return {ApiResponse}\n         */\n        static create(text?:string, status?:number, statusText?:string):ApiResponse {\n\n            status = status || 200;\n            statusText = statusText || 'OK';\n\n            text = text.replace(/\\r/g, '');\n\n            var headers = new externals._Headers(),\n                headersAndBody = text.split(ApiResponse.bodySeparator),\n                headersText = (headersAndBody.length > 1) ? headersAndBody.shift() : '';\n\n            text = headersAndBody.join(ApiResponse.bodySeparator);\n\n            (headersText || '')\n                .split('\\n')\n                .forEach((header:string) => {\n\n                    var split = header.trim().split(ApiResponse.headerSeparator),\n                        key = split.shift().trim(),\n                        value = split.join(ApiResponse.headerSeparator).trim();\n\n                    if (key) headers.append(key, value);\n\n                });\n\n            return new ApiResponse(null, Client.createResponse(text, {\n                headers: headers,\n                status: status,\n                statusText: statusText\n            }), text);\n\n        }\n\n    }\n\n}","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../mocks/Registry.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n/// <reference path=\"./ApiResponse.ts\" />\n\nmodule RingCentral.sdk.http {\n\n    var allowedMethods = ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'];\n\n    export class Client extends core.Observable<Client> {\n\n        public events = {\n            beforeRequest: 'beforeRequest', // parameters: ajax\n            requestSuccess: 'requestSuccess', // means that response was successfully fetched from server\n            requestError: 'requestError' // means that request failed completely\n        };\n\n        sendRequest(request:Request):Promise<ApiResponse> {\n\n            var res = new ApiResponse(request); //FIXME Potential leak\n\n            return new externals._Promise((resolve) => {\n\n                //TODO Stop request if listeners return false\n                this.emit(this.events.beforeRequest, res);\n\n                resolve(this._loadResponse(request));\n\n            })\n                .then((response:Response) => {\n\n                    res['_response'] = Client.cloneResponse(response);\n\n                    return response.text();\n\n                })\n                .then((text:string) => {\n\n                    res['_text'] = text;\n\n                    if (!res.ok()) throw Client.makeError(new Error('Response has unsuccessful status'), res);\n\n                    this.emit(this.events.requestSuccess, res);\n\n                    return res;\n\n                })\n                .catch((e:IApiError):any=> {\n\n                    if (!e.apiResponse) {\n                        // we don't pass response since most likely it's parsing caused an error\n                        e = Client.makeError(e, res);\n                    }\n\n                    this.emit(this.events.requestError, e);\n\n                    throw e;\n\n                });\n\n        }\n\n        protected _loadResponse(request:Request):Promise<Response> {\n            return externals._fetch.call(null, request);\n        }\n\n        /**\n         * Wraps the JS Error object with transaction information\n         * @param {Error} e\n         * @param {ApiResponse} apiResponse\n         * @return {IApiError}\n         */\n        static makeError(e:Error, apiResponse?:ApiResponse) {\n\n            var error = <IApiError>e;\n\n            // Wrap only if regular error\n            if (!error.hasOwnProperty('apiResponse') && !error.hasOwnProperty('originalMessage')) {\n\n                error.apiResponse = apiResponse;\n                error.originalMessage = error.message;\n                error.message = (apiResponse && apiResponse.error(true)) || error.originalMessage;\n\n            }\n\n            return error;\n\n        }\n\n        /**\n         * TODO Wait for\n         *   - https://github.com/github/fetch/issues/185\n         *   - https://github.com/bitinn/node-fetch/issues/34\n         * @param {Response} response\n         * @return {Response}\n         */\n        static cloneResponse(response:Response):Response {\n\n            if (core.utils.isFunction(response.clone)) return response.clone();\n\n            var body = '';\n\n            if (response.hasOwnProperty('_bodyInit')) body = response['_bodyInit'];\n            if (response.hasOwnProperty('_bodyText')) body = response['_bodyText'];\n            if (response.hasOwnProperty('_bodyBlob')) body = response['_bodyBlob'].slice();\n            if (response.hasOwnProperty('_bodyFormData')) body = response['_bodyFormData'];\n\n            if (response.hasOwnProperty('_raw')) body = response['_raw'].join('');\n\n            var clone = new externals._Response(body, response);\n\n            if (response.hasOwnProperty('body')) clone['body'] = response['body']; // accessing non-standard properties\n\n            return clone;\n\n        }\n\n        /**\n         * Creates a response\n         * @param stringBody\n         * @param init\n         * @return {Response}\n         */\n        static createResponse(stringBody?:string, init?:ResponseInit):Response {\n\n            init = init || <ResponseInit>{};\n\n            return new externals._Response(stringBody, init);\n\n        }\n\n        static createRequest(input:string|Request, init?:IClientRequestInit) {\n\n            init = init || {};\n\n            var body = init.body;\n\n            // Assign request with empty body, Github's fetch throws errors if it cannot recognize the body type\n            var req = new externals._Request(input, core.utils.extend({}, init, {body: null}));\n\n            if (!req.url) throw new Error('Url is not defined');\n            if (!req.method) req.method = 'GET';\n            if (req.method && allowedMethods.indexOf(req.method) < 0) throw new Error('Method has wrong value: ' + req.method);\n\n            if (!req.headers.has('Accept')) req.headers.set('Accept', 'application/json');\n\n            // Serialize body\n            if (core.utils.isPlainObject(init.body) || !init.body) {\n\n                if (!req.headers.has('Content-Type')) req.headers.set('Content-Type', 'application/json');\n\n                var contentType = req.headers.get('Content-Type');\n\n                if (contentType.indexOf('application/json') > -1) {\n\n                    body = JSON.stringify(init.body);\n\n                } else if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n\n                    body = core.utils.queryStringify(init.body);\n\n                }\n\n            }\n\n            req.credentials = 'include';\n            req.mode = 'cors';\n\n            if (init.query) {\n                req.url = req.url + (req.url.indexOf('?') > -1 ? '&' : '?') + core.utils.queryStringify(init.query);\n            }\n\n            // Create another request with encoded body\n            req = new externals._Request(req.url, core.utils.extend(req, {body: body}));\n\n            // Keep the original body accessible directly (for mocks)\n            req.body = init.body;\n\n            return req;\n\n        }\n\n    }\n\n    export interface IApiError extends Error {\n        stack?:string;\n        originalMessage:string;\n        apiResponse:ApiResponse;\n    }\n\n    export interface IClientRequestInit extends RequestInit {\n        query?: string;\n    }\n\n}","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n\nmodule RingCentral.sdk.platform {\n\n    export class Queue {\n\n        protected _cacheId:string;\n        protected _pollInterval:number;\n        protected _releaseTimeout:number;\n\n        protected _cache:core.Cache;\n        protected _promise:Promise<any>;\n\n        constructor(cache:core.Cache, cacheId:string) {\n\n            this._cache = cache;\n            this._cacheId = cacheId;\n\n            this.setPollInterval(250);\n            this.setReleaseTimeout(5000); // If queue was not released then force it to do so after some timeout\n\n        }\n\n        isPaused() {\n\n            var storage = this._cache,\n                cacheId = this._cacheId,\n                time = storage.getItem(cacheId);\n\n            return !!time && Date.now() - parseInt(time) < this._releaseTimeout;\n        }\n\n        pause() {\n            this._cache.setItem(this._cacheId, Date.now());\n            return this;\n        }\n\n        resume() {\n            this._cache.removeItem(this._cacheId);\n            return this;\n        }\n\n        poll() {\n\n            if (this._promise) return this._promise;\n\n            this._promise = new externals._Promise((resolve, reject) => {\n\n                core.utils.poll((next) => {\n\n                    if (this.isPaused()) return next();\n\n                    this._promise = null;\n\n                    this.resume(); // this is actually not needed but why not\n\n                    resolve(null);\n\n                }, this._pollInterval);\n\n            });\n\n            return this._promise;\n\n        }\n\n        releaseTimeout() {\n            return this._releaseTimeout;\n        }\n\n        pollInterval() {\n            return this._pollInterval;\n        }\n\n        setReleaseTimeout(releaseTimeout:number) {\n            this._releaseTimeout = releaseTimeout;\n            return this;\n        }\n\n        setPollInterval(pollInterval:number) {\n            this._pollInterval = pollInterval;\n            return this;\n        }\n\n    }\n\n}","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../core/Cache.ts\" />\n/// <reference path=\"../core/Log\" />\n/// <reference path=\"../http/Client.ts\" />\n/// <reference path=\"../http/ApiResponse.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n/// <reference path=\"./Queue.ts\" />\n\nmodule RingCentral.sdk.platform {\n\n    export class Platform extends core.Observable<Platform> {\n\n        protected static _urlPrefix:string = '/restapi';\n        protected static _apiVersion:string = 'v1.0';\n        protected static _accessTokenTtl:number = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        protected static _refreshTokenTtl:number = 10 * 60 * 60; // 10 hours\n        protected static _refreshTokenTtlRemember:number = 7 * 24 * 60 * 60; // 1 week\n        protected static _tokenEndpoint:string = '/restapi/oauth/token';\n        protected static _revokeEndpoint:string = '/restapi/oauth/revoke';\n        protected static _authorizeEndpoint:string = '/restapi/oauth/authorize';\n\n        protected _server:string;\n        protected _appKey:string;\n        protected _appSecret:string;\n\n        protected _refreshDelayMs:number = 100;\n        protected _clearCacheOnRefreshError:boolean = true;\n        protected _cacheId:string = 'platform';\n\n        protected _queue:Queue;\n        protected _cache:core.Cache;\n        protected _client:http.Client;\n        protected _auth:Auth;\n\n        public events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n\n        constructor(client:http.Client,\n                    cache:core.Cache,\n                    server:string,\n                    appKey:string,\n                    appSecret:string) {\n\n            super();\n\n            this._server = server;\n            this._appKey = appKey;\n            this._appSecret = appSecret;\n\n            this._cache = cache;\n            this._client = client;\n            this._queue = new Queue(this._cache, this._cacheId + '-refresh');\n            this._auth = new Auth(this._cache, this._cacheId);\n\n        }\n\n        auth():Auth {\n            return this._auth;\n        }\n\n        createUrl(path, options?:{addMethod?: string; addToken?: boolean; addServer?: boolean}):string {\n\n            path = path || '';\n            options = options || {};\n\n            var builtUrl = '',\n                hasHttp = path.indexOf('http://') != -1 || path.indexOf('https://') != -1;\n\n            if (options.addServer && !hasHttp) builtUrl += this._server;\n\n            if (path.indexOf(Platform._urlPrefix) == -1 && !hasHttp) builtUrl += Platform._urlPrefix + '/' + Platform._apiVersion;\n\n            builtUrl += path;\n\n            if (options.addMethod || options.addToken) builtUrl += (path.indexOf('?') > -1 ? '&' : '?');\n\n            if (options.addMethod) builtUrl += '_method=' + options.addMethod;\n            if (options.addToken) builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this._auth.accessToken();\n\n            return builtUrl;\n\n        }\n\n        authUrl(options:{\n            redirectUri:string;\n            display?:string; // page|popup|touch|mobile, default 'page'\n            prompt?:string; // sso|login|consent, default is 'login sso consent'\n            state?:string;\n            brandId?:string|number;\n        }) {\n\n            options = options || <any>{};\n\n            return this.createUrl(Platform._authorizeEndpoint + '?' + core.utils.queryStringify({\n                    'response_type': 'code',\n                    'redirect_uri': options.redirectUri || '',\n                    'client_id': this._appKey,\n                    'state': options.state || '',\n                    'brand_id': options.brandId || '',\n                    'display': options.display || '',\n                    'prompt': options.prompt || ''\n                }), {addServer: true})\n\n        }\n\n        parseAuthRedirectUrl(url:string) {\n\n            var qs = core.utils.parseQueryString(url.split('?').reverse()[0]),\n                error = qs.error_description || qs.error;\n\n            if (error) {\n                var e = <IAuthError> new Error(error);\n                e.error = qs.error;\n                throw e;\n            }\n\n            return qs;\n\n        }\n\n        loggedIn():Promise<boolean> {\n\n            return this._ensureAuthentication()\n                .then(()=> {\n                    return true;\n                })\n                .catch(()=> {\n                    return false;\n                });\n\n        }\n\n        login(options?:{\n            username?:string;\n            password?: string;\n            extension?:string;\n            endpointId?:string;\n            code?:string;\n            redirectUri?:string;\n            clientId?:string;\n            remember?:boolean\n        }):Promise<http.ApiResponse> {\n\n            options = options || <any>{};\n\n            options.remember = options.remember || false;\n\n            var body = <any>{\n                \"access_token_ttl\": Platform._accessTokenTtl,\n                \"refresh_token_ttl\": options.remember ? Platform._refreshTokenTtlRemember : Platform._refreshTokenTtl\n            };\n\n            if (!options.code) {\n\n                body.grant_type = 'password';\n                body.username = options.username;\n                body.password = options.password;\n                body.extension = options.extension || '';\n\n            } else if (options.code) {\n\n                body.grant_type = 'authorization_code';\n                body.code = options.code;\n                body.redirect_uri = options.redirectUri;\n                //body.client_id = this.getCredentials().key; // not needed\n\n            }\n\n            if (options.endpointId) body.endpoint_id = options.endpointId;\n\n            return this._tokenRequest(Platform._tokenEndpoint, body).then((res:http.ApiResponse) => {\n\n                this._auth\n                    .setData(res.json())\n                    .setRemember(options.remember);\n\n                this.emit(this.events.authorizeSuccess, res);\n\n                return res;\n\n            }).catch((e:http.IApiError):any => {\n\n                this._cache.clean();\n\n                this.emit(this.events.authorizeError, e);\n\n                throw e;\n\n            });\n\n        }\n\n        refresh():Promise<http.ApiResponse> {\n\n            var refresh = <Promise<http.ApiResponse>>new externals._Promise((resolve, reject) => {\n\n                if (this._queue.isPaused()) {\n                    return resolve(this._refreshPolling());\n                }\n\n                this._queue.pause();\n\n                // Make sure all existing AJAX calls had a chance to reach the server\n                setTimeout(() => {\n\n                    core.log.debug('Platform.refresh(): Performing token refresh (access token', this._auth.accessToken(), ', refresh token', this._auth.refreshToken(), ')');\n\n                    // Perform sanity checks\n                    if (!this._auth.refreshToken()) return reject(new Error('Refresh token is missing'));\n                    if (!this._auth.refreshTokenValid()) return reject(new Error('Refresh token has expired'));\n                    if (!this._queue.isPaused()) return reject(new Error('Queue was resumed before refresh call'));\n\n                    resolve(this._tokenRequest(Platform._tokenEndpoint, {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": this._auth.refreshToken(),\n                        \"access_token_ttl\": Platform._accessTokenTtl,\n                        \"refresh_token_ttl\": this._auth.remember() ? Platform._refreshTokenTtlRemember : Platform._refreshTokenTtl\n                    }));\n\n                }, this._refreshDelayMs);\n\n            });\n\n            return refresh.then((res:http.ApiResponse) => {\n\n                // This means refresh has happened elsewhere and we are here because of timeout\n                if (res && res.json && res.json()) {\n\n                    var json = res.json();\n\n                    core.log.info('Platform.refresh(): Token was refreshed', res);\n\n                    if (!json.refresh_token || !json.access_token) {\n                        throw http.Client.makeError(new Error('Malformed OAuth response'), res);\n                    }\n\n                    this._auth.setData(json);\n                    this._queue.resume();\n\n                }\n\n                this.emit(this.events.refreshSuccess, res);\n\n                return res;\n\n            }).catch((e:http.IApiError):any => {\n\n                e = http.Client.makeError(e);\n\n                if (this._clearCacheOnRefreshError) {\n                    this._cache.clean();\n                }\n\n                this.emit(this.events.accessViolation, e);\n                this.emit(this.events.refreshError, e);\n\n                throw e;\n\n            });\n\n        }\n\n        /**\n         * @returns {Promise}\n         */\n        logout():Promise<http.ApiResponse> {\n\n            this._queue.pause();\n\n            return this._tokenRequest(Platform._revokeEndpoint, {\n                token: this._auth.accessToken()\n            }).then((res)  => {\n\n                this._queue.resume();\n                this._cache.clean();\n\n                this.emit(this.events.logoutSuccess, res);\n\n                return res;\n\n            }).catch((e:http.IApiError):any => {\n\n                this._queue.resume();\n\n                this.emit(this.events.accessViolation, e);\n                this.emit(this.events.logoutError, e);\n\n                throw e;\n\n            });\n\n        }\n\n        inflateRequest(request:Request, options?:IPlatformOptions):Promise<Request> {\n\n            options = options || {};\n\n            if (options.skipAuthCheck) return externals._Promise.resolve(request);\n\n            return this\n                ._ensureAuthentication()\n                .then(() => {\n\n                    request.headers.set('Authorization', this._authHeader());\n                    request.url = this.createUrl(request.url, {addServer: true});\n\n                    //TODO Add User-Agent here\n\n                    return request;\n\n                });\n\n        }\n\n        sendRequest(request:Request, options?:IPlatformOptions):Promise<http.ApiResponse> {\n\n            return this\n                .inflateRequest(request, options)\n                .then((req) => {\n                    return this._client.sendRequest(req);\n                })\n                .catch((e:http.IApiError) => {\n\n                    // Guard is for errors that come from polling\n                    if (!e.apiResponse || !e.apiResponse.response() || (e.apiResponse.response().status != 401)) throw e;\n\n                    this._auth.cancelAccessToken();\n\n                    return this.sendRequest(request, options);\n\n                });\n\n        }\n\n        /**\n         * General purpose function to send anything to server\n         */\n        send(url:string, options?:IPlatformCombinedOptions):Promise<http.ApiResponse> {\n\n            try {\n\n                //FIXME https://github.com/bitinn/node-fetch/issues/43\n                url = this.createUrl(url, {addServer: true});\n\n                return this.sendRequest(http.Client.createRequest(url, options), options);\n\n            } catch (e) {\n                return externals._Promise.reject(e);\n            }\n\n        }\n\n        get(url:string, options?:IPlatformCombinedOptions) {\n            options = options || {};\n            options.method = 'GET';\n            return this.send(url, options);\n        }\n\n        post(url:string, options:IPlatformCombinedOptions) {\n            options = options || {};\n            options.method = 'POST';\n            return this.send(url, options);\n        }\n\n        put(url:string, options:IPlatformCombinedOptions) {\n            options = options || {};\n            options.method = 'PUT';\n            return this.send(url, options);\n        }\n\n        'delete'(url:string, options?:IPlatformCombinedOptions) {\n            options = options || {};\n            options.method = 'DELETE';\n            return this.send(url, options);\n        }\n\n        protected _tokenRequest(path:string, body:any):Promise<http.ApiResponse> {\n\n            return this.send(path, {\n                skipAuthCheck: true,\n                body: body,\n                method: 'POST',\n                headers: {\n                    'Authorization': 'Basic ' + this._apiKey(),\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                }\n            });\n\n        }\n\n        protected _ensureAuthentication() {\n\n            if (this._isAccessTokenValid()) return externals._Promise.resolve(null);\n            return this.refresh();\n\n        }\n\n        protected _isAccessTokenValid():boolean {\n\n            return (this._auth.accessTokenValid() && !this._queue.isPaused());\n\n        }\n\n        protected _refreshPolling():Promise<any> {\n\n            core.log.warn('Platform.refresh(): Refresh is already in progress, polling started');\n\n            return this._queue.poll().then(()=> {\n\n                if (!this._isAccessTokenValid()) {\n                    throw new Error('Automatic authentification timeout');\n                }\n\n                return null;\n\n            });\n\n        }\n\n        protected _apiKey() {\n            var apiKey = this._appKey + ':' + this._appSecret;\n            return (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        }\n\n        protected _authHeader() {\n            var token = this._auth.accessToken();\n            return this._auth.tokenType() + (token ? ' ' + token : '');\n        }\n\n    }\n\n    export interface IAuthError extends Error {\n        error?:string;\n    }\n\n    export interface IPlatformOptions {\n        skipAuthCheck?:boolean;\n    }\n\n    export interface IPlatformCombinedOptions extends IPlatformOptions, http.IClientRequestInit {}\n\n}","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Log.ts\" />\n/// <reference path=\"../platform/Platform.ts\" />\n/// <reference path=\"../http/ApiResponse.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n\nmodule RingCentral.sdk.subscription {\n\n\n    export class Subscription extends core.Observable<Subscription> {\n\n        protected _renewHandicapMs = 2 * 60 * 1000;\n\n        protected _subscription:ISubscription|any;\n        protected _timeout;\n        protected _eventFilters:string[];\n        protected _pubnub:PUBNUBInstance;\n\n        protected _platform:platform.Platform;\n        protected _pubnubFactory:pubnub.PubnubFactory;\n\n        public events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n\n        constructor(pubnubFactory:pubnub.PubnubFactory, platform:platform.Platform) {\n\n            super();\n\n            this._pubnubFactory = pubnubFactory;\n            this._platform = platform;\n\n            this._pubnub = null;\n            this._eventFilters = [];\n            this._timeout = null;\n            this._subscription = null;\n\n        }\n\n        alive() {\n\n            return this._subscription &&\n                   this._subscription.id &&\n                   this._subscription.deliveryMode &&\n                   this._subscription.deliveryMode.subscriberKey &&\n                   this._subscription.deliveryMode.address;\n\n        }\n\n        setSubscription(subscription) {\n\n            this._clearTimeout();\n\n            this._subscription = subscription;\n\n            if (!this._pubnub) this._subscribeAtPubnub();\n\n            this._setTimeout();\n\n            return this;\n\n        }\n\n        subscription():ISubscription {\n            return this._subscription;\n        }\n\n        /**\n         * Creates or updates subscription if there is an active one\n         * @param {{events?:string[]}} [options] New array of events\n         * @returns {Promise}\n         */\n        register(options?:{events?:string[]}):Promise<http.ApiResponse> {\n\n            if (this.alive()) {\n                return this.renew(options);\n            } else {\n                return this.subscribe(options);\n            }\n\n        }\n\n        addEvents(events:string[]) {\n            this._eventFilters = this._eventFilters.concat(events);\n            return this;\n        }\n\n        setEvents(events:string[]) {\n            this._eventFilters = events;\n            return this;\n        }\n\n        subscribe(options?:{events?:string[]}):Promise<http.ApiResponse> {\n\n            options = options || {};\n\n            if (options.events) this.setEvents(options.events);\n\n            this._clearTimeout();\n\n            return <Promise<http.ApiResponse>>new externals._Promise((resolve, reject) => {\n\n                if (!this._eventFilters || !this._eventFilters.length) throw new Error('Events are undefined');\n\n                resolve(this._platform.post('/restapi/v1.0/subscription', {\n                    body: {\n                        eventFilters: this._getFullEventFilters(),\n                        deliveryMode: {\n                            transportType: 'PubNub'\n                        }\n                    }\n                }));\n\n            }).then((ajax:http.ApiResponse) => {\n\n                    this.setSubscription(ajax.json())\n                        .emit(this.events.subscribeSuccess, ajax);\n\n                    return ajax;\n\n                }).catch((e):any => {\n\n                    e = http.Client.makeError(e);\n\n                    this.reset()\n                        .emit(this.events.subscribeError, e);\n\n                    throw e;\n\n                });\n\n        }\n\n        renew(options?:{events?:string[]}):Promise<http.ApiResponse> {\n\n            options = options || {};\n\n            if (options.events) this.setEvents(options.events);\n\n            this._clearTimeout();\n\n            return <Promise<http.ApiResponse>>new externals._Promise((resolve, reject) => {\n\n                if (!this.alive()) throw new Error('Subscription is not alive');\n\n                if (!this._eventFilters || !this._eventFilters.length) throw new Error('Events are undefined');\n\n                return this._platform.put('/restapi/v1.0/subscription/' + this._subscription.id, {\n                    body: {\n                        eventFilters: this._getFullEventFilters()\n                    }\n                });\n\n            })\n                .then((ajax:http.ApiResponse) => {\n\n                    this.setSubscription(ajax.json())\n                        .emit(this.events.renewSuccess, ajax.json());\n\n                    return ajax;\n\n                })\n                .catch((e):any => {\n\n                    e = http.Client.makeError(e);\n\n                    this.reset()\n                        .emit(this.events.renewError, e);\n\n                    throw e;\n\n                });\n\n        }\n\n        remove():Promise<http.ApiResponse> {\n\n            return <Promise<http.ApiResponse>>new externals._Promise((resolve, reject)  => {\n\n                if (!this._subscription || !this._subscription.id) throw new Error('Subscription ID is required');\n\n                resolve(this._platform.delete('/restapi/v1.0/subscription/' + this._subscription.id));\n\n            }).then((ajax:http.ApiResponse) => {\n\n                    this.reset()\n                        .emit(this.events.removeSuccess, ajax);\n\n                    return ajax;\n\n                }).catch((e):any => {\n\n                    e = http.Client.makeError(e);\n\n                    this.emit(this.events.removeError, e);\n\n                    throw e;\n\n                });\n\n        }\n\n        /**\n         * Remove subscription and disconnect from PUBNUB\n         * This method resets subscription at client side but backend is not notified\n         */\n        reset() {\n            this._clearTimeout();\n            if (this.alive() && this._pubnub) this._pubnub.unsubscribe({channel: this._subscription.deliveryMode.address});\n            this._subscription = null;\n            return this;\n        }\n\n        destroy():Subscription {\n\n            this.reset();\n\n            core.log.info('RC.subscription.Subscription: Destroyed');\n\n            return super.destroy();\n\n        }\n\n        protected _getFullEventFilters() {\n\n            return this._eventFilters.map((event) => {\n                return this._platform.createUrl(event);\n            });\n\n        }\n\n        protected _setTimeout() {\n\n            this._clearTimeout();\n\n            if (!this.alive()) throw new Error('Subscription is not alive');\n\n            var timeToExpiration = (this._subscription.expiresIn * 1000) - this._renewHandicapMs;\n\n            this._timeout = setTimeout(() => {\n\n                this.renew({});\n\n            }, timeToExpiration);\n\n            return this;\n\n        }\n\n        protected _clearTimeout() {\n\n            clearTimeout(this._timeout);\n\n            return this;\n\n        }\n\n        protected _decrypt(message:any) {\n\n            if (!this.alive()) throw new Error('Subscription is not alive');\n\n            if (this._subscription.deliveryMode.encryptionKey) {\n\n                var PUBNUB = this._pubnubFactory.getPubnub();\n\n                message = PUBNUB.crypto_obj.decrypt(message, this._subscription.deliveryMode.encryptionKey, {\n                    encryptKey: false,\n                    keyEncoding: 'base64',\n                    keyLength: 128,\n                    mode: 'ecb'\n                });\n\n            }\n\n            return message;\n\n        }\n\n        protected _notify(message:any) {\n\n            this.emit(this.events.notification, this._decrypt(message));\n\n            return this;\n\n        }\n\n        protected _subscribeAtPubnub():Subscription {\n\n            if (!this.alive()) throw new Error('Subscription is not alive');\n\n            var PUBNUB = this._pubnubFactory.getPubnub();\n\n            this._pubnub = PUBNUB.init({\n                ssl: true,\n                subscribe_key: this._subscription.deliveryMode.subscriberKey\n            });\n\n            this._pubnub.ready();\n\n            this._pubnub.subscribe({\n                channel: this._subscription.deliveryMode.address,\n                message: (message, env, channel) => {\n\n                    core.log.info('RC.core.Subscription: Incoming message', message);\n                    this._notify(message);\n\n                },\n                connect: () => {\n                    core.log.info('RC.core.Subscription: PUBNUB connected');\n                }\n            });\n\n            return this;\n\n        }\n\n    }\n\n    export interface ISubscription {\n        id?:string;\n        uri?: string;\n        eventFilters?:string[];\n        expirationTime?:string; // 2014-03-12T19:54:35.613Z\n        expiresIn?:number;\n        deliveryMode?: {\n            transportType?:string;\n            encryption?:boolean;\n            address?:string;\n            subscriberKey?:string;\n            encryptionKey?:string;\n            secretKey?:string;\n        };\n        creationTime?:string; // 2014-03-12T19:54:35.613Z\n        status?:string; // Active\n    }\n\n}","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n\nmodule RingCentral.sdk.pubnub {\n\n    export class PubnubMock extends core.Observable<PubnubMock> implements PUBNUBInstance {\n\n        private options:PUBNUBInitOptions;\n        crypto_obj:PUBNUBCryptoObj;\n\n        constructor(options:PUBNUBInitOptions) {\n            super();\n            this.options = options;\n            this.crypto_obj = externals._PUBNUB.crypto_obj;\n        }\n\n        ready() {}\n\n        subscribe(options:PUBNUBSubscribeOptions) {\n            this.on('message-' + options.channel, options.message);\n        }\n\n        unsubscribe(options:PUBNUBUnsubscribeOptions) {\n            this.off('message-' + options.channel);\n        }\n\n        receiveMessage(msg, channel) {\n            this.emit('message-' + channel, msg, 'env', channel);\n        }\n\n    }\n\n    export class PubnubMockFactory implements PUBNUB {\n\n        crypto_obj:PUBNUBCryptoObj;\n\n        constructor() {\n            this.crypto_obj = externals._PUBNUB.crypto_obj;\n        }\n\n        init(options:PUBNUBInitOptions) {\n            return new PubnubMock(options);\n        }\n\n    }\n\n}","/// <reference path=\"../pubnub/PubnubMock.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n\nmodule RingCentral.sdk.pubnub {\n\n    export class PubnubFactory {\n\n        private _useMock:boolean = false;\n        private _mock:PubnubMockFactory;\n\n        constructor(flag:boolean) {\n            this._useMock = !!flag;\n            this._mock = new PubnubMockFactory();\n        }\n\n        getPubnub():PUBNUB {\n            return this._useMock ? this._mock : externals._PUBNUB;\n        }\n\n    }\n\n}","/// <reference path=\"./externals.d.ts\" />\n/// <reference path=\"./core/Cache.ts\" />\n/// <reference path=\"./core/Log.ts\" />\n/// <reference path=\"./core/Observable.ts\" />\n/// <reference path=\"./core/PageVisibility.ts\" />\n/// <reference path=\"./core/Utils.ts\" />\n/// <reference path=\"./http/Client.ts\" />\n/// <reference path=\"./platform/Platform.ts\" />\n/// <reference path=\"./platform/Queue.ts\" />\n/// <reference path=\"./subscription/Subscription.ts\" />\n/// <reference path=\"./pubnub/PubnubFactory.ts\" />\n/// <reference path=\"./externals/Externals.ts\" />\n\nmodule RingCentral.sdk {\n\n    export class SDK {\n\n        static version = '2.0.0';\n\n        static server = {\n            sandbox: 'https://platform.devtest.ringcentral.com',\n            production: 'https://platform.ringcentral.com'\n        };\n\n        private _platform:platform.Platform;\n        private _cache:core.Cache;\n        private _queue:platform.Queue;\n        private _client:http.Client;\n        private _pubnubFactory:pubnub.PubnubFactory;\n        private _mockRegistry:mocks.Registry;\n\n        constructor(options?:{\n            server:string;\n            appKey:string;\n            appSecret:string;\n            appName?:string;\n            appVersion?:string;\n            cachePrefix?:string;\n            useHttpMock?:boolean;\n            usePubnubMock?:boolean;\n        }) {\n\n            options = options || <any>{};\n\n            externals.get();\n\n            this._mockRegistry = new mocks.Registry();\n\n            this._cache = new core.Cache(typeof localStorage !== 'undefined' ? localStorage : <Storage>{}, options.cachePrefix);\n\n            this._client = options.useHttpMock ? new http.ClientMock(this._mockRegistry) : new http.Client();\n\n            this._platform = new platform.Platform(this._client, this._cache, options.server, options.appKey, options.appSecret);\n\n            this._pubnubFactory = new pubnub.PubnubFactory(options.usePubnubMock);\n\n            //TODO Link Platform events with Subscriptions and the rest\n\n        }\n\n        platform():platform.Platform {\n            return this._platform;\n        }\n\n        cache():core.Cache {\n            return this._cache;\n        }\n\n        createSubscription():subscription.Subscription {\n            return new subscription.Subscription(this._pubnubFactory, this._platform);\n        }\n\n        createPageVisibility() {\n            return new core.PageVisibility();\n        }\n\n        createObservable() {\n            return new core.Observable();\n        }\n\n        log() {\n            return core.log;\n        }\n\n        utils() {\n            return core.utils;\n        }\n\n        mockRegistry() { return this._mockRegistry; }\n\n    }\n\n}\n\nvar e = RingCentral.sdk.externals.get();\n\nif (typeof define === 'function' && define.amd) {\n\n    define(['pubnub'], function(PUBNUB) {\n        e._PUBNUB = PUBNUB;\n        return RingCentral.sdk;\n    });\n\n} else if (typeof module === 'object' && module.exports) {\n\n    e._PUBNUB = require('pubnub');\n    e._Promise = typeof (Promise) !== 'undefined' ? Promise : require('es6-promise').Promise;\n    e._fetch = require('node-fetch');\n    e._Request = e._fetch['Request'];\n    e._Response = e._fetch['Response'];\n    e._Headers = e._fetch['Headers'];\n\n    module.exports = RingCentral.sdk;\n\n} else {\n\n    //TODO noConflict\n\n}\n","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../mocks/Registry.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n/// <reference path=\"./ApiResponse.ts\" />\n\nmodule RingCentral.sdk.http {\n\n    export class ClientMock extends Client {\n\n        private _registry:mocks.Registry;\n\n        constructor(registry:mocks.Registry) {\n            super();\n            this._registry = registry;\n        }\n\n        protected _loadResponse(request:Request):Promise<Response> {\n\n            return new externals._Promise((resolve) => {\n\n                core.log.debug('API REQUEST', request.method, request.url);\n\n                var mock = this._registry.find(request);\n\n                resolve(mock.getResponse(request));\n\n            });\n\n        }\n\n    }\n\n}","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../core/Cache.ts\" />\n/// <reference path=\"../core/Log\" />\n/// <reference path=\"../http/Client.ts\" />\n/// <reference path=\"../http/ApiResponse.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n/// <reference path=\"./Queue.ts\" />\n\nmodule RingCentral.sdk.platform {\n\n    export class Auth {\n\n        static refreshHandicapMs:number = 60 * 1000; // 1 minute\n        static forcedTokenType = 'forced';\n\n        protected _cacheId:string;\n        protected _cache:core.Cache;\n\n        constructor(cache:core.Cache, cacheId:string) {\n\n            this._cache = cache;\n            this._cacheId = cacheId;\n\n        }\n\n        accessToken() {\n            return this.data().access_token;\n        }\n\n        refreshToken() {\n            return this.data().refresh_token;\n        }\n\n        tokenType() {\n            return this.data().token_type;\n        }\n\n        data():IAuthData {\n\n            return this._cache.getItem(this._cacheId) || {\n                    token_type: '',\n                    access_token: '',\n                    expires_in: 0,\n                    refresh_token: '',\n                    refresh_token_expires_in: 0\n                };\n\n        }\n\n        setData(authData:IAuthData) {\n\n            var oldAuthData = this.data();\n\n            authData = core.utils.extend({}, oldAuthData, authData);\n\n            authData.expire_time = Date.now() + (authData.expires_in * 1000);\n            authData.refresh_token_expire_time = Date.now() + (authData.refresh_token_expires_in * 1000);\n\n            core.log.info('Auth.setData(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n\n            this._cache.setItem(this._cacheId, authData);\n\n            return this;\n\n        }\n\n        /**\n         * Check if there is a valid (not expired) access token\n         */\n        accessTokenValid():boolean {\n\n            var authData = this.data();\n            return (authData.token_type === Auth.forcedTokenType || (authData.expire_time - Auth.refreshHandicapMs > Date.now()));\n\n        }\n\n        /**\n         * Check if there is a valid (not expired) access token\n         */\n        refreshTokenValid():boolean {\n\n            return (this.data().refresh_token_expire_time > Date.now());\n\n        }\n\n        cancelAccessToken() {\n\n            return this.setData({\n                access_token: '',\n                expires_in: 0\n            });\n\n        }\n\n        /**\n         * This method sets a special authentication mode used in Service Web\n         * @return {Platform}\n         */\n        forceAuthentication() {\n\n            this.setData(<IAuthData>{\n                token_type: Auth.forcedTokenType,\n                access_token: '',\n                expires_in: 0,\n                refresh_token: '',\n                refresh_token_expires_in: 0\n            });\n\n            return this;\n\n        }\n\n        setRemember(remember?:boolean):Auth {\n\n            return this.setData({remember: remember});\n\n        }\n\n        remember():boolean {\n\n            return !!this.data().remember;\n\n        }\n\n    }\n\n\n    export interface IAuthData {\n        remember?:boolean;\n        token_type?:string;\n        access_token?:string;\n        expires_in?:number; // actually it's string\n        expire_time?:number;\n        refresh_token?:string;\n        refresh_token_expires_in?:number; // actually it's string\n        refresh_token_expire_time?:number;\n        scope?:string;\n    }\n\n}"],"sourceRoot":"/source/"}