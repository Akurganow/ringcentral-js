{"version":3,"sources":["/source/bower_components/pubnub/web/pubnub.js","/source/core/Cache.ts","/source/core/Log.ts","ringcentral-bundle.js","/source/core/Utils.ts","/source/core/Observable.ts","/source/core/PageVisibility.ts","/source/mocks/Mock.ts","/source/mocks/Registry.ts","/source/externals/Externals.ts","/source/http/ApiResponse.ts","/source/http/Client.ts","/source/platform/Queue.ts","/source/platform/Platform.ts","/source/subscription/Subscription.ts","/source/pubnub/PubnubMock.ts","/source/pubnub/PubnubFactory.ts","/source/SDK.ts","/source/http/ClientMock.ts","/source/platform/Auth.ts","/source/bower_components/es6-promise/promise.js","/source/bower_components/fetch/fetch.js"],"names":["unique","NOW","Date","rnow","build_url","url_components","url_params","url","join","URLBIT","params","each","key","value","value_str","JSON","encode","length","push","PARAMSBIT","updater","fun","rate","timeout","last","runnit","clearTimeout","setTimeout","grep","list","fin","l","supplant","str","values","replace","REPL","_","match","wait","generate_uuid","callback","u","c","r","Math","random","v","toString","isArray","arg","Array","o","f","i","call","hasOwnProperty","map","k","pam_encode","encodeURIComponent","charCodeAt","toUpperCase","path","generate_channel_list","channels","nopresence","channel","status","search","subscribed","sort","generate_channel_group_list","channel_groups","channel_group","ready","READY","READY_BUFFER","connect","SECOND","PNmessage","args","msg","apns","m","Object","keys","aps","alert","badge","exclude1","data","exclude","getPubnubMessage","publish","message","error","PN_API","setup","_get_url_params","_object_to_key_list","_object_to_key_list_sorted","_get_pam_sign_input_from_params","si","validate_presence_heartbeat","heartbeat","cur_heartbeat","err","PRESENCE_HB_THRESHOLD","PRESENCE_HB_DEFAULT","encrypt","input","crypto_obj","CIPHER_KEY","decrypt","_presence_heartbeat","PRESENCE_HB_TIMEOUT","PRESENCE_HB_INTERVAL","CHANNELS","CHANNEL_GROUPS","PRESENCE_HB_RUNNING","SELF","e","stringify","start_presence_heartbeat","next","NO_WAIT_FOR_PENDING","PUB_QUEUE","sending","xdr","shift","each_channel_group","count","chang","each_channel","chan","_invoke_callback","response","callback_data","_invoke_error","CR","url1","jsonp","jsonp_cb","AUTH_KEY","STD_ORIGIN","SUBSCRIBE_KEY","apply","success","fail","_poll_online","_is_online","_reset_offline","_poll_timer","_poll_online2","TIME_CHECK","detect_time_detla","_poll_timer2","KEEPALIVE","SUB_RECEIVER","detect_latency","tt","adjusted_time","TIME_DRIFT","cb","time","calculate","ptime","latency","stime","SUB_WINDOWING","DEF_WINDOWING","SUB_TIMEOUT","DEF_SUB_TIMEOUT","DEF_KEEPALIVE","NOLEAVE","PUBLISH_KEY","SECRET_KEY","hmac_SHA256","SSL","ORIGIN","nextorigin","SUB_ORIGIN","CONNECT","CLOAK","SUB_CALLBACK","SUB_CHANNEL","SUB_RESTORE","TIMETOKEN","RESUMED","STATE","PRESENCE_HB","COMPATIBLE_35","db","get","set","UUID","USE_INSTANCEID","INSTANCEID","a","b","LEAVE","blocking","auth_key","uuid","auth","origin","indexOf","PRESENCE_SUFFIX","LEAVE_GROUP","set_resumed","resumed","get_cipher_key","set_cipher_key","raw_encrypt","raw_decrypt","get_heartbeat","set_heartbeat","heartbeat_interval","get_heartbeat_interval","set_heartbeat_interval","get_version","SDK_VER","getGcmMessageObject","obj","getApnsMessageObject","x","newPnMessage","gcm","n","_add_param","val","namespace","ns_ch","cloak","mode","ns_ch_a","split","channel_group_list_groups","channel_group_list_channels","channel_group_remove_channel","channel_group_remove_group","channel_group_add_channel","channel_group_cloak","channel_group_list_namespaces","channel_group_remove_namespace","history","reverse","cipher_key","start","end","include_token","payload","messages","decrypted_messages","new_message","replay","source","destination","stop","limit","post","store","add_msg","unsubscribe","ch","CB_CALLED","action","chg","subscribe","_test_connection","windowing","disconnected","reconnect","name","disconnect","_connect","st","sub_timeout","SUB_ERROR","idlecb","connected","backfill","next_callback","channels2","list2","channel2","chobj","decrypted_msg","presence","noheresync","timetoken","state","restore","settings","here","uid","timestamp","floor","occupancy","here_now","uuids","where_now","grant","ttl","w","getTime","sign_input","signature","mobile_gw_provision","op","gw_type","device_id","type","audit","revoke","set_uuid","get_uuid","get_subscibed_channels","presence_heartbeat","stop_timers","each-channel","offline","now","SHA256","s","CryptoJS","parse_options","options","defaultOptions","allowedKeyEncodings","allowedKeyLengths","parseInt","allowedModes","decode_key","get_padded_key","get_mode","get_iv","iv","encryptKey","keyEncoding","keyLength","hex_message","encryptedHexArray","base_64_encrypted","binary_enc","json_plain","ciphertext","plaintext","undefined","RingCentral","RingCentral.sdk","RingCentral.sdk.core","RingCentral.sdk.core.Cache","RingCentral.sdk.core.Cache.constructor","RingCentral.sdk.core.Cache.setPrefix","RingCentral.sdk.core.Cache.setItem","RingCentral.sdk.core.Cache.removeItem","RingCentral.sdk.core.Cache.getItem","RingCentral.sdk.core.Cache.clean","RingCentral.sdk.core.Cache._prefixKey","Log","RingCentral.sdk.core.Log","RingCentral.sdk.core.Log.constructor","RingCentral.sdk.core.Log.disableAll","RingCentral.sdk.core.Log.enableAll","RingCentral.sdk.core.Log.debug","RingCentral.sdk.core.Log.info","RingCentral.sdk.core.Log.warn","RingCentral.sdk.core.Log.error","RingCentral.sdk.core.Log.stack","RingCentral.sdk.core.Log._parseArguments","extend","RingCentral.sdk.core.utils","RingCentral.sdk.core.utils.extend","RingCentral.sdk.core.utils.forEach","queryStringify","RingCentral.sdk.core.utils.queryStringify","parseQueryString","RingCentral.sdk.core.utils.parseQueryString","isEmail","RingCentral.sdk.core.utils.isEmail","RingCentral.sdk.core.utils.isPhoneNumber","argumentsToArray","RingCentral.sdk.core.utils.argumentsToArray","RingCentral.sdk.core.utils.isDate","RingCentral.sdk.core.utils.isFunction","RingCentral.sdk.core.utils.isArray","isWindow","RingCentral.sdk.core.utils.isWindow","RingCentral.sdk.core.utils.isNan","RingCentral.sdk.core.utils.type","RingCentral.sdk.core.utils.isPlainObject","RingCentral.sdk.core.utils.getProperty","RingCentral.sdk.core.utils.poll","RingCentral.sdk.core.utils.stopPolling","RingCentral.sdk.core.utils.parseString","RingCentral.sdk.core.utils.parseNumber","RingCentral.sdk.core.utils.isNodeJS","RingCentral.sdk.core.utils.isBrowser","Observable","RingCentral.sdk.core.Observable","RingCentral.sdk.core.Observable.constructor","RingCentral.sdk.core.Observable.hasListeners","RingCentral.sdk.core.Observable.on","RingCentral.sdk.core.Observable.emit","RingCentral.sdk.core.Observable.off","RingCentral.sdk.core.Observable.destroy","__extends","this","d","__","constructor","p","prototype","RingCentral.sdk.core.PageVisibility","RingCentral.sdk.core.PageVisibility.constructor","RingCentral.sdk.core.PageVisibility.visible","RingCentral.sdk.mocks","RingCentral.sdk.mocks.Mock","RingCentral.sdk.mocks.Mock.constructor","RingCentral.sdk.mocks.Mock.path","RingCentral.sdk.mocks.Mock.method","RingCentral.sdk.mocks.Mock.test","RingCentral.sdk.mocks.Mock.getResponse","RingCentral.sdk.mocks.Mock.createResponse","RingCentral.sdk.mocks.Registry","RingCentral.sdk.mocks.Registry.constructor","RingCentral.sdk.mocks.Registry.add","RingCentral.sdk.mocks.Registry.clear","RingCentral.sdk.mocks.Registry.find","RingCentral.sdk.mocks.Registry.apiCall","RingCentral.sdk.mocks.Registry.authentication","RingCentral.sdk.mocks.Registry.logout","RingCentral.sdk.mocks.Registry.presenceLoad","RingCentral.sdk.mocks.Registry.subscribeGeneric","RingCentral.sdk.mocks.Registry.subscribeOnPresence","RingCentral.sdk.mocks.Registry.tokenRefresh","RingCentral.sdk.externals","RingCentral.sdk.externals.get","ApiResponse","RingCentral.sdk.http.ApiResponse","RingCentral.sdk.http.ApiResponse.constructor","RingCentral.sdk.http.ApiResponse.response","RingCentral.sdk.http.ApiResponse.request","RingCentral.sdk.http.ApiResponse.ok","RingCentral.sdk.http.ApiResponse.text","RingCentral.sdk.http.ApiResponse.json","RingCentral.sdk.http.ApiResponse.error","RingCentral.sdk.http.ApiResponse.multipart","RingCentral.sdk.http.ApiResponse.multipartJson","RingCentral.sdk.http.ApiResponse._isContentType","RingCentral.sdk.http.ApiResponse._getContentType","RingCentral.sdk.http.ApiResponse._isMultipart","RingCentral.sdk.http.ApiResponse._isUrlEncoded","RingCentral.sdk.http.ApiResponse._isJson","RingCentral.sdk.http.ApiResponse.create","RingCentral.sdk.http","RingCentral.sdk.http.Client","RingCentral.sdk.http.Client.constructor","RingCentral.sdk.http.Client.sendRequest","RingCentral.sdk.http.Client._loadResponse","RingCentral.sdk.http.Client.makeError","RingCentral.sdk.http.Client.cloneResponse","RingCentral.sdk.http.Client.createResponse","RingCentral.sdk.http.Client.createRequest","RingCentral.sdk.platform","RingCentral.sdk.platform.Queue","RingCentral.sdk.platform.Queue.constructor","RingCentral.sdk.platform.Queue.isPaused","RingCentral.sdk.platform.Queue.pause","RingCentral.sdk.platform.Queue.resume","RingCentral.sdk.platform.Queue.poll","RingCentral.sdk.platform.Queue.releaseTimeout","RingCentral.sdk.platform.Queue.pollInterval","RingCentral.sdk.platform.Queue.setReleaseTimeout","RingCentral.sdk.platform.Queue.setPollInterval","RingCentral.sdk.platform.Platform","RingCentral.sdk.platform.Platform.constructor","RingCentral.sdk.platform.Platform.auth","RingCentral.sdk.platform.Platform.createUrl","RingCentral.sdk.platform.Platform.authUrl","RingCentral.sdk.platform.Platform.parseAuthRedirectUrl","RingCentral.sdk.platform.Platform.loggedIn","RingCentral.sdk.platform.Platform.login","RingCentral.sdk.platform.Platform.refresh","RingCentral.sdk.platform.Platform.logout","RingCentral.sdk.platform.Platform.inflateRequest","RingCentral.sdk.platform.Platform.sendRequest","RingCentral.sdk.platform.Platform.send","RingCentral.sdk.platform.Platform.get","RingCentral.sdk.platform.Platform.post","RingCentral.sdk.platform.Platform.put","RingCentral.sdk.platform.Platform.delete","RingCentral.sdk.platform.Platform._tokenRequest","RingCentral.sdk.platform.Platform._ensureAuthentication","RingCentral.sdk.platform.Platform._isAccessTokenValid","RingCentral.sdk.platform.Platform._refreshPolling","RingCentral.sdk.platform.Platform._apiKey","RingCentral.sdk.platform.Platform._authHeader","RingCentral.sdk.subscription","RingCentral.sdk.subscription.Subscription","RingCentral.sdk.subscription.Subscription.constructor","RingCentral.sdk.subscription.Subscription.alive","RingCentral.sdk.subscription.Subscription.setSubscription","RingCentral.sdk.subscription.Subscription.subscription","RingCentral.sdk.subscription.Subscription.register","RingCentral.sdk.subscription.Subscription.addEvents","RingCentral.sdk.subscription.Subscription.setEvents","RingCentral.sdk.subscription.Subscription.subscribe","RingCentral.sdk.subscription.Subscription.renew","RingCentral.sdk.subscription.Subscription.remove","RingCentral.sdk.subscription.Subscription.reset","RingCentral.sdk.subscription.Subscription.destroy","RingCentral.sdk.subscription.Subscription._getFullEventFilters","RingCentral.sdk.subscription.Subscription._setTimeout","RingCentral.sdk.subscription.Subscription._clearTimeout","RingCentral.sdk.subscription.Subscription._decrypt","RingCentral.sdk.subscription.Subscription._notify","RingCentral.sdk.subscription.Subscription._subscribeAtPubnub","RingCentral.sdk.pubnub","RingCentral.sdk.pubnub.PubnubMock","RingCentral.sdk.pubnub.PubnubMock.constructor","RingCentral.sdk.pubnub.PubnubMock.subscribe","RingCentral.sdk.pubnub.PubnubMock.unsubscribe","RingCentral.sdk.pubnub.PubnubMock.receiveMessage","RingCentral.sdk.pubnub.PubnubMockFactory","RingCentral.sdk.pubnub.PubnubMockFactory.constructor","RingCentral.sdk.pubnub.PubnubMockFactory.init","RingCentral.sdk.pubnub.PubnubFactory","RingCentral.sdk.pubnub.PubnubFactory.constructor","RingCentral.sdk.pubnub.PubnubFactory.getPubnub","RingCentral.sdk.SDK","RingCentral.sdk.SDK.constructor","RingCentral.sdk.SDK.platform","RingCentral.sdk.SDK.cache","RingCentral.sdk.SDK.createSubscription","RingCentral.sdk.SDK.createPageVisibility","RingCentral.sdk.SDK.createObservable","RingCentral.sdk.SDK.log","RingCentral.sdk.SDK.utils","RingCentral.sdk.SDK.mockRegistry","sdk","externals","define","amd","PUBNUB","_PUBNUB","module","exports","require","_Promise","Promise","_fetch","_Request","_Response","_Headers","RingCentral.sdk.http.ClientMock","RingCentral.sdk.http.ClientMock.constructor","RingCentral.sdk.http.ClientMock._loadResponse","RingCentral.sdk.platform.Auth","RingCentral.sdk.platform.Auth.constructor","RingCentral.sdk.platform.Auth.accessToken","RingCentral.sdk.platform.Auth.refreshToken","RingCentral.sdk.platform.Auth.tokenType","RingCentral.sdk.platform.Auth.data","RingCentral.sdk.platform.Auth.setData","RingCentral.sdk.platform.Auth.accessTokenValid","RingCentral.sdk.platform.Auth.refreshTokenValid","RingCentral.sdk.platform.Auth.cancelAccessToken","RingCentral.sdk.platform.Auth.forceAuthentication","RingCentral.sdk.platform.Auth.setRemember","RingCentral.sdk.platform.Auth.remember","lib$es6$promise$utils$$objectOrFunction","lib$es6$promise$utils$$isFunction","lib$es6$promise$utils$$isMaybeThenable","lib$es6$promise$asap$$asap","lib$es6$promise$asap$$queue","lib$es6$promise$asap$$len","lib$es6$promise$asap$$customSchedulerFn","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$setScheduler","scheduleFn","lib$es6$promise$asap$$useNextTick","nextTick","process","version","versions","node","setImmediate","lib$es6$promise$asap$$useVertxTimer","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$useMutationObserver","iterations","observer","lib$es6$promise$asap$$BrowserMutationObserver","document","createTextNode","observe","characterData","lib$es6$promise$asap$$useMessageChannel","MessageChannel","port1","onmessage","port2","postMessage","lib$es6$promise$asap$$useSetTimeout","lib$es6$promise$asap$$attemptVertex","vertx","runOnLoop","runOnContext","lib$es6$promise$$internal$$noop","lib$es6$promise$$internal$$selfFullfillment","TypeError","lib$es6$promise$$internal$$cannotReturnOwn","lib$es6$promise$$internal$$getThen","promise","then","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$tryThen","fulfillmentHandler","rejectionHandler","lib$es6$promise$$internal$$handleForeignThenable","thenable","lib$es6$promise$asap$$default","sealed","lib$es6$promise$$internal$$resolve","lib$es6$promise$$internal$$fulfill","reason","lib$es6$promise$$internal$$reject","_label","lib$es6$promise$$internal$$handleOwnThenable","_state","lib$es6$promise$$internal$$FULFILLED","_result","lib$es6$promise$$internal$$REJECTED","lib$es6$promise$$internal$$subscribe","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","lib$es6$promise$$internal$$PENDING","_subscribers","parent","child","onFulfillment","onRejection","subscribers","settled","detail","lib$es6$promise$$internal$$invokeCallback","lib$es6$promise$$internal$$ErrorObject","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$initializePromise","resolver","lib$es6$promise$enumerator$$Enumerator","Constructor","enumerator","_instanceConstructor","_validateInput","_input","_remaining","_init","_enumerate","_validationError","lib$es6$promise$promise$all$$all","entries","lib$es6$promise$enumerator$$default","lib$es6$promise$promise$race$$race","lib$es6$promise$utils$$isArray","resolve","lib$es6$promise$promise$resolve$$resolve","object","lib$es6$promise$promise$reject$$reject","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$promise$$Promise","_id","lib$es6$promise$promise$$counter","lib$es6$promise$polyfill$$polyfill","local","global","self","Function","Error","P","cast","lib$es6$promise$promise$$default","lib$es6$promise$utils$$_isArray","lib$es6$promise$asap$$browserWindow","window","lib$es6$promise$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","importScripts","_eachEntry","entry","_settledAt","_willSettleAt","lib$es6$promise$promise$all$$default","lib$es6$promise$promise$race$$default","lib$es6$promise$promise$resolve$$default","lib$es6$promise$promise$reject$$default","all","race","reject","_setScheduler","_asap","result","arguments","catch","lib$es6$promise$polyfill$$default","lib$es6$promise$umd$$ES6Promise","polyfill","normalizeName","String","test","toLowerCase","normalizeValue","Headers","headers","forEach","append","getOwnPropertyNames","consumed","body","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","support","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","rejected","arrayBuffer","text","decode","json","parse","normalizeMethod","method","upcased","methods","Request","credentials","referrer","form","trim","bytes","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","Response","bodyInit","ok","statusText","fetch","getAll","has","thisArg","init","request","responseURL","getResponseHeader","XMLHttpRequest","responseText","open","withCredentials","responseType","setRequestHeader","send","toJSON","valueOf","quote","string","escapable","lastIndex","meta","slice","holder","partial","mind","gap","rep","isFinite","indent","cx","\b","\t","\n","\f","\r","\"","\\","replacer","space","eval","DEF_TIMEOUT","max","ori","failover","get_hmac_SHA256","hash","$","id","getElementById","console","elements","el","getElementsByTagName","bind","etype","rapfun","event","cancelBubble","preventDefault","stopPropagation","addEventListener","attachEvent","attr","attribute","setAttribute","getAttribute","css","element","styles","style","create","createElement","XORIGN","FDomainRequest","ajax","script","finished","xhrtme","timer","done","appendChild","parentNode","removeChild","ASYNC","src","loaded","complete","async","abort","XDomainRequest","onabort","onloadend","onreadystatechange","readyState","eee","navigator","pubnubs","fdomainrequest","SWF","UA","userAgent","PNSDK","log","opera","postError","ls","cookieGet","cookie","RegExp","cookieSet","cookieTest","getItem","setItem","events","unbind","fire","PDIV","CREATE_PUBNUB","leave_on_unload","pnsdk","PN","prop","pdiv","notest","publish_key","subscribe_key","ssl","location","href","position","top","unescape","WS","protocols","bits","protocol","pubnub","code","wasClean","close","h","g","lib","q","Base","mixIn","$super","clone","WordArray","words","sigBytes","concat","clamp","ceil","enc","Hex","substr","Latin1","fromCharCode","j","Utf8","escape","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","blockSize","_minBufferSize","min","_doProcessBlock","splice","Hasher","cfg","_doReset","update","finalize","_doFinalize","_createHelper","_createHmacHelper","t","HMAC","algo","sqrt","pow","_hash","HmacSHA256","_hasher","_oKey","_iKey","Base64","_map","charAt","abs","sin","MD5","z","A","B","C","D","E","HmacMD5","EvpKDF","keySize","hasher","compute","Cipher","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","_xformMode","_key","ivSize","StreamCipher","_iv","_prevBlock","BlockCipherMode","Encryptor","Decryptor","_cipher","processBlock","encryptBlock","decryptBlock","CBC","pad","Pkcs7","unpad","BlockCipher","padding","_mode","CipherParams","formatter","format","OpenSSL","salt","SerializableCipher","algorithm","_parse","kdf","execute","PasswordBasedCipher","F","G","y","H","AES","_nRounds","_keySchedule","_invKeySchedule","_doCryptBlock","ECB","offset"],"mappings":"AA0KA,QAAAA,UAAA,MAAA,OAAAC,MAAA,GAAAC,MACA,QAAAC,QAAA,OAAA,GAAAD,MA0BA,QAAAE,WAAAC,EAAAC,GACA,GAAAC,GAAAF,EAAAG,KAAAC,QACAC,IAEA,OAAAJ,IAEAK,KAAAL,EAAA,SAAAM,EAAAC,GACA,GAAAC,GAAA,gBAAAD,GAAAE,KAAA,UAAAF,GAAAA,CACA,oBAAAA,IACA,MAAAA,GAAAG,OAAAF,GAAAG,OAAA,GACAP,EAAAQ,KAAAN,EAAA,IAAAI,OAAAF,MAGAP,GAAA,IAAAG,EAAAF,KAAAW,YATAZ,EAkBA,QAAAa,SAAAC,EAAAC,GACA,GAAAC,GACAC,EAAA,EACAC,EAAA,WACAD,EAAAF,EAAAnB,QACAuB,aAAAH,GACAA,EAAAI,WAAAF,EAAAH,KAGAE,EAAArB,OACAkB,KAIA,OAAAI,GAQA,QAAAG,MAAAC,EAAAR,GACA,GAAAS,KAEA,OADAnB,MAAAkB,MAAA,SAAAE,GAAAV,EAAAU,IAAAD,EAAAZ,KAAAa,KACAD,EAQA,QAAAE,UAAAC,EAAAC,GACA,MAAAD,GAAAE,QAAAC,KAAA,SAAAC,EAAAC,GACA,MAAAJ,GAAAI,IAAAD,IASA,QAAAd,SAAAF,EAAAkB,GACA,MAAAZ,YAAAN,EAAAkB,GAQA,QAAAC,eAAAC,GACA,GAAAC,GAAA,uCAAAP,QAAA,QACA,SAAAQ,GACA,GAAAC,GAAA,GAAAC,KAAAC,SAAA,EAAAC,EAAA,KAAAJ,EAAAC,EAAA,EAAAA,EAAA,CACA,OAAAG,GAAAC,SAAA,KAGA,OADAP,IAAAA,EAAAC,GACAA,EAGA,QAAAO,SAAAC,GACA,QAAAA,GAAA,gBAAAA,KAAAC,MAAAF,SAAAE,MAAAF,QAAAC,IAAA,gBAAAA,GAAA,QASA,QAAAvC,MAAAyC,EAAAC,GACA,GAAAD,GAAAC,EAEA,GAAAJ,QAAAG,GACA,IAAA,GAAAE,GAAA,EAAAvB,EAAAqB,EAAAnC,OAAAc,EAAAuB,GACAD,EAAAE,KAAAH,EAAAE,GAAAF,EAAAE,GAAAA,SAEA,KAAA,GAAAA,KAAAF,GACAA,EAAAI,gBACAJ,EAAAI,eAAAF,IACAD,EAAAE,KAAAH,EAAAE,GAAAA,EAAAF,EAAAE,IAQA,QAAAG,KAAA5B,EAAAR,GACA,GAAAS,KAEA,OADAnB,MAAAkB,MAAA,SAAA6B,EAAAX,GAAAjB,EAAAZ,KAAAG,EAAAqC,EAAAX,MACAjB,EAIA,QAAA6B,YAAA1B,GACA,MAAA2B,oBAAA3B,GAAAE,QAAA,YAAA,SAAAQ,GACA,MAAA,IAAAA,EAAAkB,WAAA,GAAAb,SAAA,IAAAc,gBASA,QAAA9C,QAAA+C,GAAA,MAAAH,oBAAAG,GAOA,QAAAC,uBAAAC,EAAAC,GACA,GAAArC,KAUA,OATAlB,MAAAsD,EAAA,SAAAE,EAAAC,GACAF,EACAC,EAAAE,OAAA,WAAA,GACAD,EAAAE,YAAAzC,EAAAX,KAAAiD,GAGAC,EAAAE,YAAAzC,EAAAX,KAAAiD,KAGAtC,EAAA0C,OAQA,QAAAC,6BAAAC,EAAAP,GACA,GAAArC,KAUA,OATAlB,MAAA8D,EAAA,SAAAC,EAAAN,GACAF,EACAQ,EAAAL,OAAA,WAAA,GACAD,EAAAE,YAAAzC,EAAAX,KAAAwD,GAGAN,EAAAE,YAAAzC,EAAAX,KAAAwD,KAGA7C,EAAA0C,OAIA,QAAAI,SAAApD,QAAA,WACAqD,QACAA,MAAA,EACAjE,KAAAkE,aAAA,SAAAC,GAAAA,QACAC,QAEA,QAAAC,WAAAC,GAoDA,MAnDAC,KAAAD,IAAAE,SACAD,IAAA,iBAAA,WACA,GAAAE,KAEA,IAAAC,OAAAC,KAAAJ,IAAA,MAAAjE,OAAA,CACAmE,EAAA,SACAG,KACAC,MAAAN,IAAA,KAAA,MACAO,MAAAP,IAAA,KAAA,OAGA,KAAA,GAAAxB,KAAAwB,KAAA,KACAE,EAAA,QAAA1B,GAAAwB,IAAA,KAAAxB,EAEA,IAAAgC,IAAA,QAAA,QACA,KAAA,GAAAhC,KAAAgC,SACAN,GAAA,QAAAM,EAAAhC,IAMAwB,IAAA,MACAE,EAAA,QACAO,KAAAT,IAAA,KAIA,KAAA,GAAAxB,KAAAwB,KACAE,EAAA1B,GAAAwB,IAAAxB,EAEA,IAAAkC,IAAA,OAAA,MAAA,UAAA,UAAA,WAAA,QACA,KAAA,GAAAlC,KAAAkC,SACAR,GAAAQ,EAAAlC,GAGA,OAAA0B,IAEAF,IAAA,QAAA,WAEA,GAAAE,GAAAF,IAAAW,kBAEAX,KAAA,QAAAA,IAAA,SACAA,IAAA,OAAAY,SACAC,QAAAX,EACAjB,QAAAe,IAAA,QACAzC,SAAAyC,IAAA,SACAc,MAAAd,IAAA,SAIAA,IAGA,QAAAe,QAAAC,GA2DA,QAAAC,GAAAR,GAKA,MAJAA,KAAAA,MACAhF,KAAAD,GAAA,SAAAE,EAAAC,GACAD,IAAA+E,KAAAA,EAAA/E,GAAAC,KAEA8E,EAGA,QAAAS,GAAAhD,GACA,GAAArB,KAIA,OAHApB,MAAAyC,EAAA,SAAAxC,EAAAC,GACAkB,EAAAb,KAAAN,KAEAmB,EAEA,QAAAsE,GAAAjD,GACA,MAAAgD,GAAAhD,GAAAmB,OAGA,QAAA+B,GAAA5F,GACA,GAAA6F,GAAA,GACAxE,EAAAsE,EAAA3F,EAEA,KAAA,GAAA4C,KAAAvB,GAAA,CACA,GAAA2B,GAAA3B,EAAAuB,EACAiD,IAAA7C,EAAA,IAAAC,WAAAjD,EAAAgD,IACAJ,GAAAvB,EAAAd,OAAA,IAAAsF,GAAA,KAEA,MAAAA,GAGA,QAAAC,GAAAC,EAAAC,EAAAV,GACA,GAAAW,IAAA,CAEA,IAAA,mBAAAF,GACA,MAAAC,EAGA,IAAA,gBAAAD,GAEAE,EADAF,EAAAG,uBAAA,GAAAH,GACA,GAEA,MACA,CAAA,GAAA,iBAAAA,GACA,MAAAA,GAGAI,oBAFA,CAKAF,IAAA,EAGA,MAAAA,IACAX,GAAAA,EAAA,uDAAAY,sBAAA,gCAAAF,GAAAE,wBACAF,GAAAE,uBACAH,EAGA,QAAAK,GAAAC,EAAAnG,GACA,MAAAoG,IAAA,QAAAD,EAAAnG,GAAAqG,KAAAF,EAEA,QAAAG,GAAAH,EAAAnG,GACA,MAAAoG,IAAA,QAAAD,EAAAnG,GAAAqG,KACAD,GAAA,QAAAD,EAAAE,KACAF,EAOA,QAAAI,KAIA,MAFAzF,cAAA0F,IAEAC,IAAAA,IAAA,KACA,EAAAA,KACArD,sBAAAsD,GAAA,GAAArG,SAAAuD,4BAAA+C,GAAA,GAAAtG,YAEAuG,IAAA,IAIAA,IAAA,MACAC,IAAA,oBACAhF,SAAA,SAAAG,GACAwE,EAAA7F,QAAA4F,EAAA,GAAApC,SAEAiB,MAAA,SAAA0B,GACA1B,IAAAA,GAAA,qDAAAjF,KAAA4G,UAAAD,IACAN,EAAA7F,QAAA4F,EAAA,GAAApC,YAKA,QAAA6C,MACAJ,IAAAL,IAGA,QAAArB,GAAA+B,GAEA,GAAAC,IACA,IAAAC,EAAA9G,OAAA,WACA,CAEA,GADA4G,IAAAE,EAAAC,QAAA,GACAD,EAAAC,UAAAD,EAAA9G,OAAA,MACA8G,GAAAC,QAAA,EAGAC,GAAAF,EAAAG,SAEA,QAAAC,GAAA1F,GACA,GAAA2F,GAAA,CAWA,OATAzH,MAAA6D,4BAAA+C,GAAA,SAAA7C,GACA,GAAA2D,GAAAd,EAAA7C,EAEA2D,KAEAD,KACA3F,GAAA,cAAA4F,MAGAD,EAGA,QAAAE,GAAA7F,GACA,GAAA2F,GAAA,CAWA,OATAzH,MAAAqD,sBAAAsD,GAAA,SAAAnD,GACA,GAAAoE,GAAAjB,EAAAnD,EAEAoE,KAEAH,KACA3F,GAAA,cAAA8F,MAGAH,EAEA,QAAAI,GAAAC,EAAAhG,EAAAkE,GACA,GAAA,gBAAA8B,GAAA,CACA,GAAAA,EAAA,MAAA,CACA,GAAAC,KAWA,OATAD,GAAA,UACAC,EAAA,QAAAD,EAAA,SAGAA,EAAA,UACAC,EAAA,QAAAD,EAAA,cAGA9B,GAAAA,EAAA+B,IAIA,GAAAD,EAAA,QAKA,YAJAA,EAAA,UACAhG,GAAAA,EAAAgG,EAAA,QAAAA,EAAA,WAEAhG,GAAAA,EAAAgG,EAAA,UAIAhG,GAAAA,EAAAgG,GAGA,QAAAE,GAAAF,EAAA9B,GAEA,GAAA,gBAAA8B,IAAAA,EAAA,MAAA,CACA,GAAAC,KAWA,OATAD,GAAA,UACAC,EAAA,QAAAD,EAAA,SAGAA,EAAA,UACAC,EAAA,QAAAD,EAAA,cAGA9B,GAAAA,EAAA+B,IAGA/B,GAAAA,EAAA8B,GAGA,QAAAG,GAAA3D,EAAAxC,EAAAoG,EAAAlD,GACA,GAAAlD,GAAAwC,EAAA,UAAAxC,EACAkE,EAAA1B,EAAA,OAAAe,GACA8C,EAAAC,IAEApD,GAAAA,MAEAA,EAAA,OACAA,EAAA,KAAAV,EAAA,UAAA+D,EAGA,IAAAzI,IACA0I,EAAA,KAAA,uBACA,UAAAC,EAGA3I,GAAAW,KAAAiI,MAAA5I,EAAAsI,GAEAC,IAAAnD,EAAA,SAAAmD,GAEAb,IACAxF,SAAAqG,EACAnD,KAAAQ,EAAAR,GACAyD,QAAA,SAAAX,GACAD,EAAAC,EAAAhG,EAAAkE,IAEA0C,KAAA,SAAAZ,GACAE,EAAAF,EAAA9B,IAEApG,IAAAA,IAi3CA,QAAA+I,KACAC,MAAAC,EAAA,GACAxD,MAAA,kDAEAyD,GAAA/H,aAAA+H,GACAA,EAAAlI,QAAA+H,EAAAvE,QAGA,QAAA2E,KACAC,GACAlC,GAAA,KAAA,SAAA2B,GACAQ,EAAA,aAAAR,GACAA,GAAAI,EAAA,GACAxD,MAAA,sFAGA6D,GAAAnI,aAAAmI,GACAA,EAAAtI,QAAAmI,EAAAI,KAIA,QAAAN,GAAA7C,EAAAzB,GACA6E,GAAAA,EAAApD,EAAAzB,GACA6E,EAAA,KAEArI,aAAA+H,GACA/H,aAAAmI,GAeA,QAAAG,GAAAC,GACA,GAAAC,GAAA/J,OAAAgK,CACA,OAAAD,GAAAD,EAAA,IAIA,QAAAL,GAAAQ,EAAAC,GAKA,QAAAC,GAAAD,GACA,GAAAA,EAAA,CACA,GAAAE,GAAAF,EAAA,IACAG,GAAArK,OAAAsK,GAAA,CACAN,GAAAhK,QAAAoK,EAAAC,GACAJ,GAAAA,EAAAD,IATA,GAAAM,GAAAtK,MAEAkK,IAAAC,EAAAD,IAAA5C,GAAA,KAAA6C,GAtrDA,GA+CAb,GACAI,EAhDAa,GAAAxE,EAAA,WAAAyE,cACAC,IAAA1E,EAAA,SAAA2E,iBAAA9F,OACA+E,IAAA5D,EAAA,WAAA4E,eAAA/F,OACA4E,EAAAzD,EAAA,WAAA,EACA6E,EAAA7E,EAAA,SAAA,EACA8E,EAAA9E,EAAA,aAAA,OACAgD,EAAAhD,EAAA,eAAA,OACA8C,EAAA9C,EAAA,UAAA,GACA+E,EAAA/E,EAAA,YAAA,GACAgF,EAAAhF,EAAA,YACAiF,EAAAjF,EAAA,IAAA,IAAA,GACAkF,EAAA,OAAAD,EAAA,OAAAjF,EAAA,QAAA,qBACA+C,EAAAoC,WAAAD,GACAE,EAAAD,WAAAD,GACAG,EAAA,aACAxD,KACAyD,GAAA,EACArB,EAAA,EACAsB,EAAA,EACAC,EAAA,EACA3B,EAAA,EACA4B,EAAAzF,EAAA,SAAA,EAEA0F,EAAA,EACAC,GAAA,EACAvE,KACAC,KAEAuE,KACA1E,EAAA,KACA2E,EAAAvF,EACAN,EAAA,WAAAA,EAAA,WAAA,EAAAA,EAAA,OAEAmB,GAAAnB,EAAA,oBAAA6F,EAAA,EAAA,EACAvE,IAAA,EACAM,GAAA5B,EAAA,oBACA8F,GAAA9F,EAAA,oBAAA,EACA+B,GAAA/B,EAAA,IACAxF,GAAAwF,EAAA,WACAF,GAAAE,EAAA,OAAA,aACAqD,GAAArD,EAAA,YAAA,WAAA,MAAA,IACA6C,GAAA7C,EAAA,UAAA,WAAA,MAAA,IACA+F,GAAA/F,EAAA,KAAAgG,IAAA,aAAAC,IAAA,cACAlF,GAAAf,EAAA,WACAkG,GAAAlG,EAAA,OAAAA,EAAA,aAAA+F,IAAAA,GAAA,IAAA/C,EAAA,SAAA,GACAmD,GAAAnG,EAAA,cAAA,EACAoG,GAAA,EAIA,KAAAP,IAAA1E,GAAA,EAEA,IAAAL,IAAAd,EAAA,aAEAY,QAAA,SAAAyF,EAAA3L,GAAA,MAAA2L,IACArF,QAAA,SAAAsF,EAAA5L,GAAA,MAAA4L,KAkOA/E,IACAgF,MAAA,SAAAtI,EAAAuI,EAAAC,EAAAlK,EAAAuD,GAEA,GAAAL,IAAAiH,KAAAR,GAAAS,KAAAF,GAAA3D,GACA8D,EAAAzB,WAAAD,GACA3I,EAAAA,GAAA,aACAkE,EAAAX,GAAA,aACA8C,EAAAC,IAGA,IAAA5E,EAAA4I,QAAAC,iBAAA,EAAA,OAAA,CAEA,IAAAhB,GAAA,CACA,IAAAb,EAAA,OAAA,CACA,IAAA,KAAArC,EAAA,OAAA,EAGA,MAAAiC,IAAA,GAEA,KAAAjC,IAAAnD,EAAA,SAAAmD,GAEAuD,KAAA1G,EAAA,WAAA2G,IAEArE,IACAyE,SAAAA,GAAAvB,EACA5J,QAAA,IACAkB,SAAAqG,EACAnD,KAAAQ,EAAAR,GACAyD,QAAA,SAAAX,GACAD,EAAAC,EAAAhG,EAAAkE,IAEA0C,KAAA,SAAAZ,GACAE,EAAAF,EAAA9B,IAEApG,KACAuM,EAAA,KAAA,WAAA,UACA5D,EAAA,UAAAlI,OAAAmD,GAAA,YAGA,IAEA8I,YAAA,SAAAvI,EAAAgI,EAAAC,EAAAlK,EAAAuD,GAEA,GAAAL,IAAAiH,KAAAR,GAAAS,KAAAF,GAAA3D,GACA8D,EAAAzB,WAAAD,GACA3I,EAAAA,GAAA,aACAkE,EAAAX,GAAA,aACA8C,EAAAC,IAGA,IAAArE,EAAAqI,QAAAC,iBAAA,EAAA,OAAA,CAEA,IAAAhB,GAAA,CACA,IAAAb,EAAA,OAAA,CACA,IAAA,KAAArC,EAAA,OAAA,EAGA,MAAAiC,IAAA,GAEA,KAAAjC,IAAAnD,EAAA,SAAAmD,GAEApE,GAAAA,EAAAzD,OAAA,IAAA0E,EAAA,iBAAAjB,GAEA2H,KAAA1G,EAAA,WAAA2G,IAEArE,IACAyE,SAAAA,GAAAvB,EACA5J,QAAA,IACAkB,SAAAqG,EACAnD,KAAAQ,EAAAR,GACAyD,QAAA,SAAAX,GACAD,EAAAC,EAAAhG,EAAAkE,IAEA0C,KAAA,SAAAZ,GACAE,EAAAF,EAAA9B,IAEApG,KACAuM,EAAA,KAAA,WAAA,UACA5D,EAAA,UAAAlI,OAAA,KAAA,YAGA,IAEAkM,YAAA,SAAAC,GACAtB,EAAAsB,GAEAC,eAAA,WACA,MAAAnG,KAEAoG,eAAA,SAAAzM,GACAqG,GAAArG,GAEA0M,YAAA,SAAAvG,EAAAnG,GACA,MAAAkG,GAAAC,EAAAnG,IAEA2M,YAAA,SAAAxG,EAAAnG,GACA,MAAAsG,GAAAH,EAAAnG,IAEA4M,cAAA,WACA,MAAAzB,IAGA0B,cAAA,SAAAhH,EAAAiH,GACA3B,EAAAvF,EAAAC,EAAAsF,EAAA/F,IACAqB,GAAAqG,GAAA3B,EAAA,EAAA,EACA,GAAAA,IACA1E,GAAA,GAEAkE,IACApE,KAGAwG,uBAAA,WACA,MAAAtG,KAGAuG,uBAAA,SAAAF,GACArG,GAAAqG,EACAvG,KAGA0G,YAAA,WACA,MAAAC,UAEAC,oBAAA,SAAAC,GACA,OACArI,KAAAqI,IAGAC,qBAAA,SAAAD,GACA,GAAAE,IACA3I,KAAAE,MAAA,EAAAD,MAAA,IAEA,KAAA9B,IAAAsK,GACAtK,EAAAwK,GAAAF,EAAAtK,EAEA,OAAAwK,IAEAC,aAAA,WACA,GAAAD,KACAE,OAAAF,EAAA,OAAAE,KACAjJ,OAAA+I,EAAA,QAAA/I,KACA,KAAAzB,IAAA2K,GACAH,EAAAxK,GAAA2K,EAAA3K,EAEA,OAAAwK,IAGAI,WAAA,SAAA1N,EAAA2N,GACA7N,GAAAE,GAAA2N,GAGA7J,cAAA,SAAAO,EAAAxC,GACA,GAIA+L,GACA9J,EALA+J,EAAAxJ,EAAA,cACAxC,EAAAA,GAAAwC,EAAA,SACAhB,EAAAgB,EAAA,UAAAA,EAAA,QACAyJ,EAAAzJ,EAAA,MAGA1E,KACAoF,KACAgJ,EAAA1J,EAAA,MAAA,KAGA,IAAAwJ,EAAA,CACA,GAAAG,GAAAH,EAAAI,MAAA,IAEAD,GAAA3N,OAAA,GACAuN,EAAA,MAAAI,EAAA,GAAA,KAAAA,EAAA,GAEAlK,EAAAkK,EAAA,IAEAlK,EAAAkK,EAAA,GAIAJ,GAAAjO,EAAAW,KAAA,cAAAX,EAAAW,KAAAF,OAAAwN,IAEAjO,EAAAW,KAAA,iBAEAwD,GAAA,MAAAA,GACAnE,EAAAW,KAAAwD,GAGAT,GACAhB,QAAAgB,KACAA,EAAAA,EAAAzD,KAAA,MAEAmF,EAAAgJ,GAAA1K,EACA0B,EAAA,MAAA,EAAA,OAAA,SAEA,WAAAgJ,GAAApO,EAAAW,KAAA,UAGA,mBAAAwN,KAAA/I,EAAA,MAAA,EAAA,OAAA,SAEAiD,EAAA3D,EAAAxC,EAAAlC,EAAAoF,IAGAmJ,0BAAA,SAAA7J,EAAAxC,GACA,GAAA+L,EAEAA,GAAAvJ,EAAA,WAAAA,EAAA,IAAAA,EAAA,eAAA,KACAuJ,IACAvJ,EAAA,cAAAuJ,EAAA,MAGA/G,GAAA,cAAAxC,EAAAxC,IAGAsM,4BAAA,SAAA9J,EAAAxC,GACA,MAAAwC,GAAA,kBACAwC,IAAA,cAAAxC,EAAAxC,GADAuD,GAAA,0BAIAgJ,6BAAA,SAAA/J,EAAAxC,GACA,MAAAwC,GAAA,cACAA,EAAA,SAAAA,EAAA,UAEAA,EAAA,KAAA,aACAwC,IAAA,cAAAxC,EAAAxC,IAHAuD,GAAA,mBADAA,GAAA,0BAOAiJ,2BAAA,SAAAhK,EAAAxC,GACA,MAAAwC,GAAA,cACAA,EAAA,QAAAe,GAAA,mFAEAf,EAAA,KAAA,aACAwC,IAAA,cAAAxC,EAAAxC,IAJAuD,GAAA,0BAOAkJ,0BAAA,SAAAjK,EAAAxC,GACA,MAAAwC,GAAA,cACAA,EAAA,SAAAA,EAAA,aACAwC,IAAA,cAAAxC,EAAAxC,GADAuD,GAAA,mBADAA,GAAA,0BAKAmJ,oBAAA,SAAAlK,EAAAxC,GACA,MAAA,mBAAAwC,GAAA,UACAxC,GAAA+I,IAGAA,EAAAvG,EAAA,UACAwC,IAAA,cAAAxC,EAAAxC,KAGA2M,8BAAA,SAAAnK,EAAAxC,GACA,GAAAlC,IAAA,YACAqI,GAAA3D,EAAAxC,EAAAlC,IAEA8O,+BAAA,SAAApK,EAAAxC,GACA,GAAAlC,IAAA,YAAA0E,EAAA,UAAA,SACA2D,GAAA3D,EAAAxC,EAAAlC,IAUA+O,QAAA,SAAArK,EAAAxC,GACA,GAAAA,GAAAwC,EAAA,UAAAxC,EACA2F,EAAAnD,EAAA,OAAAA,EAAA,OAAA,IACAsK,EAAAtK,EAAA,SAAA,QACA0B,EAAA1B,EAAA,OAAA,aACA0H,EAAA1H,EAAA,UAAA+D,EACAwG,EAAAvK,EAAA,WACAd,EAAAc,EAAA,QACAP,EAAAO,EAAA,cACAwK,EAAAxK,EAAA,MACAyK,EAAAzK,EAAA,IACA0K,EAAA1K,EAAA,cACAvE,KACAoI,EAAAC,IAGA,OAAA5E,IAAAO,EACAjC,EACAyG,GAEAxI,EAAA,YAAA,OACAA,EAAA,MAAA0H,EACA1H,EAAA,QAAA6O,EACA7O,EAAA,KAAAiM,EAEAjI,IACAhE,EAAA,iBAAAgE,EACAP,IACAA,EAAA,MAGA2E,IAAApI,EAAA,SAAAoI,GACA2G,IAAA/O,EAAA,MAAA+O,GACAC,IAAAhP,EAAA,IAAAgP,GACAC,IAAAjP,EAAA,cAAA,YAGAuH,KACAxF,SAAAqG,EACAnD,KAAAQ,EAAAzF,GACA0I,QAAA,SAAAX,GACA,GAAA,gBAAAA,IAAAA,EAAA,MAEA,WADA9B,IAAAZ,QAAA0C,EAAA,QAAAmH,QAAAnH,EAAA,SAKA,KAAA,GAFAoH,GAAApH,EAAA,GACAqH,KACAvD,EAAA,EAAAA,EAAAsD,EAAA5O,OAAAsL,IAAA,CACA,GAAAwD,GAAA7I,EAAA2I,EAAAtD,GAAAiD,EACA,KACAM,EAAA,KAAA/O,KAAA,MAAAgP,IACA,MAAArI,GACAoI,EAAA,KAAA,IAGArN,GAAAqN,EAAArH,EAAA,GAAAA,EAAA,MAEAY,KAAA,SAAAZ,GACAE,EAAAF,EAAA9B,IAEApG,KACA0I,EAAA,KAAA,UAAA,UACAC,EAAA,UAAAlI,OAAAmD,OA5CA6B,GAAA,yBADAA,GAAA,oBADAA,GAAA,oBAyDAgK,OAAA,SAAA/K,EAAAxC,GACA,GAWAlC,GAXAkC,EAAAA,GAAAwC,EAAA,UAAA,aACA0H,EAAA1H,EAAA,UAAA+D,EACAiH,EAAAhL,EAAA,OACAiL,EAAAjL,EAAA,YACAkL,EAAAlL,EAAA,KACAwK,EAAAxK,EAAA,MACAyK,EAAAzK,EAAA,IACAsK,EAAAtK,EAAA,QACAmL,EAAAnL,EAAA,MACA6D,EAAAC,KACApD,IAIA,OAAAsK,GACAC,EACAlF,EACA9B,GAGA,KAAAJ,IAAAnD,EAAA,SAAAmD,GACAqH,IAAAxK,EAAA,KAAA,OACA4J,IAAA5J,EAAA,QAAA,QACA8J,IAAA9J,EAAA,MAAA8J,GACAC,IAAA/J,EAAA,IAAA+J,GACAU,IAAAzK,EAAA,MAAAyK,GAEAzK,EAAA,KAAAgH,EAGApM,GACA0I,EAAA,KAAA,SACA+B,EAAA9B,EACA+G,EAAAC,OAIAjI,KACAxF,SAAAqG,EACAM,QAAA,SAAAX,GACAD,EAAAC,EAAAhG,EAAAkE,MAEA0C,KAAA,WAAA5G,GAAA,EAAA,kBACAlC,IAAAA,EACAoF,KAAAQ,EAAAR,MA3BAK,GAAA,yBADAA,GAAA,uBADAA,GAAA,+BADAA,GAAA,2BAqCA6G,KAAA,SAAAA,GACA7D,EAAA6D,EACAtB,KAMAlB,KAAA,SAAA5H,GACA,GAAAqG,GAAAC,KAEApD,GAAAiH,KAAAR,GAAAS,KAAA7D,EAEAqD,MAAA1G,EAAA,WAAA2G,IAEArE,IACAxF,SAAAqG,EACAnD,KAAAQ,EAAAR,GACApE,QAAA,EAAAwD,OACAxE,KAAA0I,EAAA,OAAAH,GACAM,QAAA,SAAAX,GAAAhG,EAAAgG,EAAA,KACAY,KAAA,WAAA5G,EAAA,OAUAqD,QAAA,SAAAb,EAAAxC,GACA,GAAAyC,GAAAD,EAAA,OACA,KAAAC,EAAA,MAAAc,IAAA,kBAEA,IASAtF,GACAH,EAVAkC,EAAAA,GAAAwC,EAAA,UAAAC,EAAA,UAAA,aACAf,EAAAc,EAAA,SAAAC,EAAA,QACAyH,EAAA1H,EAAA,UAAA+D,EACAwG,EAAAvK,EAAA,WACA0B,EAAA1B,EAAA,OAAAC,EAAA,OAAA,aACAmL,EAAApL,EAAA,OAAA,EACAqL,EAAA,oBAAArL,GAAAA,EAAA,kBAAA,EACA6D,EAAAC,KACAwH,EAAA,MAMA,OAFAtL,GAAA,UAAAsL,EAAA,WAEApM,EACA6G,EACA9B,GAEAhE,EAAA,mBACAA,EAAAA,EAAA,oBAIAA,EAAAnE,KAAA,UAAA+F,EAAA5B,EAAAsK,IAGAjP,GACA0I,EAAA,UACA+B,EAAA9B,EACA,EAAAlI,OAAAmD,GACA2E,EAAA9H,OAAAkE,IAGAxE,GAAAkM,KAAAR,GAAAS,KAAAF,GAEA2D,IAAA5P,EAAA,MAAA,KAEA2L,KAAA3L,EAAA,WAAA4L,IAGAvE,EAAAwI,IACA9N,SAAAqG,EACAvH,QAAA,EAAAwD,OACAxE,IAAAA,EACAoF,KAAAQ,EAAAzF,GACA2I,KAAA,SAAAZ,GACAE,EAAAF,EAAA9B,GACAb,EAAA,IAEAsD,QAAA,SAAAX,GACAD,EAAAC,EAAAhG,EAAAkE,GACAb,EAAA,IAEA6I,KAAA,EAAA,OAAA,YAIA7I,MAzCAE,GAAA,yBADAA,GAAA,uBADAA,GAAA,oBAiDAwK,YAAA,SAAAvL,EAAAxC,GACA,GAAA0B,GAAAc,EAAA,QACAP,EAAAO,EAAA,cACA0H,EAAA1H,EAAA,UAAA+D,EACAvG,EAAAA,GAAAwC,EAAA,UAAA,aACA0B,EAAA1B,EAAA,OAAA,YAEA2G,GAAA,EAGAzH,IAEAA,EAAAV,KACAU,EAAA3D,KAAA2D,EAAA3D,KAAA,KAAA,GAAA2D,GACA0K,MAAA,KAAA,SAAA1K,GACA,MAAAmD,GAAAnD,GACAA,EAAA,IAAAA,EAAA6I,gBADA,SAEAxM,KAAA,KAGAG,KAAAwD,EAAA0K,MAAA,KAAA,SAAA4B,GACA,GAAAC,IAAA,CACAD,KACAnJ,EAAAmJ,GAAA,EACAA,IAAA3E,UAAAA,GAAA2E,GACA7L,QACA8L,EAAAjJ,GAAA,MAAAgJ,EAAA,EAAA9D,EAAAlK,EAAAkE,IAEA+J,GAAAjO,GAAAkO,OAAA,cAMAjM,IAEAA,EAAAjB,KACAiB,EAAAlE,KAAAkE,EAAAlE,KAAA,KAAA,GAAAkE,GACAmK,MAAA,KAAA,SAAAnK,GACA,MAAA6C,GAAA7C,GACAA,EAAA,IAAAA,EAAAsI,gBADA,SAEAxM,KAAA,KAGAG,KAAA+D,EAAAmK,MAAA,KAAA,SAAA+B,GACA,GAAAF,IAAA,CACAE,KACArJ,EAAAqJ,GAAA,EACAA,IAAA9E,UAAAA,GAAA8E,GACAhM,QACA8L,EAAAjJ,GAAA,YAAAmJ,EAAA,EAAAjE,EAAAlK,EAAAkE,IAEA+J,GAAAjO,GAAAkO,OAAA,cAMApF,KASAsF,UAAA,SAAA5L,EAAAxC,GAuJA,QAAAqO,GAAA1H,GACAA,EAEA7H,QAAAgK,EAAAwF,IAIA9H,EAAAoC,WAAAD,EAAA,GACAE,EAAAD,WAAAD,EAAA,GAGA7J,QAAA,WACAkG,GAAA,KAAAqJ,IACA/L,SAIAuD,EAAA,SAAAnE,GAEA,MAAAiF,IAAAjF,EAAA6M,cACA7M,EAAA6M,aAAA,EACA7M,EAAA8M,UAAA9M,EAAA+M,YAIA9H,GAAAjF,EAAA6M,eACA7M,EAAA6M,aAAA,EACA7M,EAAAgN,WAAAhN,EAAA+M,UAKA/I,EAAA,SAAAzD,GAEA,MAAA0E,IAAA1E,EAAAsM,cACAtM,EAAAsM,aAAA,EACAtM,EAAAuM,UAAAvM,EAAAwM,YAIA9H,GAAA1E,EAAAsM,eACAtM,EAAAsM,aAAA,EACAtM,EAAAyM,WAAAzM,EAAAwM,UAMA,QAAAE,KACA,GAAAtI,GAAAC,KACA9E,EAAAD,sBAAAsD,GAAA9G,KAAA,KACAiE,EAAAD,4BAAA+C,GAAA/G,KAAA,IAGA,IAAAyD,GAAAQ,EAAA,CAEAR,IAAAA,EAAA,KAGAuF,GAEA,IAAA7D,GAAAQ,GAAAyG,KAAAR,GAAAS,KAAA7D,GAEAvE,KACAkB,EAAA,iBAAAlB,EAIA,IAAA4M,GAAAtQ,KAAA4G,UAAAmE,EACAuF,GAAApQ,OAAA,IAAA0E,EAAA,MAAA5E,KAAA4G,UAAAmE,IAEAC,IAAApG,EAAA,UAAAoG,GAEAM,KAAA1G,EAAA,WAAA2G,IAEA1E,IACAmC,EAAA9B,IACA1G,QAAA+P,EACA7O,SAAAqG,EACAO,KAAA,SAAAZ,GACAA,GAAAA,EAAA,OAAAA,EAAA,SACAE,EAAAF,EAAA8I,GACAT,EAAA,IAEArJ,GAAA,KAAA,SAAA2B,IACAA,GAAAT,EAAAF,EAAA8I,GACAT,EAAA1H,MAIAzD,KAAAQ,EAAAR,GACApF,KACA+K,EAAA,YACApC,EAAAlI,OAAAiD,GACA6E,EAAA8C,GAEAxC,QAAA,SAAAyG,GAGA,IAAAA,GACA,gBAAAA,IACA,SAAAA,IACAA,EAAA,MAGA,MADA0B,GAAA1B,EAAA,OACAtO,QAAAgK,EAAAxG,OAkCA,IA9BAyM,EAAA3B,EAAA,IAGAjE,GAAAA,GACAD,GACAM,GAAA,IAAA/C,IAAA2G,EAAA,GAYAvH,EAAA,SAAAnE,GACAA,EAAAsN,YACAtN,EAAAsN,UAAA,EACAtN,EAAAW,QAAAX,EAAA+M,SAIA/I,EAAA,SAAAzD,GACAA,EAAA+M,YACA/M,EAAA+M,UAAA,EACA/M,EAAAI,QAAAJ,EAAAwM,SAGArF,IAAAF,EAMA,MALAC,GAAA,EACAC,GAAA,EAEAI,GAAA,IAAA/C,EAAA,OACA3H,SAAA6P,EAAAL,EAMAW,KACA9F,EAAA,IACA8F,EAAA,GAIAzF,GAAA,IAAA/C,EAAA2G,EAAA,GAGA,IAAA8B,GAAA,WACA,GAAA1N,GAAA,GACA2N,EAAA,EAEA/B,GAAA5O,OAAA,GACAgD,EAAA4L,EAAA,GACA+B,EAAA/B,EAAA,IAEA5L,EADA4L,EAAA5O,OAAA,EACA4O,EAAA,GAEApM,IACAO,sBAAAsD,GAAA,SAAAiB,GAAA,MAAA9E,KACAN,MAAA0M,EAAA,GAAA5O,QACAT,KAAA,KAAAqO,MAAA,KACA,WAAA,MAAAtG,OACA/H,KAAA,IAGA,IAAAqB,GAAAoC,EAAA4K,MAAA,KACAgD,EAAA,EAAAD,EAAA/C,MAAA,OAEA,OAAA,YACA,GAAA1K,GAAAtC,EAAAqG,SAAAwD,EACAoG,EAAAD,EAAA3J,QAEA6J,IAEAD,IACA3N,GAAAA,EAAA4I,QAAA,YAAA,GACA+E,EAAA/E,QAAA,WAAA,IACA+E,GAAA,WAEAC,EAAAxK,EAAAuK,IAAAxK,EAAAwK,KAAArP,SAAA,eAEAsP,EAAAzK,EAAAnD,EAGA,IAAAvB,IACAmP,EACAtP,UAAAgJ,EACAtH,EAAA0K,MAAA7B,iBAAA,GAGA,OADA8E,IAAAlP,EAAA1B,KAAA4Q,EAAAjD,MAAA7B,iBAAA,IACApK,MAIA4H,EAAAR,GAAA6F,EAAA,GACAlP,MAAAkP,EAAA,GAAA,SAAA3K,GACA,GAAA2C,GAAA8J,IACAK,EAAA9K,EAAAhC,EACAoC,EAAAO,EAAA,IAAAP,EAAAO,EAAA,IAAA,WAAA,KACAA,GAAA,IAAAA,EAAA,GAAAmK,EAAAnC,EAAAhI,EAAA,IAAAA,EAAA,GAAA2C,EAAA3C,EAAA,MAGAtG,QAAA6P,EAAAL,OA5WA,GAAA5M,GAAAc,EAAA,QACAP,EAAAO,EAAA,cACAxC,EAAAA,GAAAwC,EAAA,SACAxC,EAAAA,GAAAwC,EAAA,QACAH,EAAAG,EAAA,SAAA,aACAgM,EAAAhM,EAAA,WAAA,aACAkM,EAAAlM,EAAA,YAAA,aACAsM,EAAAtM,EAAA,OAAAsM,GAAA,aACAC,EAAAvM,EAAA,MAAA,aACAgN,EAAAhN,EAAA,UAAA,EACAiN,EAAAjN,EAAA,YAAA,EACAyM,EAAAzM,EAAA,UAAA,EACAkN,EAAAlN,EAAA,WAAA,EACAqM,EAAArM,EAAA,SAAA2F,EACAmG,EAAA9L,EAAA,WAAAyF,EACA0H,EAAAnN,EAAA,MACAwB,EAAAxB,EAAA,WAAAA,EAAA,UACAyI,EAAAzI,EAAA,mBACAoN,EAAApN,EAAA,SAAA0G,CAWA,OATA3C,GAAA/D,EAAA,UAAA+D,EAGA2C,EAAA0G,EAGAzG,EAAAuG,EAGAhO,GAAAO,EAIAjC,EACAyG,IAEAzC,GAAA,IAAAA,GAAAiH,GAAA,IAAAA,IACAjG,GAAA,cAAAhB,EAAAiH,GAIAvJ,GACAxD,MAAAwD,EAAA3D,KAAA2D,EAAA3D,KAAA,KAAA,GAAA2D,GAAA0K,MAAA,KACA,SAAA1K,GACA,GAAAmO,GAAAhL,EAAAnD,MAGAmD,GAAAoE,EAAAvH,IACA+M,KAAA/M,EACAsN,UAAAa,EAAAb,UACAT,aAAAsB,EAAAtB,aACA1M,WAAA,EACA7B,SAAAgJ,EAAAhJ,EACA+M,WAAAvK,EAAA,WACAH,QAAAA,EACAqM,WAAAA,EACAF,UAAAA,GAGAmB,IAEAtG,EAAA3H,GADAA,IAAAiO,GACAA,EAAAjO,GAEAiO,GAKAH,IAGAxK,GAAA,WACAtD,QAAAA,EAAA6I,gBACAvK,SAAAwP,EACAI,QAAAA,IAIAC,EAAAhO,YAGA4N,GACAzK,GAAA,UACAtD,QAAAA,EACAwB,KAAAQ,GAAAyG,KAAAR,GAAAS,KAAA7D,IACAvG,SAAA,SAAA8P,GACA5R,KAAA,SAAA4R,GAAAA,EAAA,SACA,SAAAC,GAAAP,GACAtB,OAAA,OACA/D,KAAA4F,EACAC,UAAA5P,KAAA6P,MAAAvS,OAAA,KACAwS,UAAAJ,EAAA,WAAA,GACAA,EAAApO,WAOAO,GACA/D,MAAA+D,EAAAlE,KAAAkE,EAAAlE,KAAA,KAAA,GAAAkE,GAAAmK,MAAA,KACA,SAAAnK,GACA,GAAA4N,GAAA/K,EAAA7C,MAEA6C,GAAA7C,IACAwM,KAAAxM,EACA+M,UAAAa,EAAAb,UACAT,aAAAsB,EAAAtB,aACA1M,WAAA,EACA7B,SAAAgJ,EAAAhJ,EACA+M,WAAAvK,EAAA,WACAH,QAAAA,EACAqM,WAAAA,EACAF,UAAAA,GAIAgB,IAGAxK,GAAA,WACA/C,cAAAA,EAAAsI,gBACAvK,SAAAwP,EACAI,QAAAA,EACA1F,SAAA3D,IAIAsJ,EAAAhO,YAGA4N,GACAzK,GAAA,UACA/C,cAAAA,EACAiB,KAAAQ,GAAAyG,KAAAR,GAAAS,KAAA7D,IACAvG,SAAA,SAAA8P,GACA5R,KAAA,SAAA4R,GAAAA,EAAA,SACA,SAAAC,GAAAP,GACAtB,OAAA,OACA/D,KAAA4F,EACAC,UAAA5P,KAAA6P,MAAAvS,OAAA,KACAwS,UAAAJ,EAAA,WAAA,GACAA,EAAA7N,WAmOA6G,EAAA,WACA/B,IACAjI,QAAA6P,EAAAL,IAIAnM,UAGA2G,KAHA1G,aAAA3D,KAAAqK,IArVAvF,GAAA,yBADAA,GAAA,oBAHAA,GAAA,oBAkWA4M,SAAA,SAAA3N,EAAAxC,GACA,GAAAA,GAAAwC,EAAA,UAAAxC,EACAkE,EAAA1B,EAAA,OAAA,aACA0H,EAAA1H,EAAA,UAAA+D,EACA7E,EAAAc,EAAA,QACAP,EAAAO,EAAA,cACA6D,EAAAC,KACA8J,EAAA,SAAA5N,GAAAA,EAAA,OAAA,EACAmN,EAAAnN,EAAA,MACAU,GAAAiH,KAAAR,GAAAS,KAAAF,EAMA,IAJAkG,IAAAlN,EAAA,cAAA,GACAyM,IAAAzM,EAAA,MAAA,IAGAlD,EAAA,MAAAuD,IAAA,mBACA,KAAAkD,EAAA,MAAAlD,IAAA,wBAEA,IAAAzF,IACA0I,EAAA,KAAA,WACA,UAAAC,EAGA/E,IAAA5D,EAAAW,KAAA,YAAAX,EAAAW,KAAAF,OAAAmD,IAEA,KAAA2E,IAAAnD,EAAA,SAAAmD,GAEApE,IACAiB,EAAA,iBAAAjB,GACAP,GAAA5D,EAAAW,KAAA,YAAAX,EAAAW,KAAA,MAGAmL,KAAA1G,EAAA,WAAA2G,IAEArE,IACAxF,SAAAqG,EACAnD,KAAAQ,EAAAR,GACAyD,QAAA,SAAAX,GACAD,EAAAC,EAAAhG,EAAAkE,IAEA0C,KAAA,SAAAZ,GACAE,EAAAF,EAAA9B,IAEApG,IAAAA,KAOAuS,UAAA,SAAA7N,EAAAxC,GACA,GAAAA,GAAAwC,EAAA,UAAAxC,EACAkE,EAAA1B,EAAA,OAAA,aACA0H,EAAA1H,EAAA,UAAA+D,EACAF,EAAAC,KACA6D,EAAA3H,EAAA,MAAAmH,GACAzG,GAAAkH,KAAAF,EAGA,OAAAlK,GACAyG,GAEA,KAAAJ,IAAAnD,EAAA,SAAAmD,GAEAuD,KAAA1G,EAAA,WAAA2G,QAEArE,KACAxF,SAAAqG,EACAnD,KAAAQ,EAAAR,GACAyD,QAAA,SAAAX,GACAD,EAAAC,EAAAhG,EAAAkE,IAEA0C,KAAA,SAAAZ,GACAE,EAAAF,EAAA9B,IAEApG,KACA0I,EAAA,KAAA,WACA,UAAAC,EACA,OAAAlI,OAAA4L,OAlBA5G,GAAA,yBADAA,GAAA,qBAwBAoM,MAAA,SAAAnN,EAAAxC,GACA,GAQAlC,GARAkC,EAAAwC,EAAA,UAAAxC,GAAA,SAAAG,KACA+D,EAAA1B,EAAA,OAAA,aACA0H,EAAA1H,EAAA,UAAA+D,EACAF,EAAAC,KACAqJ,EAAAnN,EAAA,MACA2H,EAAA3H,EAAA,MAAAmH,GACAjI,EAAAc,EAAA,QACAP,EAAAO,EAAA,cAEAU,EAAAQ,GAAA0G,KAAAF,GAGA,OAAAzD,GACA0D,EACAzI,GAAAO,GAEA,KAAAoE,IAAAnD,EAAA,SAAAmD,GAEA,mBAAA3E,IACAmD,EAAAnD,IAAAmD,EAAAnD,GAAAG,YACA8N,IAAAtG,EAAA3H,GAAAiO,GAGA,mBAAA1N,IACA6C,EAAA7C,IACA6C,EAAA7C,GAAAJ,aAEA8N,IAAAtG,EAAApH,GAAA0N,GACAzM,EAAA,iBAAAjB,EAEAP,IACAA,EAAA,MAIAwB,EAAA,MAAA5E,KAAA4G,UAAAyK,GAEA/F,KAAA1G,EAAA,WAAA2G,IAGA/L,EADA6R,GAEAnJ,EAAA,KAAA,WACA,UAAAC,EACA,UAAA/E,EACA,OAAAyI,EAAA,SAIA3D,EAAA,KAAA,WACA,UAAAC,EACA,UAAA/E,EACA,OAAAnD,OAAA4L,QAIA3E,KACAxF,SAAAqG,EACAnD,KAAAQ,EAAAR,GACAyD,QAAA,SAAAX,GACAD,EAAAC,EAAAhG,EAAAkE,IAEA0C,KAAA,SAAAZ,GACAE,EAAAF,EAAA9B,IAEApG,IAAAA,KAlDAyF,GAAA,mBADAA,GAAA,gBADAA,GAAA,0BAqEA+M,MAAA,SAAA9N,EAAAxC,GACA,GAAAA,GAAAwC,EAAA,UAAAxC,EACAkE,EAAA1B,EAAA,OAAA,aACAd,EAAAc,EAAA,SAAAA,EAAA,SACAP,EAAAO,EAAA,cACA6D,EAAAC,KACAiK,EAAA/N,EAAA,IACArC,EAAAqC,EAAA,KAAA,IAAA,IACAgO,EAAAhO,EAAA,MAAA,IAAA,IACAG,EAAAH,EAAA,OAAA,IAAA,IACA0H,EAAA1H,EAAA,UAAAA,EAAA,SAEA,KAAAxC,EAAA,MAAAuD,IAAA,mBACA,KAAAkD,EAAA,MAAAlD,IAAA,wBACA,KAAAgF,EAAA,MAAAhF,IAAA,sBACA,KAAAiF,EAAA,MAAAjF,IAAA,qBAEA,IAAAyM,GAAA5P,KAAA6P,OAAA,GAAAxS,OAAAgT,UAAA,KACAC,EAAAjK,EAAA,KAAA8B,EAAA,YAGArF,GACAsN,EAAAA,EACArQ,EAAAA,EACA6P,UAAAA,EAEAxN,GAAA,SACAU,EAAA,EAAAP,GAEAnC,QAAAkB,KACAA,EAAAA,EAAA,KAAA,MAEAlB,QAAA0J,KACAA,EAAAA,EAAA,KAAA,MAEA,mBAAAxI,IAAA,MAAAA,GAAAA,EAAAlD,OAAA,IAAA0E,EAAA,QAAAxB,GACA,mBAAAO,IAAA,MAAAA,GAAAA,EAAAzD,OAAA,IACA0E,EAAA,iBAAAjB,GAEA,KAAAoE,IAAAnD,EAAA,SAAAmD,IACAkK,GAAA,IAAAA,KAAArN,EAAA,IAAAqN,GAEArG,IAAAhH,EAAA,KAAAgH,GAEAhH,EAAAQ,EAAAR,GAEAgH,SAAAhH,GAAA,KAEAwN,GAAA7M,EAAAX,EAEA,IAAAyN,GAAAlI,EAAAiI,EAAAlI,EAEAmI,GAAAA,EAAAjR,QAAA,MAAA,KACAiR,EAAAA,EAAAjR,QAAA,MAAA,KAEAwD,EAAA,UAAAyN,EAEAnL,IACAxF,SAAAqG,EACAnD,KAAAA,EACAyD,QAAA,SAAAX,GACAD,EAAAC,EAAAhG,EAAAkE,IAEA0C,KAAA,SAAAZ,GACAE,EAAAF,EAAA9B,IAEApG,KACA0I,EAAA,KAAA,OAAA,QACA,UAAAC,MAgBAmK,oBAAA,SAAApO,GAEA,GAQAvE,GACAH,EATAkC,EAAAwC,EAAA,UAAA,aACA0H,EAAA1H,EAAA,UAAA+D,EACArC,EAAA1B,EAAA,OAAA,aACA6D,EAAAC,KACA5E,EAAAc,EAAA,QACAqO,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,QACAuO,EAAAvO,EAAA,SAIA,OAAAuO,GACAD,EACAD,EACAnP,EACA6G,EACA9B,GAGA3I,GACA0I,EAAA,kBACAC,EAAA,UAAAsK,GAGA9S,GAAAkM,KAAAR,GAAAS,KAAAF,EAAA8G,KAAAF,GAEA,OAAAD,EACA5S,EAAA,IAAAyD,EACA,UAAAmP,IACA5S,EAAA,OAAAyD,GAGAkI,KAAA1G,KAAA,WAAA2G,QAEArE,KACAxF,SAAAqG,EACAnD,KAAAjF,EACA0I,QAAA,SAAAX,GACAD,EAAAC,EAAAhG,EAAAkE,IAEA0C,KAAA,SAAAZ,GACAE,EAAAF,EAAA9B,IAEApG,IAAAA,KA3BAyF,GAAA,yBADAA,GAAA,uBADAA,GAAA,4CADAA,GAAA,4CADAA,GAAA,0CADAA,GAAA,kCA+CA0N,MAAA,SAAAzO,EAAAxC,GACA,GAAAA,GAAAwC,EAAA,UAAAxC,EACAkE,EAAA1B,EAAA,OAAA,aACAd,EAAAc,EAAA,QACAP,EAAAO,EAAA,cACA0H,EAAA1H,EAAA,SACA6D,EAAAC,IAGA,KAAAtG,EAAA,MAAAuD,IAAA,mBACA,KAAAkD,EAAA,MAAAlD,IAAA,wBACA,KAAAgF,EAAA,MAAAhF,IAAA,sBACA,KAAAiF,EAAA,MAAAjF,IAAA,qBAEA,IAAAyM,GAAA5P,KAAA6P,OAAA,GAAAxS,OAAAgT,UAAA,KACAC,EAAAjK,EAAA,KACA8B,EAAA,YAGArF,GAAA8M,UAAAA,EACA,MAAA3J,IAAAnD,EAAA,SAAAmD,GACA,mBAAA3E,IAAA,MAAAA,GAAAA,EAAAlD,OAAA,IAAA0E,EAAA,QAAAxB,GACA,mBAAAO,IAAA,MAAAA,GAAAA,EAAAzD,OAAA,IACA0E,EAAA,iBAAAjB,GAEAiI,IAAAhH,EAAA,KAAAgH,GAEAhH,EAAAQ,EAAAR,GAEAgH,SAAAhH,GAAA,KAEAwN,GAAA7M,EAAAX,EAEA,IAAAyN,GAAAlI,EAAAiI,EAAAlI,EAEAmI,GAAAA,EAAAjR,QAAA,MAAA,KACAiR,EAAAA,EAAAjR,QAAA,MAAA,KAEAwD,EAAA,UAAAyN,EACAnL,IACAxF,SAAAqG,EACAnD,KAAAA,EACAyD,QAAA,SAAAX,GACAD,EAAAC,EAAAhG,EAAAkE,IAEA0C,KAAA,SAAAZ,GACAE,EAAAF,EAAA9B,IAEApG,KACA0I,EAAA,KAAA,OAAA,QACA,UAAAC,MAaAyK,OAAA,SAAA1O,EAAAxC,GACAwC,EAAA,MAAA,EACAA,EAAA,OAAA,EACAwC,GAAA,MAAAxC,EAAAxC,IAEAmR,SAAA,SAAAhH,GACAR,GAAAQ,EACArB,KAEAsI,SAAA,WACA,MAAAzH,KAEAnJ,QAAA,SAAAC,GACA,MAAAD,SAAAC,IAEA4Q,uBAAA,WACA,MAAA9P,uBAAAsD,GAAA,IAEAyM,mBAAA,SAAA9O,GACA,GAAAxC,GAAAwC,EAAA,UAAA,aACA0B,EAAA1B,EAAA,OAAA,aACA6D,EAAAC,KACApD,GAAAiH,KAAAR,GAAAS,KAAA7D,GAEAqI,EAAAtQ,KAAA,UAAA+K,EACAuF,GAAApQ,OAAA,IAAA0E,EAAA,MAAA5E,KAAA,UAAA+K,IAEAC,EAAA,GAAA,IAAAA,IAAApG,EAAA,UAAAoG,GAEA,KAAAjD,IAAAnD,EAAA,SAAAmD,EAEA,IAAA7E,GAAAjD,OAAAgD,sBAAAsD,GAAA,GAAA,KAAA,MACA7C,EAAAD,4BAAA+C,GAAA,GAAA,KAAA,IAEAtD,KAAAA,EAAA,KACAQ,IAAAkB,EAAA,iBAAAlB,GAEA4H,KAAA1G,EAAA,WAAA2G,IAEArE,IACAxF,SAAAqG,EACAnD,KAAAQ,EAAAR,GACApE,QAAA,EAAAwD,OACAxE,KACA0I,EAAA,KAAA,WACA,UAAAC,EACA,UAAAjF,EACA,aAEAmF,QAAA,SAAAX,GACAD,EAAAC,EAAAhG,EAAAkE,IAEA0C,KAAA,SAAAZ,GAAAE,EAAAF,EAAA9B,OAGAqN,YAAA,WACAtS,aAAA+H,GACA/H,aAAAmI,IAIA5B,IAAAA,GACAtD,MAAAA,MACAsH,GAAAA,GACAW,KAAApK,cACAiB,IAAAA,IACA9C,KAAAA,KACAsT,eAAA3L,EACA1G,KAAAA,KACAsS,QAAA,WAAA1K,EACA,GAAAzD,QAAA,kDAEA/D,SAAAA,SACAmS,IAAAhU,KACAH,OAAAA,OACAoB,QAAAA,QAgEA,OAhCAgL,MAAAA,GAAA3E,GAAA,QACA6E,KAAAA,GAAA7E,GAAA,QACAwE,GAAA,IAAA/C,EAAA,OAAAkD,IAEA3C,EAAAlI,QAAA+H,EAAAvE,QACA8E,EAAAtI,QAAAmI,EAAAI,GACA1C,EAAA7F,QACAqG,GACAP,GAAA,GAAAtC,QASA6E,IAeAnC,GAEA,QAAAT,cAEA,QAAAoN,GAAAC,GACA,MAAAC,UAAA,OAAAD,GAAA,SAAAC,SAAA,IAAA,KAgBA,QAAAC,GAAAC,GAcA,MAXAA,GAAAA,MACAA,EAAA,eAAA,gBAAAA,EAAA,WAAAC,EAAA,YACAD,EAAA,eAAA,iBAAAA,EAAA,YAAAC,EAAA,aACAD,EAAA,eAAA,eAAAA,EAAA,UAAAC,EAAA,WACAD,EAAA,eAAA,UAAAA,EAAA,KAAAC,EAAA,MAGA,IAAAC,EAAA,QAAAF,EAAA,YAAA,iBAAAA,EAAA,YAAAC,EAAA,aACA,IAAAE,EAAA,QAAAC,SAAAJ,EAAA,UAAA,OAAAA,EAAA,UAAAC,EAAA,WACA,IAAAI,EAAA,QAAAL,EAAA,KAAA,iBAAAA,EAAA,KAAAC,EAAA,MAEAD,EAIA,QAAAM,GAAAlU,EAAA4T,GACA,MAAA,UAAAA,EAAA,YACAF,SAAA,IAAA,OAAA,MAAA1T,GACA,OAAA4T,EAAA,YACAF,SAAA,IAAA,IAAA,MAAA1T,GAEAA,EAIA,QAAAmU,GAAAnU,EAAA4T,GAEA,MADA5T,GAAAkU,EAAAlU,EAAA4T,GACAA,EAAA,WACAF,SAAA,IAAA,KAAA,MAAAF,EAAAxT,GAAA,MAAA,EAAA,KAEAA,EAIA,QAAAoU,GAAAR,GACA,MAAA,OAAAA,EAAA,KACAF,SAAA,KAAA,IAEAA,SAAA,KAAA,IAIA,QAAAW,GAAAT,GACA,MAAA,OAAAA,EAAA,KAAAF,SAAA,IAAA,KAAA,MAAAY,GAAA,KA3DA,GAAAA,GAAA,mBAEAR,GAAA,MAAA,OAAA,SAAA,UACAC,GAAA,IAAA,KACAE,GAAA,MAAA,OAEAJ,GACAU,YAAA,EACAC,YAAA,OACAC,UAAA,IACA1G,KAAA,MAoDA,QAEA7H,QAAA,SAAAnB,EAAA/E,EAAA4T,GACA,IAAA5T,EAAA,MAAA+E,EACA6O,GAAAD,EAAAC,EACA,IAAAU,GAAAD,EAAAT,GACA7F,EAAAqG,EAAAR,GACAhF,EAAAuF,EAAAnU,EAAA4T,GACAc,EAAAvU,KAAA,UAAA4E,GACA4P,EAAAjB,SAAA,IAAA,QAAAgB,EAAA9F,GAAA0F,GAAAA,EAAAvG,KAAAA,IAAA,WACA6G,EAAAD,EAAA,SAAAjB,SAAA,IAAA,OACA,OAAAkB,IAAA7P,GAGAuB,QAAA,SAAAvB,EAAA/E,EAAA4T,GACA,IAAA5T,EAAA,MAAA+E,EACA6O,GAAAD,EAAAC,EACA,IAAAU,GAAAD,EAAAT,GACA7F,EAAAqG,EAAAR,GACAhF,EAAAuF,EAAAnU,EAAA4T,EACA,KACA,GAAAiB,GAAAnB,SAAA,IAAA,OAAA,MAAA3O,GACA+P,EAAApB,SAAA,IAAA,SAAAqB,WAAAF,GAAAjG,GAAA0F,GAAAA,EAAAvG,KAAAA,IAAA,SAAA2F,SAAA,IAAA,MACAsB,EAAA7U,KAAA,MAAA2U,EACA,OAAAE,GAEA,MAAAlO,GACA,MAAAmO,WCjtEA,GAAOC,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GAEnBC,GAAAA,GAAAA,WAKIC,QAAAA,GAAYA,EAAqBA,GAC7BC,KAAKA,UAAUA,GACfA,KAAKA,SAAWA,EA4CxBD,MAzCIA,GAAAA,UAAAA,UAAAA,SAAUA,GAENE,MADAA,MAAKA,QAAUA,GAAUA,MAClBA,MAGXF,EAAAA,UAAAA,QAAAA,SAAQA,EAAKA,GAETG,MADAA,MAAKA,SAASA,KAAKA,WAAWA,IAAQA,KAAKA,UAAUA,GAC9CA,MAGXH,EAAAA,UAAAA,WAAAA,SAAWA,GAEPI,aADOA,MAAKA,SAASA,KAAKA,WAAWA,IAC9BA,MAGXJ,EAAAA,UAAAA,QAAAA,SAAQA,GACJK,GAAIA,GAAOA,KAAKA,SAASA,KAAKA,WAAWA,GACzCA,OAAKA,GACEA,KAAKA,MAAMA,GADAA,MAItBL,EAAAA,UAAAA,MAAAA,WAEIM,IAAKA,GAAIA,KAAOA,MAAKA,SAEZA,KAAKA,SAASA,eAAeA,IAEAA,IAA9BA,EAAIA,QAAQA,KAAKA,gBACVA,MAAKA,SAASA,EAK7BA,OAAOA,OAIDN,EAAAA,UAAAA,WAAVA,SAAqBA,GACjBO,MAAOA,MAAKA,QAAUA,GAG9BP,IAnDaD,GAAAA,MAAKA,GAFCD,EAAAA,EAAAA,OAAAA,EAAAA,WAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBCAP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GCyDX,GAAIU,GAAM,WD3CdC,QAAAA,GAAYA,GAEHC,IACDA,GACIA,IAAKA,aACLA,KAAMA,aACNA,KAAMA,aACNA,MAAOA,eAIfA,KAAKA,SAAWA,EAEhBA,KAAKA,UAAWA,EAChBA,KAAKA,SAAUA,EACfA,KAAKA,aAAcA,EACnBA,KAAKA,WAAYA,EAEjBA,KAAKA,eAAgBA,EA+C7BD,MA3CIA,GAAAA,UAAAA,WAAAA,WACIE,KAAKA,UAAWA,EAChBA,KAAKA,SAAUA,EACfA,KAAKA,aAAcA,EACnBA,KAAKA,WAAYA,GAGrBF,EAAAA,UAAAA,UAAAA,WACIG,KAAKA,UAAWA,EAChBA,KAAKA,SAAUA,EACfA,KAAKA,aAAcA,EACnBA,KAAKA,WAAYA,GAGrBH,EAAAA,UAAAA,MAAAA,WCsCY,IDtCNI,GAAAA,MAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,EACEA,MAAKA,UAAUA,KAAKA,SAASA,IAAIA,MAAMA,KAAKA,SAAUA,KAAKA,gBAAgBA,aAGnFJ,EAAAA,UAAAA,KAAAA,WC0CY,ID1CPK,GAAAA,MAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,EACGA,MAAKA,SAASA,KAAKA,SAASA,KAAKA,MAAMA,KAAKA,SAAUA,KAAKA,gBAAgBA,aAGnFL,EAAAA,UAAAA,KAAAA,WC8CY,ID9CPM,GAAAA,MAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,EACGA,MAAKA,aAAaA,KAAKA,SAASA,KAAKA,MAAMA,KAAKA,SAAUA,KAAKA,gBAAgBA,aAGvFN,EAAAA,UAAAA,MAAAA,WCkDY,IDlDNO,GAAAA,MAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,EACEA,MAAKA,WAAWA,KAAKA,SAASA,MAAMA,MAAMA,KAAKA,SAAUA,KAAKA,gBAAgBA,aAGtFP,EAAAA,UAAAA,MAAAA,WACIQ,GAAIA,GAAUA,GAAIA,MAClBA,OAAIA,GAAEA,eAAeA,SACVA,EAAEA,MAAMA,QAAQA,UAAWA,iBADtCA,QAKMR,EAAAA,UAAAA,gBAAVA,SAA0BA,GAGtBS,MAFAA,GAAOA,EAAAA,MAAMA,iBAAiBA,GAC1BA,KAAKA,eAAeA,EAAKA,SAAQA,GAAIA,OAAOA,iBAAkBA,KAC3DA,GAGfT,IA1EaV,GAAAA,IAAGA,EA4ELA,EAAAA,IAAMA,GAAIA,IAjFFD,EAAAA,EAAAA,OAAAA,EAAAA,WAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBEAP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GAAKC,GAAAA,IAAAA,SAAAA,GD0JZ,QAASoB,GC1IEC,EAAkBA,GD4IzB,IC5I2CC,GAAAA,MAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,EAEvDA,IAAIA,GAASA,EAAMA,EAAKA,EAAMA,EAAaA,EACvCA,EAASA,UAAUA,OACnBA,EAAIA,EACJA,EAASA,UAAUA,OACnBA,GAAOA,CAgBXA,KAbsBA,iBAAXA,KACPA,EAAOA,EAGPA,EAASA,UAAUA,OACnBA,KAIkBA,gBAAXA,IAAwBA,EAAWA,KAC1CA,MAGOA,EAAJA,EAAYA,IAGfA,GAAiCA,QAA5BA,EAAUA,UAAUA,IAGrBA,IAAKA,IAAQA,GAETA,EAAMA,EAAOA,GACbA,EAAOA,EAAQA,GAGXA,IAAWA,IAKXA,GAAQA,IAASA,EAAcA,KAAUA,EAAcA,EAAQA,MAE3DA,GACAA,GAAcA,EACdA,EAAQA,GAAOA,EAAQA,GAAOA,MAE9BA,EAAQA,GAAOA,EAAcA,GAAOA,KAIxCA,EAAOA,GAAQA,EAAOA,EAAMA,EAAOA,IAGnBA,SAATA,IAEPA,EAAOA,GAAQA,GAQ/BA,OAAOA,GAIXD,QAAAA,GAAwBA,EAAQA,GAE5BE,IAAKA,GAAIA,KAAKA,GAEVA,GAAKA,EAAOA,eAAeA,GAA3BA,CAEAA,GAAIA,GAAMA,EAAGA,EAAOA,GAAIA,EAExBA,IAAIA,KAAQA,EAAOA,ODkIf,QAASC,GCtHUH,GAE3BI,GAAIA,KAcJA,OAZAA,GAAQA,EAAYA,SAACA,EAAGA,GAEhBA,EAAQA,GACRA,EAAEA,QAAQA,SAACA,GACPA,EAAMA,KAAKA,mBAAmBA,GAAKA,IAAMA,mBAAmBA,MAGhEA,EAAMA,KAAKA,mBAAmBA,GAAKA,IAAMA,mBAAmBA,MAK7DA,EAAMA,KAAKA,KD2HV,QAASC,GCjHYL,GAE7BM,GAAIA,MACAA,EAAOA,IA2BXA,OAzBAA,GAAYA,MAAMA,KAAKA,QAAQA,SAACA,GAI5BA,GAFAA,EAAMA,mBAAmBA,GAEDA,IAApBA,EAAIA,QAAQA,KAEZA,EAAWA,EAAIA,SAAUA,MAEtBA,CAEHA,GAAIA,GAAOA,EAAIA,MAAMA,KACjBA,EAAMA,EAAKA,GAAGA,OACdA,EAAQA,EAAKA,GAAGA,MAEhBA,KAAOA,IACHA,IAAOA,KAAeA,EAAKA,QAAQA,EAAWA,MAAOA,EAAWA,IAAQA,EAAWA,KACvFA,EAAWA,GAAKA,KAAKA,IAErBA,EAAWA,GAAOA,KAOvBA,ED6GC,QAASC,GCrGGP,EAAUA,GAC9BQ,MAAMA,GAEKA,wJAAwJA,KAAKA,GAE7JA,6IAA6IA,KAAKA,GAKjKR,QAAAA,GAA8BA,GAC1BS,MAAQA,4BAA4BA,KAAKA,EAAEA,WAAWA,MAAMA,iBAAiBA,KAAKA,KD4G1E,QAASC,GCrGYV,GAC7BW,MAAOA,OAAMA,UAAUA,MAAMA,KAAKA,MAAYA,GAGlDX,QAAAA,GAAuBA,GACnBY,MAAqBA,SAAdA,EAAKA,GAGhBZ,QAAAA,GAA2BA,GACvBa,MAAqBA,aAAdA,EAAKA,GAGhBb,QAAAA,GAAwBA,GACpBc,MAAOA,OAAMA,QAAUA,MAAMA,QAAQA,GAAqBA,UAAdA,EAAKA,GDyGzC,QAASC,GCrGIf,GACrBgB,MAAOA,IAAsBA,gBAARA,IAAoBA,eAAiBA,GAG9DhB,QAAAA,GAAsBA,GAClBiB,MAAeA,QAARA,IAAiBA,EAAOA,KAAKA,IAAQA,MAAMA,GAGtDjB,QAAAA,GAAqBA,GACjBkB,MAAeA,QAARA,EACDA,OAAOA,GACPA,EAAWA,EAASA,KAAKA,KAASA,SAG5ClB,QAAAA,GAA8BA,GAK1BmB,IAAKA,GAAqBA,WAAdA,EAAKA,IAAqBA,EAAIA,UAAYA,EAASA,GAC3DA,OAAOA,CAIXA,IAAIA,EAAIA,cAAgBA,EAAOA,KAAKA,EAAKA,iBAAmBA,EAAOA,KAAKA,EAAIA,YAAYA,UAAWA,iBAC/FA,OAAOA,CDuGC,ICjGRA,EACJA,KAAKA,IAAOA,IAEZA,MAAeA,UAARA,GAAqBA,EAAOA,KAAKA,EAAKA,GAIjDnB,QAAAA,GAA4BA,EAASA,GAEjCoB,MAAOA,GACFA,MAAMA,UACNA,OAAOA,SAACA,EAAKA,GACVA,MAAKA,GACEA,EAAOA,EAAIA,GAAQA,EADTA,QAElBA,GAIXpB,QAAAA,GAAqBA,EAAIA,EAAkBA,GAEvCqB,EAAYA,GAEZA,EAAWA,GAAYA,GAEvBA,IAAIA,GAAOA,SAACA,GAMRA,MAJAA,GAAQA,GAASA,EAEjBA,EAAWA,EAEJA,WAAWA,WAEdA,EAAGA,EAAMA,IAEVA,GAIPA,OAAOA,KAIXrB,QAAAA,GAA4BA,GACpBsB,GAASA,aAAaA,GAG9BtB,QAAAA,GAA4BA,GACxBuB,MAAOA,GAAIA,EAAEA,WAAaA,GAG9BvB,QAAAA,GAA4BA,GACxBwB,MAAKA,IACLA,EAAIA,WAAWA,GACRA,EAAMA,GAAKA,EAAIA,GAFPA,EAKnBxB,QAAAA,KACIyB,MAA2BA,mBAAZA,SAGnBzB,QAAAA,KACI0B,MAA0BA,mBAAXA,QAnSnB1B,GAAIA,GAASA,OAAOA,UAAUA,eAC1BA,EAAWA,OAAOA,UAAUA,SAC5BA,EAASA,KACTA,IAGJA,2DAA0DA,MAAMA,KAAKA,QAAQA,SAACA,GAC1EA,EAAWA,WAAaA,EAAOA,KAAOA,EAAKA,gBAO/BA,EAAAA,OAAMA,EAkENA,EAAAA,QAAOA,EAoBPA,EAAAA,eAAcA,EA0BdA,EAAAA,iBAAgBA,EAsChBA,EAAAA,QAAOA,EAUPA,EAAAA,cAAaA,EAQbA,EAAAA,iBAAgBA,EAIhBA,EAAAA,OAAMA,EAINA,EAAAA,WAAUA,EAIVA,EAAAA,QAAOA,EAKPA,EAAAA,SAAQA,EAIRA,EAAAA,MAAKA,EAILA,EAAAA,KAAIA,EAMJA,EAAAA,cAAaA,EAwBbA,EAAAA,YAAWA,EAWXA,EAAAA,KAAIA,EAwBJA,EAAAA,YAAWA,EAIXA,EAAAA,YAAWA,EAIXA,EAAAA,YAAWA,EAMXA,EAAAA,SAAQA,EAIRA,EAAAA,UAASA,GApSDrB,EAAAA,EAAAA,QAAAA,EAAAA,YAALD,EAAAA,EAAAA,OAAAA,EAAAA,WAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBCGP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GFyYX,GAAIiD,GAAa,WEhYrBC,QAAAA,KACIC,KAAMA,eAAgBA,IAAaA,KAAMA,IAAIA,OAAMA,yCACnDA,MAAKA,MA8EbD,MA3EIA,GAAAA,UAAAA,aAAAA,SAAaA,GACTE,MAAQA,KAASA,MAAKA,YAG1BF,EAAAA,UAAAA,GAAAA,SAAGA,EAAYA,GAAfG,GAAAA,GAAAA,IAGIA,IADqBA,gBAAVA,KAAoBA,GAAUA,KACpCA,EAAQA,KAAMA,IAAIA,OAAMA,4BAC7BA,IAAwBA,kBAAbA,GAAyBA,KAAMA,IAAIA,OAAMA,8BAUpDA,OARAA,GAAOA,QAAQA,SAACA,GAEPA,EAAKA,aAAaA,KAAQA,EAAKA,WAAWA,OAE/CA,EAAKA,WAAWA,GAAOA,KAAKA,KAIpBA,MAIhBH,EAAAA,UAAAA,KAAAA,SAAKA,GFgYO,IEhYOI,GAAnBA,GAAAA,KAAmBA,KAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,EAEfA,IAAIA,GAASA,IAEbA,OAAKA,MAAKA,aAAaA,IAEvBA,KAAKA,WAAWA,GAAOA,KAAKA,SAACA,GAGzBA,MADAA,GAASA,EAASA,MAAMA,EAAMA,GACtBA,KAAWA,IAIhBA,GAT+BA,MAa1CJ,EAAAA,UAAAA,IAAAA,SAAIA,EAAeA,GAAnBK,GAAAA,GAAAA,IAEIA,IAAKA,EAMDA,GAAKA,EAIEA,CAEHA,IAAKA,KAAKA,aAAaA,GAAQA,MAAYA,KAE3CA,MAAKA,WAAWA,GAAOA,QAAQA,SAACA,EAAIA,GAE5BA,IAAOA,SAAiBA,GAAKA,WAAWA,GAAOA,gBARhDA,MAAKA,WAAWA,OAN3BA,MAAKA,aAsBTA,OAAYA,OAIhBL,EAAAA,UAAAA,QAAAA,WAGIM,MAFAA,MAAKA,MACLA,EAAAA,IAAIA,MAAMA,kDACAA,MAGlBN,IApFajD,GAAAA,WAAUA,GALJD,EAAAA,EAAAA,OAAAA,EAAAA,WAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBFgdP,IAAI0D,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGlN,GAErD,QAASmN,KAAOF,KAAKG,YAAcF,EADnC,IAAK,GAAIG,KAAKrN,GAAOA,EAAEhJ,eAAeqW,KAAIH,EAAEG,GAAKrN,EAAEqN,GAEnDF,GAAGG,UAAYtN,EAAEsN,UACjBJ,EAAEI,UAAY,GAAIH,IGrdf7D,aAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GAEnBC,GAAAA,GAAAA,SAAAA,GAQI+D,QAAAA,KARJC,GAAAA,GAAAA,IAUQA,GAAAA,KAAAA,MARGA,KAAAA,QACHA,OAAQA,SASRA,IAAIA,GAASA,SACTA,EAAWA,SAACA,GAERA,EAAMA,GAAOA,OAAOA,KAEpBA,IAAIA,GAAIA,UACJA,EAAIA,SACJA,GACIA,MAAOA,EAAGA,QAASA,EAAGA,SAAUA,EAAGA,KAAMA,EAAGA,SAAUA,EAAGA,SAAUA,EAG3EA,GAAKA,SAAYA,EAAIA,OAAQA,GAAUA,EAAOA,EAAIA,OAASA,GAAKA,SAASA,GAEzEA,EAAKA,KAAKA,EAAKA,OAAOA,OAAQA,EAAKA,UAI3CA,MAAKA,UAAWA,EAEOA,mBAAZA,WAA4CA,mBAAVA,UAIzCA,IAAUA,UACVA,SAASA,iBAAiBA,mBAAoBA,IACxCA,EAASA,cAAgBA,UAC/BA,SAASA,iBAAiBA,sBAAuBA,IAC3CA,EAASA,iBAAmBA,UAClCA,SAASA,iBAAiBA,yBAA0BA,IAC9CA,EAASA,aAAeA,UAC9BA,SAASA,iBAAiBA,qBAAsBA,GAE3CA,aAAoBA,UACnBA,SAAUA,UAAkBA,SAAUA,WAAaA,EAGzDA,OAAOA,WAAaA,OAAOA,WAAaA,OAAOA,QAAUA,OAAOA,OAASA,GAQrFD,MAxDoCA,WAAAA,EAAAA,GAoDhCA,EAAAA,UAAAA,QAAAA,WACIE,MAAOA,MAAKA,UAGpBF,GAxDoC/D,EAAAA,WAAvBA,GAAAA,eAAcA,GAFRD,EAAAA,EAAAA,OAAAA,EAAAA,WAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBCCP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GAEnBmE,GAAAA,GAAAA,WASIC,QAAAA,GAAYA,EAAeA,EAAaA,EAAWA,EAAgBA,EAAoBA,GACnFC,KAAKA,QAAUA,EAAOA,cACtBA,KAAKA,MAAQA,EACbA,KAAKA,MAAQA,MACbA,KAAKA,OAASA,GAASA,GACvBA,KAAKA,QAAUA,GAAUA,IACzBA,KAAKA,YAAcA,GAAcA,KAgDzCD,MA7CIA,GAAAA,UAAAA,KAAAA,WACIE,MAAOA,MAAKA,OAGhBF,EAAAA,UAAAA,OAAAA,WACIG,MAAOA,MAAKA,SAGhBH,EAAAA,UAAAA,KAAAA,SAAKA,GAEDI,MAAOA,GAAQA,IAAIA,QAAQA,KAAKA,OAASA,IAClCA,EAAQA,OAAOA,eAAiBA,KAAKA,SAIhDJ,EAAAA,UAAAA,YAAAA,SAAYA,GAAZK,GAAAA,GAAAA,IAEIA,OAAOA,IAAIA,GAAAA,UAAUA,SAASA,SAACA,EAASA,GAEpCA,WAAWA,WAEPA,EAAQA,EAAKA,eAAeA,EAAKA,SAElCA,EAAKA,WAMhBL,EAAAA,UAAAA,eAAAA,SAAeA,EAAWA,GAEtBM,EAAOA,MAEPA,EAAKA,OAASA,EAAKA,QAAUA,KAAKA,QAClCA,EAAKA,WAAaA,EAAKA,YAAcA,KAAKA,WAE1CA,IAAIA,GAAMA,KAAKA,UAAUA,GACrBA,EAAMA,EAAAA,KAAKA,OAAOA,eAAeA,EAAKA,EAI1CA,OAFAA,GAAIA,QAAQA,IAAIA,EAAAA,KAAKA,YAAYA,YAAaA,EAAAA,KAAKA,YAAYA,iBAExDA,GAIfN,IA/DaD,GAAAA,KAAIA,GAFEnE,EAAAA,EAAAA,QAAAA,EAAAA,YAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBCDP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GAEnBmE,GAAAA,GAAAA,WAIIQ,QAAAA,KACIC,KAAKA,UAqKbD,MAlKIA,GAAAA,UAAAA,IAAAA,SAAIA,GAEAE,MADAA,MAAKA,OAAOA,KAAKA,GACVA,MAGXF,EAAAA,UAAAA,MAAAA,WAEIG,MADAA,MAAKA,UACEA,MAGXH,EAAAA,UAAAA,KAAAA,SAAKA,GAIDI,GAAIA,GAAOA,KAAKA,OAAOA,OAEvBA,KAAKA,EAAMA,KAAMA,IAAIA,OAAMA,mCAAqCA,EAAQA,OAASA,IAAMA,EAAQA,IAE/FA,KAAKA,EAAKA,KAAKA,GAAUA,KAAMA,IAAIA,OAAMA,iBAAmBA,EAAQA,OAASA,IAAMA,EAAQA,IAClDA,sBAAwBA,EAAKA,SAAWA,IAAMA,EAAKA,OAE5FA,OAAOA,IAIXJ,EAAAA,UAAAA,QAAAA,SAAQA,EAAeA,EAAaA,EAAcA,EAAgBA,GAI9DK,MAFAA,MAAKA,IAAIA,GAAIA,GAAAA,KAAKA,EAAQA,EAAMA,EAAUA,EAAQA,IAE3CA,MAIXL,EAAAA,UAAAA,eAAAA,WAYIM,MAVAA,MAAKA,QAAQA,OAAQA,wBACjBA,aAAgBA,eAChBA,WAAcA,SACdA,WAAcA,KACdA,cAAiBA,gBACjBA,yBAA4BA,MAC5BA,MAASA,kBACTA,YAAcA,GAAIA,OAAOA,UAAYA;GAGlCA,MAIXN,EAAAA,UAAAA,OAAAA,WAIIO,MAFAA,MAAKA,QAAQA,OAAQA,4BAEdA,MAIXP,EAAAA,UAAAA,aAAAA,SAAaA,GAiBTQ,MAfAA,MAAKA,QAAQA,MAAOA,qCAAuCA,EAAKA,aAC5DA,IAAOA,uEAAyEA,EAAKA,YACrFA,WACIA,IAAOA,uEAAyEA,EAChFA,GAAMA,EACNA,gBAAmBA,OAEvBA,eACAA,eAAkBA,YAClBA,gBAAmBA,UACnBA,WAAcA,YACdA,UAAaA,eACbA,YAAeA,IAGZA,MAIXR,EAAAA,UAAAA,iBAAAA,SAAiBA,GAEbS,EAAYA,GAAaA,IAEzBA,IAAIA,GAAOA,GAAIA,KAqBfA,OAnBAA,MAAKA,QAAQA,OAAQA,8BACjBA,cACIA,gDAEJA,eAAkBA,GAAIA,MAAKA,EAAKA,UAAyBA,IAAZA,GAAmBA,cAChEA,UAAaA,EACbA,cACIA,cAAiBA,SACjBA,YAAcA,EACdA,QAAWA,UACXA,cAAiBA,YACjBA,UAAaA,aAEjBA,GAAMA,cACNA,aAAgBA,EAAKA,cACrBA,OAAUA,SACVA,IAAOA,2EAGJA,MAIXT,EAAAA,UAAAA,oBAAAA,SAAoBA,EAAYA,GAE5BU,EAAKA,GAAMA,GAEXA,IAAIA,GAAOA,GAAIA,KAoBfA,OAlBAA,MAAKA,QAAQA,OAAQA,8BACjBA,cAAiBA,qCAAuCA,EAAKA,aAAeA,EAAWA,+BAAiCA,KACxHA,eAAkBA,GAAIA,MAAKA,EAAKA,UAAYA,MAAuBA,cACnEA,cACIA,cAAiBA,SACjBA,YAAcA,EACdA,QAAWA,UACXA,cAAiBA,YACjBA,UAAaA,YACbA,oBAAuBA,MACvBA,cAAiBA,4BAErBA,aAAgBA,EAAKA,cACrBA,GAAMA,cACNA,OAAUA,SACVA,IAAOA,2EAGJA,MAIXV,EAAAA,UAAAA,aAAAA,SAAaA,GAuBTW,MArBKA,GAaDA,KAAKA,QAAQA,OAAQA,wBACjBA,QAAWA,cACXA,kBAAqBA,cACrBA,YAAeA,eAChBA,KAfHA,KAAKA,QAAQA,OAAQA,wBACjBA,aAAgBA,4BAChBA,WAAcA,SACdA,WAAcA,KACdA,cAAiBA,6BACjBA,yBAA4BA,MAC5BA,MAASA,oBAaVA,MAIfX,IA1KaR,GAAAA,SAAQA,GAFFnE,EAAAA,EAAAA,QAAAA,EAAAA,YAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBCAP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GASnBuF,QAAAA,KAEIC,GAAIA,GAAOA,SAASA,gBASpBA,OAPKA,GAAAA,UAASA,EAAAA,QAAUA,EAAKA,QACxBA,EAAAA,WAAUA,EAAAA,SAAWA,EAAKA,SAC1BA,EAAAA,SAAQA,EAAAA,OAASA,EAAKA,OACtBA,EAAAA,WAAUA,EAAAA,SAAWA,EAAKA,SAC1BA,EAAAA,WAAUA,EAAAA,SAAWA,EAAKA,SAC1BA,EAAAA,YAAWA,EAAAA,UAAYA,EAAKA,UAE1BA,EAlBAD,EAAAA,SACAA,EAAAA,OACAA,EAAAA,UACAA,EAAAA,SACAA,EAAAA,SACAA,EAAAA,QAEKA,EAAAA,IAAGA,GATAvF,EAAAA,EAAAA,YAAAA,EAAAA,gBAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBCEP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GP4uBX,GAAIyF,GAAc,WOvtBtBC,QAAAA,GAAYA,EAAkBA,EAAoBA,GAE9CC,KAAKA,MAAQA,EACbA,KAAKA,SAAWA,EAChBA,KAAKA,UAAYA,EACjBA,KAAKA,MAAQA,KACbA,KAAKA,uBAAyBA,KAqKtCD,MAjKIA,GAAAA,UAAAA,SAAAA,WACIE,MAAOA,MAAKA,WAGhBF,EAAAA,UAAAA,QAAAA,WACIG,MAAOA,MAAKA,UAGhBH,EAAAA,UAAAA,GAAAA,WACII,MAAOA,MAAKA,WAAaA,KAAKA,UAAUA,IAG5CJ,EAAAA,UAAAA,KAAAA,WACIK,MAAOA,MAAKA,OAGhBL,EAAAA,UAAAA,KAAAA,WAEIM,IAAKA,KAAKA,UAAWA,KAAMA,IAAIA,OAAMA,uBAMrCA,OAJKA,MAAKA,QACNA,KAAKA,MAAQA,KAAKA,MAAQA,KAAKA,MAAMA,KAAKA,OAASA,MAGhDA,KAAKA,OAIhBN,EAAAA,UAAAA,MAAAA,SAAMA,GAEFO,GAAIA,KAAKA,OAASA,EAAaA,MAAOA,KAEtCA,IAAIA,IAAWA,KAAKA,WAAaA,KAAKA,UAAUA,OAASA,KAAKA,UAAUA,OAASA,IAAMA,KACxEA,KAAKA,WAAaA,KAAKA,UAAUA,WAAaA,KAAKA,UAAUA,WAAaA,GAEzFA,KAEIA,GAAIA,GAAOA,KAAKA,MAEZA,GAAKA,UAASA,EAAUA,EAAKA,SAC7BA,EAAKA,oBAAmBA,EAAUA,EAAKA,mBACvCA,EAAKA,cAAaA,EAAUA,EAAKA,aAEvCA,MAAOA,IAETA,MAAOA,IAIXP,EAAAA,UAAAA,UAAAA,WAEIQ,IAAKA,KAAKA,eAAgBA,KAAMA,IAAIA,OAAMA,4BAE1CA,IAAIA,OAASA,KAAKA,uBAAwBA,CAItCA,IAAKA,KAAKA,MAAOA,KAAMA,IAAIA,OAAMA,mBAEjCA,IAAIA,GAAWA,KAAKA,UAAUA,QAAQA,IAAIA,gBAAgBA,MAAMA,qBAAqBA,EAErFA,KAAKA,EAAUA,KAAMA,IAAIA,OAAMA,uBAE/BA,IAAIA,GAAQA,KAAKA,MAAMA,WAAWA,MAAMA,EAAYA,kBAAoBA,EAKxEA,IAHwBA,KAApBA,EAAMA,GAAGA,QAAeA,EAAMA,QAC9BA,EAAMA,EAAMA,OAASA,GAAGA,QAAUA,EAAYA,mBAAmBA,EAAMA,MAEvEA,EAAMA,OAASA,EAAGA,KAAMA,IAAIA,OAAMA,mBPwsB9B,IOpsBJA,GAAaA,EAAYA,OAAOA,EAAMA,QAASA,KAAKA,UAAUA,OAAQA,KAAKA,UAAUA,WAIzFA,MAAKA,uBAAyBA,EAAMA,IAAIA,SAACA,EAAaA,GAElDA,GAAIA,GAASA,EAAWA,OAAOA,SAASA,GAAGA,MAE3CA,OAAOA,GAAYA,OAAOA,EAAMA,KAMxCA,MAAOA,MAAKA,wBAOhBR,EAAAA,UAAAA,cAAAA,WAEIS,MAAOA,MAAKA,YAAYA,IAAIA,SAACA,GACzBA,MAAOA,GAAIA,UAKTT,EAAAA,UAAAA,eAAVA,SAAyBA,GACrBU,MAAOA,MAAKA,kBAAkBA,QAAQA,GAAeA,IAG/CV,EAAAA,UAAAA,gBAAVA,WACIW,MAAOA,MAAKA,UAAUA,QAAQA,IAAIA,EAAYA,cAAgBA,IAGxDX,EAAAA,UAAAA,aAAVA,WACIY,MAAOA,MAAKA,eAAeA,EAAYA,uBAGjCZ,EAAAA,UAAAA,cAAVA,WACIa,MAAOA,MAAKA,eAAeA,EAAYA,wBAGjCb,EAAAA,UAAAA,QAAVA,WACIc,MAAOA,MAAKA,eAAeA,EAAYA,kBAUpCd,EAAAA,OAAPA,SAAcA,EAAcA,EAAgBA,GAExCe,EAASA,GAAUA,IACnBA,EAAaA,GAAcA,KAE3BA,EAAOA,EAAKA,QAAQA,MAAOA,GAE3BA,IAAIA,GAAUA,GAAIA,GAAAA,UAAUA,SACxBA,EAAiBA,EAAKA,MAAMA,EAAYA,eACxCA,EAAeA,EAAeA,OAASA,EAAKA,EAAeA,QAAUA,EAgBzEA,OAdAA,GAAOA,EAAeA,KAAKA,EAAYA,gBAEtCA,GAAeA,IACXA,MAAMA,MACNA,QAAQA,SAACA,GAENA,GAAIA,GAAQA,EAAOA,OAAOA,MAAMA,EAAYA,iBACxCA,EAAMA,EAAMA,QAAQA,OACpBA,EAAQA,EAAMA,KAAKA,EAAYA,iBAAiBA,MAEhDA,IAAKA,EAAQA,OAAOA,EAAKA,KAI9BA,GAAIA,GAAYA,KAAMA,EAAAA,OAAOA,eAAeA,GAC/CA,QAASA,EACTA,OAAQA,EACRA,WAAYA,IACZA,IArLDf,EAAAA,YAAcA,eACdA,EAAAA,gBAAkBA,mBAClBA,EAAAA,qBAAuBA,kBACvBA,EAAAA,sBAAwBA,oCACxBA,EAAAA,gBAAkBA,IAClBA,EAAAA,cAAgBA,OAChBA,EAAAA,kBAAoBA,KAmL/BA,IA3LagB,GAAAA,YAAWA,GALL1G,EAAAA,EAAAA,OAAAA,EAAAA,WAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBCGP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GAEnB0G,GAAIA,IAAkBA,MAAOA,OAAQA,MAAOA,SAAUA,QAASA,UAAWA,QAE1EA,EAAAA,SAAAA,GAAAC,QAAAA,KAA4BC,EAAAA,MAAAA,KAAAA,WAEjBA,KAAAA,QACHA,cAAeA,gBACfA,eAAgBA,iBAChBA,aAAcA,gBAwKtBD,MA7K4BA,WAAAA,EAAAA,GAQxBA,EAAAA,UAAAA,YAAAA,SAAYA,GAAZE,GAAAA,GAAAA,KAEQA,EAAMA,GAAIA,GAAAA,YAAYA,EAE1BA,OAAOA,IAAIA,GAAAA,UAAUA,SAASA,SAACA,GAG3BA,EAAKA,KAAKA,EAAKA,OAAOA,cAAeA,GAErCA,EAAQA,EAAKA,cAAcA,MAG1BA,KAAKA,SAACA,GAIHA,MAFAA,GAAeA,UAAIA,EAAOA,cAAcA,GAEjCA,EAASA,SAGnBA,KAAKA,SAACA,GAIHA,GAFAA,EAAWA,MAAIA,GAEVA,EAAIA,KAAMA,KAAMA,GAAOA,UAAUA,GAAIA,OAAMA,oCAAqCA,EAIrFA,OAFAA,GAAKA,KAAKA,EAAKA,OAAOA,eAAgBA,GAE/BA,IAvBRA,SA0BIA,SAACA,GASJA,KAPKA,GAAEA,cAEHA,EAAIA,EAAOA,UAAUA,EAAGA,IAG5BA,EAAKA,KAAKA,EAAKA,OAAOA,aAAcA,GAE9BA,KAMRF,EAAAA,UAAAA,cAAVA,SAAwBA,GACpBG,MAAOA,GAAAA,UAAUA,OAAOA,KAAKA,KAAMA,IAShCH,EAAAA,UAAPA,SAAiBA,EAASA,GAEtBI,GAAIA,GAAmBA,CAWvBA,OARKA,GAAMA,eAAeA,gBAAmBA,EAAMA,eAAeA,qBAE9DA,EAAMA,YAAcA,EACpBA,EAAMA,gBAAkBA,EAAMA,QAC9BA,EAAMA,QAAWA,GAAeA,EAAYA,OAAMA,IAAUA,EAAMA,iBAI/DA,GAWJJ,EAAAA,cAAPA,SAAqBA,GAEjBK,GAAIA,EAAAA,KAAKA,MAAMA,WAAWA,EAASA,OAAQA,MAAOA,GAASA,OAE3DA,IAAIA,GAAOA,EAEPA,GAASA,eAAeA,eAAcA,EAAOA,EAAoBA,WACjEA,EAASA,eAAeA,eAAcA,EAAOA,EAAoBA,WACjEA,EAASA,eAAeA,eAAcA,EAAOA,EAAoBA,UAAEA,SACnEA,EAASA,eAAeA,mBAAkBA,EAAOA,EAAwBA,eAEzEA,EAASA,eAAeA,UAASA,EAAOA,EAAeA,KAAEA,KAAKA,IAElEA,IAAIA,GAAQA,GAAIA,GAAAA,UAAUA,UAAUA,EAAMA,EAI1CA,OAFIA,GAASA,eAAeA,UAASA,EAAYA,KAAIA,EAAeA,MAE7DA,GAUJL,EAAAA,eAAPA,SAAsBA,EAAoBA,GAItCM,MAFAA,GAAOA,MAEAA,GAAIA,GAAAA,UAAUA,UAAUA,EAAYA,IAIxCN,EAAAA,cAAPA,SAAqBA,EAAsBA,GAEvCO,EAAOA,KAEPA,IAAIA,GAAOA,EAAKA,KAGZA,EAAMA,GAAIA,GAAAA,UAAUA,SAASA,EAAOA,EAAAA,KAAKA,MAAMA,UAAWA,GAAOA,KAAMA,OAE3EA,KAAKA,EAAIA,IAAKA,KAAMA,IAAIA,OAAMA,qBAE9BA,IADKA,EAAIA,SAAQA,EAAIA,OAASA,OAC1BA,EAAIA,QAAUA,EAAeA,QAAQA,EAAIA,QAAUA,EAAGA,KAAMA,IAAIA,OAAMA,2BAA6BA,EAAIA,OAK3GA,IAHKA,EAAIA,QAAQA,IAAIA,WAAWA,EAAIA,QAAQA,IAAIA,SAAUA,oBAGtDA,EAAAA,KAAKA,MAAMA,cAAcA,EAAKA,QAAUA,EAAKA,KAAMA,CAE9CA,EAAIA,QAAQA,IAAIA,iBAAiBA,EAAIA,QAAQA,IAAIA,eAAgBA,mBAEtEA,IAAIA,GAAcA,EAAIA,QAAQA,IAAIA,eAE9BA,GAAYA,QAAQA,oBAAsBA,GAE1CA,EAAOA,KAAKA,UAAUA,EAAKA,MAEpBA,EAAYA,QAAQA,qCAAuCA,KAElEA,EAAOA,EAAAA,KAAKA,MAAMA,eAAeA,EAAKA,OAmB9CA,MAbAA,GAAIA,YAAcA,UAClBA,EAAIA,KAAOA,OAEPA,EAAKA,QACLA,EAAIA,IAAMA,EAAIA,KAAOA,EAAIA,IAAIA,QAAQA,KAAOA,GAAKA,IAAMA,KAAOA,EAAAA,KAAKA,MAAMA,eAAeA,EAAKA,QAIjGA,EAAMA,GAAIA,GAAAA,UAAUA,SAASA,EAAIA,IAAKA,EAAAA,KAAKA,MAAMA,OAAOA,GAAMA,KAAMA,KAGpEA,EAAIA,KAAOA,EAAKA,KAETA,GAIfP,GA7K4BD,EAAAA,KAAKA,WAApBA,GAAAA,OAAMA,GAJA1G,EAAAA,EAAAA,OAAAA,EAAAA,WAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBCFP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GAEnBmH,GAAAA,GAAAA,WASIC,QAAAA,GAAYA,EAAkBA,GAE1BC,KAAKA,OAASA,EACdA,KAAKA,SAAWA,EAEhBA,KAAKA,gBAAgBA,KACrBA,KAAKA,kBAAkBA,KAiE/BD,MA7DIA,GAAAA,UAAAA,SAAAA,WAEIE,GAAIA,GAAUA,KAAKA,OACfA,EAAUA,KAAKA,SACfA,EAAOA,EAAQA,QAAQA,EAE3BA,SAASA,GAAQA,KAAKA,MAAQA,SAASA,GAAQA,KAAKA,iBAGxDF,EAAAA,UAAAA,MAAAA,WAEIG,MADAA,MAAKA,OAAOA,QAAQA,KAAKA,SAAUA,KAAKA,OACjCA,MAGXH,EAAAA,UAAAA,OAAAA,WAEII,MADAA,MAAKA,OAAOA,WAAWA,KAAKA,UACrBA,MAGXJ,EAAAA,UAAAA,KAAAA,WAAAK,GAAAA,GAAAA,IAEIA,OAAIA,MAAKA,SAAiBA,KAAKA,UAE/BA,KAAKA,SAAWA,GAAIA,GAAAA,UAAUA,SAASA,SAACA,EAASA,GAE7CA,EAAAA,KAAKA,MAAMA,KAAKA,SAACA,GAEbA,MAAIA,GAAKA,WAAmBA,KAE5BA,EAAKA,SAAWA,KAEhBA,EAAKA,aAELA,GAAQA,QAETA,EAAKA,iBAILA,KAAKA,WAIhBL,EAAAA,UAAAA,eAAAA,WACIM,MAAOA,MAAKA,iBAGhBN,EAAAA,UAAAA,aAAAA,WACIO,MAAOA,MAAKA,eAGhBP,EAAAA,UAAAA,kBAAAA,SAAkBA,GAEdQ,MADAA,MAAKA,gBAAkBA,EAChBA,MAGXR,EAAAA,UAAAA,gBAAAA,SAAgBA,GAEZS,MADAA,MAAKA,cAAgBA,EACdA,MAGfT,IAhFaD,GAAAA,MAAKA,GAFCnH,EAAAA,EAAAA,WAAAA,EAAAA,eAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBCKP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GAEnBmH,GAAAA,GAAAA,SAAAA,GAkCIW,QAAAA,GAAYA,EACAA,EACAA,EACAA,EACAA,EACAA,GAERC,EAAAA,KAAAA,MA1BMA,KAAAA,gBAAyBA,IACzBA,KAAAA,2BAAoCA,EACpCA,KAAAA,SAAkBA,WAOrBA,KAAAA,QACHA,gBAAiBA,kBACjBA,cAAeA,gBACfA,YAAaA,cACbA,iBAAkBA,mBAClBA,eAAgBA,iBAChBA,eAAgBA,iBAChBA,aAAcA,gBAYdA,KAAKA,QAAUA,EACfA,KAAKA,QAAUA,EACfA,KAAKA,WAAaA,EAElBA,KAAKA,OAASA,EACdA,KAAKA,QAAUA,EACfA,KAAKA,OAASA,GAAIA,GAAAA,MAAMA,KAAKA,OAAQA,KAAKA,SAAWA,YACrDA,KAAKA,MAAQA,GAAIA,GAAAA,KAAKA,KAAKA,OAAQA,KAAKA,UAuXhDD,MAza8BA,WAAAA,EAAAA,GAsD1BA,EAAAA,UAAAA,KAAAA,WACIE,MAAOA,MAAKA,OAGhBF,EAAAA,UAAAA,UAAAA,SAAUA,EAAMA,GAEZG,EAAOA,GAAQA,GACfA,EAAUA,KAEVA,IAAIA,GAAWA,GACXA,EAAqCA,IAA3BA,EAAKA,QAAQA,YAAgDA,IAA5BA,EAAKA,QAAQA,WAa5DA,OAXIA,GAAQA,YAAcA,IAASA,GAAYA,KAAKA,SAEXA,IAArCA,EAAKA,QAAQA,EAASA,aAAsBA,IAASA,GAAYA,EAASA,WAAaA,IAAMA,EAASA,aAE1GA,GAAYA,GAERA,EAAQA,WAAaA,EAAQA,YAAUA,GAAaA,EAAKA,QAAQA,KAAOA,GAAKA,IAAMA,KAEnFA,EAAQA,YAAWA,GAAYA,WAAaA,EAAQA,WACpDA,EAAQA,WAAUA,IAAaA,EAAQA,UAAYA,IAAMA,IAAMA,gBAAkBA,KAAKA,MAAMA,eAEzFA,GAIXH,EAAAA,UAAAA,QAAAA,SAAQA,GAUJI,MAFAA,GAAUA,MAEHA,KAAKA,UAAUA,EAASA,mBAAqBA,IAAMA,EAAAA,KAAKA,MAAMA,gBAC7DA,cAAiBA,OACjBA,aAAgBA,EAAQA,aAAeA,GACvCA,UAAaA,KAAKA,QAClBA,MAASA,EAAQA,OAASA,GAC1BA,SAAYA,EAAQA,SAAWA,GAC/BA,QAAWA,EAAQA,SAAWA,GAC9BA,OAAUA,EAAQA,QAAUA,MAC3BA,WAAWA,KAIxBJ,EAAAA,UAAAA,qBAAAA,SAAqBA,GAEjBK,GAAIA,GAAKA,EAAAA,KAAKA,MAAMA,iBAAiBA,EAAIA,MAAMA,KAAKA,UAAUA,IAC1DA,EAAQA,EAAGA,mBAAqBA,EAAGA,KAEvCA,IAAIA,EAAOA,CACPA,GAAIA,GAAiBA,GAAIA,OAAMA,EAE/BA,MADAA,GAAEA,MAAQA,EAAGA,MACPA,EAGVA,MAAOA,IAIXL,EAAAA,UAAAA,SAAAA,WAEIM,MAAOA,MAAKA,wBACPA,KAAKA,WACFA,OAAOA,IAFRA,SAIIA,WACHA,OAAOA,KAKnBN,EAAAA,UAAAA,MAAAA,SAAMA,GAANO,GAAAA,GAAAA,IAWIA,GAAUA,MAEVA,EAAQA,SAAWA,EAAQA,WAAYA,CAEvCA,IAAIA,IACAA,iBAAoBA,EAASA,gBAC7BA,kBAAqBA,EAAQA,SAAWA,EAASA,yBAA2BA,EAASA,iBAqBzFA,OAlBKA,GAAQA,KAOFA,EAAQA,OAEfA,EAAKA,WAAaA,qBAClBA,EAAKA,KAAOA,EAAQA,KACpBA,EAAKA,aAAeA,EAAQA,cAT5BA,EAAKA,WAAaA,WAClBA,EAAKA,SAAWA,EAAQA,SACxBA,EAAKA,SAAWA,EAAQA,SACxBA,EAAKA,UAAYA,EAAQA,WAAaA,IAWtCA,EAAQA,aAAYA,EAAKA,YAAcA,EAAQA,YAE5CA,KAAKA,cAAcA,EAASA,eAAgBA,GAAMA,KAAKA,SAACA,GAQ3DA,MANAA,GAAKA,MACAA,QAAQA,EAAIA,QACZA,YAAYA,EAAQA,UAEzBA,EAAKA,KAAKA,EAAKA,OAAOA,iBAAkBA,GAEjCA,IARJA,SAUEA,SAACA,GAMNA,KAJAA,GAAKA,OAAOA,QAEZA,EAAKA,KAAKA,EAAKA,OAAOA,eAAgBA,GAEhCA,KAMdP,EAAAA,UAAAA,QAAAA,WAAAQ,GAAAA,GAAAA,KAEQA,EAAqCA,GAAIA,GAAAA,UAAUA,SAASA,SAACA,EAASA,GAEtEA,MAAIA,GAAKA,OAAOA,WACLA,EAAQA,EAAKA,oBAGxBA,EAAKA,OAAOA,YAGZA,YAAWA,WAKPA,MAHAA,GAAAA,KAAKA,IAAIA,MAAMA,6DAA8DA,EAAKA,MAAMA,cAAeA,kBAAmBA,EAAKA,MAAMA,eAAgBA,KAGhJA,EAAKA,MAAMA,eACXA,EAAKA,MAAMA,oBACXA,EAAKA,OAAOA,eAEjBA,GAAQA,EAAKA,cAAcA,EAASA,gBAChCA,WAAcA,gBACdA,cAAiBA,EAAKA,MAAMA,eAC5BA,iBAAoBA,EAASA,gBAC7BA,kBAAqBA,EAAKA,MAAMA,WAAaA,EAASA,yBAA2BA,EAASA,oBAN1DA,EAAOA,GAAIA,OAAMA,0CADTA,EAAOA,GAAIA,OAAMA,8BADtBA,EAAOA,GAAIA,OAAMA,8BAWzDA,EAAKA,mBAIZA,OAAOA,GAAQA,KAAKA,SAACA,GAGjBA,GAAIA,GAAOA,EAAIA,MAAQA,EAAIA,OAAQA,CAE/BA,GAAIA,GAAOA,EAAIA,MAIfA,IAFAA,EAAAA,KAAKA,IAAIA,KAAKA,0CAA2CA,IAEpDA,EAAKA,gBAAkBA,EAAKA,aAC7BA,KAAMA,GAAAA,KAAKA,OAAOA,UAAUA,GAAIA,OAAMA,4BAA6BA,EAGvEA,GAAKA,MAAMA,QAAQA,GACnBA,EAAKA,OAAOA,SAMhBA,MAFAA,GAAKA,KAAKA,EAAKA,OAAOA,eAAgBA,GAE/BA,IApBJA,SAsBEA,SAACA,GAWNA,KATAA,GAAIA,EAAAA,KAAKA,OAAOA,UAAUA,GAEtBA,EAAKA,2BACLA,EAAKA,OAAOA,QAGhBA,EAAKA,KAAKA,EAAKA,OAAOA,gBAAiBA,GACvCA,EAAKA,KAAKA,EAAKA,OAAOA,aAAcA,GAE9BA,KASdR,EAAAA,UAAAA,OAAAA,WAAAS,GAAAA,GAAAA,IAIIA,OAFAA,MAAKA,OAAOA,QAELA,KAAKA,cAAcA,EAASA,iBAC/BA,MAAOA,KAAKA,MAAMA,gBACnBA,KAAKA,SAACA,GAOLA,MALAA,GAAKA,OAAOA,SACZA,EAAKA,OAAOA,QAEZA,EAAKA,KAAKA,EAAKA,OAAOA,cAAeA,GAE9BA,IATJA,SAWEA,SAACA,GAONA,KALAA,GAAKA,OAAOA,SAEZA,EAAKA,KAAKA,EAAKA,OAAOA,gBAAiBA,GACvCA,EAAKA,KAAKA,EAAKA,OAAOA,YAAaA,GAE7BA,KAMdT,EAAAA,UAAAA,eAAAA,SAAeA,EAAiBA,GAAhCU,GAAAA,GAAAA,IAIIA,OAFAA,GAAUA,MAENA,EAAQA,cAAsBA,EAAAA,UAAUA,SAASA,QAAQA,GAEtDA,KACFA,wBACAA,KAAKA,WAKFA,MAHAA,GAAQA,QAAQA,IAAIA,gBAAiBA,EAAKA,eAC1CA,EAAQA,IAAMA,EAAKA,UAAUA,EAAQA,KAAMA,WAAWA,IAE/CA,KAMnBV,EAAAA,UAAAA,YAAAA,SAAYA,EAAiBA,GAA7BW,GAAAA,GAAAA,IAEIA,OAAOA,MACFA,eAAeA,EAASA,GACxBA,KAAKA,SAACA,GACHA,MAAOA,GAAKA,QAAQA,YAAYA,KAHjCA,SAKIA,SAACA,GAGJA,IAAKA,EAAEA,cAAgBA,EAAEA,YAAYA,YAAkDA,KAAnCA,EAAEA,YAAYA,WAAWA,OAAgBA,KAAMA,EAInGA,OAFAA,GAAKA,MAAMA,oBAEJA,EAAKA,YAAYA,EAASA,MAS7CX,EAAAA,UAAAA,KAAAA,SAAKA,EAAYA,GAEbY,IAKIA,MAFAA,GAAMA,KAAKA,UAAUA,GAAMA,WAAWA,IAE/BA,KAAKA,YAAYA,EAAAA,KAAKA,OAAOA,cAAcA,EAAKA,GAAUA,GAEnEA,MAAOA,GACLA,MAAOA,GAAAA,UAAUA,SAASA,OAAOA,KAKzCZ,EAAAA,UAAAA,IAAAA,SAAIA,EAAYA,GAGZa,MAFAA,GAAUA,MACVA,EAAQA,OAASA,MACVA,KAAKA,KAAKA,EAAKA,IAG1Bb,EAAAA,UAAAA,KAAAA,SAAKA,EAAYA,GAGbc,MAFAA,GAAUA,MACVA,EAAQA,OAASA,OACVA,KAAKA,KAAKA,EAAKA,IAG1Bd,EAAAA,UAAAA,IAAAA,SAAIA,EAAYA,GAGZe,MAFAA,GAAUA,MACVA,EAAQA,OAASA,MACVA,KAAKA,KAAKA,EAAKA,IAG1Bf,EAAAA,UAAAA,UAAAA,SAASA,EAAYA,GAGjBgB,MAFAA,GAAUA,MACVA,EAAQA,OAASA,SACVA,KAAKA,KAAKA,EAAKA,IAGhBhB,EAAAA,UAAAA,cAAVA,SAAwBA,EAAaA,GAEjCiB,MAAOA,MAAKA,KAAKA,GACbA,eAAeA,EACfA,KAAMA,EACNA,OAAQA,OACRA,SACIA,cAAiBA,SAAWA,KAAKA,UACjCA,eAAgBA,wCAMlBjB,EAAAA,UAAAA,sBAAVA,WAEIkB,MAAIA,MAAKA,sBAA8BA,EAAAA,UAAUA,SAASA,QAAQA,MAC3DA,KAAKA,WAINlB,EAAAA,UAAAA,oBAAVA,WAEImB,MAAQA,MAAKA,MAAMA,qBAAuBA,KAAKA,OAAOA,YAIhDnB,EAAAA,UAAAA,gBAAVA,WAAAoB,GAAAA,GAAAA,IAIIA,OAFAA,GAAAA,KAAKA,IAAIA,KAAKA,uEAEPA,KAAKA,OAAOA,OAAOA,KAAKA,WAE3BA,IAAKA,EAAKA,sBACNA,KAAMA,IAAIA,OAAMA,qCAGpBA,OAAOA,SAMLpB,EAAAA,UAAAA,QAAVA,WACIqB,GAAIA,GAASA,KAAKA,QAAUA,IAAMA,KAAKA,UACvCA,OAAuBA,kBAARA,MAAsBA,KAAKA,GAAUA,GAAIA,QAAOA,GAAQA,SAASA,WAG1ErB,EAAAA,UAAAA,YAAVA,WACIsB,GAAIA,GAAQA,KAAKA,MAAMA,aACvBA,OAAOA,MAAKA,MAAMA,aAAeA,EAAQA,IAAMA,EAAQA,KApa1CtB,EAAAA,WAAoBA,WACpBA,EAAAA,YAAqBA,OACrBA,EAAAA,gBAAyBA,KACzBA,EAAAA,iBAA0BA,KAC1BA,EAAAA,yBAAkCA,OAClCA,EAAAA,eAAwBA,uBACxBA,EAAAA,gBAAyBA,wBACzBA,EAAAA,mBAA4BA,2BAgajDA,GAza8BX,EAAAA,KAAKA,WAAtBA,GAAAA,SAAQA,GAFFnH,EAAAA,EAAAA,WAAAA,EAAAA,eAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBCHP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GAGnBqJ,GAAAA,GAAAA,SAAAA,GAsBIC,QAAAA,GAAYA,EAAoCA,GAE5CC,EAAAA,KAAAA,MAtBMA,KAAAA,iBAAmBA,KAUtBA,KAAAA,QACHA,aAAcA,eACdA,cAAeA,gBACfA,YAAaA,cACbA,aAAcA,eACdA,WAAYA,aACZA,iBAAkBA,mBAClBA,eAAgBA,kBAOhBA,KAAKA,eAAiBA,EACtBA,KAAKA,UAAYA,EAEjBA,KAAKA,QAAUA,KACfA,KAAKA,iBACLA,KAAKA,SAAWA,KAChBA,KAAKA,cAAgBA,KAyR7BD,MAzTkCA,WAAAA,EAAAA,GAoC9BA,EAAAA,UAAAA,MAAAA,WAEIE,MAAOA,MAAKA,eACLA,KAAKA,cAAcA,IACnBA,KAAKA,cAAcA,cACnBA,KAAKA,cAAcA,aAAaA,eAChCA,KAAKA,cAAcA,aAAaA,SAI3CF,EAAAA,UAAAA,gBAAAA,SAAgBA,GAUZG,MARAA,MAAKA,gBAELA,KAAKA,cAAgBA,EAEhBA,KAAKA,SAASA,KAAKA,qBAExBA,KAAKA,cAEEA,MAIXH,EAAAA,UAAAA,aAAAA,WACII,MAAOA,MAAKA,eAQhBJ,EAAAA,UAAAA,SAAAA,SAASA,GAELK,MAAIA,MAAKA,QACEA,KAAKA,MAAMA,GAEXA,KAAKA,UAAUA,IAK9BL,EAAAA,UAAAA,UAAAA,SAAUA,GAENM,MADAA,MAAKA,cAAgBA,KAAKA,cAAcA,OAAOA,GACxCA,MAGXN,EAAAA,UAAAA,UAAAA,SAAUA,GAENO,MADAA,MAAKA,cAAgBA,EACdA,MAGXP,EAAAA,UAAAA,UAAAA,SAAUA,GAAVQ,GAAAA,GAAAA,IAQIA,OANAA,GAAUA,MAENA,EAAQA,QAAQA,KAAKA,UAAUA,EAAQA,QAE3CA,KAAKA,gBAE6BA,GAAIA,GAAAA,UAAUA,SAASA,SAACA,EAASA,GAE/DA,IAAKA,EAAKA,gBAAkBA,EAAKA,cAAcA,OAAQA,KAAMA,IAAIA,OAAMA,uBAEvEA,GAAQA,EAAKA,UAAUA,KAAKA,8BACxBA,MACIA,aAAcA,EAAKA,uBACnBA,cACIA,cAAeA,gBAK5BA,KAAKA,SAACA,GAKDA,MAHAA,GAAKA,gBAAgBA,EAAKA,QACrBA,KAAKA,EAAKA,OAAOA,iBAAkBA,GAEjCA,IAlBmBA,SAoBrBA,SAACA,GAONA,KALAA,GAAIA,EAAAA,KAAKA,OAAOA,UAAUA,GAE1BA,EAAKA,QACAA,KAAKA,EAAKA,OAAOA,eAAgBA,GAEhCA,KAMlBR,EAAAA,UAAAA,MAAAA,SAAMA,GAANS,GAAAA,GAAAA,IAQIA,OANAA,GAAUA,MAENA,EAAQA,QAAQA,KAAKA,UAAUA,EAAQA,QAE3CA,KAAKA,gBAE6BA,GAAIA,GAAAA,UAAUA,SAASA,SAACA,EAASA,GAE/DA,IAAKA,EAAKA,QAASA,KAAMA,IAAIA,OAAMA,4BAEnCA,KAAKA,EAAKA,gBAAkBA,EAAKA,cAAcA,OAAQA,KAAMA,IAAIA,OAAMA,uBAEvEA,OAAOA,GAAKA,UAAUA,IAAIA,8BAAgCA,EAAKA,cAAcA,IACzEA,MACIA,aAAcA,EAAKA,4BAK1BA,KAAKA,SAACA,GAKHA,MAHAA,GAAKA,gBAAgBA,EAAKA,QACrBA,KAAKA,EAAKA,OAAOA,aAAcA,EAAKA,QAElCA,IAlBmBA,SAqBvBA,SAACA,GAOJA,KALAA,GAAIA,EAAAA,KAAKA,OAAOA,UAAUA,GAE1BA,EAAKA,QACAA,KAAKA,EAAKA,OAAOA,WAAYA,GAE5BA,KAMlBT,EAAAA,UAAAA,OAAAA,WAAAU,GAAAA,GAAAA,IAEIA,OAAkCA,IAAIA,GAAAA,UAAUA,SAASA,SAACA,EAASA,GAE/DA,IAAKA,EAAKA,gBAAkBA,EAAKA,cAAcA,GAAIA,KAAMA,IAAIA,OAAMA,8BAEnEA,GAAQA,EAAKA,UAALA,UAAsBA,8BAAgCA,EAAKA,cAAcA,OAElFA,KAAKA,SAACA,GAKDA,MAHAA,GAAKA,QACAA,KAAKA,EAAKA,OAAOA,cAAeA,GAE9BA,IAXmBA,SAarBA,SAACA,GAMNA,KAJAA,GAAIA,EAAAA,KAAKA,OAAOA,UAAUA,GAE1BA,EAAKA,KAAKA,EAAKA,OAAOA,YAAaA,GAE7BA,KAUlBV,EAAAA,UAAAA,MAAAA,WAIIW,MAHAA,MAAKA,gBACDA,KAAKA,SAAWA,KAAKA,SAASA,KAAKA,QAAQA,aAAaA,QAASA,KAAKA,cAAcA,aAAaA,UACrGA,KAAKA,cAAgBA,KACdA,MAGXX,EAAAA,UAAAA,QAAAA,WAMIY,MAJAA,MAAKA,QAELA,EAAAA,KAAKA,IAAIA,KAAKA,2CAEPA,EAAAA,UAAMA,QAAOA,KAAAA,OAIdZ,EAAAA,UAAAA,qBAAVA,WAAAa,GAAAA,GAAAA,IAEIA,OAAOA,MAAKA,cAAcA,IAAIA,SAACA,GAC3BA,MAAOA,GAAKA,UAAUA,UAAUA,MAK9Bb,EAAAA,UAAAA,YAAVA,WAAAc,GAAAA,GAAAA,IAIIA,IAFAA,KAAKA,iBAEAA,KAAKA,QAASA,KAAMA,IAAIA,OAAMA,4BAEnCA,IAAIA,GAAmDA,IAA/BA,KAAKA,cAAcA,UAAoBA,KAAKA,gBAQpEA,OANAA,MAAKA,SAAWA,WAAWA,WAEvBA,EAAKA,WAENA,GAEIA,MAIDd,EAAAA,UAAAA,cAAVA,WAIIe,MAFAA,cAAaA,KAAKA,UAEXA,MAIDf,EAAAA,UAAAA,SAAVA,SAAmBA,GAEfgB,IAAKA,KAAKA,QAASA,KAAMA,IAAIA,OAAMA,4BAEnCA,IAAIA,KAAKA,cAAcA,aAAaA,cAAeA,CAE/CA,GAAIA,GAASA,KAAKA,eAAeA,WAEjCA,GAAUA,EAAOA,WAAWA,QAAQA,EAASA,KAAKA,cAAcA,aAAaA,eACzEA,YAAYA,EACZA,YAAaA,SACbA,UAAWA,IACXA,KAAMA,QAKdA,MAAOA,IAIDhB,EAAAA,UAAAA,QAAVA,SAAkBA,GAIdiB,MAFAA,MAAKA,KAAKA,KAAKA,OAAOA,aAAcA,KAAKA,SAASA,IAE3CA,MAIDjB,EAAAA,UAAAA,mBAAVA,WAAAkB,GAAAA,GAAAA,IAEIA,KAAKA,KAAKA,QAASA,KAAMA,IAAIA,OAAMA,4BAEnCA,IAAIA,GAASA,KAAKA,eAAeA,WAsBjCA,OApBAA,MAAKA,QAAUA,EAAOA,MAClBA,KAAKA,EACLA,cAAeA,KAAKA,cAAcA,aAAaA,gBAGnDA,KAAKA,QAAQA,QAEbA,KAAKA,QAAQA,WACTA,QAASA,KAAKA,cAAcA,aAAaA,QACzCA,QAASA,SAACA,EAASA,EAAKA,GAEpBA,EAAAA,KAAKA,IAAIA,KAAKA,yCAA0CA,GACxDA,EAAKA,QAAQA,IAGjBA,QAASA,WACLA,EAAAA,KAAKA,IAAIA,KAAKA,6CAIfA,MAIflB,GAzTkCD,EAAAA,KAAKA,WAA1BA,GAAAA,aAAYA,GAHNrJ,EAAAA,EAAAA,eAAAA,EAAAA,mBAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBCHP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GAEnByK,GAAAA,GAAAA,SAAAA,GAKIC,QAAAA,GAAYA,GACRC,EAAAA,KAAAA,MACAA,KAAKA,QAAUA,EACfA,KAAKA,WAAaA,EAAAA,UAAUA,QAAQA,WAiB5CD,MAzBgCA,WAAAA,EAAAA,GAW5BA,EAAAA,UAAAA,MAAAA,aAEAA,EAAAA,UAAAA,UAAAA,SAAUA,GACNE,KAAKA,GAAGA,WAAaA,EAAQA,QAASA,EAAQA,UAGlDF,EAAAA,UAAAA,YAAAA,SAAYA,GACRG,KAAKA,IAAIA,WAAaA,EAAQA,UAGlCH,EAAAA,UAAAA,eAAAA,SAAeA,EAAKA,GAChBI,KAAKA,KAAKA,WAAaA,EAASA,EAAKA,MAAOA,IAGpDJ,GAzBgCD,EAAAA,KAAKA,WAAxBA,GAAAA,WAAUA,CA2BvBA,IAAAA,GAAAA,WAIIM,QAAAA,KACIC,KAAKA,WAAaA,EAAAA,UAAUA,QAAQA,WAO5CD,MAJIA,GAAAA,UAAAA,KAAAA,SAAKA,GACDE,MAAOA,IAAIA,GAAWA,IAG9BF,IAZaN,GAAAA,kBAAiBA,GA7BXzK,EAAAA,EAAAA,SAAAA,EAAAA,aAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBCDP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GAEnByK,GAAAA,GAAAA,WAKIS,QAAAA,GAAYA,GAHJC,KAAAA,UAAmBA,EAIvBA,KAAKA,WAAaA,EAClBA,KAAKA,MAAQA,GAAIA,GAAAA,kBAOzBD,MAJIA,GAAAA,UAAAA,UAAAA,WACIE,MAAOA,MAAKA,SAAWA,KAAKA,MAAQA,EAAAA,UAAUA,SAGtDF,IAdaT,GAAAA,cAAaA,GAFPzK,EAAAA,EAAAA,SAAAA,EAAAA,aAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBCUP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAEfC,GAAAA,GAAAA,WAgBIqL,QAAAA,GAAYA,GAWRC,EAAUA,MAEVA,EAAAA,UAAUA,MAEVA,KAAKA,cAAgBA,GAAIA,GAAAA,MAAMA,SAE/BA,KAAKA,OAASA,GAAIA,GAAAA,KAAKA,MAA8BA,mBAAjBA,cAA+BA,gBAA4BA,EAAQA,aAEvGA,KAAKA,OAASA,GAAIA,GAAAA,SAASA,MAAMA,KAAKA,OAAQA,oBAE9CA,KAAKA,QAAUA,EAAQA,YAAcA,GAAIA,GAAAA,KAAKA,WAAWA,KAAKA,eAAiBA,GAAIA,GAAAA,KAAKA,OAExFA,KAAKA,UAAYA,GAAIA,GAAAA,SAASA,SAASA,KAAKA,QAASA,KAAKA,OAAQA,KAAKA,OAAQA,EAAQA,OAAQA,EAAQA,OAAQA,EAAQA,WAEvHA,KAAKA,eAAiBA,GAAIA,GAAAA,OAAOA,cAAcA,EAAQA,eAoC/DD,MA9BIA,GAAAA,UAAAA,SAAAA,WACIE,MAAOA,MAAKA,WAGhBF,EAAAA,UAAAA,MAAAA,WACIG,MAAOA,MAAKA,QAGhBH,EAAAA,UAAAA,mBAAAA,WACII,MAAOA,IAAIA,GAAAA,aAAaA,aAAaA,KAAKA,eAAgBA,KAAKA,YAGnEJ,EAAAA,UAAAA,qBAAAA,WACIK,MAAOA,IAAIA,GAAAA,KAAKA,gBAGpBL,EAAAA,UAAAA,iBAAAA,WACIM,MAAOA,IAAIA,GAAAA,KAAKA,YAGpBN,EAAAA,UAAAA,IAAAA,WACIO,MAAOA,GAAAA,KAAKA,KAGhBP,EAAAA,UAAAA,MAAAA,WACIQ,MAAOA,GAAAA,KAAKA,OAGhBR,EAAAA,UAAAA,aAAAA,WAAiBS,MAAOA,MAAKA,eAzEtBT,EAAAA,QAAUA,QAEVA,EAAAA,QACHA,QAASA,2CACTA,WAAYA,oCAuEpBA,IA7EarL,GAAAA,IAAGA,GAFDD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBAmFP,IAAIpO,GAAIoO,YAAYgM,IAAIC,UAAU7V,KAEZ,mBAAX8V,SAAyBA,OAAOC,IAEvCD,QAAQ,UAAW,SAASE,GAExB,MADAxa,GAAEya,QAAUD,EACLpM,YAAYgM,MAGE,gBAAXM,SAAuBA,OAAOC,UAE5C3a,EAAEya,QAAUG,QAAQ,UACpB5a,EAAE6a,SAAgC,mBAAd,SAA4BC,QAAUF,QAAQ,eAAeE,QACjF9a,EAAE+a,OAASH,QAAQ,cACnB5a,EAAEgb,SAAWhb,EAAE+a,OAAgB,QAC/B/a,EAAEib,UAAYjb,EAAE+a,OAAiB,SACjC/a,EAAEkb,SAAWlb,EAAE+a,OAAgB,QAE/BL,OAAOC,QAAUvM,YAAYgM,IC3GjC,IAAOhM,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GAEnB0G,GAAAA,GAAAA,SAAAA,GAIIoG,QAAAA,GAAYA,GACRC,EAAAA,KAAAA,MACAA,KAAKA,UAAYA,EAiBzBD,MAvBgCA,WAAAA,EAAAA,GASlBA,EAAAA,UAAAA,cAAVA,SAAwBA,GAAxBE,GAAAA,GAAAA,IAEIA,OAAOA,IAAIA,GAAAA,UAAUA,SAASA,SAACA,GAE3BA,EAAAA,KAAKA,IAAIA,MAAMA,cAAeA,EAAQA,OAAQA,EAAQA,IAEtDA,IAAIA,GAAOA,EAAKA,UAAUA,KAAKA,EAE/BA,GAAQA,EAAKA,YAAYA,OAMrCF,GAvBgCpG,EAAAA,OAAnBA,GAAAA,WAAUA,GAFJ1G,EAAAA,EAAAA,OAAAA,EAAAA,WAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,gBCGP,IAAOA,cAAP,SAAOA,GAAYA,GAAAA,IAAAA,SAAAA,GAAIC,GAAAA,IAAAA,SAAAA,GAEnBmH,GAAAA,GAAAA,WAQI8F,QAAAA,GAAYA,EAAkBA,GAE1BC,KAAKA,OAASA,EACdA,KAAKA,SAAWA,EAuGxBD,MAnGIA,GAAAA,UAAAA,YAAAA,WACIE,MAAOA,MAAKA,OAAOA,cAGvBF,EAAAA,UAAAA,aAAAA,WACIG,MAAOA,MAAKA,OAAOA,eAGvBH,EAAAA,UAAAA,UAAAA,WACII,MAAOA,MAAKA,OAAOA,YAGvBJ,EAAAA,UAAAA,KAAAA,WAEIK,MAAOA,MAAKA,OAAOA,QAAQA,KAAKA,YACxBA,WAAYA,GACZA,aAAcA,GACdA,WAAYA,EACZA,cAAeA,GACfA,yBAA0BA,IAKtCL,EAAAA,UAAAA,QAAAA,SAAQA,GAEJM,GAAIA,GAAcA,KAAKA,MAWvBA,OATAA,GAAWA,EAAAA,KAAKA,MAAMA,UAAWA,EAAaA,GAE9CA,EAASA,YAAcA,KAAKA,MAA+BA,IAAtBA,EAASA,WAC9CA,EAASA,0BAA4BA,KAAKA,MAA6CA,IAApCA,EAASA,yBAE5DA,EAAAA,KAAKA,IAAIA,KAAKA,4CAA6CA,EAAUA,SAAUA,GAE/EA,KAAKA,OAAOA,QAAQA,KAAKA,SAAUA,GAE5BA,MAOXN,EAAAA,UAAAA,iBAAAA,WAEIO,GAAIA,GAAWA,KAAKA,MACpBA,OAAQA,GAASA,aAAeA,EAAKA,iBAAoBA,EAASA,YAAcA,EAAKA,kBAAoBA,KAAKA,OAOlHP,EAAAA,UAAAA,kBAAAA,WAEIQ,MAAQA,MAAKA,OAAOA,0BAA4BA,KAAKA,OAIzDR,EAAAA,UAAAA,kBAAAA,WAEIS,MAAOA,MAAKA,SACRA,aAAcA,GACdA,WAAYA,KASpBT,EAAAA,UAAAA,oBAAAA,WAUIU,MARAA,MAAKA,SACDA,WAAYA,EAAKA,gBACjBA,aAAcA,GACdA,WAAYA,EACZA,cAAeA,GACfA,yBAA0BA,IAGvBA,MAIXV,EAAAA,UAAAA,YAAAA,SAAYA,GAERW,MAAOA,MAAKA,SAASA,SAAUA,KAInCX,EAAAA,UAAAA,SAAAA,WAEIY,QAASA,KAAKA,OAAOA,UA5GlBZ,EAAAA,kBAA2BA,IAC3BA,EAAAA,gBAAkBA,SA+G7BA,IAlHa9F,GAAAA,KAAIA,GAFEnH,EAAAA,EAAAA,WAAAA,EAAAA,eAAJD,EAAAA,EAAAA,MAAAA,EAAAA,UAAZA,cAAAA,iBCFP,WACA,YACA,SAAA+N,GAAA3V,GACA,MAAA,kBAAAA,IAAA,gBAAAA,IAAA,OAAAA,EAGA,QAAA4V,GAAA5V,GACA,MAAA,kBAAAA,GAGA,QAAA6V,GAAA7V,GACA,MAAA,gBAAAA,IAAA,OAAAA,EAkBA,QAAA8V,GAAAvhB,EAAAS,GACA+gB,EAAAC,GAAAzhB,EACAwhB,EAAAC,EAAA,GAAAhhB,EACAghB,GAAA,EACA,IAAAA,IAIAC,EACAA,EAAAC,GAEAC,KAMA,QAAAC,GAAAC,GACAJ,EAAAI,EAcA,QAAAC,KACA,GAAAC,GAAAC,QAAAD,SAGAE,EAAAD,QAAAE,SAAAC,KAAAviB,MAAA,qCAIA,OAHAa,OAAAF,QAAA0hB,IAAA,MAAAA,EAAA,IAAA,OAAAA,EAAA,KACAF,EAAAK,cAEA,WACAL,EAAAL,IAKA,QAAAW,KACA,MAAA,YACAC,EAAAZ,IAIA,QAAAa,KACA,GAAAC,GAAA,EACAC,EAAA,GAAAC,GAAAhB,GACAS,EAAAQ,SAAAC,eAAA,GAGA,OAFAH,GAAAI,QAAAV,GAAAW,eAAA,IAEA,WACAX,EAAAlf,KAAAuf,IAAAA,EAAA,GAKA,QAAAO,KACA,GAAAthB,GAAA,GAAAuhB,eAEA,OADAvhB,GAAAwhB,MAAAC,UAAAxB,EACA,WACAjgB,EAAA0hB,MAAAC,YAAA,IAIA,QAAAC,KACA,MAAA,YACApkB,WAAAyiB,EAAA,IAKA,QAAAA,KACA,IAAA,GAAA9gB,GAAA,EAAA4gB,EAAA5gB,EAAAA,GAAA,EAAA,CACA,GAAAb,GAAAwhB,EAAA3gB,GACAJ,EAAA+gB,EAAA3gB,EAAA,EAEAb,GAAAS,GAEA+gB,EAAA3gB,GAAAuS,OACAoO,EAAA3gB,EAAA,GAAAuS,OAGAqO,EAAA,EAGA,QAAA8B,KACA,IACA,GAAApjB,GAAA0f,QACA2D,EAAArjB,EAAA,QAEA,OADAoiB,GAAAiB,EAAAC,WAAAD,EAAAE,aACApB,IACA,MAAArd,GACA,MAAAqe,MAkBA,QAAAK,MAQA,QAAAC,KACA,MAAA,IAAAC,WAAA,4CAGA,QAAAC,KACA,MAAA,IAAAD,WAAA,wDAGA,QAAAE,GAAAC,GACA,IACA,MAAAA,GAAAC,KACA,MAAA1gB,GAEA,MADA2gB,IAAA3gB,MAAAA,EACA2gB,IAIA,QAAAC,GAAAF,EAAA7lB,EAAAgmB,EAAAC,GACA,IACAJ,EAAAnjB,KAAA1C,EAAAgmB,EAAAC,GACA,MAAApf,GACA,MAAAA,IAIA,QAAAqf,GAAAN,EAAAO,EAAAN,GACAO,EAAA,SAAAR,GACA,GAAAS,IAAA,EACAlhB,EAAA4gB,EAAAF,EAAAM,EAAA,SAAAnmB,GACAqmB,IACAA,GAAA,EACAF,IAAAnmB,EACAsmB,EAAAV,EAAA5lB,GAEAumB,EAAAX,EAAA5lB,KAEA,SAAAwmB,GACAH,IACAA,GAAA,EAEAI,EAAAb,EAAAY,KACA,YAAAZ,EAAAc,QAAA,sBAEAL,GAAAlhB,IACAkhB,GAAA,EACAI,EAAAb,EAAAzgB,KAEAygB,GAGA,QAAAe,GAAAf,EAAAO,GACAA,EAAAS,SAAAC,EACAN,EAAAX,EAAAO,EAAAW,SACAX,EAAAS,SAAAG,GACAN,EAAAb,EAAAO,EAAAW,SAEAE,EAAAb,EAAAnR,OAAA,SAAAhV,GACAsmB,EAAAV,EAAA5lB,IACA,SAAAwmB,GACAC,EAAAb,EAAAY,KAKA,QAAAS,GAAArB,EAAAsB,GACA,GAAAA,EAAAnO,cAAA6M,EAAA7M,YACA4N,EAAAf,EAAAsB,OACA,CACA,GAAArB,GAAAF,EAAAuB,EAEArB,KAAAC,GACAW,EAAAb,EAAAE,GAAA3gB,OACA6P,SAAA6Q,EACAU,EAAAX,EAAAsB,GACAjE,EAAA4C,GACAK,EAAAN,EAAAsB,EAAArB,GAEAU,EAAAX,EAAAsB,IAKA,QAAAZ,GAAAV,EAAA5lB,GACA4lB,IAAA5lB,EACAymB,EAAAb,EAAAJ,KACAxC,EAAAhjB,GACAinB,EAAArB,EAAA5lB,GAEAumB,EAAAX,EAAA5lB,GAIA,QAAAmnB,GAAAvB,GACAA,EAAAwB,UACAxB,EAAAwB,SAAAxB,EAAAkB,SAGAO,EAAAzB,GAGA,QAAAW,GAAAX,EAAA5lB,GACA4lB,EAAAgB,SAAAU,IAEA1B,EAAAkB,QAAA9mB,EACA4lB,EAAAgB,OAAAC,EAEA,IAAAjB,EAAA2B,aAAAnnB,QACAgmB,EAAAiB,EAAAzB,IAIA,QAAAa,GAAAb,EAAAY,GACAZ,EAAAgB,SAAAU,IACA1B,EAAAgB,OAAAG,GACAnB,EAAAkB,QAAAN,EAEAJ,EAAAe,EAAAvB,IAGA,QAAAoB,GAAAQ,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAJ,EAAAD,aACAnnB,EAAAwnB,EAAAxnB,MAEAonB,GAAAJ,SAAA,KAEAQ,EAAAxnB,GAAAqnB,EACAG,EAAAxnB,EAAAymB,GAAAa,EACAE,EAAAxnB,EAAA2mB,IAAAY,EAEA,IAAAvnB,GAAAonB,EAAAZ,QACAR,EAAAiB,EAAAG,GAIA,QAAAH,GAAAzB,GACA,GAAAgC,GAAAhC,EAAA2B,aACAM,EAAAjC,EAAAgB,MAEA,IAAA,IAAAgB,EAAAxnB,OAAA,CAIA,IAAA,GAFAqnB,GAAA7lB,EAAAkmB,EAAAlC,EAAAkB,QAEArkB,EAAA,EAAAA,EAAAmlB,EAAAxnB,OAAAqC,GAAA,EACAglB,EAAAG,EAAAnlB,GACAb,EAAAgmB,EAAAnlB,EAAAolB,GAEAJ,EACAM,EAAAF,EAAAJ,EAAA7lB,EAAAkmB,GAEAlmB,EAAAkmB,EAIAlC,GAAA2B,aAAAnnB,OAAA,GAGA,QAAA4nB,KACApP,KAAAzT,MAAA,KAKA,QAAA8iB,GAAArmB,EAAAkmB,GACA,IACA,MAAAlmB,GAAAkmB,GACA,MAAAjhB,GAEA,MADAqhB,IAAA/iB,MAAA0B,EACAqhB,IAIA,QAAAH,GAAAF,EAAAjC,EAAAhkB,EAAAkmB,GACA,GACA9nB,GAAAmF,EAAAgjB,EAAAC,EADAC,EAAApF,EAAArhB,EAGA,IAAAymB,GAWA,GAVAroB,EAAAioB,EAAArmB,EAAAkmB,GAEA9nB,IAAAkoB,IACAE,GAAA,EACAjjB,EAAAnF,EAAAmF,MACAnF,EAAA,MAEAmoB,GAAA,EAGAvC,IAAA5lB,EAEA,WADAymB,GAAAb,EAAAF,SAKA1lB,GAAA8nB,EACAK,GAAA,CAGAvC,GAAAgB,SAAAU,IAEAe,GAAAF,EACA7B,EAAAV,EAAA5lB,GACAooB,EACA3B,EAAAb,EAAAzgB,GACA0iB,IAAAhB,EACAN,EAAAX,EAAA5lB,GACA6nB,IAAAd,IACAN,EAAAb,EAAA5lB,IAIA,QAAAsoB,GAAA1C,EAAA2C,GACA,IACAA,EAAA,SAAAvoB,GACAsmB,EAAAV,EAAA5lB,IACA,SAAAwmB,GACAC,EAAAb,EAAAY,KAEA,MAAA3f,GACA4f,EAAAb,EAAA/e,IAIA,QAAA2hB,GAAAC,EAAAviB,GACA,GAAAwiB,GAAA9P,IAEA8P,GAAAC,qBAAAF,EACAC,EAAA9C,QAAA,GAAA6C,GAAAlD,GAEAmD,EAAAE,eAAA1iB,IACAwiB,EAAAG,OAAA3iB,EACAwiB,EAAAtoB,OAAA8F,EAAA9F,OACAsoB,EAAAI,WAAA5iB,EAAA9F,OAEAsoB,EAAAK,QAEA,IAAAL,EAAAtoB,OACAmmB,EAAAmC,EAAA9C,QAAA8C,EAAA5B,UAEA4B,EAAAtoB,OAAAsoB,EAAAtoB,QAAA,EACAsoB,EAAAM,aACA,IAAAN,EAAAI,YACAvC,EAAAmC,EAAA9C,QAAA8C,EAAA5B,WAIAL,EAAAiC,EAAA9C,QAAA8C,EAAAO,oBA2EA,QAAAC,GAAAC,GACA,MAAA,IAAAC,IAAAxQ,KAAAuQ,GAAAvD,QAGA,QAAAyD,GAAAF,GAaA,QAAAzB,GAAA1nB,GACAsmB,EAAAV,EAAA5lB,GAGA,QAAA2nB,GAAAnB,GACAC,EAAAb,EAAAY,GAhBA,GAAAiC,GAAA7P,KAEAgN,EAAA,GAAA6C,GAAAlD,EAEA,KAAA+D,EAAAH,GAEA,MADA1C,GAAAb,EAAA,GAAAH,WAAA,oCACAG,CAaA,KAAA,GAVAxlB,GAAA+oB,EAAA/oB,OAUAqC,EAAA,EAAAmjB,EAAAgB,SAAAU,GAAAlnB,EAAAqC,EAAAA,IACAukB,EAAAyB,EAAAc,QAAAJ,EAAA1mB,IAAAuS,OAAA0S,EAAAC,EAGA,OAAA/B,GAGA,QAAA4D,GAAAC,GAEA,GAAAhB,GAAA7P,IAEA,IAAA6Q,GAAA,gBAAAA,IAAAA,EAAA1Q,cAAA0P,EACA,MAAAgB,EAGA,IAAA7D,GAAA,GAAA6C,GAAAlD,EAEA,OADAe,GAAAV,EAAA6D,GACA7D,EAGA,QAAA8D,GAAAlD,GAEA,GAAAiC,GAAA7P,KACAgN,EAAA,GAAA6C,GAAAlD,EAEA,OADAkB,GAAAb,EAAAY,GACAZ,EAMA,QAAA+D,KACA,KAAA,IAAAlE,WAAA,sFAGA,QAAAmE,KACA,KAAA,IAAAnE,WAAA,yHA2GA,QAAAoE,GAAAtB,GACA3P,KAAAkR,IAAAC,KACAnR,KAAAgO,OAAA5R,OACA4D,KAAAkO,QAAA9R,OACA4D,KAAA2O,gBAEAhC,IAAAgD,IACAtF,EAAAsF,IACAoB,IAGA/Q,eAAAiR,IACAD,IAGAtB,EAAA1P,KAAA2P,IAqQA,QAAAyB,KACA,GAAAC,EAEA,IAAA,mBAAAC,QACAD,EAAAC,WACA,IAAA,mBAAAC,MACAF,EAAAE,SAEA,KACAF,EAAAG,SAAA,iBACA,MAAAvjB,GACA,KAAA,IAAAwjB,OAAA,4EAIA,GAAAC,GAAAL,EAAAtI,UAEA2I,GAAA,qBAAA9lB,OAAAyU,UAAA9W,SAAAO,KAAA4nB,EAAAf,YAAAe,EAAAC,QAIAN,EAAAtI,QAAA6I,IA75BA,GAAAC,EAMAA,GALAnoB,MAAAF,QAKAE,MAAAF,QAJA,SAAAiL,GACA,MAAA,mBAAA7I,OAAAyU,UAAA9W,SAAAO,KAAA2K,GAMA,IAGA8W,GACAb,EA0GAE,EA9GA8F,EAAAmB,EACApH,EAAA,EAqBA+C,MApBAjkB,SAoBAghB,GAKAuH,EAAA,mBAAAC,QAAAA,OAAA3V,OACA4V,EAAAF,MACAnG,EAAAqG,EAAAC,kBAAAD,EAAAE,uBACAC,EAAA,mBAAAlH,UAAA,wBAAA1hB,SAAAO,KAAAmhB,SAGAmH,EAAA,mBAAAC,oBACA,mBAAAC,gBACA,mBAAArG,gBAiDAzB,EAAA,GAAA9gB,OAAA,IA6BAkhB,GADAuH,EACApH,IACAY,EACAH,IACA4G,EACApG,IACA5P,SAAA0V,GAAA,kBAAAjJ,SACA0D,IAEAD,GAKA,IAAAoC,GAAA,OACAT,EAAA,EACAE,GAAA,EAEAjB,GAAA,GAAAkC,GAkKAE,GAAA,GAAAF,EAwFAQ,GAAAvP,UAAA2P,eAAA,SAAA1iB,GACA,MAAAojB,GAAApjB,IAGAsiB,EAAAvP,UAAAgQ,iBAAA,WACA,MAAA,IAAAoB,OAAA,4CAGA7B,EAAAvP,UAAA8P,MAAA,WACAnQ,KAAAkO,QAAA,GAAAxkB,OAAAsW,KAAAxY,QAGA,IAAAgpB,IAAAZ,CAEAA,GAAAvP,UAAA+P,WAAA,WAOA,IAAA,GANAN,GAAA9P,KAEAxY,EAAAsoB,EAAAtoB,OACAwlB,EAAA8C,EAAA9C,QACA1f,EAAAwiB,EAAAG,OAEApmB,EAAA,EAAAmjB,EAAAgB,SAAAU,GAAAlnB,EAAAqC,EAAAA,IACAimB,EAAAyC,WAAAjlB,EAAAzD,GAAAA,IAIA+lB,EAAAvP,UAAAkS,WAAA,SAAAC,EAAA3oB,GACA,GAAAimB,GAAA9P,KACA9W,EAAA4mB,EAAAC,oBAEAzF,GAAAkI,GACAA,EAAArS,cAAAjX,GAAAspB,EAAAxE,SAAAU,GACA8D,EAAAhE,SAAA,KACAsB,EAAA2C,WAAAD,EAAAxE,OAAAnkB,EAAA2oB,EAAAtE,UAEA4B,EAAA4C,cAAAxpB,EAAAynB,QAAA6B,GAAA3oB,IAGAimB,EAAAI,aACAJ,EAAA5B,QAAArkB,GAAA2oB,IAIA5C,EAAAvP,UAAAoS,WAAA,SAAA9Z,EAAA9O,EAAAzC,GACA,GAAA0oB,GAAA9P,KACAgN,EAAA8C,EAAA9C,OAEAA,GAAAgB,SAAAU,IACAoB,EAAAI,aAEAvX,IAAAwV,GACAN,EAAAb,EAAA5lB,GAEA0oB,EAAA5B,QAAArkB,GAAAzC,GAIA,IAAA0oB,EAAAI,YACAvC,EAAAX,EAAA8C,EAAA5B,UAIA0B,EAAAvP,UAAAqS,cAAA,SAAA1F,EAAAnjB,GACA,GAAAimB,GAAA9P,IAEAoO,GAAApB,EAAA5Q,OAAA,SAAAhV,GACA0oB,EAAA2C,WAAAxE,EAAApkB,EAAAzC,IACA,SAAAwmB,GACAkC,EAAA2C,WAAAtE,GAAAtkB,EAAA+jB,KAMA,IAAA+E,IAAArC,EA4BAsC,GAAAnC,EAaAoC,GAAAjC,EAQAkC,GAAAhC,EAEAK,GAAA,EAUAS,GAAAX,CA2HAA,GAAA8B,IAAAJ,GACA1B,EAAA+B,KAAAJ,GACA3B,EAAAN,QAAAkC,GACA5B,EAAAgC,OAAAH,GACA7B,EAAAiC,cAAArI,EACAoG,EAAAkC,MAAA3F,EAEAyD,EAAA5Q,WACAF,YAAA8Q,EAmMAhE,KAAA,SAAA6B,EAAAC,GACA,GAAAH,GAAA5O,KACArH,EAAAiW,EAAAZ,MAEA,IAAArV,IAAAsV,IAAAa,GAAAnW,IAAAwV,KAAAY,EACA,MAAA/O,KAGA,IAAA6O,GAAA,GAAA7O,MAAAG,YAAAwM,GACAyG,EAAAxE,EAAAV,OAEA,IAAAvV,EAAA,CACA,GAAA3P,GAAAqqB,UAAA1a,EAAA,EACA6U,GAAA,WACA2B,EAAAxW,EAAAkW,EAAA7lB,EAAAoqB,SAGAhF,GAAAQ,EAAAC,EAAAC,EAAAC,EAGA,OAAAF,IA8BAyE,QAAA,SAAAvE,GACA,MAAA/O,MAAAiN,KAAA,KAAA8B,IA0BA,IAAAwE,IAAAnC,EAEAoC,IACAzK,QAAA6I,GACA6B,SAAAF,GAIA,mBAAAhL,SAAAA,OAAA,IACAA,OAAA,WAAA,MAAAiL,MACA,mBAAA7K,SAAAA,OAAA,QACAA,OAAA,QAAA6K,GACA,mBAAAxT,QACAA,KAAA,WAAAwT,IAGAD,MACAzpB,KAAAkW,MCt8BA,WACA,YAMA,SAAA0T,GAAAjc,GAIA,GAHA,gBAAAA,KACAA,EAAAkc,OAAAlc,IAEA,6BAAAmc,KAAAnc,GACA,KAAA,IAAAoV,WAAA,yCAEA,OAAApV,GAAAoc,cAGA,QAAAC,GAAA1sB,GAIA,MAHA,gBAAAA,KACAA,EAAAusB,OAAAvsB,IAEAA,EAGA,QAAA2sB,GAAAC,GACAhU,KAAAhW,OAEAgqB,YAAAD,GACAC,EAAAC,QAAA,SAAA7sB,EAAAqQ,GACAuI,KAAAkU,OAAAzc,EAAArQ,IACA4Y,MAEAgU,GACApoB,OAAAuoB,oBAAAH,GAAAC,QAAA,SAAAxc,GACAuI,KAAAkU,OAAAzc,EAAAuc,EAAAvc,KACAuI,MA4CA,QAAAoU,GAAAC,GACA,MAAAA,GAAAC,SACAvL,QAAAkK,OAAA,GAAApG,WAAA,sBAEAwH,EAAAC,UAAA,GAGA,QAAAC,GAAAC,GACA,MAAA,IAAAzL,SAAA,SAAA4H,EAAAsC;AACAuB,EAAAC,OAAA,WACA9D,EAAA6D,EAAApB,SAEAoB,EAAAE,QAAA,WACAzB,EAAAuB,EAAAjoB,UAKA,QAAAooB,GAAAC,GACA,GAAAJ,GAAA,GAAAK,WAEA,OADAL,GAAAM,kBAAAF,GACAL,EAAAC,GAGA,QAAAO,GAAAH,GACA,GAAAJ,GAAA,GAAAK,WAEA,OADAL,GAAAQ,WAAAJ,GACAL,EAAAC,GAeA,QAAAS,KAsEA,MArEAjV,MAAAsU,UAAA,EAGAtU,KAAAkV,UAAA,SAAAb,GAEA,GADArU,KAAAmV,UAAAd,EACA,gBAAAA,GACArU,KAAAoV,UAAAf,MACA,IAAAgB,EAAAT,MAAAU,KAAAjV,UAAAkV,cAAAlB,GACArU,KAAAwV,UAAAnB,MACA,IAAAgB,EAAAI,UAAAC,SAAArV,UAAAkV,cAAAlB,GACArU,KAAA2V,cAAAtB,MACA,CAAA,GAAAA,EAGA,KAAA,IAAA5C,OAAA,4BAFAzR,MAAAoV,UAAA,KAMAC,EAAAT,MACA5U,KAAA4U,KAAA,WACA,GAAAgB,GAAAxB,EAAApU,KACA,IAAA4V,EACA,MAAAA,EAGA,IAAA5V,KAAAwV,UACA,MAAAzM,SAAA4H,QAAA3Q,KAAAwV,UACA,IAAAxV,KAAA2V,cACA,KAAA,IAAAlE,OAAA,uCAEA,OAAA1I,SAAA4H,QAAA,GAAA2E,OAAAtV,KAAAoV,cAIApV,KAAA6V,YAAA,WACA,MAAA7V,MAAA4U,OAAA3H,KAAA0H,IAGA3U,KAAA8V,KAAA,WACA,GAAAF,GAAAxB,EAAApU,KACA,IAAA4V,EACA,MAAAA,EAGA,IAAA5V,KAAAwV,UACA,MAAAT,GAAA/U,KAAAwV,UACA,IAAAxV,KAAA2V,cACA,KAAA,IAAAlE,OAAA,uCAEA,OAAA1I,SAAA4H,QAAA3Q,KAAAoV,aAIApV,KAAA8V,KAAA,WACA,GAAAF,GAAAxB,EAAApU,KACA,OAAA4V,GAAAA,EAAA7M,QAAA4H,QAAA3Q,KAAAoV,YAIAC,EAAAI,WACAzV,KAAAyV,SAAA,WACA,MAAAzV,MAAA8V,OAAA7I,KAAA8I,KAIA/V,KAAAgW,KAAA,WACA,MAAAhW,MAAA8V,OAAA7I,KAAA3lB,KAAA2uB,QAGAjW,KAMA,QAAAkW,GAAAC,GACA,GAAAC,GAAAD,EAAA9rB,aACA,OAAAgsB,GAAA/iB,QAAA8iB,GAAA,GAAAA,EAAAD,EAGA,QAAAG,GAAAhpB,EAAAyN,GACAA,EAAAA,KACA,IAAAsZ,GAAAtZ,EAAAsZ,IACA,IAAAiC,EAAAjW,UAAAkV,cAAAjoB,GAAA,CACA,GAAAA,EAAAgnB,SACA,KAAA,IAAAzH,WAAA,eAEA7M,MAAAlZ,IAAAwG,EAAAxG,IACAkZ,KAAAuW,YAAAjpB,EAAAipB,YACAxb,EAAAiZ,UACAhU,KAAAgU,QAAA,GAAAD,GAAAzmB,EAAA0mB,UAEAhU,KAAAmW,OAAA7oB,EAAA6oB,OACAnW,KAAA9K,KAAA5H,EAAA4H,KACAmf,IACAA,EAAA/mB,EAAA6nB,UACA7nB,EAAAgnB,UAAA,OAGAtU,MAAAlZ,IAAAwG,CAWA,IARA0S,KAAAuW,YAAAxb,EAAAwb,aAAAvW,KAAAuW,aAAA,QACAxb,EAAAiZ,UAAAhU,KAAAgU,WACAhU,KAAAgU,QAAA,GAAAD,GAAAhZ,EAAAiZ,UAEAhU,KAAAmW,OAAAD,EAAAnb,EAAAob,QAAAnW,KAAAmW,QAAA,OACAnW,KAAA9K,KAAA6F,EAAA7F,MAAA8K,KAAA9K,MAAA,KACA8K,KAAAwW,SAAA,MAEA,QAAAxW,KAAAmW,QAAA,SAAAnW,KAAAmW,SAAA9B,EACA,KAAA,IAAAxH,WAAA,4CAEA7M,MAAAkV,UAAAb,GAGA,QAAA0B,GAAA1B,GACA,GAAAoC,GAAA,GAAAf,SASA,OARArB,GAAAqC,OAAAthB,MAAA,KAAA6e,QAAA,SAAA0C,GACA,GAAAA,EAAA,CACA,GAAAvhB,GAAAuhB,EAAAvhB,MAAA,KACAqC,EAAArC,EAAA3G,QAAA/F,QAAA,MAAA,KACAtB,EAAAgO,EAAArO,KAAA,KAAA2B,QAAA,MAAA,IACA+tB,GAAAvC,OAAA0C,mBAAAnf,GAAAmf,mBAAAxvB,OAGAqvB,EAGA,QAAAzC,GAAA6C,GACA,GAAAC,GAAA,GAAA/C,GACAgD,EAAAF,EAAAG,wBAAAN,OAAAthB,MAAA,KAOA,OANA2hB,GAAA9C,QAAA,SAAAgD,GACA,GAAA7hB,GAAA6hB,EAAAP,OAAAthB,MAAA,KACAjO,EAAAiO,EAAA3G,QAAAioB,OACAtvB,EAAAgO,EAAArO,KAAA,KAAA2vB,MACAI,GAAA5C,OAAA/sB,EAAAC,KAEA0vB,EAKA,QAAAI,GAAAC,EAAApc,GACAA,IACAA,MAGAiF,KAAAkV,UAAAiC,GACAnX,KAAAhG,KAAA,UACAgG,KAAAlZ,IAAA,KACAkZ,KAAArV,OAAAoQ,EAAApQ,OACAqV,KAAAoX,GAAApX,KAAArV,QAAA,KAAAqV,KAAArV,OAAA,IACAqV,KAAAqX,WAAAtc,EAAAsc,WACArX,KAAAgU,QAAAjZ,EAAAiZ,kBAAAD,GAAAhZ,EAAAiZ,QAAA,GAAAD,GAAAhZ,EAAAiZ,SACAhU,KAAAlZ,IAAAiU,EAAAjU,KAAA,GAlRA,IAAAyqB,KAAA+F,MAAA,CAoCAvD,EAAA1T,UAAA6T,OAAA,SAAAzc,EAAArQ,GACAqQ,EAAAic,EAAAjc,GACArQ,EAAA0sB,EAAA1sB,EACA,IAAAgB,GAAA4X,KAAAhW,IAAAyN,EACArP,KACAA,KACA4X,KAAAhW,IAAAyN,GAAArP,GAEAA,EAAAX,KAAAL,IAGA2sB,EAAA1T,UAAA,UAAA,SAAA5I,SACAuI,MAAAhW,IAAA0pB,EAAAjc,KAGAsc,EAAA1T,UAAA5N,IAAA,SAAAgF,GACA,GAAAhP,GAAAuX,KAAAhW,IAAA0pB,EAAAjc,GACA,OAAAhP,GAAAA,EAAA,GAAA,MAGAsrB,EAAA1T,UAAAkX,OAAA,SAAA9f,GACA,MAAAuI,MAAAhW,IAAA0pB,EAAAjc,SAGAsc,EAAA1T,UAAAmX,IAAA,SAAA/f,GACA,MAAAuI,MAAAhW,IAAAD,eAAA2pB,EAAAjc,KAGAsc,EAAA1T,UAAA3N,IAAA,SAAA+E,EAAArQ,GACA4Y,KAAAhW,IAAA0pB,EAAAjc,KAAAqc,EAAA1sB,KAGA2sB,EAAA1T,UAAA4T,QAAA,SAAAjrB,EAAAyuB,GACA7rB,OAAAuoB,oBAAAnU,KAAAhW,KAAAiqB,QAAA,SAAAxc,GACAuI,KAAAhW,IAAAyN,GAAAwc,QAAA,SAAA7sB,GACA4B,EAAAc,KAAA2tB,EAAArwB,EAAAqQ,EAAAuI,OACAA,OACAA,MAiCA,IAAAqV,IACAT,KAAA,cAAArD,OAAA,QAAAA,OAAA,WACA,IAEA,MADA,IAAA+D,OACA,EACA,MAAArnB,GACA,OAAA,MAGAwnB,SAAA,YAAAlE,OA6EA8E,GAAA,SAAA,MAAA,OAAA,UAAA,OAAA,MAoEApB,GAAAnrB,KAAAwsB,EAAAjW,WAiBA4U,EAAAnrB,KAAAotB,EAAA7W,WAEAkR,KAAAwC,QAAAA,EACAxC,KAAA+E,QAAAA,EACA/E,KAAA2F,SAAAA,EAEA3F,KAAA+F,MAAA,SAAAhqB,EAAAoqB,GACA,GAAAC,EAOA,OALAA,GADArB,EAAAjW,UAAAkV,cAAAjoB,KAAAoqB,EACApqB,EAEA,GAAAgpB,GAAAhpB,EAAAoqB,GAGA,GAAA3O,SAAA,SAAA4H,EAAAsC,GAGA,QAAA2E,KACA,MAAA,eAAAf,GACAA,EAAAe,YAIA,mBAAAhE,KAAAiD,EAAAG,yBACAH,EAAAgB,kBAAA,iBADA,OARA,GAAAhB,GAAA,GAAAiB,eAeAjB,GAAApC,OAAA,WACA,GAAA9pB,GAAA,OAAAksB,EAAAlsB,OAAA,IAAAksB,EAAAlsB,MACA,IAAA,IAAAA,GAAAA,EAAA,IAEA,WADAsoB,GAAA,GAAApG,WAAA,0BAGA,IAAA9R,IACApQ,OAAAA,EACA0sB,WAAAR,EAAAQ,WACArD,QAAAA,EAAA6C,GACA/vB,IAAA8wB,KAEAvD,EAAA,YAAAwC,GAAAA,EAAA7nB,SAAA6nB,EAAAkB,YACApH,GAAA,GAAAuG,GAAA7C,EAAAtZ,KAGA8b,EAAAnC,QAAA,WACAzB,EAAA,GAAApG,WAAA,4BAGAgK,EAAAmB,KAAAL,EAAAxB,OAAAwB,EAAA7wB,KAAA,GAEA,YAAA6wB,EAAApB,cACAM,EAAAoB,iBAAA,GAGA,gBAAApB,IAAAxB,EAAAT,OACAiC,EAAAqB,aAAA,QAGAP,EAAA3D,QAAAC,QAAA,SAAA7sB,EAAAqQ,GACAof,EAAAsB,iBAAA1gB,EAAArQ,KAGAyvB,EAAAuB,KAAA,mBAAAT,GAAAxC,UAAA,KAAAwC,EAAAxC,cAGA5D,KAAA+F,MAAA7D,UAAA,MrBpVA1B,OAAA,MAAAA,OAAA,KAAA,WAAA,WAGA,QAAAsG,QAAAlxB,GACA,IAAA,MAAA6Y,MAAAsY,UACA,MAAArqB,GAAA,MAAA,OAkBA,QAAAsqB,OAAAC,GAEA,MADAC,WAAAC,UAAA,EACAD,UAAA7E,KAAA4E,GACA,IAAAA,EAAA9vB,QAAA+vB,UAAA,SAAA3lB,GACA,GAAA5J,GAAAyvB,KAAA7lB,EACA,OAAA,gBAAA5J,GAAAA,EACA,OAAA,OAAA4J,EAAA1I,WAAA,GAAAb,SAAA,KAAAqvB,MAAA,MACA,IACA,IAAAJ,EAAA,IAGA,QAAAhwB,KAAArB,EAAA0xB,GACA,GAAAhvB,GACAI,EACAX,EACA9B,EACAsxB,EACAC,EAAAC,IACA5xB,EAAAyxB,EAAA1xB,EAUA,QARAC,GAAA,gBAAAA,KACAA,EAAAixB,OAAAvuB,KAAA1C,EAAAD,IAGA,kBAAA8xB,OACA7xB,EAAA6xB,IAAAnvB,KAAA+uB,EAAA1xB,EAAAC,UAGAA,IACA,IAAA,SACA,MAAAmxB,OAAAnxB,EAEA,KAAA,SACA,MAAA8xB,UAAA9xB,GAAAusB,OAAAvsB,GAAA,MAEA,KAAA,UACA,IAAA,OACA,MAAAusB,QAAAvsB,EAEA,KAAA,SAEA,IAAAA,EACA,MAAA,MAMA,IAHA4xB,KAAAG,OACAL,KAEA,mBAAAltB,OAAAyU,UAAA9W,SAAAmG,MAAAtI,GAAA,CAGA,IADAI,EAAAJ,EAAAI,OACAqC,EAAA,EAAArC,EAAAqC,EAAAA,GAAA,EACAivB,EAAAjvB,GAAArB,IAAAqB,EAAAzC,IAAA,MASA,OANAkC,GAAA,IAAAwvB,EAAAtxB,OAAA,KACAwxB,IAAA,MAAAA,IACAF,EAAA/xB,KAAA,MAAAiyB,KAAA,KACAD,EAAA,IACA,IAAAD,EAAA/xB,KAAA,KAAA,IACAiyB,IAAAD,EACAzvB,EAEA,GAAA2vB,KAAA,gBAAAA,KAEA,IADAzxB,EAAAyxB,IAAAzxB,OACAqC,EAAA,EAAArC,EAAAqC,EAAAA,GAAA,EACAI,EAAAgvB,IAAApvB,GACA,gBAAAI,KACAX,EAAAd,IAAAyB,EAAA7C,GACAkC,GACAwvB,EAAArxB,KAAA8wB,MAAAtuB,IAAA+uB,IAAA,KAAA,KAAA1vB,QAKA,KAAAW,IAAA7C,GACAwE,OAAA7B,eAAAD,KAAA1C,EAAA6C,KACAX,EAAAd,IAAAyB,EAAA7C,GACAkC,GACAwvB,EAAArxB,KAAA8wB,MAAAtuB,IAAA+uB,IAAA,KAAA,KAAA1vB,GAUA,OAJAA,GAAA,IAAAwvB,EAAAtxB,OAAA,KACAwxB,IAAA,MAAAA,IAAAF,EAAA/xB,KAAA,MAAAiyB,KAAA,KACAD,EAAA,IAAA,IAAAD,EAAA/xB,KAAA,KAAA,IACAiyB,IAAAD,EACAzvB,GA/GAyoB,OAAA,OAAAA,OAAA,QAOA,IAAAqH,IAAA,2GACAX,UAAA,2HACAO,IACAG,OACAR,MACAU,KAAA,MACAC,IAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,IAAA,MACAC,KAAA,QAEAV,GA+FA,mBAAA3xB,MAAA,YACAA,KAAA,UAAA,SAAAF,EAAAwyB,EAAAC,GACA,GAAAhwB,EAIA,IAHAmvB,IAAA,GACAG,OAAA,GAEA,gBAAAU,GACA,IAAAhwB,EAAA,EAAAgwB,EAAAhwB,EAAAA,GAAA,EACAsvB,QAAA,QAEA,gBAAAU,KACAV,OAAAU,EAGA,IADAZ,IAAAW,EACAA,GAAA,kBAAAA,KACA,gBAAAA,IACA,gBAAAA,GAAApyB,QACA,KAAA,IAAAiqB,OAAA,iBAEA,OAAAjpB,KAAA,IAAA,GAAApB,MAIA,kBAAAE,MAAA,QAEAA,KAAA,MAAA,SAAAwuB,MAAA,MAAAgE,MAAA,IAAAhE,KAAA,SAGA,IAAAtvB,KAAA,EACA2E,OAAA,EACAC,gBACAmI,gBAAA,UACArC,cAAA,GACA6oB,YAAA,IACA3oB,gBAAA,IACAC,cAAA,GACA/F,OAAA,IACAtE,OAAA,IACAU,UAAA,IACAyF,sBAAA,EACAC,oBAAA,GACAiH,QAAA,SACA1L,KAAA,eAaAiJ,WAAA,WACA,GAAAooB,GAAA,GACAC,EAAA7wB,KAAA6P,MAAA7P,KAAAC,SAAA2wB,EACA,OAAA,UAAA3mB,EAAA6mB,GACA,MAAA7mB,GAAAC,QAAA,WAAA,GACAD,EAAA3K,QACA,SAAA,MACAwxB,EAAAnxB,gBAAAqM,MAAA,KAAA,KACA6kB,EAAAD,EAAAC,EAAAA,EAAA,KACA5mB,KAiiEA0e,QAAA,QAAA,WAuEA,QAAAoI,GAAAjuB,EAAA/E,GACA,GAAAizB,GAAAvf,SAAA,WAAA3O,EAAA/E,EACA,OAAAizB,GAAA7wB,SAAAsR,SAAA,IAAA,QAQA,QAAAwf,GAAAC,GAAA,MAAA1O,UAAA2O,eAAAD,GAOA,QAAA/tB,GAAAD,GAAAkuB,QAAA,MAAAluB,GAOA,QAAA1B,GAAA6vB,EAAAzkB,GACA,GAAA5N,KAMA,OALAlB,MAAAuzB,EAAArlB,MAAA,OAAA,SAAAslB,GACAxzB,MAAA8O,GAAA4V,UAAA+O,qBAAAD,GAAA,SAAAtP,GACAhjB,EAAAX,KAAA2jB,OAGAhjB,EAUA,QAAAwyB,GAAA5gB,EAAA0gB,EAAA9yB,GACAV,KAAA8S,EAAA5E,MAAA,KAAA,SAAAylB,GACA,GAAAC,GAAA,SAAA7sB,GACAA,IAAAA,EAAA8jB,OAAAgJ,OACAnzB,EAAAqG,KACAA,EAAA+sB,cAAA,EACA/sB,EAAAgtB,gBAAAhtB,EAAAgtB,iBACAhtB,EAAAitB,iBAAAjtB,EAAAitB,mBAIAR,GAAAS,iBAAAT,EAAAS,iBAAAN,EAAAC,GAAA,GACAJ,EAAAU,YAAAV,EAAAU,YAAA,KAAAP,EAAAC,GACAJ,EAAA,KAAAG,GAAAC,IAoBA,QAAAhE,KAAA,MAAAlsB,GAAA,QAAA,GAOA,QAAAywB,GAAAjQ,EAAAkQ,EAAAl0B,GACA,MAAAA,OAAAgkB,GAAAmQ,aAAAD,EAAAl0B,GACAgkB,GAAAA,EAAAoQ,cAAApQ,EAAAoQ,aAAAF,GAQA,QAAAG,GAAAC,EAAAC,GACA,IAAA,GAAAC,KAAAD,GAAA,GAAAA,EAAA5xB,eAAA6xB,GACA,IAAAF,EAAAE,MAAAA,GAAAD,EAAAC,IACA,0BAAAtoB,QAAAsoB,GAAA,GACA,gBAAAD,GAAAC,GACA,KAAA,IACA,MAAA3tB,KAQA,QAAA4tB,GAAAH,GAAA,MAAA9P,UAAAkQ,cAAAJ,GAQA,QAAApsB,KAAA,MAAAysB,IAAAC,IAAA,EAAAz1B,SAuCA,QAAAiI,GAAA/B,GACA,GAAAsvB,GAAAC,IAAA,MAAAC,GAAAxvB,EAEA,IAAAyvB,GAAAL,EAAA,UACA7yB,EAAAyD,EAAAzD,SACAsxB,EAAA/zB,SACA41B,EAAA,EACAC,EAAA3vB,EAAA3E,SAAAiyB,YACAsC,EAAAv0B,QAAA,WAAAw0B,EAAA,GAAAhwB,QAAA,aAAA8vB,GACAxsB,EAAAnD,EAAAmD,MAAA,aACA1D,EAAAO,EAAAP,SACAyD,EAAAlD,EAAAkD,SAAA,aACAukB,EAAA,WAAA4C,IAAAyF,YAAAL,IACAI,EAAA,SAAA9M,EAAAxgB,GACAmtB,IACAA,EAAA,EAEAD,EAAAxH,QAAA,KACAzsB,aAAAo0B,GAEA7M,IAAAxgB,GAAAW,EAAAX,GAEAlH,QAAA,WACA0nB,GAAA5f,GACA,IAAAgL,GAAAyf,EAAAC,GACAla,EAAAxF,GAAAA,EAAA4hB,UACApc,IAAAA,EAAAqc,YAAA7hB,IACAtP,SAeA,OAZAymB,QAAA/oB,GAAA,SAAAgG,GACAstB,EAAA,EAAAttB,IAGAvC,EAAAwG,WAAAipB,EAAAQ,GAAAA,GAEAR,EAAAxH,QAAA,WAAA4H,EAAA,IACAJ,EAAAS,IAAAh2B,UAAA8F,EAAA3F,IAAAoF,GAEAmvB,EAAAa,EAAA,KAAA5B,GAEApG,IACAoI,EAYA,QAAAL,GAAAxvB,GACA,GAAAoqB,GAAA7nB,EACAmtB,EAAA,WACA,IAAAS,EAAA,CACAA,EAAA,EAEA30B,aAAAo0B,EAEA,KAAArtB,EAAA1H,KAAA,MAAAuvB,EAAAkB,cACA,MAAA5uB,GAAA,MAAAmzB,GAAA,GAEAO,EAAA,EACAltB,EAAAX,KAEA6tB,EAAA,EACAD,EAAA,EACAR,EAAA3vB,EAAA3E,SAAAiyB,YACAsC,EAAAv0B,QAAA,WAAAw0B,EAAA,GAAAhwB,QAAA,aAAA8vB,GACAxsB,EAAAnD,EAAAmD,MAAA,aACA1D,EAAAO,EAAAP,SACAyD,EAAAlD,EAAAkD,SAAA,aACAmtB,GAAArwB,EAAA,SACA6vB,EAAA,SAAA9M,EAAAxgB,GACA6tB,IACAA,EAAA,EAEA50B,aAAAo0B,GAEAxF,IACAA,EAAAnC,QAAAmC,EAAApC,OAAA,KACAoC,EAAAkG,OAAAlG,EAAAkG,QACAlG,EAAA,MAGArH,GAAA5f,EAAAZ,IAIA,KACA6nB,EAAAmF,KACAjK,OAAAiL,gBACA,GAAAA,iBACA,GAAAlF,gBAEAjB,EAAAnC,QAAAmC,EAAAoG,QAAA,SAAAhvB,GAAAquB,EACA,EAAAruB,GAAA4oB,GAAAA,EAAAkB,eAAAxrB,MAAA,8BAEAsqB,EAAApC,OAAAoC,EAAAqG,UAAAf,EACAtF,EAAAsG,mBAAA,WACA,GAAAtG,GAAA,GAAAA,EAAAuG,WACA,OAAAvG,EAAAlsB,QACA,IAAA,KACA,KACA,SACA,IACAqE,EAAA1H,KAAA,MAAAuvB,EAAAkB,cACAuE,EAAA,EAAAttB,GAEA,MAAA7F,GAAA,MAAAmzB,GAAA,GAAA3xB,OAAAksB,EAAAlsB,OAAAwL,QAAA,KAAA7J,QAAAuqB,EAAAkB,eACA,QAKA,IAAAjxB,GAAAH,UAAA8F,EAAA3F,IAAAoF,EAEA2qB,GAAAmB,KAAA,MAAAlxB,EAAAg2B,GACAA,IAAAjG,EAAA/uB,QAAAs0B,GACAvF,EAAAuB,OAEA,MAAAiF,GAGA,MAFAf,GAAA,GACAP,EAAA,EACAvtB,EAAA/B,GAIA,MAAA6vB,GAIA,QAAAxsB,KACA,KAAA,UAAAwtB,YAAA,MAAA,EACA,KAAA,MAAAA,WAAA,OACA,MAAArvB,GAAA,OAAA,GAyHA,QAAA+tB,KACA,IAAAuB,IAAAA,EAAA,IAAA,MAAA,EAEA,IAAAC,IACAlD,GAAA0B,EAAA,KACA5D,KAAA,aACA2E,MAAA,WAAAS,EAAA,OACAxF,KAAA,SAAA7B,EAAArvB,GACAk1B,EAAAwB,EAAA,IAAAA,EACAD,EAAA,IAAAC,EAAA,GAAA12B,IAIA,OAAA02B,GAzeA,GAAAC,GAAA,6CACAf,EAAA,QACAgB,EAAAJ,UAAAK,UACAC,EAAA,uBACA7B,EAAA,IAAA2B,EAAApqB,QAAA,SAKAye,QAAAyI,UAAAzI,OAAAyI,QAAAzI,OAAAyI,aACAA,QAAAqD,MACArD,QAAAqD,IACArD,QAAAjuB,OACAwlB,OAAA+L,WAAAC,WAAA,aAMA,IAAAvrB,GAAA,WACA,GAAAqE,MACAmnB,GAAA,CACA,KACAA,EAAAjM,OAAA,aACA,MAAA9jB,IACA,GAAAgwB,GAAA,SAAA92B,GACA,MAAA,IAAAykB,SAAAsS,OAAA5qB,QAAAnM,GAAA,OACAykB,SAAAsS,QAAA,IAAAr1B,MACAs1B,OAAAh3B,EAAA,kBACA,IAAA,MAEAi3B,EAAA,SAAAj3B,EAAAC,GACAwkB,SAAAsS,OAAA/2B,EAAA,IAAAC,EACA,kDAEAi3B,EAAA,WACA,IAEA,MADAD,GAAA,UAAA,KACA,MAAAH,EAAA,WACA,MAAAhwB,GACA,OAAA,KAGA,QACAwE,IAAA,SAAAtL,GACA,IACA,MAAA62B,GAAAA,EAAAM,QAAAn3B,GACAk3B,EAAAJ,EAAA92B,GACA0P,EAAA1P,GACA,MAAA8G,GACA,MAAA4I,GAAA1P,KAGAuL,IAAA,SAAAvL,EAAAC,GACA,IACA,GAAA42B,EAAA,MAAAA,GAAAO,QAAAp3B,EAAAC,IAAA,CACAi3B,IAAAD,EAAAj3B,EAAAC,GACAyP,EAAA1P,GAAAC,EACA,MAAA6G,GACA4I,EAAA1P,GAAAC,QAuIAo3B,GACAp2B,QACAq2B,OAAA,SAAAhnB,GAAA+mB,EAAAp2B,KAAAqP,OACAmjB,KAAA,SAAAnjB,EAAA7P,IACA42B,EAAAp2B,KAAAqP,GAAA+mB,EAAAp2B,KAAAqP,QAAAhQ,KAAAG,IAEA82B,KAAA,SAAAjnB,EAAAvL,GACAhF,KACAs3B,EAAAp2B,KAAAqP,OACA,SAAA7P,GAAAA,EAAAsE,OAiKAyyB,EAAAtE,EAAA,WAAA,EACAuE,EAAA,SAAAnyB,GAGAsvB,EAAAtvB,EAAA,MAAA,EACA,IAAAixB,EAAApqB,QAAA,SAEA,IAAA7D,GAAAhD,EAAA,eAAA,GAIAoyB,KAHApyB,EAAA,WAAA4E,eAAA/F,OACAmB,EAAA,MAAA+F,EAAA,IAAA/C,EAAA,SAAA,GAEAhD,EAAA,iBAAA,EAEAA,GAAA,IAAA+B,EACA/B,EAAA,GAAA+F,EACA/F,EAAA,MAAAA,EAAA,OAAAF,EACAE,EAAA,WAAAqD,EACArD,EAAA,SAAA6C,EACA7C,EAAA,YAAA0tB,EACA1tB,EAAA,WAAAc,aACAd,EAAA,QAAAqyB,MAAAlB,EAEA,IAAA5vB,GAAA,SAAAvB,GACA,MAAAmyB,GAAAnyB,IAGAsyB,EAAAvyB,OAAAC,EAEA,KAAA,GAAAuyB,KAAAD,GACAA,EAAAh1B,eAAAi1B,KACAhxB,EAAAgxB,GAAAD,EAAAC,GAuBA,OApBAhxB,GAAA,IAAAytB,EACAztB,EAAA,EAAAqsB,EACArsB,EAAA,OAAA6tB,EACA7tB,EAAA,KAAA4sB,EACA5sB,EAAA,KAAA8oB,EACA9oB,EAAA,OAAApD,EACAoD,EAAA,KAAAqtB,EACArtB,EAAA,OAAAwwB,EACAxwB,EAAA,KAAAA,EACAA,EAAA,OAAAA,EACAA,EAAA,WAAAT,aAIAqtB,EAAA,eAAA7I,OAAA,WAEA,MADA8M,IAAA7wB,EAAA,gBAAA,SAAAgJ,GAAAhJ,EAAA,MAAAgJ,EAAAS,KAAA,MACA,IAIAhL,EAAA,OAAAuB,GAEA4sB,EAAA,UAAA7I,OAAA/jB,EAAA,SACA4sB,EAAA,UAAAhP,SAAA5d,EAAA,SAGAA,GAEA4wB,GAAA,KAAAA,EACAA,EAAA,OAAAA,EACAA,EAAA,WAAArxB,aAGA,aAAAqe,SAAAwR,WACAt1B,QAAAoD,MAAA,GAGA0vB,EAAA,OAAA7I,OAAA,WAAAjqB,QAAAoD,MAAA,IAGA,IAAA+zB,GAAAN,KAGAlW,QAAAmW,GACAM,OAAA,EACAC,YAAA9D,EAAA4D,EAAA,WACAG,cAAA/D,EAAA4D,EAAA,WACAI,KAAAzT,SAAA0T,SAAAC,KAAAjsB,QAAA,UACA,MAAA+nB,EAAA4D,EAAA,OACA5rB,OAAAgoB,EAAA4D,EAAA,UACA9rB,KAAAkoB,EAAA4D,EAAA,UAIAlN,OAAA,SAAAA,OAAA,OAAA,OAAA6M,GAGA,mBAAA,UAAAjW,OAAA,QAAAF,SAAAvd,OAEA,IAAAqyB,GAAAlD,EAAA,YAAA,CAGAsE,KAGAlD,EAAAkD,GAAAa,SAAA,WAAAC,KAAAn0B,UAEA,SAAAymB,SAAAsJ,EAAAsD,EAAA,YAAAA,EAAA,UACA,2BAAAlB,EACA,4BAAAA,EACA,yDAGAhV,OAAA,IAAA,SAAA6R,EAAApuB,GACA,MAAAA,IACA8vB,EAAA1B,GAAA,aAAAoF,SAAAxzB,OACA8vB,GAAA1B,GAAA,UAFA0B,EAAA1B,GAAA,WAoBA0B,EAAA,GAAA1wB,WAGA,WAKA,GAAAq0B,GAAAlX,OAAA,GAAA,SAAA3hB,EAAA84B,GACA,KAAA5f,eAAA2f,IAAA,MAAA,IAAAA,GAAA74B,EAAA84B,EAEA,IAAArO,GAAAvR,KACAlZ,EAAAyqB,EAAAzqB,IAAAA,GAAA,GAEA+4B,GADAtO,EAAAuO,SAAAF,GAAA,yBACA94B,EAAAsO,MAAA,MACA3I,GACA4yB,IAAA,SAAAQ,EAAA,GACAxsB,OAAAwsB,EAAA,GACAV,YAAAU,EAAA,GACAT,cAAAS,EAAA,GACAn1B,QAAAm1B,EAAA,GAgCA,OA5BAtO,GAAA,WAAA,EACAA,EAAA,KAAA,EACAA,EAAA,QAAA,EACAA,EAAA,OAAA,EAGAA,EAAA,aAAA,IACAA,EAAA,iBAAA,KACAA,EAAA,qBAAA,KACAA,EAAA,kBAAA,KACAA,EAAA,gBAAA,KACAA,EAAA,gBAAA,KACAA,EAAA,eAAA,KAGAA,EAAA,QAAAA,EAAA,QACAA,EAAA,UAAAA,EAAA,OACAA,EAAA,OAAA,aAGAA,EAAA,WAAA,GACAA,EAAA,WAAA,GACAA,EAAA,eAAA,EACAA,EAAA,cAAA,EACAA,EAAA,UACAA,EAAA,WAAAA,EAAA,WAGAzqB,GAWAyqB,EAAAwO,OAAAtX,OAAA,KAAAhc,GACA8kB,EAAAwO,OAAAtzB,MAAAA,EACA8kB,EAAA9kB,MAAAA,MAEA8kB,GAAAwO,OAAA,WACAnnB,SAAA,EACAlO,QAAA+B,EAAA,QACAiL,WAAA6Z,EAAA,QACA/Z,UAAA+Z,EAAA,OACAhlB,MAAA,WACAglB,EAAA,SACAyO,KAAAzO,EAAA,eACA3D,OAAA,cACAqS,UAAA,KAGAj3B,SAAA,SAAAsD,GACAilB,EAAA,WAAArlB,KAAAI,KAEAjB,QAAA,WACAkmB,EAAA,WAAAA,EAAA,KACAA,EAAA,cA/BAA,EAAA,WAAAA,EAAA,OACAA,EAAA,SACAyO,KAAAzO,EAAA,eACA3D,OAAA,cACAqS,UAAA,IAEA1O,GAiCAoO,GAAAtf,UAAA+X,KAAA,SAAAlsB,GACA,GAAAqlB,GAAAvR,IACAuR,GAAAwO,OAAA,SACAr1B,QAAA6mB,EAAAwO,OAAAtzB,MAAA,QACAH,QAAAJ,EACAlD,SAAA,SAAAgG,GACAuiB,EAAA,QAAArlB,KAAA8C,QAQA2wB,EAAAtf,UAAA6f,MAAA,WACA,GAAA3O,GAAAvR,IACAuR,GAAAwO,OAAA,aAAAr1B,QAAA6mB,EAAAwO,OAAAtzB,MAAA,UACA8kB,EAAA,WAAAA,EAAA,OACAA,EAAA,eAUA,IAAA1W,UAAAA,UAAA,SAAAslB,EAAAvlB,GAAA,GAAAhR,MAAAw2B,EAAAx2B,EAAAy2B,OAAAC,EAAA,aAAA30B,EAAAy0B,EAAAG,MAAA5iB,OAAA,SAAA7K,GAAAwtB,EAAAjgB,UAAAL,IAAA,IAAA9W,GAAA,GAAAo3B,EAAA,OAAAxtB,IAAA5J,EAAAs3B,MAAA1tB,GAAA5J,EAAAa,eAAA,UAAAb,EAAAwuB,KAAA,WAAAxuB,EAAAu3B,OAAA/I,KAAAhoB,MAAAsQ,KAAAqT,aAAAnqB,EAAAwuB,KAAArX,UAAAnX,EAAAA,EAAAu3B,OAAAzgB,KAAA9W,GAAA2yB,OAAA,WAAA,GAAA/oB,GAAAkN,KAAArC,QAAA,OAAA7K,GAAA4kB,KAAAhoB,MAAAoD,EAAAugB,WAAAvgB,GAAA4kB,KAAA,aAAA8I,MAAA,SAAA1tB,GAAA,IAAA,GAAA5J,KAAA4J,GAAAA,EAAA/I,eAAAb,KAAA8W,KAAA9W,GAAA4J,EAAA5J,GAAA4J,GAAA/I,eAAA,cAAAiW,KAAAzW,SAAAuJ,EAAAvJ,WAAAm3B,MAAA,WAAA,MAAA1gB,MAAA0X,KAAArX,UAAA1C,OAAAqC,QACA7W,EAAAi3B,EAAAO,UAAAh1B,EAAAgS,QAAA+Z,KAAA,SAAA5kB,EAAA5J,GAAA4J,EAAAkN,KAAA4gB,MAAA9tB,MAAAkN,KAAA6gB,SAAA33B,GAAA0R,EAAA1R,EAAA,EAAA4J,EAAAtL,QAAA+B,SAAA,SAAAuJ,GAAA,OAAAA,GAAA7I,GAAAiE,UAAA8R,OAAA8gB,OAAA,SAAAhuB,GAAA,GAAA5J,GAAA8W,KAAA4gB,MAAA3gB,EAAAnN,EAAA8tB,MAAA7tB,EAAAiN,KAAA6gB,QAAA,IAAA/tB,EAAAA,EAAA+tB,SAAA7gB,KAAA+gB,QAAAhuB,EAAA,EAAA,IAAA,GAAA9E,GAAA,EAAA6E,EAAA7E,EAAAA,IAAA/E,EAAA6J,EAAA9E,IAAA,KAAAgS,EAAAhS,IAAA,KAAA,GAAA,GAAAA,EAAA,GAAA,MAAA,GAAA,IAAA8E,EAAA9E,GAAA,OAAA,IAAA,MAAAgS,EAAAzY,OAAA,IAAAyG,EAAA,EAAA6E,EAAA7E,EAAAA,GAAA,EAAA/E,EAAA6J,EAAA9E,IAAA,GAAAgS,EAAAhS,IAAA,OAAA/E,GAAAzB,KAAAiI,MAAAxG,EAAA+W,EAAA,OAAAD,MAAA6gB,UAAA/tB,EAAAkN,MAAA+gB,MAAA,WAAA,GAAAjuB,GAAAkN,KAAA4gB,MAAA13B,EAAA8W,KAAA6gB,QAAA/tB,GAAA5J,IAAA,IAAA,YACA,GAAA,GAAAA,EAAA,GAAA4J,EAAAtL,OAAA24B,EAAAa,KAAA93B,EAAA,IAAAw3B,MAAA,WAAA,GAAA5tB,GAAAnH,EAAA+0B,MAAA52B,KAAAkW,KAAA,OAAAlN,GAAA8tB,MAAA5gB,KAAA4gB,MAAAhI,MAAA,GAAA9lB,GAAAzJ,OAAA,SAAAyJ,GAAA,IAAA,GAAA5J,MAAA+W,EAAA,EAAAnN,EAAAmN,EAAAA,GAAA,EAAA/W,EAAAzB,KAAA,WAAA04B,EAAA92B,SAAA,EAAA,OAAA,IAAAF,GAAAuuB,KAAAxuB,EAAA4J,MAAAxK,EAAAsB,EAAAq3B,OAAAh3B,EAAA3B,EAAA44B,KAAAhzB,UAAA,SAAA4E,GAAA,GAAA5J,GAAA4J,EAAA8tB,KAAA9tB,GAAAA,EAAA+tB,QAAA,KAAA,GAAA5gB,MAAAlN,EAAA,EAAAD,EAAAC,EAAAA,IAAA,CAAA,GAAA9E,GAAA/E,EAAA6J,IAAA,KAAA,GAAA,GAAAA,EAAA,GAAA,GAAAkN,GAAAxY,MAAAwG,IAAA,GAAA1E,SAAA,KAAA0W,EAAAxY,MAAA,GAAAwG,GAAA1E,SAAA,KAAA,MAAA0W,GAAAlZ,KAAA,KAAAkvB,MAAA,SAAAnjB,GAAA,IAAA,GAAA5J,GAAA4J,EAAAtL,OAAAyY,KAAAlN,EAAA,EAAA7J,EAAA6J,EAAAA,GAAA,EAAAkN,EAAAlN,IAAA,IAAAoI,SAAArI,EAAAquB,OAAApuB,EACA,GAAA,KAAA,GAAA,GAAAA,EAAA,EAAA,OAAA,IAAA5J,GAAAuuB,KAAAzX,EAAA/W,EAAA,KAAA0L,EAAAtM,EAAA84B,QAAAlzB,UAAA,SAAA4E,GAAA,GAAA5J,GAAA4J,EAAA8tB,KAAA9tB,GAAAA,EAAA+tB,QAAA,KAAA,GAAA5gB,MAAAlN,EAAA,EAAAD,EAAAC,EAAAA,IAAAkN,EAAAxY,KAAAksB,OAAA0N,aAAAn4B,EAAA6J,IAAA,KAAA,GAAA,GAAAA,EAAA,GAAA,KAAA,OAAAkN,GAAAlZ,KAAA,KAAAkvB,MAAA,SAAAnjB,GAAA,IAAA,GAAA5J,GAAA4J,EAAAtL,OAAAyY,KAAAlN,EAAA,EAAA7J,EAAA6J,EAAAA,IAAAkN,EAAAlN,IAAA,KAAA,IAAAD,EAAA1I,WAAA2I,KAAA,GAAA,GAAAA,EAAA,EAAA,OAAA,IAAA5J,GAAAuuB,KAAAzX,EAAA/W,KAAAo4B,EAAAh5B,EAAAi5B,MAAArzB,UAAA,SAAA4E,GAAA,IAAA,MAAA8jB,oBAAA4K,OAAA5sB,EAAA1G,UAAA4E,KAAA,MAAA5J,GAAA,KAAAuoB,OAAA,0BAAAwE,MAAA,SAAAnjB,GAAA,MAAA8B,GAAAqhB,MAAAyJ,SAAAv1B,mBAAA2I,OACA7J,EAAAm3B,EAAAqB,uBAAA91B,EAAAgS,QAAA+jB,MAAA,WAAA1hB,KAAA2hB,MAAA,GAAAx4B,GAAAuuB,KAAA1X,KAAA4hB,YAAA,GAAAC,QAAA,SAAA/uB,GAAA,gBAAAA,KAAAA,EAAAwuB,EAAArL,MAAAnjB,IAAAkN,KAAA2hB,MAAAb,OAAAhuB,GAAAkN,KAAA4hB,aAAA9uB,EAAA+tB,UAAAiB,SAAA,SAAAhvB,GAAA,GAAA5J,GAAA8W,KAAA2hB,MAAA1hB,EAAA/W,EAAA03B,MAAA7tB,EAAA7J,EAAA23B,SAAA5yB,EAAA+R,KAAA+hB,UAAAn4B,EAAAmJ,GAAA,EAAA9E,GAAArE,EAAAkJ,EAAAqtB,EAAAa,KAAAp3B,GAAAu2B,EAAAnG,KAAA,EAAApwB,GAAAoW,KAAAgiB,eAAA,EAAA,IAAAlvB,EAAAlJ,EAAAqE,EAAA8E,EAAAotB,EAAA8B,IAAA,EAAAnvB,EAAAC,GAAAD,EAAA,CAAA,IAAA,GAAAstB,GAAA,EAAAttB,EAAAstB,EAAAA,GAAAnyB,EAAA+R,KAAAkiB,gBAAAjiB,EAAAmgB,EAAAA,GAAAngB,EAAAkiB,OAAA,EAAArvB,GAAA5J,EAAA23B,UAAA9tB,EAAA,MAAA,IAAA5J,GAAAuuB,KAAA0I,EAAArtB,IAAA2tB,MAAA,WAAA,GAAA5tB,GAAAnH,EAAA+0B,MAAA52B,KAAAkW,KACA,OAAAlN,GAAA6uB,MAAA3hB,KAAA2hB,MAAAjB,QAAA5tB,GAAAkvB,eAAA,GAAA5B,GAAAgC,OAAAn5B,EAAA0U,QAAA0kB,IAAA12B,EAAAgS,SAAA+Z,KAAA,SAAA5kB,GAAAkN,KAAAqiB,IAAAriB,KAAAqiB,IAAA1kB,OAAA7K,GAAAkN,KAAA0hB,SAAAA,MAAA,WAAAz4B,EAAAy4B,MAAA53B,KAAAkW,MAAAA,KAAAsiB,YAAAC,OAAA,SAAAzvB,GAAA,MAAAkN,MAAA6hB,QAAA/uB,GAAAkN,KAAA8hB,WAAA9hB,MAAAwiB,SAAA,SAAA1vB,GAAA,MAAAA,IAAAkN,KAAA6hB,QAAA/uB,GAAAkN,KAAAyiB,eAAAV,UAAA,GAAAW,cAAA,SAAA5vB,GAAA,MAAA,UAAA5J,EAAA+W,GAAA,MAAA,IAAAnN,GAAA4kB,KAAAzX,GAAAuiB,SAAAt5B,KAAAy5B,kBAAA,SAAA7vB,GAAA,MAAA,UAAA5J,EAAA+W,GAAA,MAAA,IAAA2iB,GAAAC,KAAAnL,KAAA5kB,EACAmN,GAAAuiB,SAAAt5B,MAAA,IAAA05B,GAAAh5B,EAAAk5B,OAAA,OAAAl5B,IAAAR,OAGA,SAAA+2B,GAAA,IAAA,GAAAvlB,GAAAC,SAAAjR,EAAAgR,EAAAylB,IAAAD,EAAAx2B,EAAA+2B,UAAAL,EAAA12B,EAAAw4B,OAAAx4B,EAAAgR,EAAAkoB,KAAAn3B,KAAAxC,KAAAb,EAAA,SAAAwK,GAAA,MAAA,aAAAA,GAAA,EAAAA,IAAA,GAAA7I,EAAA,EAAA2K,EAAA,EAAA,GAAAA,GAAA,CAAA,GAAA0sB,EAAAxuB,GAAA,CAAAwuB,EAAAr3B,CAAA,KAAA,GAAAhB,GAAAk3B,EAAA4C,KAAAzB,GAAAsB,EAAA,EAAA35B,GAAA25B,EAAAA,IAAA,KAAAtB,EAAAsB,GAAA,CAAAtB,GAAA,CAAA,MAAAxuB,GAAAwuB,GAAA,EAAAA,IAAA,EAAA1sB,IAAAjJ,EAAAiJ,GAAAtM,EAAA63B,EAAA6C,IAAA/4B,EAAA,MAAAd,EAAAyL,GAAAtM,EAAA63B,EAAA6C,IAAA/4B,EAAA,EAAA,IAAA2K,KAAA3K,IAAA,GAAA6I,MAAAlJ,EAAAA,EAAA+Q,OAAA2lB,EAAA3iB,QAAA2kB,SAAA,WAAAtiB,KAAAijB,MAAA,GAAA7C,GAAA1I,KAAA/rB,EAAAitB,MAAA,KAAAsJ,gBAAA,SAAAh5B,EAAA+W,GAAA,IAAA,GAAAlN,GAAAiN,KAAAijB,MAAArC,MAAA3yB,EAAA8E,EAAA,GAAAnJ,EAAAmJ,EAAA,GAAAqtB,EAAArtB,EAAA,GAAAuuB,EAAAvuB,EAAA,GAAAotB,EAAAptB,EAAA,GAAApH,EAAAoH,EAAA,GAAA6B,EAAA7B,EAAA,GAAAutB,EAAAvtB,EAAA,GAAAqN,EAAA,EAAA,GAAAA,EAAAA,IAAA,CAAA,GAAA,GAAAA,EAAAtN,EAAAsN,GACA,EAAAlX,EAAA+W,EAAAG,OAAA,CAAA,GAAAnW,GAAA6I,EAAAsN,EAAA,IAAA9X,EAAAwK,EAAAsN,EAAA,EAAAtN,GAAAsN,KAAAnW,GAAA,GAAAA,IAAA,IAAAA,GAAA,GAAAA,IAAA,IAAAA,IAAA,GAAA6I,EAAAsN,EAAA,KAAA9X,GAAA,GAAAA,IAAA,KAAAA,GAAA,GAAAA,IAAA,IAAAA,IAAA,IAAAwK,EAAAsN,EAAA,IAAAnW,EAAAq2B,IAAAH,GAAA,GAAAA,IAAA,IAAAA,GAAA,GAAAA,IAAA,KAAAA,GAAA,EAAAA,IAAA,MAAAA,EAAAx0B,GAAAw0B,EAAAvrB,GAAAzL,EAAAiX,GAAAtN,EAAAsN,GAAA9X,IAAA2F,GAAA,GAAAA,IAAA,IAAAA,GAAA,GAAAA,IAAA,KAAAA,GAAA,GAAAA,IAAA,MAAAA,EAAArE,EAAAqE,EAAAmyB,EAAAx2B,EAAAw2B,GAAAE,EAAA1rB,EAAAA,EAAAjJ,EAAAA,EAAAw0B,EAAAA,EAAAmB,EAAAr3B,EAAA,EAAAq3B,EAAAlB,EAAAA,EAAAx2B,EAAAA,EAAAqE,EAAAA,EAAAhE,EAAA3B,EAAA,EAAAyK,EAAA,GAAAA,EAAA,GAAA9E,EAAA,EAAA8E,EAAA,GAAAA,EAAA,GAAAnJ,EAAA,EAAAmJ,EAAA,GAAAA,EAAA,GAAAqtB,EAAA,EAAArtB,EAAA,GAAAA,EAAA,GAAAuuB,EAAA,EAAAvuB,EAAA,GAAAA,EAAA,GAAAotB,EAAA,EAAAptB,EAAA,GAAAA,EAAA,GAAApH,EAAA,EAAAoH,EAAA,GAAAA,EAAA,GAAA6B,EAAA,EAAA7B,EAAA,GAAAA,EAAA,GAAAutB,EAAA,GAAAmC,YAAA,WAAA,GAAA3vB,GAAAkN,KAAA2hB,MAAA1hB,EAAAnN,EAAA8tB,MAAA7tB,EAAA,EAAAiN,KAAA4hB,YAAA3zB,EAAA,EAAA6E,EAAA+tB,QACA,OAAA5gB,GAAAhS,IAAA,IAAA,KAAA,GAAAA,EAAA,GAAAgS,GAAAhS,EAAA,KAAA,GAAA,GAAA,IAAAkyB,EAAAlnB,MAAAlG,EAAA,YAAAkN,GAAAhS,EAAA,KAAA,GAAA,GAAA,IAAA8E,EAAAD,EAAA+tB,SAAA,EAAA5gB,EAAAzY,OAAAwY,KAAA8hB,WAAA9hB,KAAAijB,OAAAvC,MAAA,WAAA,GAAA5tB,GAAAwtB,EAAAI,MAAA52B,KAAAkW,KAAA,OAAAlN,GAAAmwB,MAAAjjB,KAAAijB,MAAAvC,QAAA5tB,IAAA8H,GAAAD,OAAA2lB,EAAAoC,cAAA94B,GAAAgR,EAAAsoB,WAAA5C,EAAAqC,kBAAA/4B,IAAAR,MAGA,WAAA,GAAA+2B,GAAAtlB,SAAAD,EAAAulB,EAAAc,IAAAM,IAAApB,GAAA2C,KAAAD,KAAA1C,EAAAE,IAAAE,KAAA5iB,QAAA+Z,KAAA,SAAA9tB,EAAAw2B,GAAAx2B,EAAAoW,KAAAmjB,QAAA,GAAAv5B,GAAA8tB,KAAA,gBAAA0I,KAAAA,EAAAxlB,EAAAqb,MAAAmK,GAAA,IAAAD,GAAAv2B,EAAAm4B,UAAAp2B,EAAA,EAAAw0B,CAAAC,GAAAS,SAAAl1B,IAAAy0B,EAAAx2B,EAAA44B,SAAApC,IAAAA,EAAAW,OAAA,KAAA,GAAA53B,GAAA6W,KAAAojB,MAAAhD,EAAAM,QAAAp4B,EAAA0X,KAAAqjB,MAAAjD,EAAAM,QAAAz2B,EAAAd,EAAAy3B,MAAAhsB,EAAAtM,EAAAs4B,MAAAU,EAAA,EAAAnB,EAAAmB,EAAAA,IAAAr3B,EAAAq3B,IAAA,WAAA1sB,EAAA0sB,IAAA,SAAAn4B,GAAA03B,SAAAv4B,EAAAu4B,SAAAl1B,EAAAqU,KAAA0hB,SAAAA,MAAA,WAAA,GAAA93B,GAAAoW,KAAAmjB,OAAAv5B,GAAA83B,QAAA93B,EAAA24B,OAAAviB,KAAAqjB,QAAAd,OAAA,SAAA34B,GAAA,MAAAoW,MAAAmjB,QAAAZ,OAAA34B,GAAAoW,MAAAwiB,SAAA,SAAA54B,GAAA,GAAAw2B,GACApgB,KAAAmjB,OAAA,OAAAv5B,GAAAw2B,EAAAoC,SAAA54B,GAAAw2B,EAAAsB,QAAAtB,EAAAoC,SAAAxiB,KAAAojB,MAAA1C,QAAAI,OAAAl3B,UAGA,WAAA,GAAAX,GAAA4R,SAAAuF,EAAAnX,EAAAo3B,IAAAM,SAAA13B,GAAAg4B,IAAAqC,QAAAp1B,UAAA,SAAA+R,GAAA,GAAA3X,GAAA2X,EAAA2gB,MAAAxgB,EAAAH,EAAA4gB,SAAA+B,EAAA5iB,KAAAujB,IAAAtjB,GAAA8gB,QAAA9gB,IAAA,KAAA,GAAA9W,GAAA,EAAAiX,EAAAjX,EAAAA,GAAA,EAAA,IAAA,GAAAqQ,IAAAlR,EAAAa,IAAA,KAAA,GAAA,GAAAA,EAAA,GAAA,MAAA,IAAAb,EAAAa,EAAA,IAAA,KAAA,GAAA,IAAAA,EAAA,GAAA,GAAA,MAAA,EAAAb,EAAAa,EAAA,IAAA,KAAA,GAAA,IAAAA,EAAA,GAAA,GAAA,IAAAG,EAAA,EAAA,EAAAA,GAAA8W,EAAAjX,EAAA,IAAAG,EAAAA,IAAA2W,EAAAxY,KAAAm7B,EAAAY,OAAAhqB,IAAA,GAAA,EAAAlQ,GAAA,IAAA,IAAAhB,EAAAs6B,EAAAY,OAAA,IAAA,KAAAvjB,EAAAzY,OAAA,GAAAyY,EAAAxY,KAAAa,EAAA,OAAA2X,GAAAlZ,KAAA,KAAAkvB,MAAA,SAAAhW,GAAA,GAAA3X,GAAA2X,EAAAzY,OAAAoT,EAAAoF,KAAAujB,KAAAX,EAAAhoB,EAAA4oB,OAAA,GAAAZ,KAAAA,EAAA3iB,EAAA3M,QAAAsvB,GAAA,IAAAA,IAAAt6B,EAAAs6B,GAAA,KAAA,GAAAA,MAAAz5B,EAAA,EAAAqQ,EAAA,EACAlR,EADAkR,EACAA,IAAA,GAAAA,EAAA,EAAA,CAAA,GAAAlQ,GAAAsR,EAAAtH,QAAA2M,EAAAujB,OAAAhqB,EAAA,KAAA,GAAAA,EAAA,GAAAzG,EAAA6H,EAAAtH,QAAA2M,EAAAujB,OAAAhqB,MAAA,EAAA,GAAAA,EAAA,EAAAopB,GAAAz5B,IAAA,KAAAG,EAAAyJ,IAAA,GAAA,GAAA5J,EAAA,GAAAA,IAAA,MAAAiX,GAAAyb,OAAA+G,EAAAz5B,IAAAo6B,KAAA,wEAGA,SAAAt6B,GAAA,QAAAmX,GAAArN,EAAA6B,EAAA9B,EAAA5J,EAAA+E,EAAAqzB,EAAAr3B,GAAA,MAAA8I,GAAAA,GAAA6B,EAAA9B,GAAA8B,EAAA1L,GAAA+E,EAAAhE,GAAA8I,GAAAuuB,EAAAvuB,IAAA,GAAAuuB,GAAA1sB,EAAA,QAAAqL,GAAAlN,EAAA6B,EAAA9B,EAAA5J,EAAA+E,EAAAqzB,EAAAr3B,GAAA,MAAA8I,GAAAA,GAAA6B,EAAA1L,EAAA4J,GAAA5J,GAAA+E,EAAAhE,GAAA8I,GAAAuuB,EAAAvuB,IAAA,GAAAuuB,GAAA1sB,EAAA,QAAAtM,GAAAyK,EAAA6B,EAAA9B,EAAA5J,EAAA+E,EAAAqzB,EAAAr3B,GAAA,MAAA8I,GAAAA,GAAA6B,EAAA9B,EAAA5J,GAAA+E,EAAAhE,GAAA8I,GAAAuuB,EAAAvuB,IAAA,GAAAuuB,GAAA1sB,EAAA,QAAAgG,GAAA7H,EAAA6B,EAAA9B,EAAA5J,EAAA+E,EAAAqzB,EAAAr3B,GAAA,MAAA8I,GAAAA,GAAAD,GAAA8B,GAAA1L,IAAA+E,EAAAhE,GAAA8I,GAAAuuB,EAAAvuB,IAAA,GAAAuuB,GAAA1sB,EAAA,IAAA,GAAAguB,GAAA/nB,SAAA1R,EAAAy5B,EAAAvC,IAAA7mB,EAAArQ,EAAAw3B,UAAAr3B,EAAAH,EAAAi5B,OAAAj5B,EAAAy5B,EAAAE,KAAA/vB,KAAA0B,EAAA,EAAA,GAAAA,EAAAA,IAAA1B,EAAA0B,GAAA,WAAAxL,EAAAw6B,IAAAx6B,EAAAy6B,IAAAjvB,EAAA,IAAA,CAAAtL,GAAAA,EAAAw6B,IAAAr6B,EAAAqU,QAAA2kB,SAAA,WAAAtiB,KAAAijB,MAAA,GAAAzpB,GAAAke,MAAA,WAAA,WAAA,WAAA,aACAwK,gBAAA,SAAA5B,EAAA1rB,GAAA,IAAA,GAAA9B,GAAA,EAAA,GAAAA,EAAAA,IAAA,CAAA,GAAA5J,GAAA0L,EAAA9B,EAAA7E,EAAAqyB,EAAAp3B,EAAAo3B,GAAAp3B,GAAA,UAAA+E,GAAA,EAAAA,IAAA,IAAA,YAAAA,GAAA,GAAAA,IAAA,GAAA,GAAA6E,GAAAkN,KAAAijB,MAAArC,MAAA13B,EAAAo3B,EAAA1rB,EAAA,GAAA3G,EAAAqyB,EAAA1rB,EAAA,GAAA0sB,EAAAhB,EAAA1rB,EAAA,GAAA3K,EAAAq2B,EAAA1rB,EAAA,GAAAgvB,EAAAtD,EAAA1rB,EAAA,GAAAzL,EAAAm3B,EAAA1rB,EAAA,GAAAguB,EAAAtC,EAAA1rB,EAAA,GAAA4E,EAAA8mB,EAAA1rB,EAAA,GAAAtL,EAAAg3B,EAAA1rB,EAAA,GAAAivB,EAAAvD,EAAA1rB,EAAA,GAAAkvB,EAAAxD,EAAA1rB,EAAA,IAAAmvB,EAAAzD,EAAA1rB,EAAA,IAAA3L,EAAAq3B,EAAA1rB,EAAA,IAAAovB,EAAA1D,EAAA1rB,EAAA,IAAAqvB,EAAA3D,EAAA1rB,EAAA,IAAAH,EAAA6rB,EAAA1rB,EAAA,IAAAhL,EAAAkJ,EAAA,GAAAnH,EAAAmH,EAAA,GAAAstB,EAAAttB,EAAA,GAAAqtB,EAAArtB,EAAA,GAAAlJ,EAAAwW,EAAAxW,EAAA+B,EAAAy0B,EAAAD,EAAAj3B,EAAA,EAAA6J,EAAA,IAAAotB,EAAA/f,EAAA+f,EAAAv2B,EAAA+B,EAAAy0B,EAAAnyB,EAAA,GAAA8E,EAAA,IAAAqtB,EAAAhgB,EAAAggB,EAAAD,EAAAv2B,EAAA+B,EAAA21B,EAAA,GAAAvuB,EAAA,IAAApH,EAAAyU,EAAAzU,EAAAy0B,EAAAD,EAAAv2B,EAAAK,EAAA,GAAA8I,EAAA,IAAAnJ,EAAAwW,EAAAxW,EAAA+B,EAAAy0B,EAAAD,EAAAyD,EAAA,EAAA7wB,EAAA,IAAAotB,EAAA/f,EAAA+f,EAAAv2B,EAAA+B,EAAAy0B,EAAAj3B,EAAA,GAAA4J,EAAA,IAAAqtB,EAAAhgB,EAAAggB,EAAAD,EAAAv2B,EAAA+B,EAAAi3B,EAAA,GAAA7vB,EAAA,IAAApH,EAAAyU,EAAAzU,EAAAy0B,EAAAD,EAAAv2B,EAAA4P,EAAA,GAAAzG,EAAA,IACAnJ,EAAAwW,EAAAxW,EAAA+B,EAAAy0B,EAAAD,EAAA72B,EAAA,EAAAyJ,EAAA,IAAAotB,EAAA/f,EAAA+f,EAAAv2B,EAAA+B,EAAAy0B,EAAAyD,EAAA,GAAA9wB,EAAA,IAAAqtB,EAAAhgB,EAAAggB,EAAAD,EAAAv2B,EAAA+B,EAAAm4B,EAAA,GAAA/wB,EAAA,KAAApH,EAAAyU,EAAAzU,EAAAy0B,EAAAD,EAAAv2B,EAAAm6B,EAAA,GAAAhxB,EAAA,KAAAnJ,EAAAwW,EAAAxW,EAAA+B,EAAAy0B,EAAAD,EAAAl3B,EAAA,EAAA8J,EAAA,KAAAotB,EAAA/f,EAAA+f,EAAAv2B,EAAA+B,EAAAy0B,EAAA4D,EAAA,GAAAjxB,EAAA,KAAAqtB,EAAAhgB,EAAAggB,EAAAD,EAAAv2B,EAAA+B,EAAAs4B,EAAA,GAAAlxB,EAAA,KAAApH,EAAAyU,EAAAzU,EAAAy0B,EAAAD,EAAAv2B,EAAA6K,EAAA,GAAA1B,EAAA,KAAAnJ,EAAAqW,EAAArW,EAAA+B,EAAAy0B,EAAAD,EAAAlyB,EAAA,EAAA8E,EAAA,KAAAotB,EAAAlgB,EAAAkgB,EAAAv2B,EAAA+B,EAAAy0B,EAAAwC,EAAA,EAAA7vB,EAAA,KAAAqtB,EAAAngB,EAAAmgB,EAAAD,EAAAv2B,EAAA+B,EAAAo4B,EAAA,GAAAhxB,EAAA,KAAApH,EAAAsU,EAAAtU,EAAAy0B,EAAAD,EAAAv2B,EAAAV,EAAA,GAAA6J,EAAA,KAAAnJ,EAAAqW,EAAArW,EAAA+B,EAAAy0B,EAAAD,EAAAh3B,EAAA,EAAA4J,EAAA,KAAAotB,EAAAlgB,EAAAkgB,EAAAv2B,EAAA+B,EAAAy0B,EAAA0D,EAAA,EAAA/wB,EAAA,KAAAqtB,EAAAngB,EAAAmgB,EAAAD,EAAAv2B,EAAA+B,EAAA8I,EAAA,GAAA1B,EAAA,KAAApH,EAAAsU,EAAAtU,EAAAy0B,EAAAD,EAAAv2B,EAAAg6B,EAAA,GAAA7wB,EAAA,KAAAnJ,EAAAqW,EAAArW,EAAA+B,EAAAy0B,EAAAD,EAAA0D,EAAA,EAAA9wB,EAAA,KAAAotB,EAAAlgB,EAAAkgB,EAAAv2B,EAAA+B,EAAAy0B,EAAA6D,EAAA,EAAAlxB,EAAA,KAAAqtB,EAAAngB,EAAAmgB,EAAAD,EAAAv2B,EAAA+B,EAAA1B,EAAA,GAAA8I,EAAA,KAAApH,EAAAsU,EAAAtU,EAAAy0B,EAAAD,EAAAv2B,EAAAN,EAAA,GAAAyJ,EAAA,KAAAnJ,EAAAqW,EAAArW,EAAA+B,EAAAy0B,EAAAD,EAAA6D,EAAA,EAAAjxB,EAAA,KAAAotB,EAAAlgB,EAAAkgB,EAAAv2B,EACA+B,EAAAy0B,EAAAkB,EAAA,EAAAvuB,EAAA,KAAAqtB,EAAAngB,EAAAmgB,EAAAD,EAAAv2B,EAAA+B,EAAA6N,EAAA,GAAAzG,EAAA,KAAApH,EAAAsU,EAAAtU,EAAAy0B,EAAAD,EAAAv2B,EAAAX,EAAA,GAAA8J,EAAA,KAAAnJ,EAAAtB,EAAAsB,EAAA+B,EAAAy0B,EAAAD,EAAAh3B,EAAA,EAAA4J,EAAA,KAAAotB,EAAA73B,EAAA63B,EAAAv2B,EAAA+B,EAAAy0B,EAAA92B,EAAA,GAAAyJ,EAAA,KAAAqtB,EAAA93B,EAAA83B,EAAAD,EAAAv2B,EAAA+B,EAAAo4B,EAAA,GAAAhxB,EAAA,KAAApH,EAAArD,EAAAqD,EAAAy0B,EAAAD,EAAAv2B,EAAAq6B,EAAA,GAAAlxB,EAAA,KAAAnJ,EAAAtB,EAAAsB,EAAA+B,EAAAy0B,EAAAD,EAAAlyB,EAAA,EAAA8E,EAAA,KAAAotB,EAAA73B,EAAA63B,EAAAv2B,EAAA+B,EAAAy0B,EAAAwD,EAAA,GAAA7wB,EAAA,KAAAqtB,EAAA93B,EAAA83B,EAAAD,EAAAv2B,EAAA+B,EAAA6N,EAAA,GAAAzG,EAAA,KAAApH,EAAArD,EAAAqD,EAAAy0B,EAAAD,EAAAv2B,EAAAk6B,EAAA,GAAA/wB,EAAA,KAAAnJ,EAAAtB,EAAAsB,EAAA+B,EAAAy0B,EAAAD,EAAA6D,EAAA,EAAAjxB,EAAA,KAAAotB,EAAA73B,EAAA63B,EAAAv2B,EAAA+B,EAAAy0B,EAAAl3B,EAAA,GAAA6J,EAAA,KAAAqtB,EAAA93B,EAAA83B,EAAAD,EAAAv2B,EAAA+B,EAAA1B,EAAA,GAAA8I,EAAA,KAAApH,EAAArD,EAAAqD,EAAAy0B,EAAAD,EAAAv2B,EAAAg5B,EAAA,GAAA7vB,EAAA,KAAAnJ,EAAAtB,EAAAsB,EAAA+B,EAAAy0B,EAAAD,EAAA0D,EAAA,EAAA9wB,EAAA,KAAAotB,EAAA73B,EAAA63B,EAAAv2B,EAAA+B,EAAAy0B,EAAAn3B,EAAA,GAAA8J,EAAA,KAAAqtB,EAAA93B,EAAA83B,EAAAD,EAAAv2B,EAAA+B,EAAA8I,EAAA,GAAA1B,EAAA,KAAApH,EAAArD,EAAAqD,EAAAy0B,EAAAD,EAAAv2B,EAAA03B,EAAA,GAAAvuB,EAAA,KAAAnJ,EAAAgR,EAAAhR,EAAA+B,EAAAy0B,EAAAD,EAAAj3B,EAAA,EAAA6J,EAAA,KAAAotB,EAAAvlB,EAAAulB,EAAAv2B,EAAA+B,EAAAy0B,EAAA5mB,EAAA,GAAAzG,EAAA,KAAAqtB,EAAAxlB,EAAAwlB,EAAAD,EAAAv2B,EAAA+B,EACAs4B,EAAA,GAAAlxB,EAAA,KAAApH,EAAAiP,EAAAjP,EAAAy0B,EAAAD,EAAAv2B,EAAAT,EAAA,GAAA4J,EAAA,KAAAnJ,EAAAgR,EAAAhR,EAAA+B,EAAAy0B,EAAAD,EAAAl3B,EAAA,EAAA8J,EAAA,KAAAotB,EAAAvlB,EAAAulB,EAAAv2B,EAAA+B,EAAAy0B,EAAAn2B,EAAA,GAAA8I,EAAA,KAAAqtB,EAAAxlB,EAAAwlB,EAAAD,EAAAv2B,EAAA+B,EAAAm4B,EAAA,GAAA/wB,EAAA,KAAApH,EAAAiP,EAAAjP,EAAAy0B,EAAAD,EAAAv2B,EAAAqE,EAAA,GAAA8E,EAAA,KAAAnJ,EAAAgR,EAAAhR,EAAA+B,EAAAy0B,EAAAD,EAAA72B,EAAA,EAAAyJ,EAAA,KAAAotB,EAAAvlB,EAAAulB,EAAAv2B,EAAA+B,EAAAy0B,EAAA3rB,EAAA,GAAA1B,EAAA,KAAAqtB,EAAAxlB,EAAAwlB,EAAAD,EAAAv2B,EAAA+B,EAAAi3B,EAAA,GAAA7vB,EAAA,KAAApH,EAAAiP,EAAAjP,EAAAy0B,EAAAD,EAAAv2B,EAAAo6B,EAAA,GAAAjxB,EAAA,KAAAnJ,EAAAgR,EAAAhR,EAAA+B,EAAAy0B,EAAAD,EAAAyD,EAAA,EAAA7wB,EAAA,KAAAotB,EAAAvlB,EAAAulB,EAAAv2B,EAAA+B,EAAAy0B,EAAA2D,EAAA,GAAAhxB,EAAA,KAAAqtB,EAAAxlB,EAAAwlB,EAAAD,EAAAv2B,EAAA+B,EAAA21B,EAAA,GAAAvuB,EAAA,KAAApH,EAAAiP,EAAAjP,EAAAy0B,EAAAD,EAAAv2B,EAAAi6B,EAAA,GAAA9wB,EAAA,IAAAD,GAAA,GAAAA,EAAA,GAAAlJ,EAAA,EAAAkJ,EAAA,GAAAA,EAAA,GAAAnH,EAAA,EAAAmH,EAAA,GAAAA,EAAA,GAAAstB,EAAA,EAAAttB,EAAA,GAAAA,EAAA,GAAAqtB,EAAA,GAAAsC,YAAA,WAAA,GAAA1vB,GAAAiN,KAAA2hB,MAAA/sB,EAAA7B,EAAA6tB,MAAA9tB,EAAA,EAAAkN,KAAA4hB,YAAA14B,EAAA,EAAA6J,EAAA8tB,QAAAjsB,GAAA1L,IAAA,IAAA,KAAA,GAAAA,EAAA,EAAA,IAAA+E,GAAAhF,EAAAgQ,MAAAnG,EACA,WAAA,KAAA8B,GAAA1L,EAAA,KAAA,GAAA,GAAA,IAAA,UAAA+E,GAAA,EAAAA,IAAA,IAAA,YAAAA,GAAA,GAAAA,IAAA,GAAA2G,GAAA1L,EAAA,KAAA,GAAA,GAAA,IAAA,UAAA4J,GAAA,EAAAA,IAAA,IAAA,YAAAA,GAAA,GAAAA,IAAA,GAAAC,EAAA8tB,SAAA,GAAAjsB,EAAApN,OAAA,GAAAwY,KAAA8hB,WAAA/uB,EAAAiN,KAAAijB,MAAAruB,EAAA7B,EAAA6tB,MAAA9tB,EAAA,EAAA,EAAAA,EAAAA,IAAA5J,EAAA0L,EAAA9B,GAAA8B,EAAA9B,GAAA,UAAA5J,GAAA,EAAAA,IAAA,IAAA,YAAAA,GAAA,GAAAA,IAAA,EAAA,OAAA6J,IAAA2tB,MAAA,WAAA,GAAA3tB,GAAAzJ,EAAAo3B,MAAA52B,KAAAkW,KAAA,OAAAjN,GAAAkwB,MAAAjjB,KAAAijB,MAAAvC,QAAA3tB,KAAA6vB,EAAAe,IAAAr6B,EAAAo5B,cAAAv5B,GAAAy5B,EAAAsB,QAAA56B,EAAAq5B,kBAAAx5B,IAAAC,MACA,WAAA,GAAAH,GAAA4R,SAAAuF,EAAAnX,EAAAo3B,IAAApgB,EAAAG,EAAAmgB,KAAAj4B,EAAA8X,EAAAugB,UAAAvgB,EAAAnX,EAAA65B,KAAAloB,EAAAwF,EAAA+jB,OAAAlkB,EAAAtC,QAAA0kB,IAAApiB,EAAAtC,QAAAymB,QAAA,EAAAC,OAAAjkB,EAAAujB,IAAAlY,WAAA,IAAAiM,KAAA,SAAAzX,GAAAD,KAAAqiB,IAAAriB,KAAAqiB,IAAA1kB,OAAAsC,IAAAqkB,QAAA,SAAArkB,EAAA9W,GAAA,IAAA,GAAAiX,GAAAJ,KAAAqiB,IAAAznB,EAAAwF,EAAAikB,OAAAxI,SAAA9oB,EAAAzK,EAAAuzB,SAAA5yB,EAAA8J,EAAA6tB,MAAAN,EAAAlgB,EAAAgkB,QAAAhkB,EAAAA,EAAAqL,WAAAxiB,EAAAzB,OAAA84B,GAAA,CAAA1rB,GAAAgG,EAAA2nB,OAAA3tB,EAAA,IAAAA,GAAAgG,EAAA2nB,OAAAtiB,GAAAuiB,SAAAr5B,EAAAyR,GAAA8mB,OAAA,KAAA,GAAA5uB,GAAA,EAAAsN,EAAAtN,EAAAA,IAAA8B,EAAAgG,EAAA4nB,SAAA5tB,GAAAgG,EAAA8mB,OAAA3uB,GAAA+tB,OAAAlsB,GAAA,MAAA7B,GAAA8tB,SAAA,EAAAP,EAAAvtB,IAAA9J,GAAAk7B,OAAA,SAAAlkB,EAAA3X,EAAA8X,GAAA,MAAAxF,GAAAihB,OAAAzb,GAAAkkB,QAAArkB,EACA3X,OAGAuS,SAAAwlB,IAAAkE,QAAA,SAAAt7B,GAAA,GAAAmX,GAAAvF,SAAAoF,EAAAG,EAAAigB,IAAA/3B,EAAA2X,EAAAsgB,KAAA3lB,EAAAqF,EAAA0gB,UAAAiC,EAAA3iB,EAAAwhB,uBAAAt4B,EAAAiX,EAAA6gB,IAAAqC,OAAA9pB,EAAA4G,EAAA0iB,KAAAqB,OAAA76B,EAAA2W,EAAAskB,OAAA3B,EAAAjlB,QAAA0kB,IAAA/5B,EAAAqV,SAAA6mB,gBAAA,SAAAv2B,EAAA6E,GAAA,MAAAkN,MAAA6b,OAAA7b,KAAAykB,gBAAAx2B,EAAA6E,IAAA4xB,gBAAA,SAAAz2B,EAAA6E,GAAA,MAAAkN,MAAA6b,OAAA7b,KAAA2kB,gBAAA12B,EAAA6E,IAAA4kB,KAAA,SAAAzpB,EAAA6E,EAAAC,GAAAiN,KAAAqiB,IAAAriB,KAAAqiB,IAAA1kB,OAAA5K,GAAAiN,KAAA4kB,WAAA32B,EAAA+R,KAAA6kB,KAAA/xB,EAAAkN,KAAA0hB,SAAAA,MAAA,WAAAkB,EAAAlB,MAAA53B,KAAAkW,MAAAA,KAAAsiB,YAAArX,QAAA,SAAAhd,GAAA,MAAA+R,MAAA6hB,QAAA5zB,GAAA+R,KAAA8hB,YACAU,SAAA,SAAAv0B,GAAA,MAAAA,IAAA+R,KAAA6hB,QAAA5zB,GAAA+R,KAAAyiB,eAAA2B,QAAA,EAAAU,OAAA,EAAAL,gBAAA,EAAAE,gBAAA,EAAAjC,cAAA,SAAAz0B,GAAA,OAAAZ,QAAA,SAAA0F,EAAA9I,EAAAgW,GAAA,OAAA,gBAAAhW,GAAAf,EAAA4J,GAAAzF,QAAAY,EAAA8E,EAAA9I,EAAAgW,IAAAxS,QAAA,SAAAsF,EAAA9I,EAAAgW,GAAA,OAAA,gBAAAhW,GAAAf,EAAA4J,GAAArF,QAAAQ,EAAA8E,EAAA9I,EAAAgW,OAAAA,GAAA8kB,aAAAz7B,EAAAqU,QAAA8kB,YAAA,WAAA,MAAAziB,MAAA8hB,UAAA,IAAAC,UAAA,GAAA,IAAAhvB,GAAAqN,EAAAlL,QAAAT,EAAA,SAAAxG,EAAA6E,EAAAC,GAAA,GAAA7J,GAAA8W,KAAAglB,GAAA97B,GAAA8W,KAAAglB,IAAA/7B,EAAAC,EAAA8W,KAAAilB,UAAA,KAAA,GAAAhlB,GAAA,EAAAlN,EAAAkN,EAAAA,IAAAhS,EAAA6E,EAAAmN,IACA/W,EAAA+W,IAAAqgB,GAAArgB,EAAAilB,gBAAA58B,EAAAqV,QAAA6mB,gBAAA,SAAAv2B,EAAA6E,GAAA,MAAAkN,MAAAmlB,UAAAtJ,OAAA5tB,EAAA6E,IAAA4xB,gBAAA,SAAAz2B,EAAA6E,GAAA,MAAAkN,MAAAolB,UAAAvJ,OAAA5tB,EAAA6E,IAAA4kB,KAAA,SAAAzpB,EAAA6E,GAAAkN,KAAAqlB,QAAAp3B,EAAA+R,KAAAglB,IAAAlyB,MAAA6K,QAAA2iB,GAAA6E,UAAA7E,EAAA3iB,QAAA2nB,aAAA,SAAAr3B,EAAA6E,GAAA,GAAAC,GAAAiN,KAAAqlB,QAAAn8B,EAAA6J,EAAAgvB,SAAAttB,GAAA3K,KAAAkW,KAAA/R,EAAA6E,EAAA5J,GAAA6J,EAAAwyB,aAAAt3B,EAAA6E,GAAAkN,KAAAilB,WAAAh3B,EAAA2qB,MAAA9lB,EAAAA,EAAA5J,MAAAo3B,EAAA8E,UAAA9E,EAAA3iB,QAAA2nB,aAAA,SAAAr3B,EAAA6E,GAAA,GAAAC,GAAAiN,KAAAqlB,QAAAn8B,EAAA6J,EAAAgvB,UAAA9hB,EAAAhS,EAAA2qB,MAAA9lB,EAAAA,EAAA5J,EAAA6J,GAAAyyB,aAAAv3B,EAAA6E,GAAA2B,EAAA3K,KAAAkW,KACA/R,EAAA6E,EAAA5J,GAAA8W,KAAAilB,WAAAhlB,KAAAlN,EAAAA,EAAA0yB,IAAAnF,EAAAA,GAAAlgB,EAAAslB,QAAAC,OAAAD,IAAA,SAAA5yB,EAAAC,GAAA,IAAA,GAAA7J,GAAA,EAAA6J,EAAA7J,EAAAA,EAAA4J,EAAA+tB,SAAA33B,EAAA+W,EAAA/W,GAAA,GAAAA,GAAA,GAAAA,GAAA,EAAAA,EAAAZ,KAAAsM,EAAA,EAAA1L,EAAA0L,EAAAA,GAAA,EAAAtM,EAAAb,KAAAwY,EAAA/W,GAAA0R,EAAAihB,OAAAvzB,EAAAY,GAAA4J,EAAAguB,OAAA53B,IAAA08B,MAAA,SAAA9yB,GAAAA,EAAA+tB,UAAA,IAAA/tB,EAAA8tB,MAAA9tB,EAAA+tB,SAAA,IAAA,KAAA5gB,EAAA4lB,YAAAv8B,EAAAqU,QAAA0kB,IAAA/4B,EAAA+4B,IAAA1kB,QAAAzI,KAAAnC,EAAA+yB,QAAAxF,IAAAoB,MAAA,WAAAp4B,EAAAo4B,MAAA53B,KAAAkW,KAAA,IAAAlN,GAAAkN,KAAAqiB,IAAAtvB,EAAAD,EAAA2I,GAAA3I,EAAAA,EAAAoC,IAAA,IAAA8K,KAAA4kB,YAAA5kB,KAAAykB,gBAAA,GAAAv7B,GAAA4J,EAAA0xB,oBAAAt7B,GAAA4J,EAAA4xB,gBAAA1kB,KAAAgiB,eAAA,CAAAhiB,MAAA+lB,MAAA78B,EAAAY,KAAAgJ,EACAkN,KAAAjN,GAAAA,EAAA6tB,QAAAsB,gBAAA,SAAApvB,EAAAC,GAAAiN,KAAA+lB,MAAAT,aAAAxyB,EAAAC,IAAA0vB,YAAA,WAAA,GAAA3vB,GAAAkN,KAAAqiB,IAAAyD,OAAA,IAAA9lB,KAAA4kB,YAAA5kB,KAAAykB,gBAAA,CAAA3xB,EAAA4yB,IAAA1lB,KAAA2hB,MAAA3hB,KAAA+hB,UAAA,IAAAhvB,GAAAiN,KAAA8hB,UAAA,OAAA/uB,GAAAiN,KAAA8hB,UAAA,GAAAhvB,EAAA8yB,MAAA7yB,EAAA,OAAAA,IAAAgvB,UAAA,GAAA,IAAAntB,GAAAqL,EAAA+lB,aAAA19B,EAAAqV,QAAA+Z,KAAA,SAAA5kB,GAAAkN,KAAAwgB,MAAA1tB,IAAAvJ,SAAA,SAAAuJ,GAAA,OAAAA,GAAAkN,KAAAimB,WAAA/3B,UAAA8R,SAAAjN,GAAAqN,EAAA8lB,WAAAC,SAAAj4B,UAAA,SAAA4E,GAAA,GAAAC,GAAAD,EAAAoJ,UAAA,OAAApJ,GAAAA,EAAAszB,MAAAtzB,EAAA8H,EAAAihB,QAAA,WACA,aAAAiF,OAAAhuB,GAAAguB,OAAA/tB,GAAAA,GAAAxJ,SAAAJ,IAAA8sB,MAAA,SAAAnjB,GAAAA,EAAA3J,EAAA8sB,MAAAnjB,EAAA,IAAAC,GAAAD,EAAA8tB,KAAA,IAAA,YAAA7tB,EAAA,IAAA,YAAAA,EAAA,GAAA,CAAA,GAAA7J,GAAA0R,EAAAihB,OAAA9oB,EAAA6lB,MAAA,EAAA,GAAA7lB,GAAAovB,OAAA,EAAA,GAAArvB,EAAA+tB,UAAA,GAAA,MAAAjsB,GAAAinB,QAAA3f,WAAApJ,EAAAszB,KAAAl9B,MAAA4J,EAAAmN,EAAAomB,mBAAA/9B,EAAAqV,QAAA0kB,IAAA/5B,EAAAqV,QAAAuoB,OAAAnzB,IAAA1F,QAAA,SAAAyF,EAAAC,EAAA7J,EAAA+W,GAAAA,EAAAD,KAAAqiB,IAAA1kB,OAAAsC,EAAA,IAAA3X,GAAAwK,EAAA0xB,gBAAAt7B,EAAA+W,EAAA,OAAAlN,GAAAzK,EAAAk6B,SAAAzvB,GAAAzK,EAAAA,EAAA+5B,IAAAztB,EAAAinB,QAAA3f,WAAAnJ,EAAA5L,IAAA+B,EAAAuS,GAAAnT,EAAAmT,GAAA6qB,UAAAxzB,EAAAoC,KAAA5M,EAAA4M,KAAA4wB,QAAAx9B,EAAAw9B,QAAA/D,UAAAjvB,EAAAivB,UAAAkE,UAAAhmB,EAAAimB,UACAz4B,QAAA,SAAAqF,EAAAC,EAAA7J,EAAA+W,GAAA,MAAAA,GAAAD,KAAAqiB,IAAA1kB,OAAAsC,GAAAlN,EAAAiN,KAAAumB,OAAAxzB,EAAAkN,EAAAimB,QAAApzB,EAAA4xB,gBAAAx7B,EAAA+W,GAAAuiB,SAAAzvB,EAAAmJ,aAAAqqB,OAAA,SAAAzzB,EAAAC,GAAA,MAAA,gBAAAD,GAAAC,EAAAkjB,MAAAnjB,EAAAkN,MAAAlN,KAAAsN,GAAAA,EAAAomB,QAAAL,SAAAM,QAAA,SAAA3zB,EAAAC,EAAA7J,EAAA+W,GAAA,MAAAA,KAAAA,EAAArF,EAAAvR,OAAA,IAAAyJ,EAAA0G,EAAAqiB,QAAAuI,QAAArxB,EAAA7J,IAAAo7B,QAAAxxB,EAAAmN,GAAA/W,EAAA0R,EAAAihB,OAAA/oB,EAAA8tB,MAAAhI,MAAA7lB,GAAA,EAAA7J,GAAA4J,EAAA+tB,SAAA,EAAA9tB,EAAA6B,EAAAinB,QAAA10B,IAAA2L,EAAA2I,GAAAvS,EAAAk9B,KAAAnmB,MAAA/W,EAAA+W,EAAAymB,oBAAA5zB,EAAA6K,QAAA0kB,IAAAvvB,EAAAuvB,IAAA1kB,QAAA6oB,IAAApmB,IAAA/S,QAAA,SAAA0F,EAAA7J,EAAA+W,EAAA3X,GACA,MADAA,GAAA0X,KAAAqiB,IAAA1kB,OAAArV,GAAA2X,EAAA3X,EAAAk+B,IAAAC,QAAAxmB,EACAlN,EAAAqxB,QAAArxB,EAAA+xB,QAAAx8B,EAAAmT,GAAAwE,EAAAxE,GAAA1I,EAAAD,EAAAzF,QAAAvD,KAAAkW,KAAAjN,EAAA7J,EAAA+W,EAAA9Y,IAAAmB,GAAAyK,EAAAytB,MAAAvgB,GAAAlN,GAAAtF,QAAA,SAAAsF,EAAA7J,EAAA+W,EAAA3X,GAAA,MAAAA,GAAA0X,KAAAqiB,IAAA1kB,OAAArV,GAAAY,EAAA8W,KAAAumB,OAAAr9B,EAAAZ,EAAA49B,QAAAjmB,EAAA3X,EAAAk+B,IAAAC,QAAAxmB,EAAAlN,EAAAqxB,QAAArxB,EAAA+xB,OAAA57B,EAAAk9B,MAAA99B,EAAAmT,GAAAwE,EAAAxE,GAAA3I,EAAArF,QAAA3D,KAAAkW,KAAAjN,EAAA7J,EAAA+W,EAAA9Y,IAAAmB,SAGA,WAAA,IAAA,GAAAW,GAAA4R,SAAAuF,EAAAnX,EAAAo3B,IAAAwF,YAAA5lB,EAAAhX,EAAA65B,KAAAx6B,KAAAsS,KAAAgoB,KAAAz5B,KAAAqQ,KAAAlQ,KAAAyJ,KAAA0B,KAAA6rB,KAAA1rB,KAAA9B,KAAA5J,EAAA,EAAA,IAAAA,EAAAA,IAAA4J,EAAA5J,GAAA,IAAAA,EAAAA,GAAA,EAAAA,GAAA,EAAA,GAAA,KAAA,GAAA+E,GAAA,EAAAqzB,EAAA,EAAAp4B,EAAA,EAAA,IAAAA,EAAAA,IAAA,CAAA,GAAAe,GAAAq3B,EAAAA,GAAA,EAAAA,GAAA,EAAAA,GAAA,EAAAA,GAAA,EAAAr3B,EAAAA,IAAA,EAAA,IAAAA,EAAA,EAAA3B,GAAA2F,GAAAhE,EAAA2Q,EAAA3Q,GAAAgE,CAAA,IAAA21B,GAAA9wB,EAAA7E,GAAA04B,EAAA7zB,EAAA8wB,GAAAgD,EAAA9zB,EAAA6zB,GAAAE,EAAA,IAAA/zB,EAAA7I,GAAA,SAAAA,CAAA24B,GAAA30B,GAAA44B,GAAA,GAAAA,IAAA,EAAA19B,EAAA8E,GAAA44B,GAAA,GAAAA,IAAA,GAAArtB,EAAAvL,GAAA44B,GAAA,EAAAA,IAAA,GAAAv9B,EAAA2E,GAAA44B,EAAAA,EAAA,SAAAD,EAAA,MAAAD,EAAA,IAAA/C,EAAA,SAAA31B,EAAA8E,EAAA9I,GAAA48B,GAAA,GAAAA,IAAA,EAAApyB,EAAAxK,GAAA48B,GAAA,GAAAA,IAAA,GAAAvG,EAAAr2B,GAAA48B,GAAA,EAAAA,IAAA,GAAAjyB,EAAA3K,GAAA48B,EAAA54B,GAAAA,EAAA21B,EAAA9wB,EAAAA,EAAAA,EAAA8zB,EAAAhD,KAAAtC,GAAAxuB,EAAAA,EAAAwuB,KAAArzB,EAAAqzB,EAAA,EAAA,GAAAwF,IAAA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,GAAA,GAAA,IAAA,GAAA,IAAA7mB,EAAAA,EAAA8mB,IAAA3mB,EAAAzC,QAAA2kB,SAAA,WAAA,IAAA,GAAAxvB,GAAAkN,KAAA6kB,KAAA37B,EAAA4J,EAAA8tB,MAAA3gB,EAAAnN,EAAA+tB,SAAA,EAAA/tB,EAAA,IAAAkN,KAAAgnB,SAAA/mB,EAAA,GAAA,GAAAhS,EAAA+R,KAAAinB,gBAAA3F,EAAA,EAAAxuB,EAAAwuB,EAAAA,IAAA,GAAArhB,EAAAqhB,EAAArzB,EAAAqzB,GAAAp4B,EAAAo4B,OAAA,CAAA,GAAAr3B,GAAAgE,EAAAqzB,EAAA,EAAAA,GAAArhB,EAAAA,EAAA,GAAA,GAAAqhB,EAAArhB,IAAAhW,EAAA3B,EAAA2B,IAAA,KAAA,GAAA3B,EAAA2B,IAAA,GAAA,MAAA,GAAA3B,EAAA2B,IAAA,EAAA,MAAA,EAAA3B,EAAA,IAAA2B,KAAAA,EAAAA,GAAA,EAAAA,IAAA,GAAAA,EAAA3B,EAAA2B,IAAA,KAAA,GAAA3B,EAAA2B,IAAA,GAAA,MAAA,GAAA3B,EAAA2B,IAAA,EAAA,MAAA,EAAA3B,EAAA,IAAA2B,GAAAA,GAAA68B,EAAAxF,EAAArhB,EAAA,IAAA,IAAAhS,EAAAqzB,GAAArzB,EAAAqzB,EAAArhB,GAAAhW,EAAA,IAAAf,EAAA8W,KAAAknB,mBAAAjnB,EAAA,EAAAnN,EAAAmN,EAAAA,IAAAqhB,EAAAxuB,EAAAmN,EAAAhW,EAAAgW,EAAA,EAAAhS,EAAAqzB,GAAArzB,EAAAqzB,EAAA,GAAAp4B,EAAA+W,GAAA,EAAAA,GAAA,GAAAqhB,EAAAr3B,EAAA8I,EAAAzK,EAAA2B,IAAA,KAAAwK,EAAAnM,EAAA2B,IAAA,GAAA,MAAAq2B,EAAAh4B,EAAA2B,IACA,EAAA,MAAA2K,EAAAtM,EAAA,IAAA2B,KAAAs7B,aAAA,SAAAzyB,EAAAC,GAAAiN,KAAAmnB,cAAAr0B,EAAAC,EAAAiN,KAAAinB,aAAArE,EAAAz5B,EAAAqQ,EAAAlQ,EAAAhB,IAAAk9B,aAAA,SAAA1yB,EAAA5J,GAAA,GAAA+W,GAAAnN,EAAA5J,EAAA,EAAA4J,GAAA5J,EAAA,GAAA4J,EAAA5J,EAAA,GAAA4J,EAAA5J,EAAA,GAAA+W,EAAAD,KAAAmnB,cAAAr0B,EAAA5J,EAAA8W,KAAAknB,gBAAAn0B,EAAA0B,EAAA6rB,EAAA1rB,EAAAgG,GAAAqF,EAAAnN,EAAA5J,EAAA,GAAA4J,EAAA5J,EAAA,GAAA4J,EAAA5J,EAAA,GAAA4J,EAAA5J,EAAA,GAAA+W,GAAAknB,cAAA,SAAAr0B,EAAAC,EAAA7J,EAAA+W,EAAAhS,EAAAqzB,EAAAh5B,EAAAsB,GAAA,IAAA,GAAA+B,GAAAqU,KAAAgnB,SAAA5G,EAAAttB,EAAAC,GAAA7J,EAAA,GAAAi3B,EAAArtB,EAAAC,EAAA,GAAA7J,EAAA,GAAAe,EAAA6I,EAAAC,EAAA,GAAA7J,EAAA,GAAA0L,EAAA9B,EAAAC,EAAA,GAAA7J,EAAA,GAAAkX,EAAA,EAAAjX,EAAA,EAAAwC,EAAAxC,EAAAA,IAAA,GAAAm3B,GAAArgB,EAAAmgB,IAAA,IAAAnyB,EAAAkyB,IAAA,GAAA,KAAAmB,EAAAr3B,IAAA,EAAA,KAAA3B,EAAA,IAAAsM,GAAA1L,EAAAkX,KAAAxF,EAAAqF,EAAAkgB,IAAA,IAAAlyB,EAAAhE,IAAA,GAAA,KAAAq3B,EAAA1sB,IAAA,EAAA,KAAAtM,EAAA,IAAA83B,GAAAl3B,EAAAkX,KAAAwiB,EACA3iB,EAAAhW,IAAA,IAAAgE,EAAA2G,IAAA,GAAA,KAAA0sB,EAAAlB,IAAA,EAAA,KAAA93B,EAAA,IAAA63B,GAAAj3B,EAAAkX,KAAAxL,EAAAqL,EAAArL,IAAA,IAAA3G,EAAAmyB,IAAA,GAAA,KAAAkB,EAAAnB,IAAA,EAAA,KAAA73B,EAAA,IAAA2B,GAAAf,EAAAkX,KAAAggB,EAAAE,EAAAH,EAAAvlB,EAAA3Q,EAAA24B,CAAAtC,IAAA12B,EAAAw2B,IAAA,KAAA,GAAAx2B,EAAAu2B,IAAA,GAAA,MAAA,GAAAv2B,EAAAK,IAAA,EAAA,MAAA,EAAAL,EAAA,IAAAgL,IAAA1L,EAAAkX,KAAAxF,GAAAhR,EAAAu2B,IAAA,KAAA,GAAAv2B,EAAAK,IAAA,GAAA,MAAA,GAAAL,EAAAgL,IAAA,EAAA,MAAA,EAAAhL,EAAA,IAAAw2B,IAAAl3B,EAAAkX,KAAAwiB,GAAAh5B,EAAAK,IAAA,KAAA,GAAAL,EAAAgL,IAAA,GAAA,MAAA,GAAAhL,EAAAw2B,IAAA,EAAA,MAAA,EAAAx2B,EAAA,IAAAu2B,IAAAj3B,EAAAkX,KAAAxL,GAAAhL,EAAAgL,IAAA,KAAA,GAAAhL,EAAAw2B,IAAA,GAAA,MAAA,GAAAx2B,EAAAu2B,IAAA,EAAA,MAAA,EAAAv2B,EAAA,IAAAK,IAAAf,EAAAkX,KAAAtN,EAAAC,GAAAutB,EAAAxtB,EAAAC,EAAA,GAAA6H,EAAA9H,EAAAC,EAAA,GAAA6vB,EAAA9vB,EAAAC,EAAA,GAAA6B,GAAAwvB,QAAA,GAAAn7B,GAAA89B,IAAA3mB,EAAAsiB,cAAAziB,MAGApF,SAAA3F,KAAAkyB,IAAA,WACA,GAAAA,GAAAvsB,SAAAwlB,IAAA6E,gBAAAvnB,QAcA,OAZAypB,GAAAjC,UAAAiC,EAAAzpB,QACA2nB,aAAA,SAAA1E,EAAAyG,GACArnB,KAAAqlB,QAAAE,aAAA3E,EAAAyG,MAIAD,EAAAhC,UAAAgC,EAAAzpB,QACA2nB,aAAA,SAAA1E,EAAAyG,GACArnB,KAAAqlB,QAAAG,aAAA5E,EAAAyG,MAIAD","file":"ringcentral-bundle.min.js","sourcesContent":["// Version: 3.7.13\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     JSON     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\n(window['JSON'] && window['JSON']['stringify']) || (function () {\n    window['JSON'] || (window['JSON'] = {});\n\n    function toJSON(key) {\n        try      { return this.valueOf() }\n        catch(e) { return null }\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n    function quote(string) {\n        escapable.lastIndex = 0;\n        return escapable.test(string) ?\n            '\"' + string.replace(escapable, function (a) {\n                var c = meta[a];\n                return typeof c === 'string' ? c :\n                    '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n            }) + '\"' :\n            '\"' + string + '\"';\n    }\n\n    function str(key, holder) {\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            partial,\n            mind  = gap,\n            value = holder[key];\n\n        if (value && typeof value === 'object') {\n            value = toJSON.call( value, key );\n        }\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n        switch (typeof value) {\n        case 'string':\n            return quote(value);\n\n        case 'number':\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n            return String(value);\n\n        case 'object':\n\n            if (!value) {\n                return 'null';\n            }\n\n            gap += indent;\n            partial = [];\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n                v = partial.length === 0 ? '[]' :\n                    gap ? '[\\n' + gap +\n                            partial.join(',\\n' + gap) + '\\n' +\n                                mind + ']' :\n                          '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n                for (k in value) {\n                    if (Object.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n\n            v = partial.length === 0 ? '{}' :\n                gap ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' +\n                        mind + '}' : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n    if (typeof JSON['stringify'] !== 'function') {\n        JSON['stringify'] = function (value, replacer, space) {\n            var i;\n            gap = '';\n            indent = '';\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                     typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n            return str('', {'': value});\n        };\n    }\n\n    if (typeof JSON['parse'] !== 'function') {\n        // JSON is parsed on the server for security.\n        JSON['parse'] = function (text) {return eval('('+text+')')};\n    }\n}());\nvar NOW             = 1\n,   READY           = false\n,   READY_BUFFER    = []\n,   PRESENCE_SUFFIX = '-pnpres'\n,   DEF_WINDOWING   = 10     // MILLISECONDS.\n,   DEF_TIMEOUT     = 10000  // MILLISECONDS.\n,   DEF_SUB_TIMEOUT = 310    // SECONDS.\n,   DEF_KEEPALIVE   = 60     // SECONDS (FOR TIMESYNC).\n,   SECOND          = 1000   // A THOUSAND MILLISECONDS.\n,   URLBIT          = '/'\n,   PARAMSBIT       = '&'\n,   PRESENCE_HB_THRESHOLD = 5\n,   PRESENCE_HB_DEFAULT  = 30\n,   SDK_VER         = '3.7.13'\n,   REPL            = /{([\\w\\-]+)}/g;\n\n/**\n * UTILITIES\n */\nfunction unique() { return'x'+ ++NOW+''+(+new Date) }\nfunction rnow()   { return+new Date }\n\n/**\n * NEXTORIGIN\n * ==========\n * var next_origin = nextorigin();\n */\nvar nextorigin = (function() {\n    var max = 20\n    ,   ori = Math.floor(Math.random() * max);\n    return function( origin, failover ) {\n        return origin.indexOf('pubsub.') > 0\n            && origin.replace(\n             'pubsub', 'ps' + (\n                failover ? generate_uuid().split('-')[0] :\n                (++ori < max? ori : ori=1)\n            ) ) || origin;\n    }\n})();\n\n\n/**\n * Build Url\n * =======\n *\n */\nfunction build_url( url_components, url_params ) {\n    var url    = url_components.join(URLBIT)\n    ,   params = [];\n\n    if (!url_params) return url;\n\n    each( url_params, function( key, value ) {\n        var value_str = (typeof value == 'object')?JSON['stringify'](value):value;\n        (typeof value != 'undefined' &&\n            value != null && encode(value_str).length > 0\n        ) && params.push(key + \"=\" + encode(value_str));\n    } );\n\n    url += \"?\" + params.join(PARAMSBIT);\n    return url;\n}\n\n/**\n * UPDATER\n * =======\n * var timestamp = unique();\n */\nfunction updater( fun, rate ) {\n    var timeout\n    ,   last   = 0\n    ,   runnit = function() {\n        if (last + rate > rnow()) {\n            clearTimeout(timeout);\n            timeout = setTimeout( runnit, rate );\n        }\n        else {\n            last = rnow();\n            fun();\n        }\n    };\n\n    return runnit;\n}\n\n/**\n * GREP\n * ====\n * var list = grep( [1,2,3], function(item) { return item % 2 } )\n */\nfunction grep( list, fun ) {\n    var fin = [];\n    each( list || [], function(l) { fun(l) && fin.push(l) } );\n    return fin\n}\n\n/**\n * SUPPLANT\n * ========\n * var text = supplant( 'Hello {name}!', { name : 'John' } )\n */\nfunction supplant( str, values ) {\n    return str.replace( REPL, function( _, match ) {\n        return values[match] || _\n    } );\n}\n\n/**\n * timeout\n * =======\n * timeout( function(){}, 100 );\n */\nfunction timeout( fun, wait ) {\n    return setTimeout( fun, wait );\n}\n\n/**\n * uuid\n * ====\n * var my_uuid = generate_uuid();\n */\nfunction generate_uuid(callback) {\n    var u = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,\n    function(c) {\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n        return v.toString(16);\n    });\n    if (callback) callback(u);\n    return u;\n}\n\nfunction isArray(arg) {\n  return !!arg && typeof arg !== 'string' && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n  //return !!arg && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n}\n\n/**\n * EACH\n * ====\n * each( [1,2,3], function(item) { } )\n */\nfunction each( o, f) {\n    if ( !o || !f ) return;\n\n    if ( isArray(o) )\n        for ( var i = 0, l = o.length; i < l; )\n            f.call( o[i], o[i], i++ );\n    else\n        for ( var i in o )\n            o.hasOwnProperty    &&\n            o.hasOwnProperty(i) &&\n            f.call( o[i], i, o[i] );\n}\n\n/**\n * MAP\n * ===\n * var list = map( [1,2,3], function(item) { return item + 1 } )\n */\nfunction map( list, fun ) {\n    var fin = [];\n    each( list || [], function( k, v ) { fin.push(fun( k, v )) } );\n    return fin;\n}\n\n\nfunction pam_encode(str) {\n  return encodeURIComponent(str).replace(/[!'()*~]/g, function(c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\n/**\n * ENCODE\n * ======\n * var encoded_data = encode('path');\n */\nfunction encode(path) { return encodeURIComponent(path) }\n\n/**\n * Generate Subscription Channel List\n * ==================================\n * generate_channel_list(channels_object);\n */\nfunction generate_channel_list(channels, nopresence) {\n    var list = [];\n    each( channels, function( channel, status ) {\n        if (nopresence) {\n            if(channel.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel);\n            }\n        } else {\n            if (status.subscribed) list.push(channel);\n        }\n    });\n    return list.sort();\n}\n\n/**\n * Generate Subscription Channel Groups List\n * ==================================\n * generate_channel_group_list(channels_groups object);\n */\nfunction generate_channel_group_list(channel_groups, nopresence) {\n    var list = [];\n    each(channel_groups, function( channel_group, status ) {\n        if (nopresence) {\n            if(channel_group.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel_group);\n            }\n        } else {\n            if (status.subscribed) list.push(channel_group);\n        }\n    });\n    return list.sort();\n}\n\n// PUBNUB READY TO CONNECT\nfunction ready() { timeout( function() {\n    if (READY) return;\n    READY = 1;\n    each( READY_BUFFER, function(connect) { connect() } );\n}, SECOND ); }\n\nfunction PNmessage(args) {\n    msg = args || {'apns' : {}},\n    msg['getPubnubMessage'] = function() {\n        var m = {};\n\n        if (Object.keys(msg['apns']).length) {\n            m['pn_apns'] = {\n                    'aps' : {\n                        'alert' : msg['apns']['alert'] ,\n                        'badge' : msg['apns']['badge']\n                    }\n            }\n            for (var k in msg['apns']) {\n                m['pn_apns'][k] = msg['apns'][k];\n            }\n            var exclude1 = ['badge','alert'];\n            for (var k in exclude1) {\n                delete m['pn_apns'][exclude1[k]];\n            }\n        }\n\n\n\n        if (msg['gcm']) {\n            m['pn_gcm'] = {\n                'data' : msg['gcm']\n            }\n        }\n\n        for (var k in msg) {\n            m[k] = msg[k];\n        }\n        var exclude = ['apns','gcm','publish', 'channel','callback','error'];\n        for (var k in exclude) {\n            delete m[exclude[k]];\n        }\n\n        return m;\n    };\n    msg['publish'] = function() {\n\n        var m = msg.getPubnubMessage();\n\n        if (msg['pubnub'] && msg['channel']) {\n            msg['pubnub'].publish({\n                'message' : m,\n                'channel' : msg['channel'],\n                'callback' : msg['callback'],\n                'error' : msg['error']\n            })\n        }\n    };\n    return msg;\n}\n\nfunction PN_API(setup) {\n    var SUB_WINDOWING =  +setup['windowing']   || DEF_WINDOWING\n    ,   SUB_TIMEOUT   = (+setup['timeout']     || DEF_SUB_TIMEOUT) * SECOND\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   TIME_CHECK    = setup['timecheck']     || 0\n    ,   NOLEAVE       = setup['noleave']       || 0\n    ,   PUBLISH_KEY   = setup['publish_key']   || 'demo'\n    ,   SUBSCRIBE_KEY = setup['subscribe_key'] || 'demo'\n    ,   AUTH_KEY      = setup['auth_key']      || ''\n    ,   SECRET_KEY    = setup['secret_key']    || ''\n    ,   hmac_SHA256   = setup['hmac_SHA256']\n    ,   SSL           = setup['ssl']            ? 's' : ''\n    ,   ORIGIN        = 'http'+SSL+'://'+(setup['origin']||'pubsub.pubnub.com')\n    ,   STD_ORIGIN    = nextorigin(ORIGIN)\n    ,   SUB_ORIGIN    = nextorigin(ORIGIN)\n    ,   CONNECT       = function(){}\n    ,   PUB_QUEUE     = []\n    ,   CLOAK         = true\n    ,   TIME_DRIFT    = 0\n    ,   SUB_CALLBACK  = 0\n    ,   SUB_CHANNEL   = 0\n    ,   SUB_RECEIVER  = 0\n    ,   SUB_RESTORE   = setup['restore'] || 0\n    ,   SUB_BUFF_WAIT = 0\n    ,   TIMETOKEN     = 0\n    ,   RESUMED       = false\n    ,   CHANNELS      = {}\n    ,   CHANNEL_GROUPS       = {}\n    ,   SUB_ERROR     = function(){}\n    ,   STATE         = {}\n    ,   PRESENCE_HB_TIMEOUT  = null\n    ,   PRESENCE_HB          = validate_presence_heartbeat(\n        setup['heartbeat'] || setup['pnexpires'] || 0, setup['error']\n    )\n    ,   PRESENCE_HB_INTERVAL = setup['heartbeat_interval'] || (PRESENCE_HB / 2) -1\n    ,   PRESENCE_HB_RUNNING  = false\n    ,   NO_WAIT_FOR_PENDING  = setup['no_wait_for_pending']\n    ,   COMPATIBLE_35 = setup['compatible_3.5']  || false\n    ,   xdr           = setup['xdr']\n    ,   params        = setup['params'] || {}\n    ,   error         = setup['error']      || function() {}\n    ,   _is_online    = setup['_is_online'] || function() { return 1 }\n    ,   jsonp_cb      = setup['jsonp_cb']   || function() { return 0 }\n    ,   db            = setup['db']         || {'get': function(){}, 'set': function(){}}\n    ,   CIPHER_KEY    = setup['cipher_key']\n    ,   UUID          = setup['uuid'] || ( !setup['unique_uuid'] && db && db['get'](SUBSCRIBE_KEY+'uuid') || '')\n    ,   USE_INSTANCEID = setup['instance_id'] || false\n    ,   INSTANCEID     = ''\n    ,   _poll_timer\n    ,   _poll_timer2;\n\n    if (PRESENCE_HB === 2) PRESENCE_HB_INTERVAL = 1;\n\n    var crypto_obj    = setup['crypto_obj'] ||\n        {\n            'encrypt' : function(a,key){ return a},\n            'decrypt' : function(b,key){return b}\n        };\n\n    function _get_url_params(data) {\n        if (!data) data = {};\n        each( params , function( key, value ) {\n            if (!(key in data)) data[key] = value;\n        });\n        return data;\n    }\n\n    function _object_to_key_list(o) {\n        var l = []\n        each( o , function( key, value ) {\n            l.push(key);\n        });\n        return l;\n    }\n    function _object_to_key_list_sorted(o) {\n        return _object_to_key_list(o).sort();\n    }\n\n    function _get_pam_sign_input_from_params(params) {\n        var si = \"\";\n        var l = _object_to_key_list_sorted(params);\n\n        for (var i in l) {\n            var k = l[i]\n            si += k + \"=\" + pam_encode(params[k]) ;\n            if (i != l.length - 1) si += \"&\"\n        }\n        return si;\n    }\n\n    function validate_presence_heartbeat(heartbeat, cur_heartbeat, error) {\n        var err = false;\n\n        if (typeof heartbeat === 'undefined') {\n            return cur_heartbeat;\n        }\n\n        if (typeof heartbeat === 'number') {\n            if (heartbeat > PRESENCE_HB_THRESHOLD || heartbeat == 0)\n                err = false;\n            else\n                err = true;\n        } else if(typeof heartbeat === 'boolean'){\n            if (!heartbeat) {\n                return 0;\n            } else {\n                return PRESENCE_HB_DEFAULT;\n            }\n        } else {\n            err = true;\n        }\n\n        if (err) {\n            error && error(\"Presence Heartbeat value invalid. Valid range ( x > \" + PRESENCE_HB_THRESHOLD + \" or x = 0). Current Value : \" + (cur_heartbeat || PRESENCE_HB_THRESHOLD));\n            return cur_heartbeat || PRESENCE_HB_THRESHOLD;\n        } else return heartbeat;\n    }\n\n    function encrypt(input, key) {\n        return crypto_obj['encrypt'](input, key || CIPHER_KEY) || input;\n    }\n    function decrypt(input, key) {\n        return crypto_obj['decrypt'](input, key || CIPHER_KEY) ||\n               crypto_obj['decrypt'](input, CIPHER_KEY) ||\n               input;\n    }\n\n    function error_common(message, callback) {\n        callback && callback({ 'error' : message || \"error occurred\"});\n        error && error(message);\n    }\n    function _presence_heartbeat() {\n\n        clearTimeout(PRESENCE_HB_TIMEOUT);\n\n        if (!PRESENCE_HB_INTERVAL || PRESENCE_HB_INTERVAL >= 500 ||\n            PRESENCE_HB_INTERVAL < 1 ||\n            (!generate_channel_list(CHANNELS,true).length  && !generate_channel_group_list(CHANNEL_GROUPS, true).length ) )\n        {\n            PRESENCE_HB_RUNNING = false;\n            return;\n        }\n\n        PRESENCE_HB_RUNNING = true;\n        SELF['presence_heartbeat']({\n            'callback' : function(r) {\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            },\n            'error' : function(e) {\n                error && error(\"Presence Heartbeat unable to reach Pubnub servers.\" + JSON.stringify(e));\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            }\n        });\n    }\n\n    function start_presence_heartbeat() {\n        !PRESENCE_HB_RUNNING && _presence_heartbeat();\n    }\n\n    function publish(next) {\n\n        if (NO_WAIT_FOR_PENDING) {\n            if (!PUB_QUEUE.length) return;\n        } else {\n            if (next) PUB_QUEUE.sending = 0;\n            if ( PUB_QUEUE.sending || !PUB_QUEUE.length ) return;\n            PUB_QUEUE.sending = 1;\n        }\n\n        xdr(PUB_QUEUE.shift());\n    }\n    function each_channel_group(callback) {\n        var count = 0;\n\n        each( generate_channel_group_list(CHANNEL_GROUPS), function(channel_group) {\n            var chang = CHANNEL_GROUPS[channel_group];\n\n            if (!chang) return;\n\n            count++;\n            (callback||function(){})(chang);\n        } );\n\n        return count;\n    }\n\n    function each_channel(callback) {\n        var count = 0;\n\n        each( generate_channel_list(CHANNELS), function(channel) {\n            var chan = CHANNELS[channel];\n\n            if (!chan) return;\n\n            count++;\n            (callback||function(){})(chan);\n        } );\n\n        return count;\n    }\n    function _invoke_callback(response, callback, err) {\n        if (typeof response == 'object') {\n            if (response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n\n                err && err(callback_data);\n                return;\n\n            }\n            if (response['payload']) {\n                if (response['next_page'])\n                    callback && callback(response['payload'], response['next_page']);\n                else\n                    callback && callback(response['payload']);\n                return;\n            }\n        }\n        callback && callback(response);\n    }\n\n    function _invoke_error(response,err) {\n\n        if (typeof response == 'object' && response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n                \n                err && err(callback_data);\n                return;\n        } else {\n            err && err(response);\n        }\n    }\n    function CR(args, callback, url1, data) {\n            var callback        = args['callback']      || callback\n            ,   err             = args['error']         || error\n            ,   jsonp           = jsonp_cb();\n\n            data = data || {};\n            \n            if (!data['auth']) {\n                data['auth'] = args['auth_key'] || AUTH_KEY;\n            }\n            \n            var url = [\n                    STD_ORIGIN, 'v1', 'channel-registration',\n                    'sub-key', SUBSCRIBE_KEY\n                ];\n\n            url.push.apply(url,url1);\n            \n            if (jsonp) data['callback']              = jsonp;\n            \n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n    }\n\n    // Announce Leave Event\n    var SELF = {\n        'LEAVE' : function( channel, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel\n            if (channel.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 2000,\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel), 'leave'\n                ]\n            });\n            return true;\n        },\n        'LEAVE_GROUP' : function( channel_group, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel Group\n            if (channel_group.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (channel_group && channel_group.length > 0) data['channel-group'] = channel_group;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 5000,\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(','), 'leave'\n                ]\n            });\n            return true;\n        },\n        'set_resumed' : function(resumed) {\n                RESUMED = resumed;\n        },\n        'get_cipher_key' : function() {\n            return CIPHER_KEY;\n        },\n        'set_cipher_key' : function(key) {\n            CIPHER_KEY = key;\n        },\n        'raw_encrypt' : function(input, key) {\n            return encrypt(input, key);\n        },\n        'raw_decrypt' : function(input, key) {\n            return decrypt(input, key);\n        },\n        'get_heartbeat' : function() {\n            return PRESENCE_HB;\n        },\n        \n        'set_heartbeat' : function(heartbeat, heartbeat_interval) {\n            PRESENCE_HB = validate_presence_heartbeat(heartbeat, PRESENCE_HB, error);\n            PRESENCE_HB_INTERVAL = heartbeat_interval || (PRESENCE_HB / 2) - 1;\n            if (PRESENCE_HB == 2) {\n                PRESENCE_HB_INTERVAL = 1;\n            }\n            CONNECT();\n            _presence_heartbeat();\n        },\n        \n        'get_heartbeat_interval' : function() {\n            return PRESENCE_HB_INTERVAL;\n        },\n        \n        'set_heartbeat_interval' : function(heartbeat_interval) {\n            PRESENCE_HB_INTERVAL = heartbeat_interval;\n            _presence_heartbeat();\n        },\n        \n        'get_version' : function() {\n            return SDK_VER;\n        },\n        'getGcmMessageObject' : function(obj) {\n            return {\n                'data' : obj\n            }\n        },\n        'getApnsMessageObject' : function(obj) {\n            var x =  {\n                'aps' : { 'badge' : 1, 'alert' : ''}\n            }\n            for (k in obj) {\n                k[x] = obj[k];\n            }\n            return x;\n        },\n        'newPnMessage' : function() {\n            var x = {};\n            if (gcm) x['pn_gcm'] = gcm;\n            if (apns) x['pn_apns'] = apns;\n            for ( k in n ) {\n                x[k] = n[k];\n            }\n            return x;\n        },\n\n        '_add_param' : function(key,val) {\n            params[key] = val;\n        },\n\n        'channel_group' : function(args, callback) {\n            var ns_ch       = args['channel_group']\n            ,   callback    = callback         || args['callback']\n            ,   channels    = args['channels'] || args['channel']\n            ,   cloak       = args['cloak']\n            ,   namespace\n            ,   channel_group\n            ,   url = []\n            ,   data = {}\n            ,   mode = args['mode'] || 'add';\n\n\n            if (ns_ch) {\n                var ns_ch_a = ns_ch.split(':');\n\n                if (ns_ch_a.length > 1) {\n                    namespace = (ns_ch_a[0] === '*')?null:ns_ch_a[0];\n\n                    channel_group = ns_ch_a[1];\n                } else {\n                    channel_group = ns_ch_a[0];\n                }\n            }\n\n            namespace && url.push('namespace') && url.push(encode(namespace));\n\n            url.push('channel-group');\n\n            if (channel_group && channel_group !== '*') {\n                url.push(channel_group);\n            }\n\n            if (channels ) {\n                if (isArray(channels)) {\n                    channels = channels.join(',');\n                }\n                data[mode] = channels;\n                data['cloak'] = (CLOAK)?'true':'false';\n            } else {\n                if (mode === 'remove') url.push('remove');\n            }\n\n            if (typeof cloak != 'undefined') data['cloak'] = (cloak)?'true':'false';\n\n            CR(args, callback, url, data);\n        },\n\n        'channel_group_list_groups' : function(args, callback) {\n            var namespace;\n\n            namespace = args['namespace'] || args['ns'] || args['channel_group'] || null;\n            if (namespace) {\n                args[\"channel_group\"] = namespace + \":*\";\n            }\n\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_list_channels' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_remove_channel' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_remove_group' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (args['channel']) return error('Use channel_group_remove_channel if you want to remove a channel from a group.');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_add_channel' : function(args, callback) {\n           if (!args['channel_group']) return error('Missing Channel Group');\n           if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_cloak' : function(args, callback) {\n            if (typeof args['cloak'] == 'undefined') {\n                callback(CLOAK);\n                return;\n            }\n            CLOAK = args['cloak'];\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_list_namespaces' : function(args, callback) {\n            var url = ['namespace'];\n            CR(args, callback, url);\n        },\n        'channel_group_remove_namespace' : function(args, callback) {\n            var url = ['namespace',args['namespace'],'remove'];\n            CR(args, callback, url);\n        },\n\n        /*\n            PUBNUB.history({\n                channel  : 'my_chat_channel',\n                limit    : 100,\n                callback : function(history) { }\n            });\n        */\n        'history' : function( args, callback ) {\n            var callback         = args['callback'] || callback\n            ,   count            = args['count']    || args['limit'] || 100\n            ,   reverse          = args['reverse']  || \"false\"\n            ,   err              = args['error']    || function(){}\n            ,   auth_key         = args['auth_key'] || AUTH_KEY\n            ,   cipher_key       = args['cipher_key']\n            ,   channel          = args['channel']\n            ,   channel_group    = args['channel_group']\n            ,   start            = args['start']\n            ,   end              = args['end']\n            ,   include_token    = args['include_token']\n            ,   params           = {}\n            ,   jsonp            = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) return error('Missing Channel');\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            params['stringtoken'] = 'true';\n            params['count']       = count;\n            params['reverse']     = reverse;\n            params['auth']        = auth_key;\n\n            if (channel_group) {\n                params['channel-group'] = channel_group;\n                if (!channel) {\n                    channel = ','; \n                }\n            }\n            if (jsonp) params['callback']              = jsonp;\n            if (start) params['start']                 = start;\n            if (end)   params['end']                   = end;\n            if (include_token) params['include_token'] = 'true';\n\n            // Send Message\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(params),\n                success  : function(response) {\n                    if (typeof response == 'object' && response['error']) {\n                        err({'message' : response['message'], 'payload' : response['payload']});\n                        return;\n                    }\n                    var messages = response[0];\n                    var decrypted_messages = [];\n                    for (var a = 0; a < messages.length; a++) {\n                        var new_message = decrypt(messages[a],cipher_key);\n                        try {\n                            decrypted_messages['push'](JSON['parse'](new_message));\n                        } catch (e) {\n                            decrypted_messages['push']((new_message));\n                        }\n                    }\n                    callback([decrypted_messages, response[1], response[2]]);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'history', 'sub-key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel)\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.replay({\n                source      : 'my_channel',\n                destination : 'new_channel'\n            });\n        */\n        'replay' : function(args, callback) {\n            var callback    = callback || args['callback'] || function(){}\n            ,   auth_key    = args['auth_key'] || AUTH_KEY\n            ,   source      = args['source']\n            ,   destination = args['destination']\n            ,   stop        = args['stop']\n            ,   start       = args['start']\n            ,   end         = args['end']\n            ,   reverse     = args['reverse']\n            ,   limit       = args['limit']\n            ,   jsonp       = jsonp_cb()\n            ,   data        = {}\n            ,   url;\n\n            // Check User Input\n            if (!source)        return error('Missing Source Channel');\n            if (!destination)   return error('Missing Destination Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Setup URL Params\n            if (jsonp != '0') data['callback'] = jsonp;\n            if (stop)         data['stop']     = 'all';\n            if (reverse)      data['reverse']  = 'true';\n            if (start)        data['start']    = start;\n            if (end)          data['end']      = end;\n            if (limit)        data['count']    = limit;\n\n            data['auth'] = auth_key;\n\n            // Compose URL Parts\n            url = [\n                STD_ORIGIN, 'v1', 'replay',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                source, destination\n            ];\n\n            // Start (or Stop) Replay!\n            xdr({\n                callback : jsonp,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function() { callback([ 0, 'Disconnected' ]) },\n                url      : url,\n                data     : _get_url_params(data)\n            });\n        },\n\n        /*\n            PUBNUB.auth('AJFLKAJSDKLA');\n        */\n        'auth' : function(auth) {\n            AUTH_KEY = auth;\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.time(function(time){ });\n        */\n        'time' : function(callback) {\n            var jsonp = jsonp_cb();\n\n            var data = { 'uuid' : UUID, 'auth' : AUTH_KEY }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [STD_ORIGIN, 'time', jsonp],\n                success  : function(response) { callback(response[0]) },\n                fail     : function() { callback(0) }\n            });\n        },\n\n        /*\n            PUBNUB.publish({\n                channel : 'my_chat_channel',\n                message : 'hello!'\n            });\n        */\n        'publish' : function( args, callback ) {\n            var msg      = args['message'];\n            if (!msg) return error('Missing Message');\n\n            var callback = callback || args['callback'] || msg['callback'] || function(){}\n            ,   channel  = args['channel'] || msg['channel']\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   cipher_key = args['cipher_key']\n            ,   err      = args['error'] || msg['error'] || function() {}\n            ,   post     = args['post'] || false\n            ,   store    = ('store_in_history' in args) ? args['store_in_history']: true\n            ,   jsonp    = jsonp_cb()\n            ,   add_msg  = 'push'\n            ,   params\n            ,   url;\n\n            if (args['prepend']) add_msg = 'unshift'\n\n            if (!channel)       return error('Missing Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (msg['getPubnubMessage']) {\n                msg = msg['getPubnubMessage']();\n            }\n\n            // If trying to send Object\n            msg = JSON['stringify'](encrypt(msg, cipher_key));\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'publish',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                0, encode(channel),\n                jsonp, encode(msg)\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key }\n\n            if (!store) params['store'] =\"0\"\n\n            if (USE_INSTANCEID) params['instanceid'] = INSTANCEID;\n\n            // Queue Message Send\n            PUB_QUEUE[add_msg]({\n                callback : jsonp,\n                timeout  : SECOND * 5,\n                url      : url,\n                data     : _get_url_params(params),\n                fail     : function(response){\n                    _invoke_error(response, err);\n                    publish(1);\n                },\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                    publish(1);\n                },\n                mode     : (post)?'POST':'GET'\n            });\n\n            // Send Message\n            publish();\n        },\n\n        /*\n            PUBNUB.unsubscribe({ channel : 'my_chat' });\n        */\n        'unsubscribe' : function(args, callback) {\n            var channel       = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   auth_key      = args['auth_key']    || AUTH_KEY\n            ,   callback      = callback            || args['callback'] || function(){}\n            ,   err           = args['error']       || function(){};\n\n            TIMETOKEN   = 0;\n            //SUB_RESTORE = 1;    REVISIT !!!!\n\n            if (channel) {\n                // Prepare Channel(s)\n                channel = map( (\n                    channel.join ? channel.join(',') : ''+channel\n                ).split(','), function(channel) {\n                    if (!CHANNELS[channel]) return;\n                    return channel + ',' + channel + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over Channels\n                each( channel.split(','), function(ch) {\n                    var CB_CALLED = true;\n                    if (!ch) return;\n                    CHANNELS[ch] = 0;\n                    if (ch in STATE) delete STATE[ch];\n                    if (READY) {\n                        CB_CALLED = SELF['LEAVE']( ch, 0 , auth_key, callback, err);\n                    }\n                    if (!CB_CALLED) callback({action : \"leave\"});\n\n                    \n                } );\n            }\n\n            if (channel_group) {\n                // Prepare channel group(s)\n                channel_group = map( (\n                    channel_group.join ? channel_group.join(',') : ''+channel_group\n                ).split(','), function(channel_group) {\n                    if (!CHANNEL_GROUPS[channel_group]) return;\n                    return channel_group + ',' + channel_group + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over channel groups\n                each( channel_group.split(','), function(chg) {\n                    var CB_CALLED = true;\n                    if (!chg) return;\n                    CHANNEL_GROUPS[chg] = 0;\n                    if (chg in STATE) delete STATE[chg];\n                    if (READY) {\n                        CB_CALLED = SELF['LEAVE_GROUP']( chg, 0 , auth_key, callback, err);\n                    }\n                    if (!CB_CALLED) callback({action : \"leave\"});\n\n                } );\n            }\n\n            // Reset Connection if Count Less\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.subscribe({\n                channel  : 'my_chat'\n                callback : function(message) { }\n            });\n        */\n        'subscribe' : function( args, callback ) {\n            var channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   callback        = callback            || args['callback']\n            ,   callback        = callback            || args['message']\n            ,   connect         = args['connect']     || function(){}\n            ,   reconnect       = args['reconnect']   || function(){}\n            ,   disconnect      = args['disconnect']  || function(){}\n            ,   SUB_ERROR       = args['error']       || SUB_ERROR || function(){}\n            ,   idlecb          = args['idle']        || function(){}\n            ,   presence        = args['presence']    || 0\n            ,   noheresync      = args['noheresync']  || 0\n            ,   backfill        = args['backfill']    || 0\n            ,   timetoken       = args['timetoken']   || 0\n            ,   sub_timeout     = args['timeout']     || SUB_TIMEOUT\n            ,   windowing       = args['windowing']   || SUB_WINDOWING\n            ,   state           = args['state']\n            ,   heartbeat       = args['heartbeat'] || args['pnexpires']\n            ,   heartbeat_interval = args['heartbeat_interval']\n            ,   restore         = args['restore'] || SUB_RESTORE;\n\n            AUTH_KEY            = args['auth_key']    || AUTH_KEY;\n\n            // Restore Enabled?\n            SUB_RESTORE = restore;\n\n            // Always Reset the TT\n            TIMETOKEN = timetoken;\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) {\n                return error('Missing Channel');\n            }\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (heartbeat || heartbeat === 0 || heartbeat_interval || heartbeat_interval === 0) {\n                SELF['set_heartbeat'](heartbeat, heartbeat_interval);\n            }\n\n            // Setup Channel(s)\n            if (channel) {\n                each( (channel.join ? channel.join(',') : ''+channel).split(','),\n                function(channel) {\n                    var settings = CHANNELS[channel] || {};\n\n                    // Store Channel State\n                    CHANNELS[SUB_CHANNEL = channel] = {\n                        name         : channel,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    if (state) {\n                        if (channel in state) {\n                            STATE[channel] = state[channel];\n                        } else {\n                            STATE[channel] = state;\n                        }\n                    }\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel'  : channel + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel'  : channel,\n                        'data'     : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel ); } );\n                        }\n                    });\n                } );\n            }\n\n            // Setup Channel Groups\n            if (channel_group) {\n                each( (channel_group.join ? channel_group.join(',') : ''+channel_group).split(','),\n                function(channel_group) {\n                    var settings = CHANNEL_GROUPS[channel_group] || {};\n\n                    CHANNEL_GROUPS[channel_group] = {\n                        name         : channel_group,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel_group'  : channel_group + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore,\n                        'auth_key' : AUTH_KEY\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel_group'  : channel_group,\n                        'data'           : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel_group ); } );\n                        }\n                    });\n                } );\n            }\n\n\n            // Test Network Connection\n            function _test_connection(success) {\n                if (success) {\n                    // Begin Next Socket Connection\n                    timeout( CONNECT, windowing);\n                }\n                else {\n                    // New Origin on Failed Connection\n                    STD_ORIGIN = nextorigin( ORIGIN, 1 );\n                    SUB_ORIGIN = nextorigin( ORIGIN, 1 );\n\n                    // Re-test Connection\n                    timeout( function() {\n                        SELF['time'](_test_connection);\n                    }, SECOND );\n                }\n\n                // Disconnect & Reconnect\n                each_channel(function(channel){\n                    // Reconnect\n                    if (success && channel.disconnected) {\n                        channel.disconnected = 0;\n                        return channel.reconnect(channel.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel.disconnected) {\n                        channel.disconnected = 1;\n                        channel.disconnect(channel.name);\n                    }\n                });\n                \n                // Disconnect & Reconnect for channel groups\n                each_channel_group(function(channel_group){\n                    // Reconnect\n                    if (success && channel_group.disconnected) {\n                        channel_group.disconnected = 0;\n                        return channel_group.reconnect(channel_group.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel_group.disconnected) {\n                        channel_group.disconnected = 1;\n                        channel_group.disconnect(channel_group.name);\n                    }\n                });\n            }\n\n            // Evented Subscribe\n            function _connect() {\n                var jsonp           = jsonp_cb()\n                ,   channels        = generate_channel_list(CHANNELS).join(',')\n                ,   channel_groups  = generate_channel_group_list(CHANNEL_GROUPS).join(',');\n\n                // Stop Connection\n                if (!channels && !channel_groups) return;\n\n                if (!channels) channels = ',';\n\n                // Connect to PubNub Subscribe Servers\n                _reset_offline();\n\n                var data = _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY });\n\n                if (channel_groups) {\n                    data['channel-group'] = channel_groups;\n                }\n\n\n                var st = JSON.stringify(STATE);\n                if (st.length > 2) data['state'] = JSON.stringify(STATE);\n\n                if (PRESENCE_HB) data['heartbeat'] = PRESENCE_HB;\n\n                if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n                start_presence_heartbeat();\n                SUB_RECEIVER = xdr({\n                    timeout  : sub_timeout,\n                    callback : jsonp,\n                    fail     : function(response) {\n                        if (response && response['error'] && response['service']) {\n                            _invoke_error(response, SUB_ERROR);\n                            _test_connection(1);\n                        } else {\n                            SELF['time'](function(success){\n                                !success && ( _invoke_error(response, SUB_ERROR));\n                                _test_connection(success);\n                            });\n                        }\n                    },\n                    data     : _get_url_params(data),\n                    url      : [\n                        SUB_ORIGIN, 'subscribe',\n                        SUBSCRIBE_KEY, encode(channels),\n                        jsonp, TIMETOKEN\n                    ],\n                    success : function(messages) {\n\n                        // Check for Errors\n                        if (!messages || (\n                            typeof messages == 'object' &&\n                            'error' in messages         &&\n                            messages['error']\n                        )) {\n                            SUB_ERROR(messages['error']);\n                            return timeout( CONNECT, SECOND );\n                        }\n\n                        // User Idle Callback\n                        idlecb(messages[1]);\n\n                        // Restore Previous Connection Point if Needed\n                        TIMETOKEN = !TIMETOKEN               &&\n                                    SUB_RESTORE              &&\n                                    db['get'](SUBSCRIBE_KEY) || messages[1];\n\n                        /*\n                        // Connect\n                        each_channel_registry(function(registry){\n                            if (registry.connected) return;\n                            registry.connected = 1;\n                            registry.connect(channel.name);\n                        });\n                        */\n\n                        // Connect\n                        each_channel(function(channel){\n                            if (channel.connected) return;\n                            channel.connected = 1;\n                            channel.connect(channel.name);\n                        });\n\n                        // Connect for channel groups\n                        each_channel_group(function(channel_group){\n                            if (channel_group.connected) return;\n                            channel_group.connected = 1;\n                            channel_group.connect(channel_group.name);\n                        });\n\n                        if (RESUMED && !SUB_RESTORE) {\n                                TIMETOKEN = 0;\n                                RESUMED = false;\n                                // Update Saved Timetoken\n                                db['set']( SUBSCRIBE_KEY, 0 );\n                                timeout( _connect, windowing );\n                                return;\n                        }\n\n                        // Invoke Memory Catchup and Receive Up to 100\n                        // Previous Messages from the Queue.\n                        if (backfill) {\n                            TIMETOKEN = 10000;\n                            backfill  = 0;\n                        }\n\n                        // Update Saved Timetoken\n                        db['set']( SUBSCRIBE_KEY, messages[1] );\n\n                        // Route Channel <---> Callback for Message\n                        var next_callback = (function() {\n                            var channels = '';\n                            var channels2 = '';\n\n                            if (messages.length > 3) {\n                                channels  = messages[3];\n                                channels2 = messages[2];\n                            } else if (messages.length > 2) {\n                                channels = messages[2];\n                            } else {\n                                channels =  map(\n                                    generate_channel_list(CHANNELS), function(chan) { return map(\n                                        Array(messages[0].length)\n                                        .join(',').split(','),\n                                        function() { return chan; }\n                                    ) }).join(',')\n                            }\n\n                            var list  = channels.split(',');\n                            var list2 = (channels2)?channels2.split(','):[];\n\n                            return function() {\n                                var channel  = list.shift()||SUB_CHANNEL;\n                                var channel2 = list2.shift();\n\n                                var chobj = {};\n\n                                if (channel2) {\n                                    if (channel && channel.indexOf('-pnpres') >= 0 \n                                        && channel2.indexOf('-pnpres') < 0) {\n                                        channel2 += '-pnpres';\n                                    }\n                                    chobj = CHANNEL_GROUPS[channel2] || CHANNELS[channel2] || {'callback' : function(){}};\n                                } else {\n                                    chobj = CHANNELS[channel];\n                                }\n\n                                var r = [\n                                    chobj\n                                    .callback||SUB_CALLBACK,\n                                    channel.split(PRESENCE_SUFFIX)[0]\n                                ];\n                                channel2 && r.push(channel2.split(PRESENCE_SUFFIX)[0]);\n                                return r;\n                            };\n                        })();\n\n                        var latency = detect_latency(+messages[1]);\n                        each( messages[0], function(msg) {\n                            var next = next_callback();\n                            var decrypted_msg = decrypt(msg,\n                                (CHANNELS[next[1]])?CHANNELS[next[1]]['cipher_key']:null);\n                            next[0] && next[0]( decrypted_msg, messages, next[2] || next[1], latency, next[1]);\n                        });\n\n                        timeout( _connect, windowing );\n                    }\n                });\n            }\n\n            CONNECT = function() {\n                _reset_offline();\n                timeout( _connect, windowing );\n            };\n\n            // Reduce Status Flicker\n            if (!READY) return READY_BUFFER.push(CONNECT);\n\n            // Connect Now\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.here_now({ channel : 'my_chat', callback : fun });\n        */\n        'here_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   jsonp    = jsonp_cb()\n            ,   uuids    = ('uuids' in args) ? args['uuids'] : true\n            ,   state    = args['state']\n            ,   data     = { 'uuid' : UUID, 'auth' : auth_key };\n\n            if (!uuids) data['disable_uuids'] = 1;\n            if (state) data['state'] = 1;\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            var url = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY\n                ];\n\n            channel && url.push('channel') && url.push(encode(channel));\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (channel_group) {\n                data['channel-group'] = channel_group;\n                !channel && url.push('channel') && url.push(','); \n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n        },\n\n        /*\n            PUBNUB.current_channels_by_uuid({ channel : 'my_chat', callback : fun });\n        */\n        'where_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   uuid     = args['uuid']     || UUID\n            ,   data     = { 'auth' : auth_key };\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY,\n                    'uuid', encode(uuid)\n                ]\n            });\n        },\n\n        'state' : function(args, callback) {\n            var callback = args['callback'] || callback || function(r) {}\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   state    = args['state']\n            ,   uuid     = args['uuid'] || UUID\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   url\n            ,   data     = _get_url_params({ 'auth' : auth_key });\n\n            // Make sure we have a Channel\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!uuid) return error('Missing UUID');\n            if (!channel && !channel_group) return error('Missing Channel');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (typeof channel != 'undefined'\n                && CHANNELS[channel] && CHANNELS[channel].subscribed ) {\n                if (state) STATE[channel] = state;\n            }\n\n            if (typeof channel_group != 'undefined'\n                && CHANNEL_GROUPS[channel_group]\n                && CHANNEL_GROUPS[channel_group].subscribed\n                ) {\n                if (state) STATE[channel_group] = state;\n                data['channel-group'] = channel_group;\n\n                if (!channel) {\n                    channel = ',';\n                }\n            }\n\n            data['state'] = JSON.stringify(state);\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            if (state) {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', uuid, 'data'\n                ]\n            } else {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', encode(uuid)\n                ]\n            }\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n\n            });\n\n        },\n\n        /*\n            PUBNUB.grant({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                ttl      : 24 * 60, // Minutes\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'grant' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']  || args['channels']\n            ,   channel_group   = args['channel_group']\n            ,   jsonp           = jsonp_cb()\n            ,   ttl             = args['ttl']\n            ,   r               = (args['read'] )?\"1\":\"0\"\n            ,   w               = (args['write'])?\"1\":\"0\"\n            ,   m               = (args['manage'])?\"1\":\"0\"\n            ,   auth_key        = args['auth_key'] || args['auth_keys'];\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\" + PUBLISH_KEY + \"\\n\"\n                    + \"grant\" + \"\\n\";\n\n            var data = {\n                'w'         : w,\n                'r'         : r,\n                'timestamp' : timestamp\n            };\n            if (args['manage']) {\n                data['m'] = m;\n            }\n            if (isArray(channel)) {\n                channel = channel['join'](',');\n            }\n            if (isArray(auth_key)) {\n                auth_key = auth_key['join'](',');\n            }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (ttl || ttl === 0) data['ttl'] = ttl;\n\n            if (auth_key) data['auth'] = auth_key;\n\n            data = _get_url_params(data)\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'grant' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n         PUBNUB.mobile_gw_provision ({\n         device_id: 'A655FBA9931AB',\n         op       : 'add' | 'remove',\n         gw_type  : 'apns' | 'gcm',\n         channel  : 'my_chat',\n         callback : fun,\n         error    : fun,\n         });\n         */\n\n        'mobile_gw_provision' : function( args ) {\n\n            var callback = args['callback'] || function(){}\n                ,   auth_key       = args['auth_key'] || AUTH_KEY\n                ,   err            = args['error'] || function() {}\n                ,   jsonp          = jsonp_cb()\n                ,   channel        = args['channel']\n                ,   op             = args['op']\n                ,   gw_type        = args['gw_type']\n                ,   device_id      = args['device_id']\n                ,   params\n                ,   url;\n\n            if (!device_id)     return error('Missing Device ID (device_id)');\n            if (!gw_type)       return error('Missing GW Type (gw_type: gcm or apns)');\n            if (!op)            return error('Missing GW Operation (op: add or remove)');\n            if (!channel)       return error('Missing gw destination Channel (channel)');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'v1/push/sub-key',\n                SUBSCRIBE_KEY, 'devices', device_id\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key, 'type': gw_type};\n\n            if (op == \"add\") {\n                params['add'] = channel;\n            } else if (op == \"remove\") {\n                params['remove'] = channel;\n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : params,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n        },\n\n        /*\n            PUBNUB.audit({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'audit' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   auth_key        = args['auth_key']\n            ,   jsonp           = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\"\n                + PUBLISH_KEY + \"\\n\"\n                + \"audit\" + \"\\n\";\n\n            var data = {'timestamp' : timestamp };\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (auth_key) data['auth']    = auth_key;\n\n            data = _get_url_params(data);\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'audit' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.revoke({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'revoke' : function( args, callback ) {\n            args['read']  = false;\n            args['write'] = false;\n            SELF['grant']( args, callback );\n        },\n        'set_uuid' : function(uuid) {\n            UUID = uuid;\n            CONNECT();\n        },\n        'get_uuid' : function() {\n            return UUID;\n        },\n        'isArray'  : function(arg) {\n            return isArray(arg);\n        },\n        'get_subscibed_channels' : function() {\n            return generate_channel_list(CHANNELS, true);\n        },\n        'presence_heartbeat' : function(args) {\n            var callback = args['callback'] || function() {}\n            var err      = args['error']    || function() {}\n            var jsonp    = jsonp_cb();\n            var data     = { 'uuid' : UUID, 'auth' : AUTH_KEY };\n\n            var st = JSON['stringify'](STATE);\n            if (st.length > 2) data['state'] = JSON['stringify'](STATE);\n\n            if (PRESENCE_HB > 0 && PRESENCE_HB < 320) data['heartbeat'] = PRESENCE_HB;\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            var channels        = encode(generate_channel_list(CHANNELS, true)['join'](','));\n            var channel_groups  = generate_channel_group_list(CHANNEL_GROUPS, true)['join'](',');\n\n            if (!channels) channels = ',';\n            if (channel_groups) data['channel-group'] = channel_groups;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel' , channels,\n                    'heartbeat'\n                ],\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) { _invoke_error(response, err); }\n            });\n        },\n        'stop_timers': function () {\n            clearTimeout(_poll_timer);\n            clearTimeout(_poll_timer2);\n        },\n\n        // Expose PUBNUB Functions\n        'xdr'           : xdr,\n        'ready'         : ready,\n        'db'            : db,\n        'uuid'          : generate_uuid,\n        'map'           : map,\n        'each'          : each,\n        'each-channel'  : each_channel,\n        'grep'          : grep,\n        'offline'       : function(){ _reset_offline(\n            1, { \"message\" : \"Offline. Please check your network settings.\" })\n        },\n        'supplant'      : supplant,\n        'now'           : rnow,\n        'unique'        : unique,\n        'updater'       : updater\n    };\n\n    function _poll_online() {\n        _is_online() || _reset_offline( 1, {\n            \"error\" : \"Offline. Please check your network settings. \"\n        });\n        _poll_timer && clearTimeout(_poll_timer);\n        _poll_timer = timeout( _poll_online, SECOND );\n    }\n\n    function _poll_online2() {\n        if (!TIME_CHECK) return;\n        SELF['time'](function(success){\n            detect_time_detla( function(){}, success );\n            success || _reset_offline( 1, {\n                \"error\" : \"Heartbeat failed to connect to Pubnub Servers.\" +\n                    \"Please check your network settings.\"\n                });\n            _poll_timer2 && clearTimeout(_poll_timer2);\n            _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n        });\n    }\n\n    function _reset_offline(err, msg) {\n        SUB_RECEIVER && SUB_RECEIVER(err, msg);\n        SUB_RECEIVER = null;\n\n        clearTimeout(_poll_timer);\n        clearTimeout(_poll_timer2);\n    }\n    \n    if (!UUID) UUID = SELF['uuid']();\n    if (!INSTANCEID) INSTANCEID = SELF['uuid']();\n    db['set']( SUBSCRIBE_KEY + 'uuid', UUID );\n\n    _poll_timer  = timeout( _poll_online,  SECOND    );\n    _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n    PRESENCE_HB_TIMEOUT = timeout(\n        start_presence_heartbeat,\n        ( PRESENCE_HB_INTERVAL - 3 ) * SECOND\n    );\n\n    // Detect Age of Message\n    function detect_latency(tt) {\n        var adjusted_time = rnow() - TIME_DRIFT;\n        return adjusted_time - tt / 10000;\n    }\n\n    detect_time_detla();\n    function detect_time_detla( cb, time ) {\n        var stime = rnow();\n\n        time && calculate(time) || SELF['time'](calculate);\n\n        function calculate(time) {\n            if (!time) return;\n            var ptime   = time / 10000\n            ,   latency = (rnow() - stime) / 2;\n            TIME_DRIFT = rnow() - (ptime + latency);\n            cb && cb(TIME_DRIFT);\n        }\n    }\n\n    return SELF;\n}\nfunction crypto_obj() {\n\n    function SHA256(s) {\n        return CryptoJS['SHA256'](s)['toString'](CryptoJS['enc']['Hex']);\n    }\n\n    var iv = \"0123456789012345\";\n\n    var allowedKeyEncodings = ['hex', 'utf8', 'base64', 'binary'];\n    var allowedKeyLengths = [128, 256];\n    var allowedModes = ['ecb', 'cbc'];\n\n    var defaultOptions = {\n        'encryptKey': true,\n        'keyEncoding': 'utf8',\n        'keyLength': 256,\n        'mode': 'cbc'\n    };\n\n    function parse_options(options) {\n\n        // Defaults\n        options = options || {};\n        if (!options['hasOwnProperty']('encryptKey')) options['encryptKey'] = defaultOptions['encryptKey'];\n        if (!options['hasOwnProperty']('keyEncoding')) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (!options['hasOwnProperty']('keyLength')) options['keyLength'] = defaultOptions['keyLength'];\n        if (!options['hasOwnProperty']('mode')) options['mode'] = defaultOptions['mode'];\n\n        // Validation\n        if (allowedKeyEncodings['indexOf'](options['keyEncoding']['toLowerCase']()) == -1) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (allowedKeyLengths['indexOf'](parseInt(options['keyLength'], 10)) == -1) options['keyLength'] = defaultOptions['keyLength'];\n        if (allowedModes['indexOf'](options['mode']['toLowerCase']()) == -1) options['mode'] = defaultOptions['mode'];\n\n        return options;\n\n    }\n\n    function decode_key(key, options) {\n        if (options['keyEncoding'] == 'base64') {\n            return CryptoJS['enc']['Base64']['parse'](key);\n        } else if (options['keyEncoding'] == 'hex') {\n            return CryptoJS['enc']['Hex']['parse'](key);\n        } else {\n            return key;\n        }\n    }\n\n    function get_padded_key(key, options) {\n        key = decode_key(key, options);\n        if (options['encryptKey']) {\n            return CryptoJS['enc']['Utf8']['parse'](SHA256(key)['slice'](0, 32));\n        } else {\n            return key;\n        }\n    }\n\n    function get_mode(options) {\n        if (options['mode'] == 'ecb') {\n            return CryptoJS['mode']['ECB'];\n        } else {\n            return CryptoJS['mode']['CBC'];\n        }\n    }\n\n    function get_iv(options) {\n        return (options['mode'] == 'cbc') ? CryptoJS['enc']['Utf8']['parse'](iv) : null;\n    }\n\n    return {\n\n        'encrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            var hex_message = JSON['stringify'](data);\n            var encryptedHexArray = CryptoJS['AES']['encrypt'](hex_message, cipher_key, {'iv': iv, 'mode': mode})['ciphertext'];\n            var base_64_encrypted = encryptedHexArray['toString'](CryptoJS['enc']['Base64']);\n            return base_64_encrypted || data;\n        },\n\n        'decrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            try {\n                var binary_enc = CryptoJS['enc']['Base64']['parse'](data);\n                var json_plain = CryptoJS['AES']['decrypt']({'ciphertext': binary_enc}, cipher_key, {'iv': iv, 'mode': mode})['toString'](CryptoJS['enc']['Utf8']);\n                var plaintext = JSON['parse'](json_plain);\n                return plaintext;\n            }\n            catch (e) {\n                return undefined;\n            }\n        }\n    };\n}\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     UTIL     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nwindow['PUBNUB'] || (function() {\n\n/**\n * UTIL LOCALS\n */\n\nvar SWF             = 'https://pubnub.a.ssl.fastly.net/pubnub.swf'\n,   ASYNC           = 'async'\n,   UA              = navigator.userAgent\n,   PNSDK           = 'PubNub-JS-' + 'Web' + '/' + '3.7.13'\n,   XORIGN          = UA.indexOf('MSIE 6') == -1;\n\n/**\n * CONSOLE COMPATIBILITY\n */\nwindow.console || (window.console=window.console||{});\nconsole.log    || (\n    console.log   =\n    console.error =\n    ((window.opera||{}).postError||function(){})\n);\n\n/**\n * LOCAL STORAGE OR COOKIE\n */\nvar db = (function(){\n    var store = {};\n    var ls = false;\n    try {\n        ls = window['localStorage'];\n    } catch (e) { }\n    var cookieGet = function(key) {\n        if (document.cookie.indexOf(key) == -1) return null;\n        return ((document.cookie||'').match(\n            RegExp(key+'=([^;]+)')\n        )||[])[1] || null;\n    };\n    var cookieSet = function( key, value ) {\n        document.cookie = key + '=' + value +\n            '; expires=Thu, 1 Aug 2030 20:00:00 UTC; path=/';\n    };\n    var cookieTest = (function() {\n        try {\n            cookieSet('pnctest', '1');\n            return cookieGet('pnctest') === '1';\n        } catch (e) {\n            return false;\n        }\n    }());\n    return {\n        'get' : function(key) {\n            try {\n                if (ls) return ls.getItem(key);\n                if (cookieTest) return cookieGet(key);\n                return store[key];\n            } catch(e) {\n                return store[key];\n            }\n        },\n        'set' : function( key, value ) {\n            try {\n                if (ls) return ls.setItem( key, value ) && 0;\n                if (cookieTest) cookieSet( key, value );\n                store[key] = value;\n            } catch(e) {\n                store[key] = value;\n            }\n        }\n    };\n})();\n\nfunction get_hmac_SHA256(data,key) {\n    var hash = CryptoJS['HmacSHA256'](data, key);\n    return hash.toString(CryptoJS['enc']['Base64']);\n}\n\n/**\n * $\n * =\n * var div = $('divid');\n */\nfunction $(id) { return document.getElementById(id) }\n\n/**\n * ERROR\n * =====\n * error('message');\n */\nfunction error(message) { console['error'](message) }\n\n/**\n * SEARCH\n * ======\n * var elements = search('a div span');\n */\nfunction search( elements, start) {\n    var list = [];\n    each( elements.split(/\\s+/), function(el) {\n        each( (start || document).getElementsByTagName(el), function(node) {\n            list.push(node);\n        } );\n    });\n    return list;\n}\n\n/**\n * BIND\n * ====\n * bind( 'keydown', search('a')[0], function(element) {\n *     ...\n * } );\n */\nfunction bind( type, el, fun ) {\n    each( type.split(','), function(etype) {\n        var rapfun = function(e) {\n            if (!e) e = window.event;\n            if (!fun(e)) {\n                e.cancelBubble = true;\n                e.preventDefault  && e.preventDefault();\n                e.stopPropagation && e.stopPropagation();\n            }\n        };\n\n        if ( el.addEventListener ) el.addEventListener( etype, rapfun, false );\n        else if ( el.attachEvent ) el.attachEvent( 'on' + etype, rapfun );\n        else  el[ 'on' + etype ] = rapfun;\n    } );\n}\n\n/**\n * UNBIND\n * ======\n * unbind( 'keydown', search('a')[0] );\n */\nfunction unbind( type, el, fun ) {\n    if ( el.removeEventListener ) el.removeEventListener( type, false );\n    else if ( el.detachEvent ) el.detachEvent( 'on' + type, false );\n    else  el[ 'on' + type ] = null;\n}\n\n/**\n * HEAD\n * ====\n * head().appendChild(elm);\n */\nfunction head() { return search('head')[0] }\n\n/**\n * ATTR\n * ====\n * var attribute = attr( node, 'attribute' );\n */\nfunction attr( node, attribute, value ) {\n    if (value) node.setAttribute( attribute, value );\n    else return node && node.getAttribute && node.getAttribute(attribute);\n}\n\n/**\n * CSS\n * ===\n * var obj = create('div');\n */\nfunction css( element, styles ) {\n    for (var style in styles) if (styles.hasOwnProperty(style))\n        try {element.style[style] = styles[style] + (\n            '|width|height|top|left|'.indexOf(style) > 0 &&\n            typeof styles[style] == 'number'\n            ? 'px' : ''\n        )}catch(e){}\n}\n\n/**\n * CREATE\n * ======\n * var obj = create('div');\n */\nfunction create(element) { return document.createElement(element) }\n\n\n/**\n * jsonp_cb\n * ========\n * var callback = jsonp_cb();\n */\nfunction jsonp_cb() { return XORIGN || FDomainRequest() ? 0 : unique() }\n\n\n\n/**\n * EVENTS\n * ======\n * PUBNUB.events.bind( 'you-stepped-on-flower', function(message) {\n *     // Do Stuff with message\n * } );\n *\n * PUBNUB.events.fire( 'you-stepped-on-flower', \"message-data\" );\n * PUBNUB.events.fire( 'you-stepped-on-flower', {message:\"data\"} );\n * PUBNUB.events.fire( 'you-stepped-on-flower', [1,2,3] );\n *\n */\nvar events = {\n    'list'   : {},\n    'unbind' : function( name ) { events.list[name] = [] },\n    'bind'   : function( name, fun ) {\n        (events.list[name] = events.list[name] || []).push(fun);\n    },\n    'fire' : function( name, data ) {\n        each(\n            events.list[name] || [],\n            function(fun) { fun(data) }\n        );\n    }\n};\n\n/**\n * XDR Cross Domain Request\n * ========================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction xdr( setup ) {\n    if (XORIGN || FDomainRequest()) return ajax(setup);\n\n    var script    = create('script')\n    ,   callback  = setup.callback\n    ,   id        = unique()\n    ,   finished  = 0\n    ,   xhrtme    = setup.timeout || DEF_TIMEOUT\n    ,   timer     = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail      = setup.fail    || function(){}\n    ,   data      = setup.data    || {}\n    ,   success   = setup.success || function(){}\n    ,   append    = function() { head().appendChild(script) }\n    ,   done      = function( failed, response ) {\n            if (finished) return;\n            finished = 1;\n\n            script.onerror = null;\n            clearTimeout(timer);\n\n            (failed || !response) || success(response);\n\n            timeout( function() {\n                failed && fail();\n                var s = $(id)\n                ,   p = s && s.parentNode;\n                p && p.removeChild(s);\n            }, SECOND );\n        };\n\n    window[callback] = function(response) {\n        done( 0, response );\n    };\n\n    if (!setup.blocking) script[ASYNC] = ASYNC;\n\n    script.onerror = function() { done(1) };\n    script.src     = build_url( setup.url, data );\n\n    attr( script, 'id', id );\n\n    append();\n    return done;\n}\n\n/**\n * CORS XHR Request\n * ================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction ajax( setup ) {\n    var xhr, response\n    ,   finished = function() {\n            if (loaded) return;\n            loaded = 1;\n\n            clearTimeout(timer);\n\n            try       { response = JSON['parse'](xhr.responseText); }\n            catch (r) { return done(1); }\n\n            complete = 1;\n            success(response);\n        }\n    ,   complete = 0\n    ,   loaded   = 0\n    ,   xhrtme   = setup.timeout || DEF_TIMEOUT\n    ,   timer    = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail     = setup.fail    || function(){}\n    ,   data     = setup.data    || {}\n    ,   success  = setup.success || function(){}\n    ,   async    = !(setup.blocking)\n    ,   done     = function(failed,response) {\n            if (complete) return;\n            complete = 1;\n\n            clearTimeout(timer);\n\n            if (xhr) {\n                xhr.onerror = xhr.onload = null;\n                xhr.abort && xhr.abort();\n                xhr = null;\n            }\n\n            failed && fail(response);\n        };\n\n    // Send\n    try {\n        xhr = FDomainRequest()      ||\n              window.XDomainRequest &&\n              new XDomainRequest()  ||\n              new XMLHttpRequest();\n\n        xhr.onerror = xhr.onabort   = function(e){ done(\n            1, e || (xhr && xhr.responseText) || { \"error\" : \"Network Connection Error\"}\n        ) };\n        xhr.onload  = xhr.onloadend = finished;\n        xhr.onreadystatechange = function() {\n            if (xhr && xhr.readyState == 4) {\n                switch(xhr.status) {\n                    case 200:\n                        break;\n                    default:\n                        try {\n                            response = JSON['parse'](xhr.responseText);\n                            done(1,response);\n                        }\n                        catch (r) { return done(1, {status : xhr.status, payload : null, message : xhr.responseText}); }\n                        return;\n                }\n            }\n        }\n\n        var url = build_url(setup.url,data);\n\n        xhr.open( 'GET', url, async );\n        if (async) xhr.timeout = xhrtme;\n        xhr.send();\n    }\n    catch(eee) {\n        done(0);\n        XORIGN = 0;\n        return xdr(setup);\n    }\n\n    // Return 'done'\n    return done;\n}\n\n// Test Connection State\nfunction _is_online() {\n    if (!('onLine' in navigator)) return 1;\n    try       { return navigator['onLine'] }\n    catch (e) { return true }\n}\n\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     PUBNUB     ===========================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nvar PDIV          = $('pubnub') || 0\n,   CREATE_PUBNUB = function(setup) {\n\n    // Force JSONP if requested from user.\n    if (setup['jsonp'])  XORIGN = 0;\n    else                 XORIGN = UA.indexOf('MSIE 6') == -1;\n\n    var SUBSCRIBE_KEY = setup['subscribe_key'] || ''\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   UUID          = setup['uuid'] || db['get'](SUBSCRIBE_KEY+'uuid')||'';\n\n    var leave_on_unload = setup['leave_on_unload'] || 0;\n\n    setup['xdr']        = xdr;\n    setup['db']         = db;\n    setup['error']      = setup['error'] || error;\n    setup['_is_online'] = _is_online;\n    setup['jsonp_cb']   = jsonp_cb;\n    setup['hmac_SHA256']= get_hmac_SHA256;\n    setup['crypto_obj'] = crypto_obj();\n    setup['params']     = { 'pnsdk' : PNSDK }\n\n    var SELF = function(setup) {\n        return CREATE_PUBNUB(setup);\n    };\n\n    var PN = PN_API(setup);\n\n    for (var prop in PN) {\n        if (PN.hasOwnProperty(prop)) {\n            SELF[prop] = PN[prop];\n        }\n    }\n    SELF['css']         = css;\n    SELF['$']           = $;\n    SELF['create']      = create;\n    SELF['bind']        = bind;\n    SELF['head']        = head;\n    SELF['search']      = search;\n    SELF['attr']        = attr;\n    SELF['events']      = events;\n    SELF['init']        = SELF;\n    SELF['secure']      = SELF;\n    SELF['crypto_obj']  = crypto_obj(); // export to instance\n\n\n    // Add Leave Functions\n    bind( 'beforeunload', window, function() {\n        if (leave_on_unload) SELF['each-channel'](function(ch){ SELF['LEAVE']( ch.name, 0 ) });\n        return true;\n    } );\n\n    // Return without Testing\n    if (setup['notest']) return SELF;\n\n    bind( 'offline', window,   SELF['offline'] );\n    bind( 'offline', document, SELF['offline'] );\n\n    // Return PUBNUB Socket Object\n    return SELF;\n};\nCREATE_PUBNUB['init']   = CREATE_PUBNUB;\nCREATE_PUBNUB['secure'] = CREATE_PUBNUB;\nCREATE_PUBNUB['crypto_obj'] = crypto_obj(); // export to constructor\n\n// Bind for PUBNUB Readiness to Subscribe\nif (document.readyState === 'complete') {\n    timeout( ready, 0 );\n}\nelse {\n    bind( 'load', window, function(){ timeout( ready, 0 ) } );\n}\n\nvar pdiv = PDIV || {};\n\n// CREATE A PUBNUB GLOBAL OBJECT\nPUBNUB = CREATE_PUBNUB({\n    'notest'        : 1,\n    'publish_key'   : attr( pdiv, 'pub-key' ),\n    'subscribe_key' : attr( pdiv, 'sub-key' ),\n    'ssl'           : !document.location.href.indexOf('https') ||\n                      attr( pdiv, 'ssl' ) == 'on',\n    'origin'        : attr( pdiv, 'origin' ),\n    'uuid'          : attr( pdiv, 'uuid' )\n});\n\n// jQuery Interface\nwindow['jQuery'] && (window['jQuery']['PUBNUB'] = CREATE_PUBNUB);\n\n// For Modern JS + Testling.js - http://testling.com/\ntypeof(module) !== 'undefined' && (module['exports'] = PUBNUB) && ready();\n\nvar pubnubs = $('pubnubs') || 0;\n\n// LEAVE NOW IF NO PDIV.\nif (!PDIV) return;\n\n// PUBNUB Flash Socket\ncss( PDIV, { 'position' : 'absolute', 'top' : -SECOND } );\n\nif ('opera' in window || attr( PDIV, 'flash' )) PDIV['innerHTML'] =\n    '<object id=pubnubs data='  + SWF +\n    '><param name=movie value=' + SWF +\n    '><param name=allowscriptaccess value=always></object>';\n\n// Create Interface for Opera Flash\nPUBNUB['rdx'] = function( id, data ) {\n    if (!data) return FDomainRequest[id]['onerror']();\n    FDomainRequest[id]['responseText'] = unescape(data);\n    FDomainRequest[id]['onload']();\n};\n\nfunction FDomainRequest() {\n    if (!pubnubs || !pubnubs['get']) return 0;\n\n    var fdomainrequest = {\n        'id'    : FDomainRequest['id']++,\n        'send'  : function() {},\n        'abort' : function() { fdomainrequest['id'] = {} },\n        'open'  : function( method, url ) {\n            FDomainRequest[fdomainrequest['id']] = fdomainrequest;\n            pubnubs['get']( fdomainrequest['id'], url );\n        }\n    };\n\n    return fdomainrequest;\n}\nFDomainRequest['id'] = SECOND;\n\n})();\n(function(){\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET INTERFACE\n// ---------------------------------------------------------------------------\nvar WS = PUBNUB['ws'] = function( url, protocols ) {\n    if (!(this instanceof WS)) return new WS( url, protocols );\n\n    var self     = this\n    ,   url      = self.url      = url || ''\n    ,   protocol = self.protocol = protocols || 'Sec-WebSocket-Protocol'\n    ,   bits     = url.split('/')\n    ,   setup    = {\n         'ssl'           : bits[0] === 'wss:'\n        ,'origin'        : bits[2]\n        ,'publish_key'   : bits[3]\n        ,'subscribe_key' : bits[4]\n        ,'channel'       : bits[5]\n    };\n\n    // READY STATES\n    self['CONNECTING'] = 0; // The connection is not yet open.\n    self['OPEN']       = 1; // The connection is open and ready to communicate.\n    self['CLOSING']    = 2; // The connection is in the process of closing.\n    self['CLOSED']     = 3; // The connection is closed or couldn't be opened.\n\n    // CLOSE STATES\n    self['CLOSE_NORMAL']         = 1000; // Normal Intended Close; completed.\n    self['CLOSE_GOING_AWAY']     = 1001; // Closed Unexpecttedly.\n    self['CLOSE_PROTOCOL_ERROR'] = 1002; // Server: Not Supported.\n    self['CLOSE_UNSUPPORTED']    = 1003; // Server: Unsupported Protocol.\n    self['CLOSE_TOO_LARGE']      = 1004; // Server: Too Much Data.\n    self['CLOSE_NO_STATUS']      = 1005; // Server: No reason.\n    self['CLOSE_ABNORMAL']       = 1006; // Abnormal Disconnect.\n\n    // Events Default\n    self['onclose']   = self['onerror'] =\n    self['onmessage'] = self['onopen']  =\n    self['onsend']    =  function(){};\n\n    // Attributes\n    self['binaryType']     = '';\n    self['extensions']     = '';\n    self['bufferedAmount'] = 0;\n    self['trasnmitting']   = false;\n    self['buffer']         = [];\n    self['readyState']     = self['CONNECTING'];\n\n    // Close if no setup.\n    if (!url) {\n        self['readyState'] = self['CLOSED'];\n        self['onclose']({\n            'code'     : self['CLOSE_ABNORMAL'],\n            'reason'   : 'Missing URL',\n            'wasClean' : true\n        });\n        return self;\n    }\n\n    // PubNub WebSocket Emulation\n    self.pubnub       = PUBNUB['init'](setup);\n    self.pubnub.setup = setup;\n    self.setup        = setup;\n\n    self.pubnub['subscribe']({\n        'restore'    : false,\n        'channel'    : setup['channel'],\n        'disconnect' : self['onerror'],\n        'reconnect'  : self['onopen'],\n        'error'      : function() {\n            self['onclose']({\n                'code'     : self['CLOSE_ABNORMAL'],\n                'reason'   : 'Missing URL',\n                'wasClean' : false\n            });\n        },\n        'callback'   : function(message) {\n            self['onmessage']({ 'data' : message });\n        },\n        'connect'    : function() {\n            self['readyState'] = self['OPEN'];\n            self['onopen']();\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET SEND\n// ---------------------------------------------------------------------------\nWS.prototype.send = function(data) {\n    var self = this;\n    self.pubnub['publish']({\n        'channel'  : self.pubnub.setup['channel'],\n        'message'  : data,\n        'callback' : function(response) {\n            self['onsend']({ 'data' : response });\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET CLOSE\n// ---------------------------------------------------------------------------\nWS.prototype.close = function() {\n    var self = this;\n    self.pubnub['unsubscribe']({ 'channel' : self.pubnub.setup['channel'] });\n    self['readyState'] = self['CLOSED'];\n    self['onclose']({});\n};\n\n})();\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\nvar CryptoJS=CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&&c.mixIn(a);c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},\nr=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((b+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<\n32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-8*(b%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,\n2),16)<<24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-8*(b%4)&255));return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(a.charCodeAt(b)&255)<<24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}},\nu=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this);\na._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a,\nd)).finalize(c)}}});var t=f.algo={};return f}(Math);\n\n// SHA256\n(function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64>n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t<=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&&(8>n&&(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64>p;p++){if(16>p)a[p]=\nc[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k<<25|k>>>7)^(k<<14|k>>>18)^k>>>3)+a[p-7]+((l<<15|l>>>17)^(l<<13|l>>>19)^l>>>10)+a[p-16]}k=q+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&m^~h&n)+r[p]+a[p];l=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&g^f&g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;\nd[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math);\n\n// HMAC SHA256\n(function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;\"string\"==typeof g&&(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes>m&&(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j<h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g=\nthis._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})();\n\n// Base64\n(function(){var u=CryptoJS,p=u.lib.WordArray;u.enc.Base64={stringify:function(d){var l=d.words,p=d.sigBytes,t=this._map;d.clamp();d=[];for(var r=0;r<p;r+=3)for(var w=(l[r>>>2]>>>24-8*(r%4)&255)<<16|(l[r+1>>>2]>>>24-8*((r+1)%4)&255)<<8|l[r+2>>>2]>>>24-8*((r+2)%4)&255,v=0;4>v&&r+0.75*v<p;v++)d.push(t.charAt(w>>>6*(3-v)&63));if(l=t.charAt(64))for(;d.length%4;)d.push(l);return d.join(\"\")},parse:function(d){var l=d.length,s=this._map,t=s.charAt(64);t&&(t=d.indexOf(t),-1!=t&&(l=t));for(var t=[],r=0,w=0;w<\nl;w++)if(w%4){var v=s.indexOf(d.charAt(w-1))<<2*(w%4),b=s.indexOf(d.charAt(w))>>>6-2*(w%4);t[r>>>2]|=(v|b)<<24-8*(r%4);r++}return p.create(t,r)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}})();\n\n// BlockCipher\n(function(u){function p(b,n,a,c,e,j,k){b=b+(n&a|~n&c)+e+k;return(b<<j|b>>>32-j)+n}function d(b,n,a,c,e,j,k){b=b+(n&c|a&~c)+e+k;return(b<<j|b>>>32-j)+n}function l(b,n,a,c,e,j,k){b=b+(n^a^c)+e+k;return(b<<j|b>>>32-j)+n}function s(b,n,a,c,e,j,k){b=b+(a^(n|~c))+e+k;return(b<<j|b>>>32-j)+n}for(var t=CryptoJS,r=t.lib,w=r.WordArray,v=r.Hasher,r=t.algo,b=[],x=0;64>x;x++)b[x]=4294967296*u.abs(u.sin(x+1))|0;r=r.MD5=v.extend({_doReset:function(){this._hash=new w.init([1732584193,4023233417,2562383102,271733878])},\n_doProcessBlock:function(q,n){for(var a=0;16>a;a++){var c=n+a,e=q[c];q[c]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360}var a=this._hash.words,c=q[n+0],e=q[n+1],j=q[n+2],k=q[n+3],z=q[n+4],r=q[n+5],t=q[n+6],w=q[n+7],v=q[n+8],A=q[n+9],B=q[n+10],C=q[n+11],u=q[n+12],D=q[n+13],E=q[n+14],x=q[n+15],f=a[0],m=a[1],g=a[2],h=a[3],f=p(f,m,g,h,c,7,b[0]),h=p(h,f,m,g,e,12,b[1]),g=p(g,h,f,m,j,17,b[2]),m=p(m,g,h,f,k,22,b[3]),f=p(f,m,g,h,z,7,b[4]),h=p(h,f,m,g,r,12,b[5]),g=p(g,h,f,m,t,17,b[6]),m=p(m,g,h,f,w,22,b[7]),\nf=p(f,m,g,h,v,7,b[8]),h=p(h,f,m,g,A,12,b[9]),g=p(g,h,f,m,B,17,b[10]),m=p(m,g,h,f,C,22,b[11]),f=p(f,m,g,h,u,7,b[12]),h=p(h,f,m,g,D,12,b[13]),g=p(g,h,f,m,E,17,b[14]),m=p(m,g,h,f,x,22,b[15]),f=d(f,m,g,h,e,5,b[16]),h=d(h,f,m,g,t,9,b[17]),g=d(g,h,f,m,C,14,b[18]),m=d(m,g,h,f,c,20,b[19]),f=d(f,m,g,h,r,5,b[20]),h=d(h,f,m,g,B,9,b[21]),g=d(g,h,f,m,x,14,b[22]),m=d(m,g,h,f,z,20,b[23]),f=d(f,m,g,h,A,5,b[24]),h=d(h,f,m,g,E,9,b[25]),g=d(g,h,f,m,k,14,b[26]),m=d(m,g,h,f,v,20,b[27]),f=d(f,m,g,h,D,5,b[28]),h=d(h,f,\nm,g,j,9,b[29]),g=d(g,h,f,m,w,14,b[30]),m=d(m,g,h,f,u,20,b[31]),f=l(f,m,g,h,r,4,b[32]),h=l(h,f,m,g,v,11,b[33]),g=l(g,h,f,m,C,16,b[34]),m=l(m,g,h,f,E,23,b[35]),f=l(f,m,g,h,e,4,b[36]),h=l(h,f,m,g,z,11,b[37]),g=l(g,h,f,m,w,16,b[38]),m=l(m,g,h,f,B,23,b[39]),f=l(f,m,g,h,D,4,b[40]),h=l(h,f,m,g,c,11,b[41]),g=l(g,h,f,m,k,16,b[42]),m=l(m,g,h,f,t,23,b[43]),f=l(f,m,g,h,A,4,b[44]),h=l(h,f,m,g,u,11,b[45]),g=l(g,h,f,m,x,16,b[46]),m=l(m,g,h,f,j,23,b[47]),f=s(f,m,g,h,c,6,b[48]),h=s(h,f,m,g,w,10,b[49]),g=s(g,h,f,m,\nE,15,b[50]),m=s(m,g,h,f,r,21,b[51]),f=s(f,m,g,h,u,6,b[52]),h=s(h,f,m,g,k,10,b[53]),g=s(g,h,f,m,B,15,b[54]),m=s(m,g,h,f,e,21,b[55]),f=s(f,m,g,h,v,6,b[56]),h=s(h,f,m,g,x,10,b[57]),g=s(g,h,f,m,t,15,b[58]),m=s(m,g,h,f,D,21,b[59]),f=s(f,m,g,h,z,6,b[60]),h=s(h,f,m,g,C,10,b[61]),g=s(g,h,f,m,j,15,b[62]),m=s(m,g,h,f,A,21,b[63]);a[0]=a[0]+f|0;a[1]=a[1]+m|0;a[2]=a[2]+g|0;a[3]=a[3]+h|0},_doFinalize:function(){var b=this._data,n=b.words,a=8*this._nDataBytes,c=8*b.sigBytes;n[c>>>5]|=128<<24-c%32;var e=u.floor(a/\n4294967296);n[(c+64>>>9<<4)+15]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360;n[(c+64>>>9<<4)+14]=(a<<8|a>>>24)&16711935|(a<<24|a>>>8)&4278255360;b.sigBytes=4*(n.length+1);this._process();b=this._hash;n=b.words;for(a=0;4>a;a++)c=n[a],n[a]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;return b},clone:function(){var b=v.clone.call(this);b._hash=this._hash.clone();return b}});t.MD5=v._createHelper(r);t.HmacMD5=v._createHmacHelper(r)})(Math);\n(function(){var u=CryptoJS,p=u.lib,d=p.Base,l=p.WordArray,p=u.algo,s=p.EvpKDF=d.extend({cfg:d.extend({keySize:4,hasher:p.MD5,iterations:1}),init:function(d){this.cfg=this.cfg.extend(d)},compute:function(d,r){for(var p=this.cfg,s=p.hasher.create(),b=l.create(),u=b.words,q=p.keySize,p=p.iterations;u.length<q;){n&&s.update(n);var n=s.update(d).finalize(r);s.reset();for(var a=1;a<p;a++)n=s.finalize(n),s.reset();b.concat(n)}b.sigBytes=4*q;return b}});u.EvpKDF=function(d,l,p){return s.create(p).compute(d,\nl)}})();\n\n// Cipher\nCryptoJS.lib.Cipher||function(u){var p=CryptoJS,d=p.lib,l=d.Base,s=d.WordArray,t=d.BufferedBlockAlgorithm,r=p.enc.Base64,w=p.algo.EvpKDF,v=d.Cipher=t.extend({cfg:l.extend(),createEncryptor:function(e,a){return this.create(this._ENC_XFORM_MODE,e,a)},createDecryptor:function(e,a){return this.create(this._DEC_XFORM_MODE,e,a)},init:function(e,a,b){this.cfg=this.cfg.extend(b);this._xformMode=e;this._key=a;this.reset()},reset:function(){t.reset.call(this);this._doReset()},process:function(e){this._append(e);return this._process()},\nfinalize:function(e){e&&this._append(e);return this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(e){return{encrypt:function(b,k,d){return(\"string\"==typeof k?c:a).encrypt(e,b,k,d)},decrypt:function(b,k,d){return(\"string\"==typeof k?c:a).decrypt(e,b,k,d)}}}});d.StreamCipher=v.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var b=p.mode={},x=function(e,a,b){var c=this._iv;c?this._iv=u:c=this._prevBlock;for(var d=0;d<b;d++)e[a+d]^=\nc[d]},q=(d.BlockCipherMode=l.extend({createEncryptor:function(e,a){return this.Encryptor.create(e,a)},createDecryptor:function(e,a){return this.Decryptor.create(e,a)},init:function(e,a){this._cipher=e;this._iv=a}})).extend();q.Encryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize;x.call(this,e,a,c);b.encryptBlock(e,a);this._prevBlock=e.slice(a,a+c)}});q.Decryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize,d=e.slice(a,a+c);b.decryptBlock(e,a);x.call(this,\ne,a,c);this._prevBlock=d}});b=b.CBC=q;q=(p.pad={}).Pkcs7={pad:function(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,l=[],n=0;n<c;n+=4)l.push(d);c=s.create(l,c);a.concat(c)},unpad:function(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255}};d.BlockCipher=v.extend({cfg:v.cfg.extend({mode:b,padding:q}),reset:function(){v.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;this._mode=c.call(a,\nthis,b&&b.words)},_doProcessBlock:function(a,b){this._mode.processBlock(a,b)},_doFinalize:function(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0)}else b=this._process(!0),a.unpad(b);return b},blockSize:4});var n=d.CipherParams=l.extend({init:function(a){this.mixIn(a)},toString:function(a){return(a||this.formatter).stringify(this)}}),b=(p.format={}).OpenSSL={stringify:function(a){var b=a.ciphertext;a=a.salt;return(a?s.create([1398893684,\n1701076831]).concat(a).concat(b):b).toString(r)},parse:function(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=s.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16}return n.create({ciphertext:a,salt:c})}},a=d.SerializableCipher=l.extend({cfg:l.extend({format:b}),encrypt:function(a,b,c,d){d=this.cfg.extend(d);var l=a.createEncryptor(c,d);b=l.finalize(b);l=l.cfg;return n.create({ciphertext:b,key:c,iv:l.iv,algorithm:a,mode:l.mode,padding:l.padding,blockSize:a.blockSize,formatter:d.format})},\ndecrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext)},_parse:function(a,b){return\"string\"==typeof a?b.parse(a,this):a}}),p=(p.kdf={}).OpenSSL={execute:function(a,b,c,d){d||(d=s.random(8));a=w.create({keySize:b+c}).compute(a,d);c=s.create(a.words.slice(b),4*c);a.sigBytes=4*b;return n.create({key:a,iv:c,salt:d})}},c=d.PasswordBasedCipher=a.extend({cfg:a.cfg.extend({kdf:p}),encrypt:function(b,c,d,l){l=this.cfg.extend(l);d=l.kdf.execute(d,\nb.keySize,b.ivSize);l.iv=d.iv;b=a.encrypt.call(this,b,c,d.key,l);b.mixIn(d);return b},decrypt:function(b,c,d,l){l=this.cfg.extend(l);c=this._parse(c,l.format);d=l.kdf.execute(d,b.keySize,b.ivSize,c.salt);l.iv=d.iv;return a.decrypt.call(this,b,c,d.key,l)}})}();\n\n// AES\n(function(){for(var u=CryptoJS,p=u.lib.BlockCipher,d=u.algo,l=[],s=[],t=[],r=[],w=[],v=[],b=[],x=[],q=[],n=[],a=[],c=0;256>c;c++)a[c]=128>c?c<<1:c<<1^283;for(var e=0,j=0,c=0;256>c;c++){var k=j^j<<1^j<<2^j<<3^j<<4,k=k>>>8^k&255^99;l[e]=k;s[k]=e;var z=a[e],F=a[z],G=a[F],y=257*a[k]^16843008*k;t[e]=y<<24|y>>>8;r[e]=y<<16|y>>>16;w[e]=y<<8|y>>>24;v[e]=y;y=16843009*G^65537*F^257*z^16843008*e;b[k]=y<<24|y>>>8;x[k]=y<<16|y>>>16;q[k]=y<<8|y>>>24;n[k]=y;e?(e=z^a[a[a[G^z]]],j^=a[a[j]]):e=j=1}var H=[0,1,2,4,8,\n16,32,64,128,27,54],d=d.AES=p.extend({_doReset:function(){for(var a=this._key,c=a.words,d=a.sigBytes/4,a=4*((this._nRounds=d+6)+1),e=this._keySchedule=[],j=0;j<a;j++)if(j<d)e[j]=c[j];else{var k=e[j-1];j%d?6<d&&4==j%d&&(k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255]):(k=k<<8|k>>>24,k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255],k^=H[j/d|0]<<24);e[j]=e[j-d]^k}c=this._invKeySchedule=[];for(d=0;d<a;d++)j=a-d,k=d%4?e[j]:e[j-4],c[d]=4>d||4>=j?k:b[l[k>>>24]]^x[l[k>>>16&255]]^q[l[k>>>\n8&255]]^n[l[k&255]]},encryptBlock:function(a,b){this._doCryptBlock(a,b,this._keySchedule,t,r,w,v,l)},decryptBlock:function(a,c){var d=a[c+1];a[c+1]=a[c+3];a[c+3]=d;this._doCryptBlock(a,c,this._invKeySchedule,b,x,q,n,s);d=a[c+1];a[c+1]=a[c+3];a[c+3]=d},_doCryptBlock:function(a,b,c,d,e,j,l,f){for(var m=this._nRounds,g=a[b]^c[0],h=a[b+1]^c[1],k=a[b+2]^c[2],n=a[b+3]^c[3],p=4,r=1;r<m;r++)var q=d[g>>>24]^e[h>>>16&255]^j[k>>>8&255]^l[n&255]^c[p++],s=d[h>>>24]^e[k>>>16&255]^j[n>>>8&255]^l[g&255]^c[p++],t=\nd[k>>>24]^e[n>>>16&255]^j[g>>>8&255]^l[h&255]^c[p++],n=d[n>>>24]^e[g>>>16&255]^j[h>>>8&255]^l[k&255]^c[p++],g=q,h=s,k=t;q=(f[g>>>24]<<24|f[h>>>16&255]<<16|f[k>>>8&255]<<8|f[n&255])^c[p++];s=(f[h>>>24]<<24|f[k>>>16&255]<<16|f[n>>>8&255]<<8|f[g&255])^c[p++];t=(f[k>>>24]<<24|f[n>>>16&255]<<16|f[g>>>8&255]<<8|f[h&255])^c[p++];n=(f[n>>>24]<<24|f[g>>>16&255]<<16|f[h>>>8&255]<<8|f[k&255])^c[p++];a[b]=q;a[b+1]=s;a[b+2]=t;a[b+3]=n},keySize:8});u.AES=p._createHelper(d)})();\n\n// Mode ECB\nCryptoJS.mode.ECB = (function () {\n    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n    ECB.Encryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.encryptBlock(words, offset);\n        }\n    });\n\n    ECB.Decryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.decryptBlock(words, offset);\n        }\n    });\n\n    return ECB;\n}());// Moved to hmac-sha-256.js","module RingCentral.sdk.core {\n\n    export class Cache {\n\n        private _storage:Storage;\n        private _prefix:string;\n\n        constructor(storage:Storage|any, prefix?:string) {\n            this.setPrefix(prefix);\n            this._storage = storage;\n        }\n\n        setPrefix(prefix?:string) {\n            this._prefix = prefix || 'rc-';\n            return this;\n        }\n\n        setItem(key, data) {\n            this._storage[this._prefixKey(key)] = JSON.stringify(data);\n            return this;\n        }\n\n        removeItem(key) {\n            delete this._storage[this._prefixKey(key)];\n            return this;\n        }\n\n        getItem(key) {\n            var item = this._storage[this._prefixKey(key)];\n            if (!item) return null;\n            return JSON.parse(item);\n        }\n\n        clean() {\n\n            for (var key in this._storage) {\n\n                if (!this._storage.hasOwnProperty(key)) continue;\n\n                if (key.indexOf(this._prefix) === 0) {\n                    delete this._storage[key];\n                }\n\n            }\n\n            return this;\n\n        }\n\n        protected _prefixKey(key) {\n            return this._prefix + key;\n        }\n\n    }\n\n}\n\n","module RingCentral.sdk.core {\n\n    /**\n     * TODO Fix public vars\n     */\n    export class Log {\n\n        public _console:Console;\n        public logDebug:boolean;\n        public logInfo:boolean;\n        public logWarnings:boolean;\n        public logErrors:boolean;\n        public addTimestamps:boolean;\n\n        constructor(console?:Console) {\n\n            if (!console) {\n                console = <Console>{ // safety\n                    log: () => {},\n                    warn: () => {},\n                    info: () => {},\n                    error: () => {}\n                };\n            }\n\n            this._console = console;\n\n            this.logDebug = false;\n            this.logInfo = false;\n            this.logWarnings = false;\n            this.logErrors = false;\n\n            this.addTimestamps = false;\n\n        }\n\n        disableAll() {\n            this.logDebug = false;\n            this.logInfo = false;\n            this.logWarnings = false;\n            this.logErrors = false;\n        }\n\n        enableAll() {\n            this.logDebug = true;\n            this.logInfo = true;\n            this.logWarnings = true;\n            this.logErrors = true;\n        }\n\n        debug(...args) {\n            if (this.logDebug) this._console.log.apply(this._console, this._parseArguments(arguments));\n        }\n\n        info(...args) {\n            if (this.logInfo) this._console.info.apply(this._console, this._parseArguments(arguments));\n        }\n\n        warn(...args) {\n            if (this.logWarnings) this._console.warn.apply(this._console, this._parseArguments(arguments));\n        }\n\n        error(...args) {\n            if (this.logErrors) this._console.error.apply(this._console, this._parseArguments(arguments));\n        }\n\n        stack() {\n            var e = <any> new Error();\n            if (e.hasOwnProperty('stack')) {\n                return e.stack.replace('Error\\n', 'Stack Trace\\n');\n            }\n        }\n\n        protected _parseArguments(args) {\n            args = utils.argumentsToArray(args);\n            if (this.addTimestamps) args.unshift(new Date().toLocaleString(), '-');\n            return args;\n        }\n\n    }\n\n    export var log = new Log();\n\n}","var RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var core;\n        (function (core) {\n            var Cache = (function () {\n                function Cache(storage, prefix) {\n                    this.setPrefix(prefix);\n                    this._storage = storage;\n                }\n                Cache.prototype.setPrefix = function (prefix) {\n                    this._prefix = prefix || 'rc-';\n                    return this;\n                };\n                Cache.prototype.setItem = function (key, data) {\n                    this._storage[this._prefixKey(key)] = JSON.stringify(data);\n                    return this;\n                };\n                Cache.prototype.removeItem = function (key) {\n                    delete this._storage[this._prefixKey(key)];\n                    return this;\n                };\n                Cache.prototype.getItem = function (key) {\n                    var item = this._storage[this._prefixKey(key)];\n                    if (!item)\n                        return null;\n                    return JSON.parse(item);\n                };\n                Cache.prototype.clean = function () {\n                    for (var key in this._storage) {\n                        if (!this._storage.hasOwnProperty(key))\n                            continue;\n                        if (key.indexOf(this._prefix) === 0) {\n                            delete this._storage[key];\n                        }\n                    }\n                    return this;\n                };\n                Cache.prototype._prefixKey = function (key) {\n                    return this._prefix + key;\n                };\n                return Cache;\n            })();\n            core.Cache = Cache;\n        })(core = sdk.core || (sdk.core = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var core;\n        (function (core) {\n            /**\n             * TODO Fix public vars\n             */\n            var Log = (function () {\n                function Log(console) {\n                    if (!console) {\n                        console = {\n                            log: function () { },\n                            warn: function () { },\n                            info: function () { },\n                            error: function () { }\n                        };\n                    }\n                    this._console = console;\n                    this.logDebug = false;\n                    this.logInfo = false;\n                    this.logWarnings = false;\n                    this.logErrors = false;\n                    this.addTimestamps = false;\n                }\n                Log.prototype.disableAll = function () {\n                    this.logDebug = false;\n                    this.logInfo = false;\n                    this.logWarnings = false;\n                    this.logErrors = false;\n                };\n                Log.prototype.enableAll = function () {\n                    this.logDebug = true;\n                    this.logInfo = true;\n                    this.logWarnings = true;\n                    this.logErrors = true;\n                };\n                Log.prototype.debug = function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i - 0] = arguments[_i];\n                    }\n                    if (this.logDebug)\n                        this._console.log.apply(this._console, this._parseArguments(arguments));\n                };\n                Log.prototype.info = function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i - 0] = arguments[_i];\n                    }\n                    if (this.logInfo)\n                        this._console.info.apply(this._console, this._parseArguments(arguments));\n                };\n                Log.prototype.warn = function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i - 0] = arguments[_i];\n                    }\n                    if (this.logWarnings)\n                        this._console.warn.apply(this._console, this._parseArguments(arguments));\n                };\n                Log.prototype.error = function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i - 0] = arguments[_i];\n                    }\n                    if (this.logErrors)\n                        this._console.error.apply(this._console, this._parseArguments(arguments));\n                };\n                Log.prototype.stack = function () {\n                    var e = new Error();\n                    if (e.hasOwnProperty('stack')) {\n                        return e.stack.replace('Error\\n', 'Stack Trace\\n');\n                    }\n                };\n                Log.prototype._parseArguments = function (args) {\n                    args = core.utils.argumentsToArray(args);\n                    if (this.addTimestamps)\n                        args.unshift(new Date().toLocaleString(), '-');\n                    return args;\n                };\n                return Log;\n            })();\n            core.Log = Log;\n            core.log = new Log();\n        })(core = sdk.core || (sdk.core = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var core;\n        (function (core) {\n            var utils;\n            (function (utils) {\n                var hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n                // Populate the class2type map\n                'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n                    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n                });\n                /**\n                 * Ported from jQuery.fn.extend\n                 * Optional first parameter makes deep copy\n                 */\n                function extend(targetObject, sourceObject) {\n                    var args = [];\n                    for (var _i = 2; _i < arguments.length; _i++) {\n                        args[_i - 2] = arguments[_i];\n                    }\n                    var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n                    // Handle a deep copy situation\n                    if (typeof target === \"boolean\") {\n                        deep = target;\n                        // skip the boolean and the target\n                        target = arguments[i] || {};\n                        i++;\n                    }\n                    // Handle case when target is a string or something (possible in deep copy)\n                    if (typeof target !== \"object\" && !isFunction(target)) {\n                        target = {};\n                    }\n                    for (; i < length; i++) {\n                        // Only deal with non-null/undefined values\n                        if ((options = arguments[i]) !== null) {\n                            // Extend the base object\n                            for (name in options) {\n                                src = target[name];\n                                copy = options[name];\n                                // Prevent never-ending loop\n                                if (target === copy) {\n                                    continue;\n                                }\n                                // Recurse if we're merging plain objects or arrays\n                                if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n                                    if (copyIsArray) {\n                                        copyIsArray = false;\n                                        clone = src && isArray(src) ? src : [];\n                                    }\n                                    else {\n                                        clone = src && isPlainObject(src) ? src : {};\n                                    }\n                                    // Never move original objects, clone them\n                                    target[name] = extend(deep, clone, copy);\n                                }\n                                else if (copy !== undefined) {\n                                    target[name] = copy;\n                                }\n                            }\n                        }\n                    }\n                    // Return the modified object\n                    return target;\n                }\n                utils.extend = extend;\n                function forEach(object, cb) {\n                    for (var i in object) {\n                        if (!object.hasOwnProperty(i))\n                            continue;\n                        var res = cb(object[i], i);\n                        if (res === false)\n                            break;\n                    }\n                }\n                utils.forEach = forEach;\n                /**\n                 * TODO Replace with something better\n                 * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n                 * @param {object} parameters\n                 * @returns {string}\n                 */\n                function queryStringify(parameters) {\n                    var array = [];\n                    forEach(parameters, function (v, i) {\n                        if (isArray(v)) {\n                            v.forEach(function (vv) {\n                                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                            });\n                        }\n                        else {\n                            array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n                        }\n                    });\n                    return array.join('&');\n                }\n                utils.queryStringify = queryStringify;\n                /**\n                 * TODO Replace with something better\n                 * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n                 * @param {string} queryString\n                 * @returns {object}\n                 */\n                function parseQueryString(queryString) {\n                    var argsParsed = {}, self = this;\n                    queryString.split('&').forEach(function (arg) {\n                        arg = decodeURIComponent(arg);\n                        if (arg.indexOf('=') == -1) {\n                            argsParsed[arg.trim()] = true;\n                        }\n                        else {\n                            var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                            if (key in argsParsed) {\n                                if (key in argsParsed && !self.isArray(argsParsed[key]))\n                                    argsParsed[key] = [argsParsed[key]];\n                                argsParsed[key].push(value);\n                            }\n                            else {\n                                argsParsed[key] = value;\n                            }\n                        }\n                    });\n                    return argsParsed;\n                }\n                utils.parseQueryString = parseQueryString;\n                /**\n                 * Returns true if the passed value is valid email address.\n                 * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n                 */\n                function isEmail(v, multiple) {\n                    if (!!multiple) {\n                        //this Regexp is also suitable for multiple emails (comma separated)\n                        return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n                    }\n                    else {\n                        return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n                    }\n                }\n                utils.isEmail = isEmail;\n                function isPhoneNumber(v) {\n                    return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n                }\n                utils.isPhoneNumber = isPhoneNumber;\n                /**\n                 * @param args\n                 * @returns {Array}\n                 */\n                function argumentsToArray(args) {\n                    return Array.prototype.slice.call(args || [], 0);\n                }\n                utils.argumentsToArray = argumentsToArray;\n                function isDate(obj) {\n                    return type(obj) === \"date\";\n                }\n                utils.isDate = isDate;\n                function isFunction(obj) {\n                    return type(obj) === \"function\";\n                }\n                utils.isFunction = isFunction;\n                function isArray(obj) {\n                    return Array.isArray ? Array.isArray(obj) : type(obj) === \"array\";\n                }\n                utils.isArray = isArray;\n                // A crude way of determining if an object is a window\n                function isWindow(obj) {\n                    return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n                }\n                utils.isWindow = isWindow;\n                function isNan(obj) {\n                    return obj === null || !rdigit.test(obj) || isNaN(obj);\n                }\n                utils.isNan = isNan;\n                function type(obj) {\n                    return obj === null\n                        ? String(obj)\n                        : class2type[toString.call(obj)] || \"object\";\n                }\n                utils.type = type;\n                function isPlainObject(obj) {\n                    // Must be an Object.\n                    // Because of IE, we also have to check the presence of the constructor property.\n                    // Make sure that DOM nodes and window objects don't pass through, as well\n                    if (!obj || type(obj) !== \"object\" || obj.nodeType || isWindow(obj)) {\n                        return false;\n                    }\n                    // Not own constructor property must be Object\n                    if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n                        return false;\n                    }\n                    // Own properties are enumerated firstly, so to speed up,\n                    // if last one is own, then all properties are own.\n                    var key;\n                    for (key in obj) { }\n                    return key === undefined || hasOwn.call(obj, key);\n                }\n                utils.isPlainObject = isPlainObject;\n                function getProperty(obj, property) {\n                    return property\n                        .split(/[.[\\]]/)\n                        .reduce(function (res, part) {\n                        if (!res)\n                            return undefined;\n                        return part ? res[part] : res;\n                    }, obj);\n                }\n                utils.getProperty = getProperty;\n                function poll(fn, interval, timeout) {\n                    stopPolling(timeout);\n                    interval = interval || 1000;\n                    var next = function (delay) {\n                        delay = delay || interval;\n                        interval = delay;\n                        return setTimeout(function () {\n                            fn(next, delay);\n                        }, delay);\n                    };\n                    return next();\n                }\n                utils.poll = poll;\n                function stopPolling(timeout) {\n                    if (timeout)\n                        clearTimeout(timeout);\n                }\n                utils.stopPolling = stopPolling;\n                function parseString(s) {\n                    return s ? s.toString() : '';\n                }\n                utils.parseString = parseString;\n                function parseNumber(n) {\n                    if (!n)\n                        return 0;\n                    n = parseFloat(n);\n                    return isNan(n) ? 0 : n;\n                }\n                utils.parseNumber = parseNumber;\n                function isNodeJS() {\n                    return (typeof process !== 'undefined');\n                }\n                utils.isNodeJS = isNodeJS;\n                function isBrowser() {\n                    return (typeof window !== 'undefined');\n                }\n                utils.isBrowser = isBrowser;\n            })(utils = core.utils || (core.utils = {}));\n        })(core = sdk.core || (sdk.core = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n/// <reference path=\"./Log.ts\" />\n/// <reference path=\"./Utils.ts\" />\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var core;\n        (function (core) {\n            /**\n             * @see https://github.com/Microsoft/TypeScript/issues/275\n             */\n            var Observable = (function () {\n                function Observable() {\n                    if (!(this instanceof Observable))\n                        throw new Error('Observable(): New operator was omitted');\n                    this.off();\n                }\n                Observable.prototype.hasListeners = function (event) {\n                    return (event in this._listeners);\n                };\n                Observable.prototype.on = function (events, callback) {\n                    var _this = this;\n                    if (typeof events == 'string')\n                        events = [events];\n                    if (!events)\n                        throw new Error('No events to subscribe to');\n                    if (typeof callback !== 'function')\n                        throw new Error('Callback must be a function');\n                    events.forEach(function (event) {\n                        if (!_this.hasListeners(event))\n                            _this._listeners[event] = [];\n                        _this._listeners[event].push(callback);\n                    });\n                    return this;\n                };\n                Observable.prototype.emit = function (event) {\n                    var _this = this;\n                    var args = [];\n                    for (var _i = 1; _i < arguments.length; _i++) {\n                        args[_i - 1] = arguments[_i];\n                    }\n                    var result = null;\n                    if (!this.hasListeners(event))\n                        return null;\n                    this._listeners[event].some(function (callback) {\n                        result = callback.apply(_this, args);\n                        return (result === false);\n                    });\n                    return result;\n                };\n                Observable.prototype.off = function (event, callback) {\n                    var _this = this;\n                    if (!event) {\n                        this._listeners = {};\n                    }\n                    else {\n                        if (!callback) {\n                            delete this._listeners[event];\n                        }\n                        else {\n                            if (!this.hasListeners(event))\n                                return this;\n                            this._listeners[event].forEach(function (cb, i) {\n                                if (cb === callback)\n                                    delete _this._listeners[event][i];\n                            });\n                        }\n                    }\n                    return this;\n                };\n                Observable.prototype.destroy = function () {\n                    this.off();\n                    core.log.debug('Observable.destroy(): Listeners were destroyed');\n                    return this;\n                };\n                return Observable;\n            })();\n            core.Observable = Observable;\n        })(core = sdk.core || (sdk.core = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n/// <reference path=\"./Observable.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var core;\n        (function (core) {\n            var PageVisibility = (function (_super) {\n                __extends(PageVisibility, _super);\n                function PageVisibility() {\n                    var _this = this;\n                    _super.call(this);\n                    this.events = {\n                        change: 'change'\n                    };\n                    var hidden = \"hidden\", onchange = function (evt) {\n                        evt = evt || window.event;\n                        var v = 'visible', h = 'hidden', evtMap = {\n                            focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n                        };\n                        _this._visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n                        _this.emit(_this.events.change, _this._visible);\n                    };\n                    this._visible = true;\n                    if (typeof document == 'undefined' || typeof window == 'undefined')\n                        return;\n                    // Standards:\n                    if (hidden in document)\n                        document.addEventListener(\"visibilitychange\", onchange);\n                    else if ((hidden = \"mozHidden\") in document)\n                        document.addEventListener(\"mozvisibilitychange\", onchange);\n                    else if ((hidden = \"webkitHidden\") in document)\n                        document.addEventListener(\"webkitvisibilitychange\", onchange);\n                    else if ((hidden = \"msHidden\") in document)\n                        document.addEventListener(\"msvisibilitychange\", onchange);\n                    else if ('onfocusin' in document)\n                        document.onfocusin = document.onfocusout = onchange;\n                    else\n                        window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n                }\n                PageVisibility.prototype.visible = function () {\n                    return this._visible;\n                };\n                return PageVisibility;\n            })(core.Observable);\n            core.PageVisibility = PageVisibility;\n        })(core = sdk.core || (sdk.core = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var mocks;\n        (function (mocks) {\n            var Mock = (function () {\n                function Mock(method, path, json, status, statusText, delay) {\n                    this._method = method.toUpperCase();\n                    this._path = path;\n                    this._json = json || {};\n                    this._delay = delay || 10;\n                    this._status = status || 200;\n                    this._statusText = statusText || 'OK';\n                }\n                Mock.prototype.path = function () {\n                    return this._path;\n                };\n                Mock.prototype.method = function () {\n                    return this._method;\n                };\n                Mock.prototype.test = function (request) {\n                    return request.url.indexOf(this._path) > -1 &&\n                        request.method.toUpperCase() == this._method;\n                };\n                Mock.prototype.getResponse = function (request) {\n                    var _this = this;\n                    return new sdk.externals._Promise(function (resolve, reject) {\n                        setTimeout(function () {\n                            resolve(_this.createResponse(_this._json));\n                        }, _this._delay);\n                    });\n                };\n                Mock.prototype.createResponse = function (json, init) {\n                    init = init || {};\n                    init.status = init.status || this._status;\n                    init.statusText = init.statusText || this._statusText;\n                    var str = JSON.stringify(json), res = sdk.http.Client.createResponse(str, init);\n                    res.headers.set(sdk.http.ApiResponse.contentType, sdk.http.ApiResponse.jsonContentType);\n                    return res;\n                };\n                return Mock;\n            })();\n            mocks.Mock = Mock;\n        })(mocks = sdk.mocks || (sdk.mocks = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n/// <reference path=\"./Mock.ts\" />\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var mocks;\n        (function (mocks) {\n            var Registry = (function () {\n                function Registry() {\n                    this._mocks = [];\n                }\n                Registry.prototype.add = function (mock) {\n                    this._mocks.push(mock);\n                    return this;\n                };\n                Registry.prototype.clear = function () {\n                    this._mocks = [];\n                    return this;\n                };\n                Registry.prototype.find = function (request) {\n                    //console.log('Registry is looking for', request);\n                    var mock = this._mocks.shift();\n                    if (!mock)\n                        throw new Error('No mock in registry for request ' + request.method + ' ' + request.url);\n                    if (!mock.test(request))\n                        throw new Error('Wrong request ' + request.method + ' ' + request.url +\n                            ' for expected mock ' + mock.method() + ' ' + mock.path());\n                    return mock;\n                };\n                Registry.prototype.apiCall = function (method, path, response, status, statusText) {\n                    this.add(new mocks.Mock(method, path, response, status, statusText));\n                    return this;\n                };\n                Registry.prototype.authentication = function () {\n                    this.apiCall('POST', '/restapi/oauth/token', {\n                        'access_token': 'ACCESS_TOKEN',\n                        'token_type': 'bearer',\n                        'expires_in': 3600,\n                        'refresh_token': 'REFRESH_TOKEN',\n                        'refresh_token_expires_in': 60480,\n                        'scope': 'SMS RCM Foo Boo',\n                        'expireTime': new Date().getTime() + 3600000\n                    });\n                    return this;\n                };\n                Registry.prototype.logout = function () {\n                    this.apiCall('POST', '/restapi/oauth/revoke', {});\n                    return this;\n                };\n                Registry.prototype.presenceLoad = function (id) {\n                    this.apiCall('GET', '/restapi/v1.0/account/~/extension/' + id + '/presence', {\n                        \"uri\": \"https://platform.ringcentral.com/restapi/v1.0/account/123/extension/\" + id + \"/presence\",\n                        \"extension\": {\n                            \"uri\": \"https://platform.ringcentral.com/restapi/v1.0/account/123/extension/\" + id,\n                            \"id\": id,\n                            \"extensionNumber\": \"101\"\n                        },\n                        \"activeCalls\": [],\n                        \"presenceStatus\": \"Available\",\n                        \"telephonyStatus\": \"Ringing\",\n                        \"userStatus\": \"Available\",\n                        \"dndStatus\": \"TakeAllCalls\",\n                        \"extensionId\": id\n                    });\n                    return this;\n                };\n                Registry.prototype.subscribeGeneric = function (expiresIn) {\n                    expiresIn = expiresIn || 15 * 60 * 60;\n                    var date = new Date();\n                    this.apiCall('POST', '/restapi/v1.0/subscription', {\n                        'eventFilters': [\n                            '/restapi/v1.0/account/~/extension/~/presence'\n                        ],\n                        'expirationTime': new Date(date.getTime() + (expiresIn * 1000)).toISOString(),\n                        'expiresIn': expiresIn,\n                        'deliveryMode': {\n                            'transportType': 'PubNub',\n                            'encryption': false,\n                            'address': '123_foo',\n                            'subscriberKey': 'sub-c-foo',\n                            'secretKey': 'sec-c-bar'\n                        },\n                        'id': 'foo-bar-baz',\n                        'creationTime': date.toISOString(),\n                        'status': 'Active',\n                        'uri': 'https://platform.ringcentral.com/restapi/v1.0/subscription/foo-bar-baz'\n                    });\n                    return this;\n                };\n                Registry.prototype.subscribeOnPresence = function (id, detailed) {\n                    id = id || '1';\n                    var date = new Date();\n                    this.apiCall('POST', '/restapi/v1.0/subscription', {\n                        'eventFilters': ['/restapi/v1.0/account/~/extension/' + id + '/presence' + (detailed ? '?detailedTelephonyState=true' : '')],\n                        'expirationTime': new Date(date.getTime() + (15 * 60 * 60 * 1000)).toISOString(),\n                        'deliveryMode': {\n                            'transportType': 'PubNub',\n                            'encryption': true,\n                            'address': '123_foo',\n                            'subscriberKey': 'sub-c-foo',\n                            'secretKey': 'sec-c-bar',\n                            'encryptionAlgorithm': 'AES',\n                            'encryptionKey': 'VQwb6EVNcQPBhE/JgFZ2zw=='\n                        },\n                        'creationTime': date.toISOString(),\n                        'id': 'foo-bar-baz',\n                        'status': 'Active',\n                        'uri': 'https://platform.ringcentral.com/restapi/v1.0/subscription/foo-bar-baz'\n                    });\n                    return this;\n                };\n                Registry.prototype.tokenRefresh = function (failure) {\n                    if (!failure) {\n                        this.apiCall('POST', '/restapi/oauth/token', {\n                            'access_token': 'ACCESS_TOKEN_FROM_REFRESH',\n                            'token_type': 'bearer',\n                            'expires_in': 3600,\n                            'refresh_token': 'REFRESH_TOKEN_FROM_REFRESH',\n                            'refresh_token_expires_in': 60480,\n                            'scope': 'SMS RCM Foo Boo'\n                        });\n                    }\n                    else {\n                        this.apiCall('POST', '/restapi/oauth/token', {\n                            'message': 'Wrong token',\n                            'error_description': 'Wrong token',\n                            'description': 'Wrong token'\n                        }, 400);\n                    }\n                    return this;\n                };\n                return Registry;\n            })();\n            mocks.Registry = Registry;\n        })(mocks = sdk.mocks || (sdk.mocks = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n/// <reference path=\"../externals.d.ts\" />\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var externals;\n        (function (externals) {\n            externals._Promise;\n            externals._fetch;\n            externals._Response;\n            externals._Request;\n            externals._Headers;\n            externals._PUBNUB;\n            function get() {\n                var root = Function('return this')();\n                if (!externals._PUBNUB)\n                    externals._PUBNUB = root.PUBNUB;\n                if (!externals._Promise)\n                    externals._Promise = root.Promise;\n                if (!externals._fetch)\n                    externals._fetch = root.fetch;\n                if (!externals._Headers)\n                    externals._Headers = root.Headers;\n                if (!externals._Request)\n                    externals._Request = root.Request;\n                if (!externals._Response)\n                    externals._Response = root.Response;\n                return externals;\n            }\n            externals.get = get;\n        })(externals = sdk.externals || (sdk.externals = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var http;\n        (function (http) {\n            /**\n             * @TODO Bring back tests\n             */\n            var ApiResponse = (function () {\n                function ApiResponse(request, response, responseText) {\n                    this._text = responseText;\n                    this._request = request;\n                    this._response = response;\n                    this._json = null;\n                    this._multipartTransactions = null;\n                }\n                ApiResponse.prototype.response = function () {\n                    return this._response;\n                };\n                ApiResponse.prototype.request = function () {\n                    return this._request;\n                };\n                ApiResponse.prototype.ok = function () {\n                    return this._response && this._response.ok;\n                };\n                ApiResponse.prototype.text = function () {\n                    return this._text;\n                };\n                ApiResponse.prototype.json = function () {\n                    if (!this._isJson())\n                        throw new Error('Response is not JSON');\n                    if (!this._json) {\n                        this._json = this._text ? JSON.parse(this._text) : null;\n                    }\n                    return this._json;\n                };\n                ApiResponse.prototype.error = function (skipOKCheck) {\n                    if (this.ok() && !skipOKCheck)\n                        return null;\n                    var message = (this._response && this._response.status ? this._response.status + ' ' : '') +\n                        (this._response && this._response.statusText ? this._response.statusText : '');\n                    try {\n                        var json = this.json();\n                        if (json.message)\n                            message = json.message;\n                        if (json.error_description)\n                            message = json.error_description;\n                        if (json.description)\n                            message = json.description;\n                    }\n                    catch (ex) { }\n                    return message;\n                };\n                ApiResponse.prototype.multipart = function () {\n                    if (!this._isMultipart())\n                        throw new Error('Response is not multipart');\n                    if (null === this._multipartTransactions) {\n                        // Step 1. Split multipart response\n                        if (!this._text)\n                            throw new Error('No response body');\n                        var boundary = this._response.headers.get('Content-Type').match(/boundary=([^;]+)/i)[1];\n                        if (!boundary)\n                            throw new Error('Cannot find boundary');\n                        var parts = this._text.toString().split(ApiResponse.boundarySeparator + boundary);\n                        if (parts[0].trim() === '')\n                            parts.shift();\n                        if (parts[parts.length - 1].trim() == ApiResponse.boundarySeparator)\n                            parts.pop();\n                        if (parts.length < 1)\n                            throw new Error('No parts in body');\n                        // Step 2. Parse status info\n                        var statusInfo = ApiResponse.create(parts.shift(), this._response.status, this._response.statusText);\n                        // Step 3. Parse all other parts\n                        this._multipartTransactions = parts.map(function (part, i) {\n                            var status = statusInfo.json().response[i].status;\n                            return ApiResponse.create(part, status);\n                        });\n                    }\n                    return this._multipartTransactions;\n                };\n                /**\n                 * Short-hand method to get only JSON content of responses\n                 */\n                ApiResponse.prototype.multipartJson = function () {\n                    return this.multipart().map(function (res) {\n                        return res.json();\n                    });\n                };\n                ApiResponse.prototype._isContentType = function (contentType) {\n                    return this._getContentType().indexOf(contentType) > -1;\n                };\n                ApiResponse.prototype._getContentType = function () {\n                    return this._response.headers.get(ApiResponse.contentType) || '';\n                };\n                ApiResponse.prototype._isMultipart = function () {\n                    return this._isContentType(ApiResponse.multipartContentType);\n                };\n                ApiResponse.prototype._isUrlEncoded = function () {\n                    return this._isContentType(ApiResponse.urlencodedContentType);\n                };\n                ApiResponse.prototype._isJson = function () {\n                    return this._isContentType(ApiResponse.jsonContentType);\n                };\n                /**\n                 * Method is used to create Transaction objects from string parts of multipart/mixed response\n                 * @param text\n                 * @param status\n                 * @param statusText\n                 * @return {ApiResponse}\n                 */\n                ApiResponse.create = function (text, status, statusText) {\n                    status = status || 200;\n                    statusText = statusText || 'OK';\n                    text = text.replace(/\\r/g, '');\n                    var headers = new sdk.externals._Headers(), headersAndBody = text.split(ApiResponse.bodySeparator), headersText = (headersAndBody.length > 1) ? headersAndBody.shift() : '';\n                    text = headersAndBody.join(ApiResponse.bodySeparator);\n                    (headersText || '')\n                        .split('\\n')\n                        .forEach(function (header) {\n                        var split = header.trim().split(ApiResponse.headerSeparator), key = split.shift().trim(), value = split.join(ApiResponse.headerSeparator).trim();\n                        if (key)\n                            headers.append(key, value);\n                    });\n                    return new ApiResponse(null, http.Client.createResponse(text, {\n                        headers: headers,\n                        status: status,\n                        statusText: statusText\n                    }), text);\n                };\n                ApiResponse.contentType = 'Content-Type';\n                ApiResponse.jsonContentType = 'application/json';\n                ApiResponse.multipartContentType = 'multipart/mixed';\n                ApiResponse.urlencodedContentType = 'application/x-www-form-urlencoded';\n                ApiResponse.headerSeparator = ':';\n                ApiResponse.bodySeparator = '\\n\\n';\n                ApiResponse.boundarySeparator = '--';\n                return ApiResponse;\n            })();\n            http.ApiResponse = ApiResponse;\n        })(http = sdk.http || (sdk.http = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../mocks/Registry.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n/// <reference path=\"./ApiResponse.ts\" />\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var http;\n        (function (http) {\n            var allowedMethods = ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'];\n            var Client = (function (_super) {\n                __extends(Client, _super);\n                function Client() {\n                    _super.apply(this, arguments);\n                    this.events = {\n                        beforeRequest: 'beforeRequest',\n                        requestSuccess: 'requestSuccess',\n                        requestError: 'requestError' // means that request failed completely\n                    };\n                }\n                Client.prototype.sendRequest = function (request) {\n                    var _this = this;\n                    var res = new http.ApiResponse(request); //FIXME Potential leak\n                    return new sdk.externals._Promise(function (resolve) {\n                        //TODO Stop request if listeners return false\n                        _this.emit(_this.events.beforeRequest, res);\n                        resolve(_this._loadResponse(request));\n                    })\n                        .then(function (response) {\n                        res['_response'] = Client.cloneResponse(response);\n                        return response.text();\n                    })\n                        .then(function (text) {\n                        res['_text'] = text;\n                        if (!res.ok())\n                            throw Client.makeError(new Error('Response has unsuccessful status'), res);\n                        _this.emit(_this.events.requestSuccess, res);\n                        return res;\n                    })\n                        .catch(function (e) {\n                        if (!e.apiResponse) {\n                            // we don't pass response since most likely it's parsing caused an error\n                            e = Client.makeError(e, res);\n                        }\n                        _this.emit(_this.events.requestError, e);\n                        throw e;\n                    });\n                };\n                Client.prototype._loadResponse = function (request) {\n                    return sdk.externals._fetch.call(null, request);\n                };\n                /**\n                 * Wraps the JS Error object with transaction information\n                 * @param {Error} e\n                 * @param {ApiResponse} apiResponse\n                 * @return {IApiError}\n                 */\n                Client.makeError = function (e, apiResponse) {\n                    var error = e;\n                    // Wrap only if regular error\n                    if (!error.hasOwnProperty('apiResponse') && !error.hasOwnProperty('originalMessage')) {\n                        error.apiResponse = apiResponse;\n                        error.originalMessage = error.message;\n                        error.message = (apiResponse && apiResponse.error(true)) || error.originalMessage;\n                    }\n                    return error;\n                };\n                /**\n                 * TODO Wait for\n                 *   - https://github.com/github/fetch/issues/185\n                 *   - https://github.com/bitinn/node-fetch/issues/34\n                 * @param {Response} response\n                 * @return {Response}\n                 */\n                Client.cloneResponse = function (response) {\n                    if (sdk.core.utils.isFunction(response.clone))\n                        return response.clone();\n                    var body = '';\n                    if (response.hasOwnProperty('_bodyInit'))\n                        body = response['_bodyInit'];\n                    if (response.hasOwnProperty('_bodyText'))\n                        body = response['_bodyText'];\n                    if (response.hasOwnProperty('_bodyBlob'))\n                        body = response['_bodyBlob'].slice();\n                    if (response.hasOwnProperty('_bodyFormData'))\n                        body = response['_bodyFormData'];\n                    if (response.hasOwnProperty('_raw'))\n                        body = response['_raw'].join('');\n                    var clone = new sdk.externals._Response(body, response);\n                    if (response.hasOwnProperty('body'))\n                        clone['body'] = response['body']; // accessing non-standard properties\n                    return clone;\n                };\n                /**\n                 * Creates a response\n                 * @param stringBody\n                 * @param init\n                 * @return {Response}\n                 */\n                Client.createResponse = function (stringBody, init) {\n                    init = init || {};\n                    return new sdk.externals._Response(stringBody, init);\n                };\n                Client.createRequest = function (input, init) {\n                    init = init || {};\n                    var body = init.body;\n                    // Assign request with empty body, Github's fetch throws errors if it cannot recognize the body type\n                    var req = new sdk.externals._Request(input, sdk.core.utils.extend({}, init, { body: null }));\n                    if (!req.url)\n                        throw new Error('Url is not defined');\n                    if (!req.method)\n                        req.method = 'GET';\n                    if (req.method && allowedMethods.indexOf(req.method) < 0)\n                        throw new Error('Method has wrong value: ' + req.method);\n                    if (!req.headers.has('Accept'))\n                        req.headers.set('Accept', 'application/json');\n                    // Serialize body\n                    if (sdk.core.utils.isPlainObject(init.body) || !init.body) {\n                        if (!req.headers.has('Content-Type'))\n                            req.headers.set('Content-Type', 'application/json');\n                        var contentType = req.headers.get('Content-Type');\n                        if (contentType.indexOf('application/json') > -1) {\n                            body = JSON.stringify(init.body);\n                        }\n                        else if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n                            body = sdk.core.utils.queryStringify(init.body);\n                        }\n                    }\n                    req.credentials = 'include';\n                    req.mode = 'cors';\n                    if (init.query) {\n                        req.url = req.url + (req.url.indexOf('?') > -1 ? '&' : '?') + sdk.core.utils.queryStringify(init.query);\n                    }\n                    // Create another request with encoded body\n                    req = new sdk.externals._Request(req.url, sdk.core.utils.extend(req, { body: body }));\n                    // Keep the original body accessible directly (for mocks)\n                    req.body = init.body;\n                    return req;\n                };\n                return Client;\n            })(sdk.core.Observable);\n            http.Client = Client;\n        })(http = sdk.http || (sdk.http = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var platform;\n        (function (platform) {\n            var Queue = (function () {\n                function Queue(cache, cacheId) {\n                    this._cache = cache;\n                    this._cacheId = cacheId;\n                    this.setPollInterval(250);\n                    this.setReleaseTimeout(5000); // If queue was not released then force it to do so after some timeout\n                }\n                Queue.prototype.isPaused = function () {\n                    var storage = this._cache, cacheId = this._cacheId, time = storage.getItem(cacheId);\n                    return !!time && Date.now() - parseInt(time) < this._releaseTimeout;\n                };\n                Queue.prototype.pause = function () {\n                    this._cache.setItem(this._cacheId, Date.now());\n                    return this;\n                };\n                Queue.prototype.resume = function () {\n                    this._cache.removeItem(this._cacheId);\n                    return this;\n                };\n                Queue.prototype.poll = function () {\n                    var _this = this;\n                    if (this._promise)\n                        return this._promise;\n                    this._promise = new sdk.externals._Promise(function (resolve, reject) {\n                        sdk.core.utils.poll(function (next) {\n                            if (_this.isPaused())\n                                return next();\n                            _this._promise = null;\n                            _this.resume(); // this is actually not needed but why not\n                            resolve(null);\n                        }, _this._pollInterval);\n                    });\n                    return this._promise;\n                };\n                Queue.prototype.releaseTimeout = function () {\n                    return this._releaseTimeout;\n                };\n                Queue.prototype.pollInterval = function () {\n                    return this._pollInterval;\n                };\n                Queue.prototype.setReleaseTimeout = function (releaseTimeout) {\n                    this._releaseTimeout = releaseTimeout;\n                    return this;\n                };\n                Queue.prototype.setPollInterval = function (pollInterval) {\n                    this._pollInterval = pollInterval;\n                    return this;\n                };\n                return Queue;\n            })();\n            platform.Queue = Queue;\n        })(platform = sdk.platform || (sdk.platform = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../core/Cache.ts\" />\n/// <reference path=\"../core/Log\" />\n/// <reference path=\"../http/Client.ts\" />\n/// <reference path=\"../http/ApiResponse.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n/// <reference path=\"./Queue.ts\" />\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var platform;\n        (function (platform) {\n            var Platform = (function (_super) {\n                __extends(Platform, _super);\n                function Platform(client, cache, queue, server, appKey, appSecret) {\n                    _super.call(this);\n                    this._refreshDelayMs = 100;\n                    this._clearCacheOnRefreshError = true;\n                    this._cacheId = 'platform';\n                    this.events = {\n                        accessViolation: 'accessViolation',\n                        logoutSuccess: 'logoutSuccess',\n                        logoutError: 'logoutError',\n                        authorizeSuccess: 'authorizeSuccess',\n                        authorizeError: 'authorizeError',\n                        refreshSuccess: 'refreshSuccess',\n                        refreshError: 'refreshError'\n                    };\n                    this._server = server;\n                    this._appKey = appKey;\n                    this._appSecret = appSecret;\n                    this._cache = cache;\n                    this._client = client;\n                    this._queue = new platform.Queue(this._cache, this._cacheId + '-refresh');\n                    this._auth = new platform.Auth(this._cache, this._cacheId);\n                }\n                Platform.prototype.auth = function () {\n                    return this._auth;\n                };\n                Platform.prototype.createUrl = function (path, options) {\n                    path = path || '';\n                    options = options || {};\n                    var builtUrl = '', hasHttp = path.indexOf('http://') != -1 || path.indexOf('https://') != -1;\n                    if (options.addServer && !hasHttp)\n                        builtUrl += this._server;\n                    if (path.indexOf(Platform._urlPrefix) == -1 && !hasHttp)\n                        builtUrl += Platform._urlPrefix + '/' + Platform._apiVersion;\n                    builtUrl += path;\n                    if (options.addMethod || options.addToken)\n                        builtUrl += (path.indexOf('?') > -1 ? '&' : '?');\n                    if (options.addMethod)\n                        builtUrl += '_method=' + options.addMethod;\n                    if (options.addToken)\n                        builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this._auth.accessToken();\n                    return builtUrl;\n                };\n                Platform.prototype.authUrl = function (options) {\n                    options = options || {};\n                    return this.createUrl(Platform._authorizeEndpoint + '?' + sdk.core.utils.queryStringify({\n                        'response_type': 'code',\n                        'redirect_uri': options.redirectUri || '',\n                        'client_id': this._appKey,\n                        'state': options.state || '',\n                        'brand_id': options.brandId || '',\n                        'display': options.display || '',\n                        'prompt': options.prompt || ''\n                    }), { addServer: true });\n                };\n                Platform.prototype.parseAuthRedirectUrl = function (url) {\n                    var qs = sdk.core.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n                    if (error) {\n                        var e = new Error(error);\n                        e.error = qs.error;\n                        throw e;\n                    }\n                    return qs;\n                };\n                Platform.prototype.loggedIn = function () {\n                    return this._ensureAuthentication()\n                        .then(function () {\n                        return true;\n                    })\n                        .catch(function () {\n                        return false;\n                    });\n                };\n                Platform.prototype.login = function (options) {\n                    var _this = this;\n                    options = options || {};\n                    options.remember = options.remember || false;\n                    var body = {\n                        \"access_token_ttl\": Platform._accessTokenTtl,\n                        \"refresh_token_ttl\": options.remember ? Platform._refreshTokenTtlRemember : Platform._refreshTokenTtl\n                    };\n                    if (!options.code) {\n                        body.grant_type = 'password';\n                        body.username = options.username;\n                        body.password = options.password;\n                        body.extension = options.extension || '';\n                    }\n                    else if (options.code) {\n                        body.grant_type = 'authorization_code';\n                        body.code = options.code;\n                        body.redirect_uri = options.redirectUri;\n                    }\n                    if (options.endpointId)\n                        body.endpoint_id = options.endpointId;\n                    return this._tokenRequest(Platform._tokenEndpoint, body).then(function (res) {\n                        _this._auth\n                            .setData(res.json())\n                            .setRemember(options.remember);\n                        _this.emit(_this.events.authorizeSuccess, res);\n                        return res;\n                    }).catch(function (e) {\n                        _this._cache.clean();\n                        _this.emit(_this.events.authorizeError, e);\n                        throw e;\n                    });\n                };\n                Platform.prototype.refresh = function () {\n                    var _this = this;\n                    var refresh = new sdk.externals._Promise(function (resolve, reject) {\n                        if (_this._queue.isPaused()) {\n                            return resolve(_this._refreshPolling());\n                        }\n                        _this._queue.pause();\n                        // Make sure all existing AJAX calls had a chance to reach the server\n                        setTimeout(function () {\n                            sdk.core.log.debug('Platform.refresh(): Performing token refresh (access token', _this._auth.accessToken(), ', refresh token', _this._auth.refreshToken(), ')');\n                            // Perform sanity checks\n                            if (!_this._auth.refreshToken())\n                                return reject(new Error('Refresh token is missing'));\n                            if (!_this._auth.refreshTokenValid())\n                                return reject(new Error('Refresh token has expired'));\n                            if (!_this._queue.isPaused())\n                                return reject(new Error('Queue was resumed before refresh call'));\n                            resolve(_this._tokenRequest(Platform._tokenEndpoint, {\n                                \"grant_type\": \"refresh_token\",\n                                \"refresh_token\": _this._auth.refreshToken(),\n                                \"access_token_ttl\": Platform._accessTokenTtl,\n                                \"refresh_token_ttl\": _this._auth.remember() ? Platform._refreshTokenTtlRemember : Platform._refreshTokenTtl\n                            }));\n                        }, _this._refreshDelayMs);\n                    });\n                    return refresh.then(function (res) {\n                        // This means refresh has happened elsewhere and we are here because of timeout\n                        if (res && res.json && res.json()) {\n                            var json = res.json();\n                            sdk.core.log.info('Platform.refresh(): Token was refreshed', res);\n                            if (!json.refresh_token || !json.access_token) {\n                                throw sdk.http.Client.makeError(new Error('Malformed OAuth response'), res);\n                            }\n                            _this._auth.setData(json);\n                            _this._queue.resume();\n                        }\n                        _this.emit(_this.events.refreshSuccess, res);\n                        return res;\n                    }).catch(function (e) {\n                        e = sdk.http.Client.makeError(e);\n                        if (_this._clearCacheOnRefreshError) {\n                            _this._cache.clean();\n                        }\n                        _this.emit(_this.events.accessViolation, e);\n                        _this.emit(_this.events.refreshError, e);\n                        throw e;\n                    });\n                };\n                /**\n                 * @returns {Promise}\n                 */\n                Platform.prototype.logout = function () {\n                    var _this = this;\n                    this._queue.pause();\n                    return this._tokenRequest(Platform._revokeEndpoint, {\n                        token: this._auth.accessToken()\n                    }).then(function (res) {\n                        _this._queue.resume();\n                        _this._cache.clean();\n                        _this.emit(_this.events.logoutSuccess, res);\n                        return res;\n                    }).catch(function (e) {\n                        _this._queue.resume();\n                        _this.emit(_this.events.accessViolation, e);\n                        _this.emit(_this.events.logoutError, e);\n                        throw e;\n                    });\n                };\n                Platform.prototype.inflateRequest = function (request, options) {\n                    var _this = this;\n                    options = options || {};\n                    if (options.skipAuthCheck)\n                        return sdk.externals._Promise.resolve(request);\n                    return this\n                        ._ensureAuthentication()\n                        .then(function () {\n                        request.headers.set('Authorization', _this._authHeader());\n                        request.url = _this.createUrl(request.url, { addServer: true });\n                        return request;\n                    });\n                };\n                Platform.prototype.sendRequest = function (request, options) {\n                    var _this = this;\n                    return this\n                        .inflateRequest(request, options)\n                        .then(function (req) {\n                        return _this._client.sendRequest(req);\n                    })\n                        .catch(function (e) {\n                        // Guard is for errors that come from polling\n                        if (!e.apiResponse || !e.apiResponse.response() || (e.apiResponse.response().status != 401))\n                            throw e;\n                        _this._auth.cancelAccessToken();\n                        return _this.sendRequest(request, options);\n                    });\n                };\n                /**\n                 * General purpose function to send anything to server\n                 */\n                Platform.prototype.send = function (url, options) {\n                    try {\n                        // This has to be done here in order to let NodeJS Fetch to create Request\n                        url = this.createUrl(url, { addServer: true });\n                        return this.sendRequest(sdk.http.Client.createRequest(url, options), options);\n                    }\n                    catch (e) {\n                        return sdk.externals._Promise.reject(e);\n                    }\n                };\n                Platform.prototype.get = function (url, options) {\n                    options = options || {};\n                    options.method = 'GET';\n                    return this.send(url, options);\n                };\n                Platform.prototype.post = function (url, options) {\n                    options = options || {};\n                    options.method = 'POST';\n                    return this.send(url, options);\n                };\n                Platform.prototype.put = function (url, options) {\n                    options = options || {};\n                    options.method = 'PUT';\n                    return this.send(url, options);\n                };\n                Platform.prototype['delete'] = function (url, options) {\n                    options = options || {};\n                    options.method = 'DELETE';\n                    return this.send(url, options);\n                };\n                Platform.prototype._tokenRequest = function (path, body) {\n                    return this.send(path, {\n                        skipAuthCheck: true,\n                        body: body,\n                        method: 'POST',\n                        headers: {\n                            'Authorization': 'Basic ' + this._apiKey(),\n                            'Content-Type': 'application/x-www-form-urlencoded'\n                        }\n                    });\n                };\n                Platform.prototype._ensureAuthentication = function () {\n                    if (this._isAccessTokenValid())\n                        return sdk.externals._Promise.resolve(null);\n                    return this.refresh();\n                };\n                Platform.prototype._isAccessTokenValid = function () {\n                    return (this._auth.accessTokenValid() && !this._queue.isPaused());\n                };\n                Platform.prototype._refreshPolling = function () {\n                    var _this = this;\n                    sdk.core.log.warn('Platform.refresh(): Refresh is already in progress, polling started');\n                    return this._queue.poll().then(function () {\n                        if (!_this._isAccessTokenValid()) {\n                            throw new Error('Automatic authentification timeout');\n                        }\n                        return null;\n                    });\n                };\n                Platform.prototype._apiKey = function () {\n                    var apiKey = this._appKey + ':' + this._appSecret;\n                    return (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n                };\n                Platform.prototype._authHeader = function () {\n                    var token = this._auth.accessToken();\n                    return this._auth.tokenType() + (token ? ' ' + token : '');\n                };\n                Platform._urlPrefix = '/restapi';\n                Platform._apiVersion = 'v1.0';\n                Platform._accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n                Platform._refreshTokenTtl = 10 * 60 * 60; // 10 hours\n                Platform._refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n                Platform._tokenEndpoint = '/restapi/oauth/token';\n                Platform._revokeEndpoint = '/restapi/oauth/revoke';\n                Platform._authorizeEndpoint = '/restapi/oauth/authorize';\n                return Platform;\n            })(sdk.core.Observable);\n            platform.Platform = Platform;\n        })(platform = sdk.platform || (sdk.platform = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Log.ts\" />\n/// <reference path=\"../platform/Platform.ts\" />\n/// <reference path=\"../http/ApiResponse.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var subscription;\n        (function (subscription_1) {\n            var Subscription = (function (_super) {\n                __extends(Subscription, _super);\n                function Subscription(pubnubFactory, platform) {\n                    _super.call(this);\n                    this._renewHandicapMs = 2 * 60 * 1000;\n                    this.events = {\n                        notification: 'notification',\n                        removeSuccess: 'removeSuccess',\n                        removeError: 'removeError',\n                        renewSuccess: 'renewSuccess',\n                        renewError: 'renewError',\n                        subscribeSuccess: 'subscribeSuccess',\n                        subscribeError: 'subscribeError'\n                    };\n                    this._pubnubFactory = pubnubFactory;\n                    this._platform = platform;\n                    this._pubnub = null;\n                    this._eventFilters = [];\n                    this._timeout = null;\n                    this._subscription = null;\n                }\n                Subscription.prototype.alive = function () {\n                    return this._subscription &&\n                        this._subscription.id &&\n                        this._subscription.deliveryMode &&\n                        this._subscription.deliveryMode.subscriberKey &&\n                        this._subscription.deliveryMode.address;\n                };\n                Subscription.prototype.setSubscription = function (subscription) {\n                    this._clearTimeout();\n                    this._subscription = subscription;\n                    if (!this._pubnub)\n                        this._subscribeAtPubnub();\n                    this._setTimeout();\n                    return this;\n                };\n                Subscription.prototype.subscription = function () {\n                    return this._subscription;\n                };\n                /**\n                 * Creates or updates subscription if there is an active one\n                 * @param {{events?:string[]}} [options] New array of events\n                 * @returns {Promise}\n                 */\n                Subscription.prototype.register = function (options) {\n                    if (this.alive()) {\n                        return this.renew(options);\n                    }\n                    else {\n                        return this.subscribe(options);\n                    }\n                };\n                Subscription.prototype.addEvents = function (events) {\n                    this._eventFilters = this._eventFilters.concat(events);\n                    return this;\n                };\n                Subscription.prototype.setEvents = function (events) {\n                    this._eventFilters = events;\n                    return this;\n                };\n                Subscription.prototype.subscribe = function (options) {\n                    var _this = this;\n                    options = options || {};\n                    if (options.events)\n                        this.setEvents(options.events);\n                    this._clearTimeout();\n                    return new sdk.externals._Promise(function (resolve, reject) {\n                        if (!_this._eventFilters || !_this._eventFilters.length)\n                            throw new Error('Events are undefined');\n                        resolve(_this._platform.post('/restapi/v1.0/subscription', {\n                            body: {\n                                eventFilters: _this._getFullEventFilters(),\n                                deliveryMode: {\n                                    transportType: 'PubNub'\n                                }\n                            }\n                        }));\n                    }).then(function (ajax) {\n                        _this.setSubscription(ajax.json())\n                            .emit(_this.events.subscribeSuccess, ajax);\n                        return ajax;\n                    }).catch(function (e) {\n                        e = sdk.http.Client.makeError(e);\n                        _this.reset()\n                            .emit(_this.events.subscribeError, e);\n                        throw e;\n                    });\n                };\n                Subscription.prototype.renew = function (options) {\n                    var _this = this;\n                    options = options || {};\n                    if (options.events)\n                        this.setEvents(options.events);\n                    this._clearTimeout();\n                    return new sdk.externals._Promise(function (resolve, reject) {\n                        if (!_this.alive())\n                            throw new Error('Subscription is not alive');\n                        if (!_this._eventFilters || !_this._eventFilters.length)\n                            throw new Error('Events are undefined');\n                        return _this._platform.put('/restapi/v1.0/subscription/' + _this._subscription.id, {\n                            body: {\n                                eventFilters: _this._getFullEventFilters()\n                            }\n                        });\n                    })\n                        .then(function (ajax) {\n                        _this.setSubscription(ajax.json())\n                            .emit(_this.events.renewSuccess, ajax.json());\n                        return ajax;\n                    })\n                        .catch(function (e) {\n                        e = sdk.http.Client.makeError(e);\n                        _this.reset()\n                            .emit(_this.events.renewError, e);\n                        throw e;\n                    });\n                };\n                Subscription.prototype.remove = function () {\n                    var _this = this;\n                    return new sdk.externals._Promise(function (resolve, reject) {\n                        if (!_this._subscription || !_this._subscription.id)\n                            throw new Error('Subscription ID is required');\n                        resolve(_this._platform.delete('/restapi/v1.0/subscription/' + _this._subscription.id));\n                    }).then(function (ajax) {\n                        _this.reset()\n                            .emit(_this.events.removeSuccess, ajax);\n                        return ajax;\n                    }).catch(function (e) {\n                        e = sdk.http.Client.makeError(e);\n                        _this.emit(_this.events.removeError, e);\n                        throw e;\n                    });\n                };\n                /**\n                 * Remove subscription and disconnect from PUBNUB\n                 * This method resets subscription at client side but backend is not notified\n                 */\n                Subscription.prototype.reset = function () {\n                    this._clearTimeout();\n                    if (this.alive() && this._pubnub)\n                        this._pubnub.unsubscribe({ channel: this._subscription.deliveryMode.address });\n                    this._subscription = null;\n                    return this;\n                };\n                Subscription.prototype.destroy = function () {\n                    this.reset();\n                    sdk.core.log.info('RC.subscription.Subscription: Destroyed');\n                    return _super.prototype.destroy.call(this);\n                };\n                Subscription.prototype._getFullEventFilters = function () {\n                    var _this = this;\n                    return this._eventFilters.map(function (event) {\n                        return _this._platform.createUrl(event);\n                    });\n                };\n                Subscription.prototype._setTimeout = function () {\n                    var _this = this;\n                    this._clearTimeout();\n                    if (!this.alive())\n                        throw new Error('Subscription is not alive');\n                    var timeToExpiration = (this._subscription.expiresIn * 1000) - this._renewHandicapMs;\n                    this._timeout = setTimeout(function () {\n                        _this.renew({});\n                    }, timeToExpiration);\n                    return this;\n                };\n                Subscription.prototype._clearTimeout = function () {\n                    clearTimeout(this._timeout);\n                    return this;\n                };\n                Subscription.prototype._decrypt = function (message) {\n                    if (!this.alive())\n                        throw new Error('Subscription is not alive');\n                    if (this._subscription.deliveryMode.encryptionKey) {\n                        var PUBNUB = this._pubnubFactory.getPubnub();\n                        message = PUBNUB.crypto_obj.decrypt(message, this._subscription.deliveryMode.encryptionKey, {\n                            encryptKey: false,\n                            keyEncoding: 'base64',\n                            keyLength: 128,\n                            mode: 'ecb'\n                        });\n                    }\n                    return message;\n                };\n                Subscription.prototype._notify = function (message) {\n                    this.emit(this.events.notification, this._decrypt(message));\n                    return this;\n                };\n                Subscription.prototype._subscribeAtPubnub = function () {\n                    var _this = this;\n                    if (!this.alive())\n                        throw new Error('Subscription is not alive');\n                    var PUBNUB = this._pubnubFactory.getPubnub();\n                    this._pubnub = PUBNUB.init({\n                        ssl: true,\n                        subscribe_key: this._subscription.deliveryMode.subscriberKey\n                    });\n                    this._pubnub.ready();\n                    this._pubnub.subscribe({\n                        channel: this._subscription.deliveryMode.address,\n                        message: function (message, env, channel) {\n                            sdk.core.log.info('RC.core.Subscription: Incoming message', message);\n                            _this._notify(message);\n                        },\n                        connect: function () {\n                            sdk.core.log.info('RC.core.Subscription: PUBNUB connected');\n                        }\n                    });\n                    return this;\n                };\n                return Subscription;\n            })(sdk.core.Observable);\n            subscription_1.Subscription = Subscription;\n        })(subscription = sdk.subscription || (sdk.subscription = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var pubnub;\n        (function (pubnub) {\n            var PubnubMock = (function (_super) {\n                __extends(PubnubMock, _super);\n                function PubnubMock(options) {\n                    _super.call(this);\n                    this.options = options;\n                    this.crypto_obj = sdk.externals._PUBNUB.crypto_obj;\n                }\n                PubnubMock.prototype.ready = function () { };\n                PubnubMock.prototype.subscribe = function (options) {\n                    this.on('message-' + options.channel, options.message);\n                };\n                PubnubMock.prototype.unsubscribe = function (options) {\n                    this.off('message-' + options.channel);\n                };\n                PubnubMock.prototype.receiveMessage = function (msg, channel) {\n                    this.emit('message-' + channel, msg, 'env', channel);\n                };\n                return PubnubMock;\n            })(sdk.core.Observable);\n            pubnub.PubnubMock = PubnubMock;\n            var PubnubMockFactory = (function () {\n                function PubnubMockFactory() {\n                    this.crypto_obj = sdk.externals._PUBNUB.crypto_obj;\n                }\n                PubnubMockFactory.prototype.init = function (options) {\n                    return new PubnubMock(options);\n                };\n                return PubnubMockFactory;\n            })();\n            pubnub.PubnubMockFactory = PubnubMockFactory;\n        })(pubnub = sdk.pubnub || (sdk.pubnub = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n/// <reference path=\"../pubnub/PubnubMock.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var pubnub;\n        (function (pubnub) {\n            var PubnubFactory = (function () {\n                function PubnubFactory(flag) {\n                    this._useMock = false;\n                    this._useMock = !!flag;\n                    this._mock = new pubnub.PubnubMockFactory();\n                }\n                PubnubFactory.prototype.getPubnub = function () {\n                    return this._useMock ? this._mock : sdk.externals._PUBNUB;\n                };\n                return PubnubFactory;\n            })();\n            pubnub.PubnubFactory = PubnubFactory;\n        })(pubnub = sdk.pubnub || (sdk.pubnub = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n/// <reference path=\"./externals.d.ts\" />\n/// <reference path=\"./core/Cache.ts\" />\n/// <reference path=\"./core/Log.ts\" />\n/// <reference path=\"./core/Observable.ts\" />\n/// <reference path=\"./core/PageVisibility.ts\" />\n/// <reference path=\"./core/Utils.ts\" />\n/// <reference path=\"./http/Client.ts\" />\n/// <reference path=\"./platform/Platform.ts\" />\n/// <reference path=\"./platform/Queue.ts\" />\n/// <reference path=\"./subscription/Subscription.ts\" />\n/// <reference path=\"./pubnub/PubnubFactory.ts\" />\n/// <reference path=\"./externals/Externals.ts\" />\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var SDK = (function () {\n            function SDK(options) {\n                options = options || {};\n                sdk.externals.get();\n                this._mockRegistry = new sdk.mocks.Registry();\n                this._cache = new sdk.core.Cache(typeof localStorage !== 'undefined' ? localStorage : {}, options.cachePrefix);\n                this._queue = new sdk.platform.Queue(this._cache, 'platform-refresh');\n                this._client = options.useHttpMock ? new sdk.http.ClientMock(this._mockRegistry) : new sdk.http.Client();\n                this._platform = new sdk.platform.Platform(this._client, this._cache, this._queue, options.server, options.appKey, options.appSecret);\n                this._pubnubFactory = new sdk.pubnub.PubnubFactory(options.usePubnubMock);\n                //TODO Link Platform events with Subscriptions and the rest\n            }\n            SDK.prototype.platform = function () {\n                return this._platform;\n            };\n            SDK.prototype.cache = function () {\n                return this._cache;\n            };\n            SDK.prototype.createSubscription = function () {\n                return new sdk.subscription.Subscription(this._pubnubFactory, this._platform);\n            };\n            SDK.prototype.createPageVisibility = function () {\n                return new sdk.core.PageVisibility();\n            };\n            SDK.prototype.createObservable = function () {\n                return new sdk.core.Observable();\n            };\n            SDK.prototype.log = function () {\n                return sdk.core.log;\n            };\n            SDK.prototype.utils = function () {\n                return sdk.core.utils;\n            };\n            SDK.prototype.mockRegistry = function () { return this._mockRegistry; };\n            SDK.version = '2.0.0';\n            SDK.server = {\n                sandbox: 'https://platform.devtest.ringcentral.com',\n                production: 'https://platform.ringcentral.com'\n            };\n            return SDK;\n        })();\n        sdk.SDK = SDK;\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\nvar e = RingCentral.sdk.externals.get();\nif (typeof define === 'function' && define.amd) {\n    define(['pubnub'], function (PUBNUB) {\n        e._PUBNUB = PUBNUB;\n        return RingCentral.sdk;\n    });\n}\nelse if (typeof module === 'object' && module.exports) {\n    e._PUBNUB = require('pubnub');\n    e._Promise = typeof (Promise) !== 'undefined' ? Promise : require('es6-promise').Promise;\n    e._fetch = require('node-fetch');\n    e._Request = e._fetch['Request'];\n    e._Response = e._fetch['Response'];\n    e._Headers = e._fetch['Headers'];\n    module.exports = RingCentral.sdk;\n}\nelse {\n}\n/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../mocks/Registry.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n/// <reference path=\"./ApiResponse.ts\" />\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var http;\n        (function (http) {\n            var ClientMock = (function (_super) {\n                __extends(ClientMock, _super);\n                function ClientMock(registry) {\n                    _super.call(this);\n                    this._registry = registry;\n                }\n                ClientMock.prototype._loadResponse = function (request) {\n                    var _this = this;\n                    return new sdk.externals._Promise(function (resolve) {\n                        sdk.core.log.debug('API REQUEST', request.method, request.url);\n                        var mock = _this._registry.find(request);\n                        resolve(mock.getResponse(request));\n                    });\n                };\n                return ClientMock;\n            })(http.Client);\n            http.ClientMock = ClientMock;\n        })(http = sdk.http || (sdk.http = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../core/Cache.ts\" />\n/// <reference path=\"../core/Log\" />\n/// <reference path=\"../http/Client.ts\" />\n/// <reference path=\"../http/ApiResponse.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n/// <reference path=\"./Queue.ts\" />\nvar RingCentral;\n(function (RingCentral) {\n    var sdk;\n    (function (sdk) {\n        var platform;\n        (function (platform) {\n            var Auth = (function () {\n                function Auth(cache, cacheId) {\n                    this._cache = cache;\n                    this._cacheId = cacheId;\n                }\n                Auth.prototype.accessToken = function () {\n                    return this.data().access_token;\n                };\n                Auth.prototype.refreshToken = function () {\n                    return this.data().refresh_token;\n                };\n                Auth.prototype.tokenType = function () {\n                    return this.data().token_type;\n                };\n                Auth.prototype.data = function () {\n                    return this._cache.getItem(this._cacheId) || {\n                        token_type: '',\n                        access_token: '',\n                        expires_in: 0,\n                        refresh_token: '',\n                        refresh_token_expires_in: 0\n                    };\n                };\n                Auth.prototype.setData = function (authData) {\n                    var oldAuthData = this.data();\n                    authData = sdk.core.utils.extend({}, oldAuthData, authData);\n                    authData.expire_time = Date.now() + (authData.expires_in * 1000);\n                    authData.refresh_token_expire_time = Date.now() + (authData.refresh_token_expires_in * 1000);\n                    sdk.core.log.info('Auth.setData(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n                    this._cache.setItem(this._cacheId, authData);\n                    return this;\n                };\n                /**\n                 * Check if there is a valid (not expired) access token\n                 */\n                Auth.prototype.accessTokenValid = function () {\n                    var authData = this.data();\n                    return (authData.token_type === Auth.forcedTokenType || (authData.expire_time - Auth.refreshHandicapMs > Date.now()));\n                };\n                /**\n                 * Check if there is a valid (not expired) access token\n                 */\n                Auth.prototype.refreshTokenValid = function () {\n                    return (this.data().refresh_token_expire_time > Date.now());\n                };\n                Auth.prototype.cancelAccessToken = function () {\n                    return this.setData({\n                        access_token: '',\n                        expires_in: 0\n                    });\n                };\n                /**\n                 * This method sets a special authentication mode used in Service Web\n                 * @return {Platform}\n                 */\n                Auth.prototype.forceAuthentication = function () {\n                    this.setData({\n                        token_type: Auth.forcedTokenType,\n                        access_token: '',\n                        expires_in: 0,\n                        refresh_token: '',\n                        refresh_token_expires_in: 0\n                    });\n                    return this;\n                };\n                Auth.prototype.setRemember = function (remember) {\n                    return this.setData({ remember: remember });\n                };\n                Auth.prototype.remember = function () {\n                    return !!this.data().remember;\n                };\n                Auth.refreshHandicapMs = 60 * 1000; // 1 minute\n                Auth.forcedTokenType = 'forced';\n                return Auth;\n            })();\n            platform.Auth = Auth;\n        })(platform = sdk.platform || (sdk.platform = {}));\n    })(sdk = RingCentral.sdk || (RingCentral.sdk = {}));\n})(RingCentral || (RingCentral = {}));\n\n/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.2.0\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$toString = {}.toString;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    function lib$es6$promise$asap$$asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    var lib$es6$promise$asap$$default = lib$es6$promise$asap$$asap;\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      var nextTick = process.nextTick;\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // setImmediate should be used instead instead\n      var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n        nextTick = setImmediate;\n      }\n      return function() {\n        nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertex() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertex();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$default(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFullfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      var enumerator = this;\n\n      enumerator._instanceConstructor = Constructor;\n      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (enumerator._validateInput(input)) {\n        enumerator._input     = input;\n        enumerator.length     = input.length;\n        enumerator._remaining = input.length;\n\n        enumerator._init();\n\n        if (enumerator.length === 0) {\n          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n        } else {\n          enumerator.length = enumerator.length || 0;\n          enumerator._enumerate();\n          if (enumerator._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n      }\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$es6$promise$utils$$isArray(input);\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var enumerator = this;\n\n      var length  = enumerator.length;\n      var promise = enumerator.promise;\n      var input   = enumerator._input;\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        enumerator._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var enumerator = this;\n      var c = enumerator._instanceConstructor;\n\n      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n          entry._onerror = null;\n          enumerator._settledAt(entry._state, i, entry._result);\n        } else {\n          enumerator._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        enumerator._remaining--;\n        enumerator._result[i] = entry;\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var enumerator = this;\n      var promise = enumerator.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        enumerator._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          enumerator._result[i] = value;\n        }\n      }\n\n      if (enumerator._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n    var lib$es6$promise$promise$$counter = 0;\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise’s eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this._id = lib$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        if (!lib$es6$promise$utils$$isFunction(resolver)) {\n          lib$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n          lib$es6$promise$promise$$needsNew();\n        }\n\n        lib$es6$promise$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$default;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor(lib$es6$promise$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          lib$es6$promise$asap$$default(function(){\n            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n\n(function() {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit)\n    this.type = 'default'\n    this.url = null\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    var request\n    if (Request.prototype.isPrototypeOf(input) && !init) {\n      request = input\n    } else {\n      request = new Request(input, init)\n    }\n\n    return new Promise(function(resolve, reject) {\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})();\n\n// Version: 3.7.13\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     JSON     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\n(window['JSON'] && window['JSON']['stringify']) || (function () {\n    window['JSON'] || (window['JSON'] = {});\n\n    function toJSON(key) {\n        try      { return this.valueOf() }\n        catch(e) { return null }\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n    function quote(string) {\n        escapable.lastIndex = 0;\n        return escapable.test(string) ?\n            '\"' + string.replace(escapable, function (a) {\n                var c = meta[a];\n                return typeof c === 'string' ? c :\n                    '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n            }) + '\"' :\n            '\"' + string + '\"';\n    }\n\n    function str(key, holder) {\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            partial,\n            mind  = gap,\n            value = holder[key];\n\n        if (value && typeof value === 'object') {\n            value = toJSON.call( value, key );\n        }\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n        switch (typeof value) {\n        case 'string':\n            return quote(value);\n\n        case 'number':\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n            return String(value);\n\n        case 'object':\n\n            if (!value) {\n                return 'null';\n            }\n\n            gap += indent;\n            partial = [];\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n                v = partial.length === 0 ? '[]' :\n                    gap ? '[\\n' + gap +\n                            partial.join(',\\n' + gap) + '\\n' +\n                                mind + ']' :\n                          '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n                for (k in value) {\n                    if (Object.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n\n            v = partial.length === 0 ? '{}' :\n                gap ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' +\n                        mind + '}' : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n    if (typeof JSON['stringify'] !== 'function') {\n        JSON['stringify'] = function (value, replacer, space) {\n            var i;\n            gap = '';\n            indent = '';\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                     typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n            return str('', {'': value});\n        };\n    }\n\n    if (typeof JSON['parse'] !== 'function') {\n        // JSON is parsed on the server for security.\n        JSON['parse'] = function (text) {return eval('('+text+')')};\n    }\n}());\nvar NOW             = 1\n,   READY           = false\n,   READY_BUFFER    = []\n,   PRESENCE_SUFFIX = '-pnpres'\n,   DEF_WINDOWING   = 10     // MILLISECONDS.\n,   DEF_TIMEOUT     = 10000  // MILLISECONDS.\n,   DEF_SUB_TIMEOUT = 310    // SECONDS.\n,   DEF_KEEPALIVE   = 60     // SECONDS (FOR TIMESYNC).\n,   SECOND          = 1000   // A THOUSAND MILLISECONDS.\n,   URLBIT          = '/'\n,   PARAMSBIT       = '&'\n,   PRESENCE_HB_THRESHOLD = 5\n,   PRESENCE_HB_DEFAULT  = 30\n,   SDK_VER         = '3.7.13'\n,   REPL            = /{([\\w\\-]+)}/g;\n\n/**\n * UTILITIES\n */\nfunction unique() { return'x'+ ++NOW+''+(+new Date) }\nfunction rnow()   { return+new Date }\n\n/**\n * NEXTORIGIN\n * ==========\n * var next_origin = nextorigin();\n */\nvar nextorigin = (function() {\n    var max = 20\n    ,   ori = Math.floor(Math.random() * max);\n    return function( origin, failover ) {\n        return origin.indexOf('pubsub.') > 0\n            && origin.replace(\n             'pubsub', 'ps' + (\n                failover ? generate_uuid().split('-')[0] :\n                (++ori < max? ori : ori=1)\n            ) ) || origin;\n    }\n})();\n\n\n/**\n * Build Url\n * =======\n *\n */\nfunction build_url( url_components, url_params ) {\n    var url    = url_components.join(URLBIT)\n    ,   params = [];\n\n    if (!url_params) return url;\n\n    each( url_params, function( key, value ) {\n        var value_str = (typeof value == 'object')?JSON['stringify'](value):value;\n        (typeof value != 'undefined' &&\n            value != null && encode(value_str).length > 0\n        ) && params.push(key + \"=\" + encode(value_str));\n    } );\n\n    url += \"?\" + params.join(PARAMSBIT);\n    return url;\n}\n\n/**\n * UPDATER\n * =======\n * var timestamp = unique();\n */\nfunction updater( fun, rate ) {\n    var timeout\n    ,   last   = 0\n    ,   runnit = function() {\n        if (last + rate > rnow()) {\n            clearTimeout(timeout);\n            timeout = setTimeout( runnit, rate );\n        }\n        else {\n            last = rnow();\n            fun();\n        }\n    };\n\n    return runnit;\n}\n\n/**\n * GREP\n * ====\n * var list = grep( [1,2,3], function(item) { return item % 2 } )\n */\nfunction grep( list, fun ) {\n    var fin = [];\n    each( list || [], function(l) { fun(l) && fin.push(l) } );\n    return fin\n}\n\n/**\n * SUPPLANT\n * ========\n * var text = supplant( 'Hello {name}!', { name : 'John' } )\n */\nfunction supplant( str, values ) {\n    return str.replace( REPL, function( _, match ) {\n        return values[match] || _\n    } );\n}\n\n/**\n * timeout\n * =======\n * timeout( function(){}, 100 );\n */\nfunction timeout( fun, wait ) {\n    return setTimeout( fun, wait );\n}\n\n/**\n * uuid\n * ====\n * var my_uuid = generate_uuid();\n */\nfunction generate_uuid(callback) {\n    var u = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,\n    function(c) {\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n        return v.toString(16);\n    });\n    if (callback) callback(u);\n    return u;\n}\n\nfunction isArray(arg) {\n  return !!arg && typeof arg !== 'string' && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n  //return !!arg && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n}\n\n/**\n * EACH\n * ====\n * each( [1,2,3], function(item) { } )\n */\nfunction each( o, f) {\n    if ( !o || !f ) return;\n\n    if ( isArray(o) )\n        for ( var i = 0, l = o.length; i < l; )\n            f.call( o[i], o[i], i++ );\n    else\n        for ( var i in o )\n            o.hasOwnProperty    &&\n            o.hasOwnProperty(i) &&\n            f.call( o[i], i, o[i] );\n}\n\n/**\n * MAP\n * ===\n * var list = map( [1,2,3], function(item) { return item + 1 } )\n */\nfunction map( list, fun ) {\n    var fin = [];\n    each( list || [], function( k, v ) { fin.push(fun( k, v )) } );\n    return fin;\n}\n\n\nfunction pam_encode(str) {\n  return encodeURIComponent(str).replace(/[!'()*~]/g, function(c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\n/**\n * ENCODE\n * ======\n * var encoded_data = encode('path');\n */\nfunction encode(path) { return encodeURIComponent(path) }\n\n/**\n * Generate Subscription Channel List\n * ==================================\n * generate_channel_list(channels_object);\n */\nfunction generate_channel_list(channels, nopresence) {\n    var list = [];\n    each( channels, function( channel, status ) {\n        if (nopresence) {\n            if(channel.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel);\n            }\n        } else {\n            if (status.subscribed) list.push(channel);\n        }\n    });\n    return list.sort();\n}\n\n/**\n * Generate Subscription Channel Groups List\n * ==================================\n * generate_channel_group_list(channels_groups object);\n */\nfunction generate_channel_group_list(channel_groups, nopresence) {\n    var list = [];\n    each(channel_groups, function( channel_group, status ) {\n        if (nopresence) {\n            if(channel_group.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel_group);\n            }\n        } else {\n            if (status.subscribed) list.push(channel_group);\n        }\n    });\n    return list.sort();\n}\n\n// PUBNUB READY TO CONNECT\nfunction ready() { timeout( function() {\n    if (READY) return;\n    READY = 1;\n    each( READY_BUFFER, function(connect) { connect() } );\n}, SECOND ); }\n\nfunction PNmessage(args) {\n    msg = args || {'apns' : {}},\n    msg['getPubnubMessage'] = function() {\n        var m = {};\n\n        if (Object.keys(msg['apns']).length) {\n            m['pn_apns'] = {\n                    'aps' : {\n                        'alert' : msg['apns']['alert'] ,\n                        'badge' : msg['apns']['badge']\n                    }\n            }\n            for (var k in msg['apns']) {\n                m['pn_apns'][k] = msg['apns'][k];\n            }\n            var exclude1 = ['badge','alert'];\n            for (var k in exclude1) {\n                delete m['pn_apns'][exclude1[k]];\n            }\n        }\n\n\n\n        if (msg['gcm']) {\n            m['pn_gcm'] = {\n                'data' : msg['gcm']\n            }\n        }\n\n        for (var k in msg) {\n            m[k] = msg[k];\n        }\n        var exclude = ['apns','gcm','publish', 'channel','callback','error'];\n        for (var k in exclude) {\n            delete m[exclude[k]];\n        }\n\n        return m;\n    };\n    msg['publish'] = function() {\n\n        var m = msg.getPubnubMessage();\n\n        if (msg['pubnub'] && msg['channel']) {\n            msg['pubnub'].publish({\n                'message' : m,\n                'channel' : msg['channel'],\n                'callback' : msg['callback'],\n                'error' : msg['error']\n            })\n        }\n    };\n    return msg;\n}\n\nfunction PN_API(setup) {\n    var SUB_WINDOWING =  +setup['windowing']   || DEF_WINDOWING\n    ,   SUB_TIMEOUT   = (+setup['timeout']     || DEF_SUB_TIMEOUT) * SECOND\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   TIME_CHECK    = setup['timecheck']     || 0\n    ,   NOLEAVE       = setup['noleave']       || 0\n    ,   PUBLISH_KEY   = setup['publish_key']   || 'demo'\n    ,   SUBSCRIBE_KEY = setup['subscribe_key'] || 'demo'\n    ,   AUTH_KEY      = setup['auth_key']      || ''\n    ,   SECRET_KEY    = setup['secret_key']    || ''\n    ,   hmac_SHA256   = setup['hmac_SHA256']\n    ,   SSL           = setup['ssl']            ? 's' : ''\n    ,   ORIGIN        = 'http'+SSL+'://'+(setup['origin']||'pubsub.pubnub.com')\n    ,   STD_ORIGIN    = nextorigin(ORIGIN)\n    ,   SUB_ORIGIN    = nextorigin(ORIGIN)\n    ,   CONNECT       = function(){}\n    ,   PUB_QUEUE     = []\n    ,   CLOAK         = true\n    ,   TIME_DRIFT    = 0\n    ,   SUB_CALLBACK  = 0\n    ,   SUB_CHANNEL   = 0\n    ,   SUB_RECEIVER  = 0\n    ,   SUB_RESTORE   = setup['restore'] || 0\n    ,   SUB_BUFF_WAIT = 0\n    ,   TIMETOKEN     = 0\n    ,   RESUMED       = false\n    ,   CHANNELS      = {}\n    ,   CHANNEL_GROUPS       = {}\n    ,   SUB_ERROR     = function(){}\n    ,   STATE         = {}\n    ,   PRESENCE_HB_TIMEOUT  = null\n    ,   PRESENCE_HB          = validate_presence_heartbeat(\n        setup['heartbeat'] || setup['pnexpires'] || 0, setup['error']\n    )\n    ,   PRESENCE_HB_INTERVAL = setup['heartbeat_interval'] || (PRESENCE_HB / 2) -1\n    ,   PRESENCE_HB_RUNNING  = false\n    ,   NO_WAIT_FOR_PENDING  = setup['no_wait_for_pending']\n    ,   COMPATIBLE_35 = setup['compatible_3.5']  || false\n    ,   xdr           = setup['xdr']\n    ,   params        = setup['params'] || {}\n    ,   error         = setup['error']      || function() {}\n    ,   _is_online    = setup['_is_online'] || function() { return 1 }\n    ,   jsonp_cb      = setup['jsonp_cb']   || function() { return 0 }\n    ,   db            = setup['db']         || {'get': function(){}, 'set': function(){}}\n    ,   CIPHER_KEY    = setup['cipher_key']\n    ,   UUID          = setup['uuid'] || ( !setup['unique_uuid'] && db && db['get'](SUBSCRIBE_KEY+'uuid') || '')\n    ,   USE_INSTANCEID = setup['instance_id'] || false\n    ,   INSTANCEID     = ''\n    ,   _poll_timer\n    ,   _poll_timer2;\n\n    if (PRESENCE_HB === 2) PRESENCE_HB_INTERVAL = 1;\n\n    var crypto_obj    = setup['crypto_obj'] ||\n        {\n            'encrypt' : function(a,key){ return a},\n            'decrypt' : function(b,key){return b}\n        };\n\n    function _get_url_params(data) {\n        if (!data) data = {};\n        each( params , function( key, value ) {\n            if (!(key in data)) data[key] = value;\n        });\n        return data;\n    }\n\n    function _object_to_key_list(o) {\n        var l = []\n        each( o , function( key, value ) {\n            l.push(key);\n        });\n        return l;\n    }\n    function _object_to_key_list_sorted(o) {\n        return _object_to_key_list(o).sort();\n    }\n\n    function _get_pam_sign_input_from_params(params) {\n        var si = \"\";\n        var l = _object_to_key_list_sorted(params);\n\n        for (var i in l) {\n            var k = l[i]\n            si += k + \"=\" + pam_encode(params[k]) ;\n            if (i != l.length - 1) si += \"&\"\n        }\n        return si;\n    }\n\n    function validate_presence_heartbeat(heartbeat, cur_heartbeat, error) {\n        var err = false;\n\n        if (typeof heartbeat === 'undefined') {\n            return cur_heartbeat;\n        }\n\n        if (typeof heartbeat === 'number') {\n            if (heartbeat > PRESENCE_HB_THRESHOLD || heartbeat == 0)\n                err = false;\n            else\n                err = true;\n        } else if(typeof heartbeat === 'boolean'){\n            if (!heartbeat) {\n                return 0;\n            } else {\n                return PRESENCE_HB_DEFAULT;\n            }\n        } else {\n            err = true;\n        }\n\n        if (err) {\n            error && error(\"Presence Heartbeat value invalid. Valid range ( x > \" + PRESENCE_HB_THRESHOLD + \" or x = 0). Current Value : \" + (cur_heartbeat || PRESENCE_HB_THRESHOLD));\n            return cur_heartbeat || PRESENCE_HB_THRESHOLD;\n        } else return heartbeat;\n    }\n\n    function encrypt(input, key) {\n        return crypto_obj['encrypt'](input, key || CIPHER_KEY) || input;\n    }\n    function decrypt(input, key) {\n        return crypto_obj['decrypt'](input, key || CIPHER_KEY) ||\n               crypto_obj['decrypt'](input, CIPHER_KEY) ||\n               input;\n    }\n\n    function error_common(message, callback) {\n        callback && callback({ 'error' : message || \"error occurred\"});\n        error && error(message);\n    }\n    function _presence_heartbeat() {\n\n        clearTimeout(PRESENCE_HB_TIMEOUT);\n\n        if (!PRESENCE_HB_INTERVAL || PRESENCE_HB_INTERVAL >= 500 ||\n            PRESENCE_HB_INTERVAL < 1 ||\n            (!generate_channel_list(CHANNELS,true).length  && !generate_channel_group_list(CHANNEL_GROUPS, true).length ) )\n        {\n            PRESENCE_HB_RUNNING = false;\n            return;\n        }\n\n        PRESENCE_HB_RUNNING = true;\n        SELF['presence_heartbeat']({\n            'callback' : function(r) {\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            },\n            'error' : function(e) {\n                error && error(\"Presence Heartbeat unable to reach Pubnub servers.\" + JSON.stringify(e));\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            }\n        });\n    }\n\n    function start_presence_heartbeat() {\n        !PRESENCE_HB_RUNNING && _presence_heartbeat();\n    }\n\n    function publish(next) {\n\n        if (NO_WAIT_FOR_PENDING) {\n            if (!PUB_QUEUE.length) return;\n        } else {\n            if (next) PUB_QUEUE.sending = 0;\n            if ( PUB_QUEUE.sending || !PUB_QUEUE.length ) return;\n            PUB_QUEUE.sending = 1;\n        }\n\n        xdr(PUB_QUEUE.shift());\n    }\n    function each_channel_group(callback) {\n        var count = 0;\n\n        each( generate_channel_group_list(CHANNEL_GROUPS), function(channel_group) {\n            var chang = CHANNEL_GROUPS[channel_group];\n\n            if (!chang) return;\n\n            count++;\n            (callback||function(){})(chang);\n        } );\n\n        return count;\n    }\n\n    function each_channel(callback) {\n        var count = 0;\n\n        each( generate_channel_list(CHANNELS), function(channel) {\n            var chan = CHANNELS[channel];\n\n            if (!chan) return;\n\n            count++;\n            (callback||function(){})(chan);\n        } );\n\n        return count;\n    }\n    function _invoke_callback(response, callback, err) {\n        if (typeof response == 'object') {\n            if (response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n\n                err && err(callback_data);\n                return;\n\n            }\n            if (response['payload']) {\n                if (response['next_page'])\n                    callback && callback(response['payload'], response['next_page']);\n                else\n                    callback && callback(response['payload']);\n                return;\n            }\n        }\n        callback && callback(response);\n    }\n\n    function _invoke_error(response,err) {\n\n        if (typeof response == 'object' && response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n                \n                err && err(callback_data);\n                return;\n        } else {\n            err && err(response);\n        }\n    }\n    function CR(args, callback, url1, data) {\n            var callback        = args['callback']      || callback\n            ,   err             = args['error']         || error\n            ,   jsonp           = jsonp_cb();\n\n            data = data || {};\n            \n            if (!data['auth']) {\n                data['auth'] = args['auth_key'] || AUTH_KEY;\n            }\n            \n            var url = [\n                    STD_ORIGIN, 'v1', 'channel-registration',\n                    'sub-key', SUBSCRIBE_KEY\n                ];\n\n            url.push.apply(url,url1);\n            \n            if (jsonp) data['callback']              = jsonp;\n            \n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n    }\n\n    // Announce Leave Event\n    var SELF = {\n        'LEAVE' : function( channel, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel\n            if (channel.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 2000,\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel), 'leave'\n                ]\n            });\n            return true;\n        },\n        'LEAVE_GROUP' : function( channel_group, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel Group\n            if (channel_group.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (channel_group && channel_group.length > 0) data['channel-group'] = channel_group;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 5000,\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(','), 'leave'\n                ]\n            });\n            return true;\n        },\n        'set_resumed' : function(resumed) {\n                RESUMED = resumed;\n        },\n        'get_cipher_key' : function() {\n            return CIPHER_KEY;\n        },\n        'set_cipher_key' : function(key) {\n            CIPHER_KEY = key;\n        },\n        'raw_encrypt' : function(input, key) {\n            return encrypt(input, key);\n        },\n        'raw_decrypt' : function(input, key) {\n            return decrypt(input, key);\n        },\n        'get_heartbeat' : function() {\n            return PRESENCE_HB;\n        },\n        \n        'set_heartbeat' : function(heartbeat, heartbeat_interval) {\n            PRESENCE_HB = validate_presence_heartbeat(heartbeat, PRESENCE_HB, error);\n            PRESENCE_HB_INTERVAL = heartbeat_interval || (PRESENCE_HB / 2) - 1;\n            if (PRESENCE_HB == 2) {\n                PRESENCE_HB_INTERVAL = 1;\n            }\n            CONNECT();\n            _presence_heartbeat();\n        },\n        \n        'get_heartbeat_interval' : function() {\n            return PRESENCE_HB_INTERVAL;\n        },\n        \n        'set_heartbeat_interval' : function(heartbeat_interval) {\n            PRESENCE_HB_INTERVAL = heartbeat_interval;\n            _presence_heartbeat();\n        },\n        \n        'get_version' : function() {\n            return SDK_VER;\n        },\n        'getGcmMessageObject' : function(obj) {\n            return {\n                'data' : obj\n            }\n        },\n        'getApnsMessageObject' : function(obj) {\n            var x =  {\n                'aps' : { 'badge' : 1, 'alert' : ''}\n            }\n            for (k in obj) {\n                k[x] = obj[k];\n            }\n            return x;\n        },\n        'newPnMessage' : function() {\n            var x = {};\n            if (gcm) x['pn_gcm'] = gcm;\n            if (apns) x['pn_apns'] = apns;\n            for ( k in n ) {\n                x[k] = n[k];\n            }\n            return x;\n        },\n\n        '_add_param' : function(key,val) {\n            params[key] = val;\n        },\n\n        'channel_group' : function(args, callback) {\n            var ns_ch       = args['channel_group']\n            ,   callback    = callback         || args['callback']\n            ,   channels    = args['channels'] || args['channel']\n            ,   cloak       = args['cloak']\n            ,   namespace\n            ,   channel_group\n            ,   url = []\n            ,   data = {}\n            ,   mode = args['mode'] || 'add';\n\n\n            if (ns_ch) {\n                var ns_ch_a = ns_ch.split(':');\n\n                if (ns_ch_a.length > 1) {\n                    namespace = (ns_ch_a[0] === '*')?null:ns_ch_a[0];\n\n                    channel_group = ns_ch_a[1];\n                } else {\n                    channel_group = ns_ch_a[0];\n                }\n            }\n\n            namespace && url.push('namespace') && url.push(encode(namespace));\n\n            url.push('channel-group');\n\n            if (channel_group && channel_group !== '*') {\n                url.push(channel_group);\n            }\n\n            if (channels ) {\n                if (isArray(channels)) {\n                    channels = channels.join(',');\n                }\n                data[mode] = channels;\n                data['cloak'] = (CLOAK)?'true':'false';\n            } else {\n                if (mode === 'remove') url.push('remove');\n            }\n\n            if (typeof cloak != 'undefined') data['cloak'] = (cloak)?'true':'false';\n\n            CR(args, callback, url, data);\n        },\n\n        'channel_group_list_groups' : function(args, callback) {\n            var namespace;\n\n            namespace = args['namespace'] || args['ns'] || args['channel_group'] || null;\n            if (namespace) {\n                args[\"channel_group\"] = namespace + \":*\";\n            }\n\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_list_channels' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_remove_channel' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_remove_group' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (args['channel']) return error('Use channel_group_remove_channel if you want to remove a channel from a group.');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_add_channel' : function(args, callback) {\n           if (!args['channel_group']) return error('Missing Channel Group');\n           if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_cloak' : function(args, callback) {\n            if (typeof args['cloak'] == 'undefined') {\n                callback(CLOAK);\n                return;\n            }\n            CLOAK = args['cloak'];\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_list_namespaces' : function(args, callback) {\n            var url = ['namespace'];\n            CR(args, callback, url);\n        },\n        'channel_group_remove_namespace' : function(args, callback) {\n            var url = ['namespace',args['namespace'],'remove'];\n            CR(args, callback, url);\n        },\n\n        /*\n            PUBNUB.history({\n                channel  : 'my_chat_channel',\n                limit    : 100,\n                callback : function(history) { }\n            });\n        */\n        'history' : function( args, callback ) {\n            var callback         = args['callback'] || callback\n            ,   count            = args['count']    || args['limit'] || 100\n            ,   reverse          = args['reverse']  || \"false\"\n            ,   err              = args['error']    || function(){}\n            ,   auth_key         = args['auth_key'] || AUTH_KEY\n            ,   cipher_key       = args['cipher_key']\n            ,   channel          = args['channel']\n            ,   channel_group    = args['channel_group']\n            ,   start            = args['start']\n            ,   end              = args['end']\n            ,   include_token    = args['include_token']\n            ,   params           = {}\n            ,   jsonp            = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) return error('Missing Channel');\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            params['stringtoken'] = 'true';\n            params['count']       = count;\n            params['reverse']     = reverse;\n            params['auth']        = auth_key;\n\n            if (channel_group) {\n                params['channel-group'] = channel_group;\n                if (!channel) {\n                    channel = ','; \n                }\n            }\n            if (jsonp) params['callback']              = jsonp;\n            if (start) params['start']                 = start;\n            if (end)   params['end']                   = end;\n            if (include_token) params['include_token'] = 'true';\n\n            // Send Message\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(params),\n                success  : function(response) {\n                    if (typeof response == 'object' && response['error']) {\n                        err({'message' : response['message'], 'payload' : response['payload']});\n                        return;\n                    }\n                    var messages = response[0];\n                    var decrypted_messages = [];\n                    for (var a = 0; a < messages.length; a++) {\n                        var new_message = decrypt(messages[a],cipher_key);\n                        try {\n                            decrypted_messages['push'](JSON['parse'](new_message));\n                        } catch (e) {\n                            decrypted_messages['push']((new_message));\n                        }\n                    }\n                    callback([decrypted_messages, response[1], response[2]]);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'history', 'sub-key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel)\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.replay({\n                source      : 'my_channel',\n                destination : 'new_channel'\n            });\n        */\n        'replay' : function(args, callback) {\n            var callback    = callback || args['callback'] || function(){}\n            ,   auth_key    = args['auth_key'] || AUTH_KEY\n            ,   source      = args['source']\n            ,   destination = args['destination']\n            ,   stop        = args['stop']\n            ,   start       = args['start']\n            ,   end         = args['end']\n            ,   reverse     = args['reverse']\n            ,   limit       = args['limit']\n            ,   jsonp       = jsonp_cb()\n            ,   data        = {}\n            ,   url;\n\n            // Check User Input\n            if (!source)        return error('Missing Source Channel');\n            if (!destination)   return error('Missing Destination Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Setup URL Params\n            if (jsonp != '0') data['callback'] = jsonp;\n            if (stop)         data['stop']     = 'all';\n            if (reverse)      data['reverse']  = 'true';\n            if (start)        data['start']    = start;\n            if (end)          data['end']      = end;\n            if (limit)        data['count']    = limit;\n\n            data['auth'] = auth_key;\n\n            // Compose URL Parts\n            url = [\n                STD_ORIGIN, 'v1', 'replay',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                source, destination\n            ];\n\n            // Start (or Stop) Replay!\n            xdr({\n                callback : jsonp,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function() { callback([ 0, 'Disconnected' ]) },\n                url      : url,\n                data     : _get_url_params(data)\n            });\n        },\n\n        /*\n            PUBNUB.auth('AJFLKAJSDKLA');\n        */\n        'auth' : function(auth) {\n            AUTH_KEY = auth;\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.time(function(time){ });\n        */\n        'time' : function(callback) {\n            var jsonp = jsonp_cb();\n\n            var data = { 'uuid' : UUID, 'auth' : AUTH_KEY }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [STD_ORIGIN, 'time', jsonp],\n                success  : function(response) { callback(response[0]) },\n                fail     : function() { callback(0) }\n            });\n        },\n\n        /*\n            PUBNUB.publish({\n                channel : 'my_chat_channel',\n                message : 'hello!'\n            });\n        */\n        'publish' : function( args, callback ) {\n            var msg      = args['message'];\n            if (!msg) return error('Missing Message');\n\n            var callback = callback || args['callback'] || msg['callback'] || function(){}\n            ,   channel  = args['channel'] || msg['channel']\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   cipher_key = args['cipher_key']\n            ,   err      = args['error'] || msg['error'] || function() {}\n            ,   post     = args['post'] || false\n            ,   store    = ('store_in_history' in args) ? args['store_in_history']: true\n            ,   jsonp    = jsonp_cb()\n            ,   add_msg  = 'push'\n            ,   params\n            ,   url;\n\n            if (args['prepend']) add_msg = 'unshift'\n\n            if (!channel)       return error('Missing Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (msg['getPubnubMessage']) {\n                msg = msg['getPubnubMessage']();\n            }\n\n            // If trying to send Object\n            msg = JSON['stringify'](encrypt(msg, cipher_key));\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'publish',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                0, encode(channel),\n                jsonp, encode(msg)\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key }\n\n            if (!store) params['store'] =\"0\"\n\n            if (USE_INSTANCEID) params['instanceid'] = INSTANCEID;\n\n            // Queue Message Send\n            PUB_QUEUE[add_msg]({\n                callback : jsonp,\n                timeout  : SECOND * 5,\n                url      : url,\n                data     : _get_url_params(params),\n                fail     : function(response){\n                    _invoke_error(response, err);\n                    publish(1);\n                },\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                    publish(1);\n                },\n                mode     : (post)?'POST':'GET'\n            });\n\n            // Send Message\n            publish();\n        },\n\n        /*\n            PUBNUB.unsubscribe({ channel : 'my_chat' });\n        */\n        'unsubscribe' : function(args, callback) {\n            var channel       = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   auth_key      = args['auth_key']    || AUTH_KEY\n            ,   callback      = callback            || args['callback'] || function(){}\n            ,   err           = args['error']       || function(){};\n\n            TIMETOKEN   = 0;\n            //SUB_RESTORE = 1;    REVISIT !!!!\n\n            if (channel) {\n                // Prepare Channel(s)\n                channel = map( (\n                    channel.join ? channel.join(',') : ''+channel\n                ).split(','), function(channel) {\n                    if (!CHANNELS[channel]) return;\n                    return channel + ',' + channel + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over Channels\n                each( channel.split(','), function(ch) {\n                    var CB_CALLED = true;\n                    if (!ch) return;\n                    CHANNELS[ch] = 0;\n                    if (ch in STATE) delete STATE[ch];\n                    if (READY) {\n                        CB_CALLED = SELF['LEAVE']( ch, 0 , auth_key, callback, err);\n                    }\n                    if (!CB_CALLED) callback({action : \"leave\"});\n\n                    \n                } );\n            }\n\n            if (channel_group) {\n                // Prepare channel group(s)\n                channel_group = map( (\n                    channel_group.join ? channel_group.join(',') : ''+channel_group\n                ).split(','), function(channel_group) {\n                    if (!CHANNEL_GROUPS[channel_group]) return;\n                    return channel_group + ',' + channel_group + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over channel groups\n                each( channel_group.split(','), function(chg) {\n                    var CB_CALLED = true;\n                    if (!chg) return;\n                    CHANNEL_GROUPS[chg] = 0;\n                    if (chg in STATE) delete STATE[chg];\n                    if (READY) {\n                        CB_CALLED = SELF['LEAVE_GROUP']( chg, 0 , auth_key, callback, err);\n                    }\n                    if (!CB_CALLED) callback({action : \"leave\"});\n\n                } );\n            }\n\n            // Reset Connection if Count Less\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.subscribe({\n                channel  : 'my_chat'\n                callback : function(message) { }\n            });\n        */\n        'subscribe' : function( args, callback ) {\n            var channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   callback        = callback            || args['callback']\n            ,   callback        = callback            || args['message']\n            ,   connect         = args['connect']     || function(){}\n            ,   reconnect       = args['reconnect']   || function(){}\n            ,   disconnect      = args['disconnect']  || function(){}\n            ,   SUB_ERROR       = args['error']       || SUB_ERROR || function(){}\n            ,   idlecb          = args['idle']        || function(){}\n            ,   presence        = args['presence']    || 0\n            ,   noheresync      = args['noheresync']  || 0\n            ,   backfill        = args['backfill']    || 0\n            ,   timetoken       = args['timetoken']   || 0\n            ,   sub_timeout     = args['timeout']     || SUB_TIMEOUT\n            ,   windowing       = args['windowing']   || SUB_WINDOWING\n            ,   state           = args['state']\n            ,   heartbeat       = args['heartbeat'] || args['pnexpires']\n            ,   heartbeat_interval = args['heartbeat_interval']\n            ,   restore         = args['restore'] || SUB_RESTORE;\n\n            AUTH_KEY            = args['auth_key']    || AUTH_KEY;\n\n            // Restore Enabled?\n            SUB_RESTORE = restore;\n\n            // Always Reset the TT\n            TIMETOKEN = timetoken;\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) {\n                return error('Missing Channel');\n            }\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (heartbeat || heartbeat === 0 || heartbeat_interval || heartbeat_interval === 0) {\n                SELF['set_heartbeat'](heartbeat, heartbeat_interval);\n            }\n\n            // Setup Channel(s)\n            if (channel) {\n                each( (channel.join ? channel.join(',') : ''+channel).split(','),\n                function(channel) {\n                    var settings = CHANNELS[channel] || {};\n\n                    // Store Channel State\n                    CHANNELS[SUB_CHANNEL = channel] = {\n                        name         : channel,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    if (state) {\n                        if (channel in state) {\n                            STATE[channel] = state[channel];\n                        } else {\n                            STATE[channel] = state;\n                        }\n                    }\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel'  : channel + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel'  : channel,\n                        'data'     : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel ); } );\n                        }\n                    });\n                } );\n            }\n\n            // Setup Channel Groups\n            if (channel_group) {\n                each( (channel_group.join ? channel_group.join(',') : ''+channel_group).split(','),\n                function(channel_group) {\n                    var settings = CHANNEL_GROUPS[channel_group] || {};\n\n                    CHANNEL_GROUPS[channel_group] = {\n                        name         : channel_group,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel_group'  : channel_group + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore,\n                        'auth_key' : AUTH_KEY\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel_group'  : channel_group,\n                        'data'           : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel_group ); } );\n                        }\n                    });\n                } );\n            }\n\n\n            // Test Network Connection\n            function _test_connection(success) {\n                if (success) {\n                    // Begin Next Socket Connection\n                    timeout( CONNECT, windowing);\n                }\n                else {\n                    // New Origin on Failed Connection\n                    STD_ORIGIN = nextorigin( ORIGIN, 1 );\n                    SUB_ORIGIN = nextorigin( ORIGIN, 1 );\n\n                    // Re-test Connection\n                    timeout( function() {\n                        SELF['time'](_test_connection);\n                    }, SECOND );\n                }\n\n                // Disconnect & Reconnect\n                each_channel(function(channel){\n                    // Reconnect\n                    if (success && channel.disconnected) {\n                        channel.disconnected = 0;\n                        return channel.reconnect(channel.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel.disconnected) {\n                        channel.disconnected = 1;\n                        channel.disconnect(channel.name);\n                    }\n                });\n                \n                // Disconnect & Reconnect for channel groups\n                each_channel_group(function(channel_group){\n                    // Reconnect\n                    if (success && channel_group.disconnected) {\n                        channel_group.disconnected = 0;\n                        return channel_group.reconnect(channel_group.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel_group.disconnected) {\n                        channel_group.disconnected = 1;\n                        channel_group.disconnect(channel_group.name);\n                    }\n                });\n            }\n\n            // Evented Subscribe\n            function _connect() {\n                var jsonp           = jsonp_cb()\n                ,   channels        = generate_channel_list(CHANNELS).join(',')\n                ,   channel_groups  = generate_channel_group_list(CHANNEL_GROUPS).join(',');\n\n                // Stop Connection\n                if (!channels && !channel_groups) return;\n\n                if (!channels) channels = ',';\n\n                // Connect to PubNub Subscribe Servers\n                _reset_offline();\n\n                var data = _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY });\n\n                if (channel_groups) {\n                    data['channel-group'] = channel_groups;\n                }\n\n\n                var st = JSON.stringify(STATE);\n                if (st.length > 2) data['state'] = JSON.stringify(STATE);\n\n                if (PRESENCE_HB) data['heartbeat'] = PRESENCE_HB;\n\n                if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n                start_presence_heartbeat();\n                SUB_RECEIVER = xdr({\n                    timeout  : sub_timeout,\n                    callback : jsonp,\n                    fail     : function(response) {\n                        if (response && response['error'] && response['service']) {\n                            _invoke_error(response, SUB_ERROR);\n                            _test_connection(1);\n                        } else {\n                            SELF['time'](function(success){\n                                !success && ( _invoke_error(response, SUB_ERROR));\n                                _test_connection(success);\n                            });\n                        }\n                    },\n                    data     : _get_url_params(data),\n                    url      : [\n                        SUB_ORIGIN, 'subscribe',\n                        SUBSCRIBE_KEY, encode(channels),\n                        jsonp, TIMETOKEN\n                    ],\n                    success : function(messages) {\n\n                        // Check for Errors\n                        if (!messages || (\n                            typeof messages == 'object' &&\n                            'error' in messages         &&\n                            messages['error']\n                        )) {\n                            SUB_ERROR(messages['error']);\n                            return timeout( CONNECT, SECOND );\n                        }\n\n                        // User Idle Callback\n                        idlecb(messages[1]);\n\n                        // Restore Previous Connection Point if Needed\n                        TIMETOKEN = !TIMETOKEN               &&\n                                    SUB_RESTORE              &&\n                                    db['get'](SUBSCRIBE_KEY) || messages[1];\n\n                        /*\n                        // Connect\n                        each_channel_registry(function(registry){\n                            if (registry.connected) return;\n                            registry.connected = 1;\n                            registry.connect(channel.name);\n                        });\n                        */\n\n                        // Connect\n                        each_channel(function(channel){\n                            if (channel.connected) return;\n                            channel.connected = 1;\n                            channel.connect(channel.name);\n                        });\n\n                        // Connect for channel groups\n                        each_channel_group(function(channel_group){\n                            if (channel_group.connected) return;\n                            channel_group.connected = 1;\n                            channel_group.connect(channel_group.name);\n                        });\n\n                        if (RESUMED && !SUB_RESTORE) {\n                                TIMETOKEN = 0;\n                                RESUMED = false;\n                                // Update Saved Timetoken\n                                db['set']( SUBSCRIBE_KEY, 0 );\n                                timeout( _connect, windowing );\n                                return;\n                        }\n\n                        // Invoke Memory Catchup and Receive Up to 100\n                        // Previous Messages from the Queue.\n                        if (backfill) {\n                            TIMETOKEN = 10000;\n                            backfill  = 0;\n                        }\n\n                        // Update Saved Timetoken\n                        db['set']( SUBSCRIBE_KEY, messages[1] );\n\n                        // Route Channel <---> Callback for Message\n                        var next_callback = (function() {\n                            var channels = '';\n                            var channels2 = '';\n\n                            if (messages.length > 3) {\n                                channels  = messages[3];\n                                channels2 = messages[2];\n                            } else if (messages.length > 2) {\n                                channels = messages[2];\n                            } else {\n                                channels =  map(\n                                    generate_channel_list(CHANNELS), function(chan) { return map(\n                                        Array(messages[0].length)\n                                        .join(',').split(','),\n                                        function() { return chan; }\n                                    ) }).join(',')\n                            }\n\n                            var list  = channels.split(',');\n                            var list2 = (channels2)?channels2.split(','):[];\n\n                            return function() {\n                                var channel  = list.shift()||SUB_CHANNEL;\n                                var channel2 = list2.shift();\n\n                                var chobj = {};\n\n                                if (channel2) {\n                                    if (channel && channel.indexOf('-pnpres') >= 0 \n                                        && channel2.indexOf('-pnpres') < 0) {\n                                        channel2 += '-pnpres';\n                                    }\n                                    chobj = CHANNEL_GROUPS[channel2] || CHANNELS[channel2] || {'callback' : function(){}};\n                                } else {\n                                    chobj = CHANNELS[channel];\n                                }\n\n                                var r = [\n                                    chobj\n                                    .callback||SUB_CALLBACK,\n                                    channel.split(PRESENCE_SUFFIX)[0]\n                                ];\n                                channel2 && r.push(channel2.split(PRESENCE_SUFFIX)[0]);\n                                return r;\n                            };\n                        })();\n\n                        var latency = detect_latency(+messages[1]);\n                        each( messages[0], function(msg) {\n                            var next = next_callback();\n                            var decrypted_msg = decrypt(msg,\n                                (CHANNELS[next[1]])?CHANNELS[next[1]]['cipher_key']:null);\n                            next[0] && next[0]( decrypted_msg, messages, next[2] || next[1], latency, next[1]);\n                        });\n\n                        timeout( _connect, windowing );\n                    }\n                });\n            }\n\n            CONNECT = function() {\n                _reset_offline();\n                timeout( _connect, windowing );\n            };\n\n            // Reduce Status Flicker\n            if (!READY) return READY_BUFFER.push(CONNECT);\n\n            // Connect Now\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.here_now({ channel : 'my_chat', callback : fun });\n        */\n        'here_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   jsonp    = jsonp_cb()\n            ,   uuids    = ('uuids' in args) ? args['uuids'] : true\n            ,   state    = args['state']\n            ,   data     = { 'uuid' : UUID, 'auth' : auth_key };\n\n            if (!uuids) data['disable_uuids'] = 1;\n            if (state) data['state'] = 1;\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            var url = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY\n                ];\n\n            channel && url.push('channel') && url.push(encode(channel));\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (channel_group) {\n                data['channel-group'] = channel_group;\n                !channel && url.push('channel') && url.push(','); \n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n        },\n\n        /*\n            PUBNUB.current_channels_by_uuid({ channel : 'my_chat', callback : fun });\n        */\n        'where_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   uuid     = args['uuid']     || UUID\n            ,   data     = { 'auth' : auth_key };\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY,\n                    'uuid', encode(uuid)\n                ]\n            });\n        },\n\n        'state' : function(args, callback) {\n            var callback = args['callback'] || callback || function(r) {}\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   state    = args['state']\n            ,   uuid     = args['uuid'] || UUID\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   url\n            ,   data     = _get_url_params({ 'auth' : auth_key });\n\n            // Make sure we have a Channel\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!uuid) return error('Missing UUID');\n            if (!channel && !channel_group) return error('Missing Channel');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (typeof channel != 'undefined'\n                && CHANNELS[channel] && CHANNELS[channel].subscribed ) {\n                if (state) STATE[channel] = state;\n            }\n\n            if (typeof channel_group != 'undefined'\n                && CHANNEL_GROUPS[channel_group]\n                && CHANNEL_GROUPS[channel_group].subscribed\n                ) {\n                if (state) STATE[channel_group] = state;\n                data['channel-group'] = channel_group;\n\n                if (!channel) {\n                    channel = ',';\n                }\n            }\n\n            data['state'] = JSON.stringify(state);\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            if (state) {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', uuid, 'data'\n                ]\n            } else {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', encode(uuid)\n                ]\n            }\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n\n            });\n\n        },\n\n        /*\n            PUBNUB.grant({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                ttl      : 24 * 60, // Minutes\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'grant' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']  || args['channels']\n            ,   channel_group   = args['channel_group']\n            ,   jsonp           = jsonp_cb()\n            ,   ttl             = args['ttl']\n            ,   r               = (args['read'] )?\"1\":\"0\"\n            ,   w               = (args['write'])?\"1\":\"0\"\n            ,   m               = (args['manage'])?\"1\":\"0\"\n            ,   auth_key        = args['auth_key'] || args['auth_keys'];\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\" + PUBLISH_KEY + \"\\n\"\n                    + \"grant\" + \"\\n\";\n\n            var data = {\n                'w'         : w,\n                'r'         : r,\n                'timestamp' : timestamp\n            };\n            if (args['manage']) {\n                data['m'] = m;\n            }\n            if (isArray(channel)) {\n                channel = channel['join'](',');\n            }\n            if (isArray(auth_key)) {\n                auth_key = auth_key['join'](',');\n            }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (ttl || ttl === 0) data['ttl'] = ttl;\n\n            if (auth_key) data['auth'] = auth_key;\n\n            data = _get_url_params(data)\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'grant' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n         PUBNUB.mobile_gw_provision ({\n         device_id: 'A655FBA9931AB',\n         op       : 'add' | 'remove',\n         gw_type  : 'apns' | 'gcm',\n         channel  : 'my_chat',\n         callback : fun,\n         error    : fun,\n         });\n         */\n\n        'mobile_gw_provision' : function( args ) {\n\n            var callback = args['callback'] || function(){}\n                ,   auth_key       = args['auth_key'] || AUTH_KEY\n                ,   err            = args['error'] || function() {}\n                ,   jsonp          = jsonp_cb()\n                ,   channel        = args['channel']\n                ,   op             = args['op']\n                ,   gw_type        = args['gw_type']\n                ,   device_id      = args['device_id']\n                ,   params\n                ,   url;\n\n            if (!device_id)     return error('Missing Device ID (device_id)');\n            if (!gw_type)       return error('Missing GW Type (gw_type: gcm or apns)');\n            if (!op)            return error('Missing GW Operation (op: add or remove)');\n            if (!channel)       return error('Missing gw destination Channel (channel)');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'v1/push/sub-key',\n                SUBSCRIBE_KEY, 'devices', device_id\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key, 'type': gw_type};\n\n            if (op == \"add\") {\n                params['add'] = channel;\n            } else if (op == \"remove\") {\n                params['remove'] = channel;\n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : params,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n        },\n\n        /*\n            PUBNUB.audit({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'audit' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   auth_key        = args['auth_key']\n            ,   jsonp           = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\"\n                + PUBLISH_KEY + \"\\n\"\n                + \"audit\" + \"\\n\";\n\n            var data = {'timestamp' : timestamp };\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (auth_key) data['auth']    = auth_key;\n\n            data = _get_url_params(data);\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'audit' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.revoke({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'revoke' : function( args, callback ) {\n            args['read']  = false;\n            args['write'] = false;\n            SELF['grant']( args, callback );\n        },\n        'set_uuid' : function(uuid) {\n            UUID = uuid;\n            CONNECT();\n        },\n        'get_uuid' : function() {\n            return UUID;\n        },\n        'isArray'  : function(arg) {\n            return isArray(arg);\n        },\n        'get_subscibed_channels' : function() {\n            return generate_channel_list(CHANNELS, true);\n        },\n        'presence_heartbeat' : function(args) {\n            var callback = args['callback'] || function() {}\n            var err      = args['error']    || function() {}\n            var jsonp    = jsonp_cb();\n            var data     = { 'uuid' : UUID, 'auth' : AUTH_KEY };\n\n            var st = JSON['stringify'](STATE);\n            if (st.length > 2) data['state'] = JSON['stringify'](STATE);\n\n            if (PRESENCE_HB > 0 && PRESENCE_HB < 320) data['heartbeat'] = PRESENCE_HB;\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            var channels        = encode(generate_channel_list(CHANNELS, true)['join'](','));\n            var channel_groups  = generate_channel_group_list(CHANNEL_GROUPS, true)['join'](',');\n\n            if (!channels) channels = ',';\n            if (channel_groups) data['channel-group'] = channel_groups;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel' , channels,\n                    'heartbeat'\n                ],\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) { _invoke_error(response, err); }\n            });\n        },\n        'stop_timers': function () {\n            clearTimeout(_poll_timer);\n            clearTimeout(_poll_timer2);\n        },\n\n        // Expose PUBNUB Functions\n        'xdr'           : xdr,\n        'ready'         : ready,\n        'db'            : db,\n        'uuid'          : generate_uuid,\n        'map'           : map,\n        'each'          : each,\n        'each-channel'  : each_channel,\n        'grep'          : grep,\n        'offline'       : function(){ _reset_offline(\n            1, { \"message\" : \"Offline. Please check your network settings.\" })\n        },\n        'supplant'      : supplant,\n        'now'           : rnow,\n        'unique'        : unique,\n        'updater'       : updater\n    };\n\n    function _poll_online() {\n        _is_online() || _reset_offline( 1, {\n            \"error\" : \"Offline. Please check your network settings. \"\n        });\n        _poll_timer && clearTimeout(_poll_timer);\n        _poll_timer = timeout( _poll_online, SECOND );\n    }\n\n    function _poll_online2() {\n        if (!TIME_CHECK) return;\n        SELF['time'](function(success){\n            detect_time_detla( function(){}, success );\n            success || _reset_offline( 1, {\n                \"error\" : \"Heartbeat failed to connect to Pubnub Servers.\" +\n                    \"Please check your network settings.\"\n                });\n            _poll_timer2 && clearTimeout(_poll_timer2);\n            _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n        });\n    }\n\n    function _reset_offline(err, msg) {\n        SUB_RECEIVER && SUB_RECEIVER(err, msg);\n        SUB_RECEIVER = null;\n\n        clearTimeout(_poll_timer);\n        clearTimeout(_poll_timer2);\n    }\n    \n    if (!UUID) UUID = SELF['uuid']();\n    if (!INSTANCEID) INSTANCEID = SELF['uuid']();\n    db['set']( SUBSCRIBE_KEY + 'uuid', UUID );\n\n    _poll_timer  = timeout( _poll_online,  SECOND    );\n    _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n    PRESENCE_HB_TIMEOUT = timeout(\n        start_presence_heartbeat,\n        ( PRESENCE_HB_INTERVAL - 3 ) * SECOND\n    );\n\n    // Detect Age of Message\n    function detect_latency(tt) {\n        var adjusted_time = rnow() - TIME_DRIFT;\n        return adjusted_time - tt / 10000;\n    }\n\n    detect_time_detla();\n    function detect_time_detla( cb, time ) {\n        var stime = rnow();\n\n        time && calculate(time) || SELF['time'](calculate);\n\n        function calculate(time) {\n            if (!time) return;\n            var ptime   = time / 10000\n            ,   latency = (rnow() - stime) / 2;\n            TIME_DRIFT = rnow() - (ptime + latency);\n            cb && cb(TIME_DRIFT);\n        }\n    }\n\n    return SELF;\n}\nfunction crypto_obj() {\n\n    function SHA256(s) {\n        return CryptoJS['SHA256'](s)['toString'](CryptoJS['enc']['Hex']);\n    }\n\n    var iv = \"0123456789012345\";\n\n    var allowedKeyEncodings = ['hex', 'utf8', 'base64', 'binary'];\n    var allowedKeyLengths = [128, 256];\n    var allowedModes = ['ecb', 'cbc'];\n\n    var defaultOptions = {\n        'encryptKey': true,\n        'keyEncoding': 'utf8',\n        'keyLength': 256,\n        'mode': 'cbc'\n    };\n\n    function parse_options(options) {\n\n        // Defaults\n        options = options || {};\n        if (!options['hasOwnProperty']('encryptKey')) options['encryptKey'] = defaultOptions['encryptKey'];\n        if (!options['hasOwnProperty']('keyEncoding')) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (!options['hasOwnProperty']('keyLength')) options['keyLength'] = defaultOptions['keyLength'];\n        if (!options['hasOwnProperty']('mode')) options['mode'] = defaultOptions['mode'];\n\n        // Validation\n        if (allowedKeyEncodings['indexOf'](options['keyEncoding']['toLowerCase']()) == -1) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (allowedKeyLengths['indexOf'](parseInt(options['keyLength'], 10)) == -1) options['keyLength'] = defaultOptions['keyLength'];\n        if (allowedModes['indexOf'](options['mode']['toLowerCase']()) == -1) options['mode'] = defaultOptions['mode'];\n\n        return options;\n\n    }\n\n    function decode_key(key, options) {\n        if (options['keyEncoding'] == 'base64') {\n            return CryptoJS['enc']['Base64']['parse'](key);\n        } else if (options['keyEncoding'] == 'hex') {\n            return CryptoJS['enc']['Hex']['parse'](key);\n        } else {\n            return key;\n        }\n    }\n\n    function get_padded_key(key, options) {\n        key = decode_key(key, options);\n        if (options['encryptKey']) {\n            return CryptoJS['enc']['Utf8']['parse'](SHA256(key)['slice'](0, 32));\n        } else {\n            return key;\n        }\n    }\n\n    function get_mode(options) {\n        if (options['mode'] == 'ecb') {\n            return CryptoJS['mode']['ECB'];\n        } else {\n            return CryptoJS['mode']['CBC'];\n        }\n    }\n\n    function get_iv(options) {\n        return (options['mode'] == 'cbc') ? CryptoJS['enc']['Utf8']['parse'](iv) : null;\n    }\n\n    return {\n\n        'encrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            var hex_message = JSON['stringify'](data);\n            var encryptedHexArray = CryptoJS['AES']['encrypt'](hex_message, cipher_key, {'iv': iv, 'mode': mode})['ciphertext'];\n            var base_64_encrypted = encryptedHexArray['toString'](CryptoJS['enc']['Base64']);\n            return base_64_encrypted || data;\n        },\n\n        'decrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            try {\n                var binary_enc = CryptoJS['enc']['Base64']['parse'](data);\n                var json_plain = CryptoJS['AES']['decrypt']({'ciphertext': binary_enc}, cipher_key, {'iv': iv, 'mode': mode})['toString'](CryptoJS['enc']['Utf8']);\n                var plaintext = JSON['parse'](json_plain);\n                return plaintext;\n            }\n            catch (e) {\n                return undefined;\n            }\n        }\n    };\n}\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     UTIL     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nwindow['PUBNUB'] || (function() {\n\n/**\n * UTIL LOCALS\n */\n\nvar SWF             = 'https://pubnub.a.ssl.fastly.net/pubnub.swf'\n,   ASYNC           = 'async'\n,   UA              = navigator.userAgent\n,   PNSDK           = 'PubNub-JS-' + 'Web' + '/' + '3.7.13'\n,   XORIGN          = UA.indexOf('MSIE 6') == -1;\n\n/**\n * CONSOLE COMPATIBILITY\n */\nwindow.console || (window.console=window.console||{});\nconsole.log    || (\n    console.log   =\n    console.error =\n    ((window.opera||{}).postError||function(){})\n);\n\n/**\n * LOCAL STORAGE OR COOKIE\n */\nvar db = (function(){\n    var store = {};\n    var ls = false;\n    try {\n        ls = window['localStorage'];\n    } catch (e) { }\n    var cookieGet = function(key) {\n        if (document.cookie.indexOf(key) == -1) return null;\n        return ((document.cookie||'').match(\n            RegExp(key+'=([^;]+)')\n        )||[])[1] || null;\n    };\n    var cookieSet = function( key, value ) {\n        document.cookie = key + '=' + value +\n            '; expires=Thu, 1 Aug 2030 20:00:00 UTC; path=/';\n    };\n    var cookieTest = (function() {\n        try {\n            cookieSet('pnctest', '1');\n            return cookieGet('pnctest') === '1';\n        } catch (e) {\n            return false;\n        }\n    }());\n    return {\n        'get' : function(key) {\n            try {\n                if (ls) return ls.getItem(key);\n                if (cookieTest) return cookieGet(key);\n                return store[key];\n            } catch(e) {\n                return store[key];\n            }\n        },\n        'set' : function( key, value ) {\n            try {\n                if (ls) return ls.setItem( key, value ) && 0;\n                if (cookieTest) cookieSet( key, value );\n                store[key] = value;\n            } catch(e) {\n                store[key] = value;\n            }\n        }\n    };\n})();\n\nfunction get_hmac_SHA256(data,key) {\n    var hash = CryptoJS['HmacSHA256'](data, key);\n    return hash.toString(CryptoJS['enc']['Base64']);\n}\n\n/**\n * $\n * =\n * var div = $('divid');\n */\nfunction $(id) { return document.getElementById(id) }\n\n/**\n * ERROR\n * =====\n * error('message');\n */\nfunction error(message) { console['error'](message) }\n\n/**\n * SEARCH\n * ======\n * var elements = search('a div span');\n */\nfunction search( elements, start) {\n    var list = [];\n    each( elements.split(/\\s+/), function(el) {\n        each( (start || document).getElementsByTagName(el), function(node) {\n            list.push(node);\n        } );\n    });\n    return list;\n}\n\n/**\n * BIND\n * ====\n * bind( 'keydown', search('a')[0], function(element) {\n *     ...\n * } );\n */\nfunction bind( type, el, fun ) {\n    each( type.split(','), function(etype) {\n        var rapfun = function(e) {\n            if (!e) e = window.event;\n            if (!fun(e)) {\n                e.cancelBubble = true;\n                e.preventDefault  && e.preventDefault();\n                e.stopPropagation && e.stopPropagation();\n            }\n        };\n\n        if ( el.addEventListener ) el.addEventListener( etype, rapfun, false );\n        else if ( el.attachEvent ) el.attachEvent( 'on' + etype, rapfun );\n        else  el[ 'on' + etype ] = rapfun;\n    } );\n}\n\n/**\n * UNBIND\n * ======\n * unbind( 'keydown', search('a')[0] );\n */\nfunction unbind( type, el, fun ) {\n    if ( el.removeEventListener ) el.removeEventListener( type, false );\n    else if ( el.detachEvent ) el.detachEvent( 'on' + type, false );\n    else  el[ 'on' + type ] = null;\n}\n\n/**\n * HEAD\n * ====\n * head().appendChild(elm);\n */\nfunction head() { return search('head')[0] }\n\n/**\n * ATTR\n * ====\n * var attribute = attr( node, 'attribute' );\n */\nfunction attr( node, attribute, value ) {\n    if (value) node.setAttribute( attribute, value );\n    else return node && node.getAttribute && node.getAttribute(attribute);\n}\n\n/**\n * CSS\n * ===\n * var obj = create('div');\n */\nfunction css( element, styles ) {\n    for (var style in styles) if (styles.hasOwnProperty(style))\n        try {element.style[style] = styles[style] + (\n            '|width|height|top|left|'.indexOf(style) > 0 &&\n            typeof styles[style] == 'number'\n            ? 'px' : ''\n        )}catch(e){}\n}\n\n/**\n * CREATE\n * ======\n * var obj = create('div');\n */\nfunction create(element) { return document.createElement(element) }\n\n\n/**\n * jsonp_cb\n * ========\n * var callback = jsonp_cb();\n */\nfunction jsonp_cb() { return XORIGN || FDomainRequest() ? 0 : unique() }\n\n\n\n/**\n * EVENTS\n * ======\n * PUBNUB.events.bind( 'you-stepped-on-flower', function(message) {\n *     // Do Stuff with message\n * } );\n *\n * PUBNUB.events.fire( 'you-stepped-on-flower', \"message-data\" );\n * PUBNUB.events.fire( 'you-stepped-on-flower', {message:\"data\"} );\n * PUBNUB.events.fire( 'you-stepped-on-flower', [1,2,3] );\n *\n */\nvar events = {\n    'list'   : {},\n    'unbind' : function( name ) { events.list[name] = [] },\n    'bind'   : function( name, fun ) {\n        (events.list[name] = events.list[name] || []).push(fun);\n    },\n    'fire' : function( name, data ) {\n        each(\n            events.list[name] || [],\n            function(fun) { fun(data) }\n        );\n    }\n};\n\n/**\n * XDR Cross Domain Request\n * ========================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction xdr( setup ) {\n    if (XORIGN || FDomainRequest()) return ajax(setup);\n\n    var script    = create('script')\n    ,   callback  = setup.callback\n    ,   id        = unique()\n    ,   finished  = 0\n    ,   xhrtme    = setup.timeout || DEF_TIMEOUT\n    ,   timer     = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail      = setup.fail    || function(){}\n    ,   data      = setup.data    || {}\n    ,   success   = setup.success || function(){}\n    ,   append    = function() { head().appendChild(script) }\n    ,   done      = function( failed, response ) {\n            if (finished) return;\n            finished = 1;\n\n            script.onerror = null;\n            clearTimeout(timer);\n\n            (failed || !response) || success(response);\n\n            timeout( function() {\n                failed && fail();\n                var s = $(id)\n                ,   p = s && s.parentNode;\n                p && p.removeChild(s);\n            }, SECOND );\n        };\n\n    window[callback] = function(response) {\n        done( 0, response );\n    };\n\n    if (!setup.blocking) script[ASYNC] = ASYNC;\n\n    script.onerror = function() { done(1) };\n    script.src     = build_url( setup.url, data );\n\n    attr( script, 'id', id );\n\n    append();\n    return done;\n}\n\n/**\n * CORS XHR Request\n * ================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction ajax( setup ) {\n    var xhr, response\n    ,   finished = function() {\n            if (loaded) return;\n            loaded = 1;\n\n            clearTimeout(timer);\n\n            try       { response = JSON['parse'](xhr.responseText); }\n            catch (r) { return done(1); }\n\n            complete = 1;\n            success(response);\n        }\n    ,   complete = 0\n    ,   loaded   = 0\n    ,   xhrtme   = setup.timeout || DEF_TIMEOUT\n    ,   timer    = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail     = setup.fail    || function(){}\n    ,   data     = setup.data    || {}\n    ,   success  = setup.success || function(){}\n    ,   async    = !(setup.blocking)\n    ,   done     = function(failed,response) {\n            if (complete) return;\n            complete = 1;\n\n            clearTimeout(timer);\n\n            if (xhr) {\n                xhr.onerror = xhr.onload = null;\n                xhr.abort && xhr.abort();\n                xhr = null;\n            }\n\n            failed && fail(response);\n        };\n\n    // Send\n    try {\n        xhr = FDomainRequest()      ||\n              window.XDomainRequest &&\n              new XDomainRequest()  ||\n              new XMLHttpRequest();\n\n        xhr.onerror = xhr.onabort   = function(e){ done(\n            1, e || (xhr && xhr.responseText) || { \"error\" : \"Network Connection Error\"}\n        ) };\n        xhr.onload  = xhr.onloadend = finished;\n        xhr.onreadystatechange = function() {\n            if (xhr && xhr.readyState == 4) {\n                switch(xhr.status) {\n                    case 200:\n                        break;\n                    default:\n                        try {\n                            response = JSON['parse'](xhr.responseText);\n                            done(1,response);\n                        }\n                        catch (r) { return done(1, {status : xhr.status, payload : null, message : xhr.responseText}); }\n                        return;\n                }\n            }\n        }\n\n        var url = build_url(setup.url,data);\n\n        xhr.open( 'GET', url, async );\n        if (async) xhr.timeout = xhrtme;\n        xhr.send();\n    }\n    catch(eee) {\n        done(0);\n        XORIGN = 0;\n        return xdr(setup);\n    }\n\n    // Return 'done'\n    return done;\n}\n\n// Test Connection State\nfunction _is_online() {\n    if (!('onLine' in navigator)) return 1;\n    try       { return navigator['onLine'] }\n    catch (e) { return true }\n}\n\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     PUBNUB     ===========================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nvar PDIV          = $('pubnub') || 0\n,   CREATE_PUBNUB = function(setup) {\n\n    // Force JSONP if requested from user.\n    if (setup['jsonp'])  XORIGN = 0;\n    else                 XORIGN = UA.indexOf('MSIE 6') == -1;\n\n    var SUBSCRIBE_KEY = setup['subscribe_key'] || ''\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   UUID          = setup['uuid'] || db['get'](SUBSCRIBE_KEY+'uuid')||'';\n\n    var leave_on_unload = setup['leave_on_unload'] || 0;\n\n    setup['xdr']        = xdr;\n    setup['db']         = db;\n    setup['error']      = setup['error'] || error;\n    setup['_is_online'] = _is_online;\n    setup['jsonp_cb']   = jsonp_cb;\n    setup['hmac_SHA256']= get_hmac_SHA256;\n    setup['crypto_obj'] = crypto_obj();\n    setup['params']     = { 'pnsdk' : PNSDK }\n\n    var SELF = function(setup) {\n        return CREATE_PUBNUB(setup);\n    };\n\n    var PN = PN_API(setup);\n\n    for (var prop in PN) {\n        if (PN.hasOwnProperty(prop)) {\n            SELF[prop] = PN[prop];\n        }\n    }\n    SELF['css']         = css;\n    SELF['$']           = $;\n    SELF['create']      = create;\n    SELF['bind']        = bind;\n    SELF['head']        = head;\n    SELF['search']      = search;\n    SELF['attr']        = attr;\n    SELF['events']      = events;\n    SELF['init']        = SELF;\n    SELF['secure']      = SELF;\n    SELF['crypto_obj']  = crypto_obj(); // export to instance\n\n\n    // Add Leave Functions\n    bind( 'beforeunload', window, function() {\n        if (leave_on_unload) SELF['each-channel'](function(ch){ SELF['LEAVE']( ch.name, 0 ) });\n        return true;\n    } );\n\n    // Return without Testing\n    if (setup['notest']) return SELF;\n\n    bind( 'offline', window,   SELF['offline'] );\n    bind( 'offline', document, SELF['offline'] );\n\n    // Return PUBNUB Socket Object\n    return SELF;\n};\nCREATE_PUBNUB['init']   = CREATE_PUBNUB;\nCREATE_PUBNUB['secure'] = CREATE_PUBNUB;\nCREATE_PUBNUB['crypto_obj'] = crypto_obj(); // export to constructor\n\n// Bind for PUBNUB Readiness to Subscribe\nif (document.readyState === 'complete') {\n    timeout( ready, 0 );\n}\nelse {\n    bind( 'load', window, function(){ timeout( ready, 0 ) } );\n}\n\nvar pdiv = PDIV || {};\n\n// CREATE A PUBNUB GLOBAL OBJECT\nPUBNUB = CREATE_PUBNUB({\n    'notest'        : 1,\n    'publish_key'   : attr( pdiv, 'pub-key' ),\n    'subscribe_key' : attr( pdiv, 'sub-key' ),\n    'ssl'           : !document.location.href.indexOf('https') ||\n                      attr( pdiv, 'ssl' ) == 'on',\n    'origin'        : attr( pdiv, 'origin' ),\n    'uuid'          : attr( pdiv, 'uuid' )\n});\n\n// jQuery Interface\nwindow['jQuery'] && (window['jQuery']['PUBNUB'] = CREATE_PUBNUB);\n\n// For Modern JS + Testling.js - http://testling.com/\ntypeof(module) !== 'undefined' && (module['exports'] = PUBNUB) && ready();\n\nvar pubnubs = $('pubnubs') || 0;\n\n// LEAVE NOW IF NO PDIV.\nif (!PDIV) return;\n\n// PUBNUB Flash Socket\ncss( PDIV, { 'position' : 'absolute', 'top' : -SECOND } );\n\nif ('opera' in window || attr( PDIV, 'flash' )) PDIV['innerHTML'] =\n    '<object id=pubnubs data='  + SWF +\n    '><param name=movie value=' + SWF +\n    '><param name=allowscriptaccess value=always></object>';\n\n// Create Interface for Opera Flash\nPUBNUB['rdx'] = function( id, data ) {\n    if (!data) return FDomainRequest[id]['onerror']();\n    FDomainRequest[id]['responseText'] = unescape(data);\n    FDomainRequest[id]['onload']();\n};\n\nfunction FDomainRequest() {\n    if (!pubnubs || !pubnubs['get']) return 0;\n\n    var fdomainrequest = {\n        'id'    : FDomainRequest['id']++,\n        'send'  : function() {},\n        'abort' : function() { fdomainrequest['id'] = {} },\n        'open'  : function( method, url ) {\n            FDomainRequest[fdomainrequest['id']] = fdomainrequest;\n            pubnubs['get']( fdomainrequest['id'], url );\n        }\n    };\n\n    return fdomainrequest;\n}\nFDomainRequest['id'] = SECOND;\n\n})();\n(function(){\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET INTERFACE\n// ---------------------------------------------------------------------------\nvar WS = PUBNUB['ws'] = function( url, protocols ) {\n    if (!(this instanceof WS)) return new WS( url, protocols );\n\n    var self     = this\n    ,   url      = self.url      = url || ''\n    ,   protocol = self.protocol = protocols || 'Sec-WebSocket-Protocol'\n    ,   bits     = url.split('/')\n    ,   setup    = {\n         'ssl'           : bits[0] === 'wss:'\n        ,'origin'        : bits[2]\n        ,'publish_key'   : bits[3]\n        ,'subscribe_key' : bits[4]\n        ,'channel'       : bits[5]\n    };\n\n    // READY STATES\n    self['CONNECTING'] = 0; // The connection is not yet open.\n    self['OPEN']       = 1; // The connection is open and ready to communicate.\n    self['CLOSING']    = 2; // The connection is in the process of closing.\n    self['CLOSED']     = 3; // The connection is closed or couldn't be opened.\n\n    // CLOSE STATES\n    self['CLOSE_NORMAL']         = 1000; // Normal Intended Close; completed.\n    self['CLOSE_GOING_AWAY']     = 1001; // Closed Unexpecttedly.\n    self['CLOSE_PROTOCOL_ERROR'] = 1002; // Server: Not Supported.\n    self['CLOSE_UNSUPPORTED']    = 1003; // Server: Unsupported Protocol.\n    self['CLOSE_TOO_LARGE']      = 1004; // Server: Too Much Data.\n    self['CLOSE_NO_STATUS']      = 1005; // Server: No reason.\n    self['CLOSE_ABNORMAL']       = 1006; // Abnormal Disconnect.\n\n    // Events Default\n    self['onclose']   = self['onerror'] =\n    self['onmessage'] = self['onopen']  =\n    self['onsend']    =  function(){};\n\n    // Attributes\n    self['binaryType']     = '';\n    self['extensions']     = '';\n    self['bufferedAmount'] = 0;\n    self['trasnmitting']   = false;\n    self['buffer']         = [];\n    self['readyState']     = self['CONNECTING'];\n\n    // Close if no setup.\n    if (!url) {\n        self['readyState'] = self['CLOSED'];\n        self['onclose']({\n            'code'     : self['CLOSE_ABNORMAL'],\n            'reason'   : 'Missing URL',\n            'wasClean' : true\n        });\n        return self;\n    }\n\n    // PubNub WebSocket Emulation\n    self.pubnub       = PUBNUB['init'](setup);\n    self.pubnub.setup = setup;\n    self.setup        = setup;\n\n    self.pubnub['subscribe']({\n        'restore'    : false,\n        'channel'    : setup['channel'],\n        'disconnect' : self['onerror'],\n        'reconnect'  : self['onopen'],\n        'error'      : function() {\n            self['onclose']({\n                'code'     : self['CLOSE_ABNORMAL'],\n                'reason'   : 'Missing URL',\n                'wasClean' : false\n            });\n        },\n        'callback'   : function(message) {\n            self['onmessage']({ 'data' : message });\n        },\n        'connect'    : function() {\n            self['readyState'] = self['OPEN'];\n            self['onopen']();\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET SEND\n// ---------------------------------------------------------------------------\nWS.prototype.send = function(data) {\n    var self = this;\n    self.pubnub['publish']({\n        'channel'  : self.pubnub.setup['channel'],\n        'message'  : data,\n        'callback' : function(response) {\n            self['onsend']({ 'data' : response });\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET CLOSE\n// ---------------------------------------------------------------------------\nWS.prototype.close = function() {\n    var self = this;\n    self.pubnub['unsubscribe']({ 'channel' : self.pubnub.setup['channel'] });\n    self['readyState'] = self['CLOSED'];\n    self['onclose']({});\n};\n\n})();\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\nvar CryptoJS=CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&&c.mixIn(a);c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},\nr=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((b+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<\n32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-8*(b%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,\n2),16)<<24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-8*(b%4)&255));return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(a.charCodeAt(b)&255)<<24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}},\nu=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this);\na._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a,\nd)).finalize(c)}}});var t=f.algo={};return f}(Math);\n\n// SHA256\n(function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64>n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t<=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&&(8>n&&(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64>p;p++){if(16>p)a[p]=\nc[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k<<25|k>>>7)^(k<<14|k>>>18)^k>>>3)+a[p-7]+((l<<15|l>>>17)^(l<<13|l>>>19)^l>>>10)+a[p-16]}k=q+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&m^~h&n)+r[p]+a[p];l=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&g^f&g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;\nd[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math);\n\n// HMAC SHA256\n(function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;\"string\"==typeof g&&(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes>m&&(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j<h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g=\nthis._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})();\n\n// Base64\n(function(){var u=CryptoJS,p=u.lib.WordArray;u.enc.Base64={stringify:function(d){var l=d.words,p=d.sigBytes,t=this._map;d.clamp();d=[];for(var r=0;r<p;r+=3)for(var w=(l[r>>>2]>>>24-8*(r%4)&255)<<16|(l[r+1>>>2]>>>24-8*((r+1)%4)&255)<<8|l[r+2>>>2]>>>24-8*((r+2)%4)&255,v=0;4>v&&r+0.75*v<p;v++)d.push(t.charAt(w>>>6*(3-v)&63));if(l=t.charAt(64))for(;d.length%4;)d.push(l);return d.join(\"\")},parse:function(d){var l=d.length,s=this._map,t=s.charAt(64);t&&(t=d.indexOf(t),-1!=t&&(l=t));for(var t=[],r=0,w=0;w<\nl;w++)if(w%4){var v=s.indexOf(d.charAt(w-1))<<2*(w%4),b=s.indexOf(d.charAt(w))>>>6-2*(w%4);t[r>>>2]|=(v|b)<<24-8*(r%4);r++}return p.create(t,r)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}})();\n\n// BlockCipher\n(function(u){function p(b,n,a,c,e,j,k){b=b+(n&a|~n&c)+e+k;return(b<<j|b>>>32-j)+n}function d(b,n,a,c,e,j,k){b=b+(n&c|a&~c)+e+k;return(b<<j|b>>>32-j)+n}function l(b,n,a,c,e,j,k){b=b+(n^a^c)+e+k;return(b<<j|b>>>32-j)+n}function s(b,n,a,c,e,j,k){b=b+(a^(n|~c))+e+k;return(b<<j|b>>>32-j)+n}for(var t=CryptoJS,r=t.lib,w=r.WordArray,v=r.Hasher,r=t.algo,b=[],x=0;64>x;x++)b[x]=4294967296*u.abs(u.sin(x+1))|0;r=r.MD5=v.extend({_doReset:function(){this._hash=new w.init([1732584193,4023233417,2562383102,271733878])},\n_doProcessBlock:function(q,n){for(var a=0;16>a;a++){var c=n+a,e=q[c];q[c]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360}var a=this._hash.words,c=q[n+0],e=q[n+1],j=q[n+2],k=q[n+3],z=q[n+4],r=q[n+5],t=q[n+6],w=q[n+7],v=q[n+8],A=q[n+9],B=q[n+10],C=q[n+11],u=q[n+12],D=q[n+13],E=q[n+14],x=q[n+15],f=a[0],m=a[1],g=a[2],h=a[3],f=p(f,m,g,h,c,7,b[0]),h=p(h,f,m,g,e,12,b[1]),g=p(g,h,f,m,j,17,b[2]),m=p(m,g,h,f,k,22,b[3]),f=p(f,m,g,h,z,7,b[4]),h=p(h,f,m,g,r,12,b[5]),g=p(g,h,f,m,t,17,b[6]),m=p(m,g,h,f,w,22,b[7]),\nf=p(f,m,g,h,v,7,b[8]),h=p(h,f,m,g,A,12,b[9]),g=p(g,h,f,m,B,17,b[10]),m=p(m,g,h,f,C,22,b[11]),f=p(f,m,g,h,u,7,b[12]),h=p(h,f,m,g,D,12,b[13]),g=p(g,h,f,m,E,17,b[14]),m=p(m,g,h,f,x,22,b[15]),f=d(f,m,g,h,e,5,b[16]),h=d(h,f,m,g,t,9,b[17]),g=d(g,h,f,m,C,14,b[18]),m=d(m,g,h,f,c,20,b[19]),f=d(f,m,g,h,r,5,b[20]),h=d(h,f,m,g,B,9,b[21]),g=d(g,h,f,m,x,14,b[22]),m=d(m,g,h,f,z,20,b[23]),f=d(f,m,g,h,A,5,b[24]),h=d(h,f,m,g,E,9,b[25]),g=d(g,h,f,m,k,14,b[26]),m=d(m,g,h,f,v,20,b[27]),f=d(f,m,g,h,D,5,b[28]),h=d(h,f,\nm,g,j,9,b[29]),g=d(g,h,f,m,w,14,b[30]),m=d(m,g,h,f,u,20,b[31]),f=l(f,m,g,h,r,4,b[32]),h=l(h,f,m,g,v,11,b[33]),g=l(g,h,f,m,C,16,b[34]),m=l(m,g,h,f,E,23,b[35]),f=l(f,m,g,h,e,4,b[36]),h=l(h,f,m,g,z,11,b[37]),g=l(g,h,f,m,w,16,b[38]),m=l(m,g,h,f,B,23,b[39]),f=l(f,m,g,h,D,4,b[40]),h=l(h,f,m,g,c,11,b[41]),g=l(g,h,f,m,k,16,b[42]),m=l(m,g,h,f,t,23,b[43]),f=l(f,m,g,h,A,4,b[44]),h=l(h,f,m,g,u,11,b[45]),g=l(g,h,f,m,x,16,b[46]),m=l(m,g,h,f,j,23,b[47]),f=s(f,m,g,h,c,6,b[48]),h=s(h,f,m,g,w,10,b[49]),g=s(g,h,f,m,\nE,15,b[50]),m=s(m,g,h,f,r,21,b[51]),f=s(f,m,g,h,u,6,b[52]),h=s(h,f,m,g,k,10,b[53]),g=s(g,h,f,m,B,15,b[54]),m=s(m,g,h,f,e,21,b[55]),f=s(f,m,g,h,v,6,b[56]),h=s(h,f,m,g,x,10,b[57]),g=s(g,h,f,m,t,15,b[58]),m=s(m,g,h,f,D,21,b[59]),f=s(f,m,g,h,z,6,b[60]),h=s(h,f,m,g,C,10,b[61]),g=s(g,h,f,m,j,15,b[62]),m=s(m,g,h,f,A,21,b[63]);a[0]=a[0]+f|0;a[1]=a[1]+m|0;a[2]=a[2]+g|0;a[3]=a[3]+h|0},_doFinalize:function(){var b=this._data,n=b.words,a=8*this._nDataBytes,c=8*b.sigBytes;n[c>>>5]|=128<<24-c%32;var e=u.floor(a/\n4294967296);n[(c+64>>>9<<4)+15]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360;n[(c+64>>>9<<4)+14]=(a<<8|a>>>24)&16711935|(a<<24|a>>>8)&4278255360;b.sigBytes=4*(n.length+1);this._process();b=this._hash;n=b.words;for(a=0;4>a;a++)c=n[a],n[a]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;return b},clone:function(){var b=v.clone.call(this);b._hash=this._hash.clone();return b}});t.MD5=v._createHelper(r);t.HmacMD5=v._createHmacHelper(r)})(Math);\n(function(){var u=CryptoJS,p=u.lib,d=p.Base,l=p.WordArray,p=u.algo,s=p.EvpKDF=d.extend({cfg:d.extend({keySize:4,hasher:p.MD5,iterations:1}),init:function(d){this.cfg=this.cfg.extend(d)},compute:function(d,r){for(var p=this.cfg,s=p.hasher.create(),b=l.create(),u=b.words,q=p.keySize,p=p.iterations;u.length<q;){n&&s.update(n);var n=s.update(d).finalize(r);s.reset();for(var a=1;a<p;a++)n=s.finalize(n),s.reset();b.concat(n)}b.sigBytes=4*q;return b}});u.EvpKDF=function(d,l,p){return s.create(p).compute(d,\nl)}})();\n\n// Cipher\nCryptoJS.lib.Cipher||function(u){var p=CryptoJS,d=p.lib,l=d.Base,s=d.WordArray,t=d.BufferedBlockAlgorithm,r=p.enc.Base64,w=p.algo.EvpKDF,v=d.Cipher=t.extend({cfg:l.extend(),createEncryptor:function(e,a){return this.create(this._ENC_XFORM_MODE,e,a)},createDecryptor:function(e,a){return this.create(this._DEC_XFORM_MODE,e,a)},init:function(e,a,b){this.cfg=this.cfg.extend(b);this._xformMode=e;this._key=a;this.reset()},reset:function(){t.reset.call(this);this._doReset()},process:function(e){this._append(e);return this._process()},\nfinalize:function(e){e&&this._append(e);return this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(e){return{encrypt:function(b,k,d){return(\"string\"==typeof k?c:a).encrypt(e,b,k,d)},decrypt:function(b,k,d){return(\"string\"==typeof k?c:a).decrypt(e,b,k,d)}}}});d.StreamCipher=v.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var b=p.mode={},x=function(e,a,b){var c=this._iv;c?this._iv=u:c=this._prevBlock;for(var d=0;d<b;d++)e[a+d]^=\nc[d]},q=(d.BlockCipherMode=l.extend({createEncryptor:function(e,a){return this.Encryptor.create(e,a)},createDecryptor:function(e,a){return this.Decryptor.create(e,a)},init:function(e,a){this._cipher=e;this._iv=a}})).extend();q.Encryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize;x.call(this,e,a,c);b.encryptBlock(e,a);this._prevBlock=e.slice(a,a+c)}});q.Decryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize,d=e.slice(a,a+c);b.decryptBlock(e,a);x.call(this,\ne,a,c);this._prevBlock=d}});b=b.CBC=q;q=(p.pad={}).Pkcs7={pad:function(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,l=[],n=0;n<c;n+=4)l.push(d);c=s.create(l,c);a.concat(c)},unpad:function(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255}};d.BlockCipher=v.extend({cfg:v.cfg.extend({mode:b,padding:q}),reset:function(){v.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;this._mode=c.call(a,\nthis,b&&b.words)},_doProcessBlock:function(a,b){this._mode.processBlock(a,b)},_doFinalize:function(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0)}else b=this._process(!0),a.unpad(b);return b},blockSize:4});var n=d.CipherParams=l.extend({init:function(a){this.mixIn(a)},toString:function(a){return(a||this.formatter).stringify(this)}}),b=(p.format={}).OpenSSL={stringify:function(a){var b=a.ciphertext;a=a.salt;return(a?s.create([1398893684,\n1701076831]).concat(a).concat(b):b).toString(r)},parse:function(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=s.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16}return n.create({ciphertext:a,salt:c})}},a=d.SerializableCipher=l.extend({cfg:l.extend({format:b}),encrypt:function(a,b,c,d){d=this.cfg.extend(d);var l=a.createEncryptor(c,d);b=l.finalize(b);l=l.cfg;return n.create({ciphertext:b,key:c,iv:l.iv,algorithm:a,mode:l.mode,padding:l.padding,blockSize:a.blockSize,formatter:d.format})},\ndecrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext)},_parse:function(a,b){return\"string\"==typeof a?b.parse(a,this):a}}),p=(p.kdf={}).OpenSSL={execute:function(a,b,c,d){d||(d=s.random(8));a=w.create({keySize:b+c}).compute(a,d);c=s.create(a.words.slice(b),4*c);a.sigBytes=4*b;return n.create({key:a,iv:c,salt:d})}},c=d.PasswordBasedCipher=a.extend({cfg:a.cfg.extend({kdf:p}),encrypt:function(b,c,d,l){l=this.cfg.extend(l);d=l.kdf.execute(d,\nb.keySize,b.ivSize);l.iv=d.iv;b=a.encrypt.call(this,b,c,d.key,l);b.mixIn(d);return b},decrypt:function(b,c,d,l){l=this.cfg.extend(l);c=this._parse(c,l.format);d=l.kdf.execute(d,b.keySize,b.ivSize,c.salt);l.iv=d.iv;return a.decrypt.call(this,b,c,d.key,l)}})}();\n\n// AES\n(function(){for(var u=CryptoJS,p=u.lib.BlockCipher,d=u.algo,l=[],s=[],t=[],r=[],w=[],v=[],b=[],x=[],q=[],n=[],a=[],c=0;256>c;c++)a[c]=128>c?c<<1:c<<1^283;for(var e=0,j=0,c=0;256>c;c++){var k=j^j<<1^j<<2^j<<3^j<<4,k=k>>>8^k&255^99;l[e]=k;s[k]=e;var z=a[e],F=a[z],G=a[F],y=257*a[k]^16843008*k;t[e]=y<<24|y>>>8;r[e]=y<<16|y>>>16;w[e]=y<<8|y>>>24;v[e]=y;y=16843009*G^65537*F^257*z^16843008*e;b[k]=y<<24|y>>>8;x[k]=y<<16|y>>>16;q[k]=y<<8|y>>>24;n[k]=y;e?(e=z^a[a[a[G^z]]],j^=a[a[j]]):e=j=1}var H=[0,1,2,4,8,\n16,32,64,128,27,54],d=d.AES=p.extend({_doReset:function(){for(var a=this._key,c=a.words,d=a.sigBytes/4,a=4*((this._nRounds=d+6)+1),e=this._keySchedule=[],j=0;j<a;j++)if(j<d)e[j]=c[j];else{var k=e[j-1];j%d?6<d&&4==j%d&&(k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255]):(k=k<<8|k>>>24,k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255],k^=H[j/d|0]<<24);e[j]=e[j-d]^k}c=this._invKeySchedule=[];for(d=0;d<a;d++)j=a-d,k=d%4?e[j]:e[j-4],c[d]=4>d||4>=j?k:b[l[k>>>24]]^x[l[k>>>16&255]]^q[l[k>>>\n8&255]]^n[l[k&255]]},encryptBlock:function(a,b){this._doCryptBlock(a,b,this._keySchedule,t,r,w,v,l)},decryptBlock:function(a,c){var d=a[c+1];a[c+1]=a[c+3];a[c+3]=d;this._doCryptBlock(a,c,this._invKeySchedule,b,x,q,n,s);d=a[c+1];a[c+1]=a[c+3];a[c+3]=d},_doCryptBlock:function(a,b,c,d,e,j,l,f){for(var m=this._nRounds,g=a[b]^c[0],h=a[b+1]^c[1],k=a[b+2]^c[2],n=a[b+3]^c[3],p=4,r=1;r<m;r++)var q=d[g>>>24]^e[h>>>16&255]^j[k>>>8&255]^l[n&255]^c[p++],s=d[h>>>24]^e[k>>>16&255]^j[n>>>8&255]^l[g&255]^c[p++],t=\nd[k>>>24]^e[n>>>16&255]^j[g>>>8&255]^l[h&255]^c[p++],n=d[n>>>24]^e[g>>>16&255]^j[h>>>8&255]^l[k&255]^c[p++],g=q,h=s,k=t;q=(f[g>>>24]<<24|f[h>>>16&255]<<16|f[k>>>8&255]<<8|f[n&255])^c[p++];s=(f[h>>>24]<<24|f[k>>>16&255]<<16|f[n>>>8&255]<<8|f[g&255])^c[p++];t=(f[k>>>24]<<24|f[n>>>16&255]<<16|f[g>>>8&255]<<8|f[h&255])^c[p++];n=(f[n>>>24]<<24|f[g>>>16&255]<<16|f[h>>>8&255]<<8|f[k&255])^c[p++];a[b]=q;a[b+1]=s;a[b+2]=t;a[b+3]=n},keySize:8});u.AES=p._createHelper(d)})();\n\n// Mode ECB\nCryptoJS.mode.ECB = (function () {\n    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n    ECB.Encryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.encryptBlock(words, offset);\n        }\n    });\n\n    ECB.Decryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.decryptBlock(words, offset);\n        }\n    });\n\n    return ECB;\n}());// Moved to hmac-sha-256.js\n//# sourceMappingURL=ringcentral-bundle.js.map","module RingCentral.sdk.core.utils {\n\n    var hasOwn = Object.prototype.hasOwnProperty,\n        toString = Object.prototype.toString,\n        rdigit = /\\d/,\n        class2type = {};\n\n    // Populate the class2type map\n    'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach((name) => {\n        class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n    });\n\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    export function extend(targetObject:any, sourceObject:any, ...args) {\n\n        var options, name, src, copy, copyIsArray, clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments.length,\n            deep = false;\n\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !isFunction(target)) {\n            target = {};\n        }\n\n        for (; i < length; i++) {\n\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n\n                // Extend the base object\n                for (name in options) {\n\n                    src = target[name];\n                    copy = options[name];\n\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && isArray(src) ? src : [];\n                        } else {\n                            clone = src && isPlainObject(src) ? src : {};\n                        }\n\n                        // Never move original objects, clone them\n                        target[name] = extend(deep, clone, copy);\n\n                        // Don't bring in undefined values\n                    } else if (copy !== undefined) {\n\n                        target[name] = copy;\n\n                    }\n                }\n            }\n        }\n\n        // Return the modified object\n        return target;\n\n    }\n\n    export function forEach(object, cb) {\n\n        for (var i in object) {\n\n            if (!object.hasOwnProperty(i)) continue;\n\n            var res = cb(object[i], i);\n\n            if (res === false) break;\n\n        }\n\n    }\n\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    export function queryStringify(parameters) {\n\n        var array = [];\n\n        forEach(parameters, (v, i) => {\n\n            if (isArray(v)) {\n                v.forEach((vv) => {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            } else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n\n        });\n\n        return array.join('&');\n\n    }\n\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    export function parseQueryString(queryString:string):any {\n\n        var argsParsed = {},\n            self = this;\n\n        queryString.split('&').forEach((arg) => {\n\n            arg = decodeURIComponent(arg);\n\n            if (arg.indexOf('=') == -1) {\n\n                argsParsed[arg.trim()] = true;\n\n            } else {\n\n                var pair = arg.split('='),\n                    key = pair[0].trim(),\n                    value = pair[1].trim();\n\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key])) argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                } else {\n                    argsParsed[key] = value;\n                }\n\n            }\n\n        });\n\n        return argsParsed;\n\n    }\n\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    export function isEmail(v:string, multiple:boolean):boolean {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        } else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n\n    }\n\n    export function isPhoneNumber(v:string):boolean {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    }\n\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    export function argumentsToArray(args:any) {\n        return Array.prototype.slice.call(args || [], 0);\n    }\n\n    export function isDate(obj:any):boolean {\n        return type(obj) === \"date\";\n    }\n\n    export function isFunction(obj:any):boolean {\n        return type(obj) === \"function\";\n    }\n\n    export function isArray(obj:any):boolean {\n        return Array.isArray ? Array.isArray(obj) : type(obj) === \"array\";\n    }\n\n    // A crude way of determining if an object is a window\n    export function isWindow(obj:any):boolean {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    }\n\n    export function isNan(obj:any):boolean {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    }\n\n    export function type(obj:any):string {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    }\n\n    export function isPlainObject(obj:any):boolean {\n\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || type(obj) !== \"object\" || obj.nodeType || isWindow(obj)) {\n            return false;\n        }\n\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n\n        var key;\n        for (key in obj) {}\n\n        return key === undefined || hasOwn.call(obj, key);\n\n    }\n\n    export function getProperty(obj:any, property:string):any {\n\n        return property\n            .split(/[.[\\]]/)\n            .reduce((res, part) => {\n                if (!res) return undefined;\n                return part ? res[part] : res;\n            }, obj);\n\n    }\n\n    export function poll(fn, interval?:number, timeout?:any):any { //NodeJS.Timer|number\n\n        stopPolling(timeout);\n\n        interval = interval || 1000;\n\n        var next = (delay?:number):any => {\n\n            delay = delay || interval;\n\n            interval = delay;\n\n            return setTimeout(() => {\n\n                fn(next, delay);\n\n            }, delay);\n\n        };\n\n        return next();\n\n    }\n\n    export function stopPolling(timeout) {\n        if (timeout) clearTimeout(timeout);\n    }\n\n    export function parseString(s:any):string {\n        return s ? s.toString() : '';\n    }\n\n    export function parseNumber(n:any):number {\n        if (!n) return 0;\n        n = parseFloat(n);\n        return isNan(n) ? 0 : n;\n    }\n\n    export function isNodeJS():boolean {\n        return (typeof process !== 'undefined');\n    }\n\n    export function isBrowser():boolean {\n        return (typeof window !== 'undefined');\n    }\n\n}","/// <reference path=\"./Log.ts\" />\n/// <reference path=\"./Utils.ts\" />\n\nmodule RingCentral.sdk.core {\n\n    /**\n     * @see https://github.com/Microsoft/TypeScript/issues/275\n     */\n    export class Observable<T extends Observable<any>> {\n\n        private _listeners:any;\n\n        constructor() {\n            if (!(this instanceof Observable)) throw new Error('Observable(): New operator was omitted');\n            this.off();\n        }\n\n        hasListeners(event) {\n            return (event in this._listeners);\n        }\n\n        on(events:any, callback:(...args)=>any):T {\n\n            if (typeof events == 'string') events = [events];\n            if (!events) throw new Error('No events to subscribe to');\n            if (typeof callback !== 'function') throw new Error('Callback must be a function');\n\n            events.forEach((event:string) => {\n\n                if (!this.hasListeners(event)) this._listeners[event] = [];\n\n                this._listeners[event].push(callback);\n\n            });\n\n            return <any>this;\n\n        }\n\n        emit(event:string, ...args):any {\n\n            var result = null;\n\n            if (!this.hasListeners(event)) return null;\n\n            this._listeners[event].some((callback:()=>any) => {\n\n                result = callback.apply(this, args);\n                return (result === false);\n\n            });\n\n            return result;\n\n        }\n\n        off(event?:string, callback?):T {\n\n            if (!event) {\n\n                this._listeners = {};\n\n            } else {\n\n                if (!callback) {\n\n                    delete this._listeners[event];\n\n                } else {\n\n                    if (!this.hasListeners(event)) return <any>this;\n\n                    this._listeners[event].forEach((cb, i) => {\n\n                        if (cb === callback) delete this._listeners[event][i];\n\n                    });\n\n                }\n\n            }\n\n            return <any>this;\n\n        }\n\n        destroy():T {\n            this.off();\n            log.debug('Observable.destroy(): Listeners were destroyed');\n            return <T>this;\n        }\n\n    }\n\n}\n\n\n","/// <reference path=\"./Observable.ts\" />\n\nmodule RingCentral.sdk.core {\n\n    export class PageVisibility extends Observable<PageVisibility> {\n\n        public events = {\n            change: 'change'\n        };\n\n        protected _visible:boolean;\n\n        constructor() {\n\n            super();\n\n            var hidden = \"hidden\",\n                onchange = (evt) => {\n\n                    evt = evt || window.event;\n\n                    var v = 'visible',\n                        h = 'hidden',\n                        evtMap = {\n                            focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n                        };\n\n                    this._visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n\n                    this.emit(this.events.change, this._visible);\n\n                };\n\n            this._visible = true;\n\n            if (typeof document == 'undefined' || typeof window == 'undefined') return;\n\n            // Standards:\n\n            if (hidden in document)\n                document.addEventListener(\"visibilitychange\", onchange);\n            else if ((hidden = \"mozHidden\") in document)\n                document.addEventListener(\"mozvisibilitychange\", onchange);\n            else if ((hidden = \"webkitHidden\") in document)\n                document.addEventListener(\"webkitvisibilitychange\", onchange);\n            else if ((hidden = \"msHidden\") in document)\n                document.addEventListener(\"msvisibilitychange\", onchange);\n            // IE 9 and lower:\n            else if ('onfocusin' in <any>document)\n                (<any>document).onfocusin = (<any>document).onfocusout = onchange;\n            // All others:\n            else\n                window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n\n        }\n\n        visible() {\n            return this._visible;\n        }\n\n    }\n\n}","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n\nmodule RingCentral.sdk.mocks {\n\n    export class Mock {\n\n        protected _method:string;\n        protected _path:string;\n        protected _delay:number;\n        protected _json:any;\n        protected _status:number;\n        protected _statusText:string;\n\n        constructor(method:string, path:string, json?:any, status?:number, statusText?:string, delay?:number) {\n            this._method = method.toUpperCase();\n            this._path = path;\n            this._json = json || {};\n            this._delay = delay || 10;\n            this._status = status || 200;\n            this._statusText = statusText || 'OK';\n        }\n\n        path() {\n            return this._path;\n        }\n\n        method() {\n            return this._method;\n        }\n\n        test(request:Request) {\n\n            return request.url.indexOf(this._path) > -1 &&\n                   request.method.toUpperCase() == this._method;\n\n        }\n\n        getResponse(request:Request):Response|Promise<Response> {\n\n            return new externals._Promise((resolve, reject) => {\n\n                setTimeout(() => {\n\n                    resolve(this.createResponse(this._json));\n\n                }, this._delay);\n\n            });\n\n        }\n\n        createResponse(json?:any, init?:ResponseInit|any) {\n\n            init = init || {};\n\n            init.status = init.status || this._status;\n            init.statusText = init.statusText || this._statusText;\n\n            var str = JSON.stringify(json),\n                res = http.Client.createResponse(str, init);\n\n            res.headers.set(http.ApiResponse.contentType, http.ApiResponse.jsonContentType);\n\n            return res;\n\n        }\n\n    }\n\n}","/// <reference path=\"./Mock.ts\" />\n\nmodule RingCentral.sdk.mocks {\n\n    export class Registry {\n\n        protected _mocks:Mock[];\n\n        constructor() {\n            this._mocks = [];\n        }\n\n        add(mock:Mock) {\n            this._mocks.push(mock);\n            return this;\n        }\n\n        clear() {\n            this._mocks = [];\n            return this;\n        }\n\n        find(request:Request):Mock {\n\n            //console.log('Registry is looking for', request);\n\n            var mock = this._mocks.shift();\n\n            if (!mock) throw new Error('No mock in registry for request ' + request.method + ' ' + request.url);\n\n            if (!mock.test(request)) throw new Error('Wrong request ' + request.method + ' ' + request.url +\n                                                     ' for expected mock ' + mock.method() + ' ' + mock.path());\n\n            return mock;\n\n        }\n\n        apiCall(method:string, path:string, response:any, status?:number, statusText?:string) {\n\n            this.add(new Mock(method, path, response, status, statusText));\n\n            return this;\n\n        }\n\n        authentication() {\n\n            this.apiCall('POST', '/restapi/oauth/token', {\n                'access_token': 'ACCESS_TOKEN',\n                'token_type': 'bearer',\n                'expires_in': 3600,\n                'refresh_token': 'REFRESH_TOKEN',\n                'refresh_token_expires_in': 60480,\n                'scope': 'SMS RCM Foo Boo',\n                'expireTime': new Date().getTime() + 3600000\n            });\n\n            return this;\n\n        }\n\n        logout() {\n\n            this.apiCall('POST', '/restapi/oauth/revoke', {});\n\n            return this;\n\n        }\n\n        presenceLoad(id) {\n\n            this.apiCall('GET', '/restapi/v1.0/account/~/extension/' + id + '/presence', {\n                \"uri\": \"https://platform.ringcentral.com/restapi/v1.0/account/123/extension/\" + id + \"/presence\",\n                \"extension\": {\n                    \"uri\": \"https://platform.ringcentral.com/restapi/v1.0/account/123/extension/\" + id,\n                    \"id\": id,\n                    \"extensionNumber\": \"101\"\n                },\n                \"activeCalls\": [],\n                \"presenceStatus\": \"Available\",\n                \"telephonyStatus\": \"Ringing\",\n                \"userStatus\": \"Available\",\n                \"dndStatus\": \"TakeAllCalls\",\n                \"extensionId\": id\n            });\n\n            return this;\n\n        }\n\n        subscribeGeneric(expiresIn?:number) {\n\n            expiresIn = expiresIn || 15 * 60 * 60;\n\n            var date = new Date();\n\n            this.apiCall('POST', '/restapi/v1.0/subscription', {\n                'eventFilters': [\n                    '/restapi/v1.0/account/~/extension/~/presence'\n                ],\n                'expirationTime': new Date(date.getTime() + (expiresIn * 1000)).toISOString(),\n                'expiresIn': expiresIn,\n                'deliveryMode': {\n                    'transportType': 'PubNub',\n                    'encryption': false,\n                    'address': '123_foo',\n                    'subscriberKey': 'sub-c-foo',\n                    'secretKey': 'sec-c-bar'\n                },\n                'id': 'foo-bar-baz',\n                'creationTime': date.toISOString(),\n                'status': 'Active',\n                'uri': 'https://platform.ringcentral.com/restapi/v1.0/subscription/foo-bar-baz'\n            });\n\n            return this;\n\n        }\n\n        subscribeOnPresence(id?:string, detailed?:boolean) {\n\n            id = id || '1';\n\n            var date = new Date();\n\n            this.apiCall('POST', '/restapi/v1.0/subscription', {\n                'eventFilters': ['/restapi/v1.0/account/~/extension/' + id + '/presence' + (detailed ? '?detailedTelephonyState=true' : '')],\n                'expirationTime': new Date(date.getTime() + (15 * 60 * 60 * 1000)).toISOString(),\n                'deliveryMode': {\n                    'transportType': 'PubNub',\n                    'encryption': true,\n                    'address': '123_foo',\n                    'subscriberKey': 'sub-c-foo',\n                    'secretKey': 'sec-c-bar',\n                    'encryptionAlgorithm': 'AES',\n                    'encryptionKey': 'VQwb6EVNcQPBhE/JgFZ2zw=='\n                },\n                'creationTime': date.toISOString(),\n                'id': 'foo-bar-baz',\n                'status': 'Active',\n                'uri': 'https://platform.ringcentral.com/restapi/v1.0/subscription/foo-bar-baz'\n            });\n\n            return this;\n\n        }\n\n        tokenRefresh(failure?:boolean) {\n\n            if (!failure) {\n\n                this.apiCall('POST', '/restapi/oauth/token', {\n                    'access_token': 'ACCESS_TOKEN_FROM_REFRESH',\n                    'token_type': 'bearer',\n                    'expires_in': 3600,\n                    'refresh_token': 'REFRESH_TOKEN_FROM_REFRESH',\n                    'refresh_token_expires_in': 60480,\n                    'scope': 'SMS RCM Foo Boo'\n                });\n\n            } else {\n\n                this.apiCall('POST', '/restapi/oauth/token', {\n                    'message': 'Wrong token',\n                    'error_description': 'Wrong token',\n                    'description': 'Wrong token'\n                }, 400);\n\n            }\n\n            return this;\n\n        }\n\n    }\n\n}","/// <reference path=\"../externals.d.ts\" />\n\nmodule RingCentral.sdk.externals {\n\n    export var _Promise:typeof Promise;\n    export var _fetch:Fetch;\n    export var _Response:typeof Response;\n    export var _Request:typeof Request;\n    export var _Headers:typeof Headers;\n    export var _PUBNUB:PUBNUB;\n\n    export function get() {\n\n        var root = Function('return this')();\n\n        if (!_PUBNUB) _PUBNUB = root.PUBNUB;\n        if (!_Promise) _Promise = root.Promise;\n        if (!_fetch) _fetch = root.fetch;\n        if (!_Headers) _Headers = root.Headers;\n        if (!_Request) _Request = root.Request;\n        if (!_Response) _Response = root.Response;\n\n        return externals;\n\n    }\n\n}\n\n","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n\nmodule RingCentral.sdk.http {\n\n    /**\n     * @TODO Bring back tests\n     */\n    export class ApiResponse {\n\n        static contentType = 'Content-Type';\n        static jsonContentType = 'application/json';\n        static multipartContentType = 'multipart/mixed';\n        static urlencodedContentType = 'application/x-www-form-urlencoded';\n        static headerSeparator = ':';\n        static bodySeparator = '\\n\\n';\n        static boundarySeparator = '--';\n\n        protected _json:any;\n        protected _text:string;\n        protected _request:Request;\n        protected _response:Response;\n        protected _multipartTransactions:ApiResponse[];\n\n        constructor(request?:Request, response?:Response, responseText?:string) {\n\n            this._text = responseText;\n            this._request = request;\n            this._response = response;\n            this._json = null;\n            this._multipartTransactions = null;\n\n        }\n\n        response() {\n            return this._response;\n        }\n\n        request() {\n            return this._request;\n        }\n\n        ok() {\n            return this._response && this._response.ok;\n        }\n\n        text() {\n            return this._text;\n        }\n\n        json() {\n\n            if (!this._isJson()) throw new Error('Response is not JSON');\n\n            if (!this._json) {\n                this._json = this._text ? JSON.parse(this._text) : null;\n            }\n\n            return this._json;\n\n        }\n\n        error(skipOKCheck?:boolean) {\n\n            if (this.ok() && !skipOKCheck) return null;\n\n            var message = (this._response && this._response.status ? this._response.status + ' ' : '') +\n                          (this._response && this._response.statusText ? this._response.statusText : '');\n\n            try {\n\n                var json = this.json();\n\n                if (json.message) message = json.message;\n                if (json.error_description) message = json.error_description;\n                if (json.description) message = json.description;\n\n            } catch (ex) {}\n\n            return message;\n\n        }\n\n        multipart():ApiResponse[] {\n\n            if (!this._isMultipart()) throw new Error('Response is not multipart');\n\n            if (null === this._multipartTransactions) {\n\n                // Step 1. Split multipart response\n\n                if (!this._text) throw new Error('No response body');\n\n                var boundary = this._response.headers.get('Content-Type').match(/boundary=([^;]+)/i)[1];\n\n                if (!boundary) throw new Error('Cannot find boundary');\n\n                var parts = this._text.toString().split(ApiResponse.boundarySeparator + boundary);\n\n                if (parts[0].trim() === '') parts.shift();\n                if (parts[parts.length - 1].trim() == ApiResponse.boundarySeparator) parts.pop();\n\n                if (parts.length < 1) throw new Error('No parts in body');\n\n                // Step 2. Parse status info\n\n                var statusInfo = ApiResponse.create(parts.shift(), this._response.status, this._response.statusText);\n\n                // Step 3. Parse all other parts\n\n                this._multipartTransactions = parts.map((part:string, i) => { //FIXME It will not work since parts contain both headers and body\n\n                    var status = statusInfo.json().response[i].status;\n\n                    return ApiResponse.create(part, status);\n\n                });\n\n            }\n\n            return this._multipartTransactions;\n\n        }\n\n        /**\n         * Short-hand method to get only JSON content of responses\n         */\n        multipartJson():any[] {\n\n            return this.multipart().map((res)=> {\n                return res.json();\n            });\n\n        }\n\n        protected _isContentType(contentType:string):boolean {\n            return this._getContentType().indexOf(contentType) > -1;\n        }\n\n        protected _getContentType():string {\n            return this._response.headers.get(ApiResponse.contentType) || '';\n        }\n\n        protected _isMultipart():boolean {\n            return this._isContentType(ApiResponse.multipartContentType);\n        }\n\n        protected _isUrlEncoded():boolean {\n            return this._isContentType(ApiResponse.urlencodedContentType);\n        }\n\n        protected _isJson():boolean {\n            return this._isContentType(ApiResponse.jsonContentType);\n        }\n\n        /**\n         * Method is used to create Transaction objects from string parts of multipart/mixed response\n         * @param text\n         * @param status\n         * @param statusText\n         * @return {ApiResponse}\n         */\n        static create(text?:string, status?:number, statusText?:string):ApiResponse {\n\n            status = status || 200;\n            statusText = statusText || 'OK';\n\n            text = text.replace(/\\r/g, '');\n\n            var headers = new externals._Headers(),\n                headersAndBody = text.split(ApiResponse.bodySeparator),\n                headersText = (headersAndBody.length > 1) ? headersAndBody.shift() : '';\n\n            text = headersAndBody.join(ApiResponse.bodySeparator);\n\n            (headersText || '')\n                .split('\\n')\n                .forEach((header:string) => {\n\n                    var split = header.trim().split(ApiResponse.headerSeparator),\n                        key = split.shift().trim(),\n                        value = split.join(ApiResponse.headerSeparator).trim();\n\n                    if (key) headers.append(key, value);\n\n                });\n\n            return new ApiResponse(null, Client.createResponse(text, {\n                headers: headers,\n                status: status,\n                statusText: statusText\n            }), text);\n\n        }\n\n    }\n\n}","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../mocks/Registry.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n/// <reference path=\"./ApiResponse.ts\" />\n\nmodule RingCentral.sdk.http {\n\n    var allowedMethods = ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'];\n\n    export class Client extends core.Observable<Client> {\n\n        public events = {\n            beforeRequest: 'beforeRequest', // parameters: ajax\n            requestSuccess: 'requestSuccess', // means that response was successfully fetched from server\n            requestError: 'requestError' // means that request failed completely\n        };\n\n        sendRequest(request:Request):Promise<ApiResponse> {\n\n            var res = new ApiResponse(request); //FIXME Potential leak\n\n            return new externals._Promise((resolve) => {\n\n                //TODO Stop request if listeners return false\n                this.emit(this.events.beforeRequest, res);\n\n                resolve(this._loadResponse(request));\n\n            })\n                .then((response:Response) => {\n\n                    res['_response'] = Client.cloneResponse(response);\n\n                    return response.text();\n\n                })\n                .then((text:string) => {\n\n                    res['_text'] = text;\n\n                    if (!res.ok()) throw Client.makeError(new Error('Response has unsuccessful status'), res);\n\n                    this.emit(this.events.requestSuccess, res);\n\n                    return res;\n\n                })\n                .catch((e:IApiError):any=> {\n\n                    if (!e.apiResponse) {\n                        // we don't pass response since most likely it's parsing caused an error\n                        e = Client.makeError(e, res);\n                    }\n\n                    this.emit(this.events.requestError, e);\n\n                    throw e;\n\n                });\n\n        }\n\n        protected _loadResponse(request:Request):Promise<Response> {\n            return externals._fetch.call(null, request);\n        }\n\n        /**\n         * Wraps the JS Error object with transaction information\n         * @param {Error} e\n         * @param {ApiResponse} apiResponse\n         * @return {IApiError}\n         */\n        static makeError(e:Error, apiResponse?:ApiResponse) {\n\n            var error = <IApiError>e;\n\n            // Wrap only if regular error\n            if (!error.hasOwnProperty('apiResponse') && !error.hasOwnProperty('originalMessage')) {\n\n                error.apiResponse = apiResponse;\n                error.originalMessage = error.message;\n                error.message = (apiResponse && apiResponse.error(true)) || error.originalMessage;\n\n            }\n\n            return error;\n\n        }\n\n        /**\n         * TODO Wait for\n         *   - https://github.com/github/fetch/issues/185\n         *   - https://github.com/bitinn/node-fetch/issues/34\n         * @param {Response} response\n         * @return {Response}\n         */\n        static cloneResponse(response:Response):Response {\n\n            if (core.utils.isFunction(response.clone)) return response.clone();\n\n            var body = '';\n\n            if (response.hasOwnProperty('_bodyInit')) body = response['_bodyInit'];\n            if (response.hasOwnProperty('_bodyText')) body = response['_bodyText'];\n            if (response.hasOwnProperty('_bodyBlob')) body = response['_bodyBlob'].slice();\n            if (response.hasOwnProperty('_bodyFormData')) body = response['_bodyFormData'];\n\n            if (response.hasOwnProperty('_raw')) body = response['_raw'].join('');\n\n            var clone = new externals._Response(body, response);\n\n            if (response.hasOwnProperty('body')) clone['body'] = response['body']; // accessing non-standard properties\n\n            return clone;\n\n        }\n\n        /**\n         * Creates a response\n         * @param stringBody\n         * @param init\n         * @return {Response}\n         */\n        static createResponse(stringBody?:string, init?:ResponseInit):Response {\n\n            init = init || <ResponseInit>{};\n\n            return new externals._Response(stringBody, init);\n\n        }\n\n        static createRequest(input:string|Request, init?:IClientRequestInit) {\n\n            init = init || {};\n\n            var body = init.body;\n\n            // Assign request with empty body, Github's fetch throws errors if it cannot recognize the body type\n            var req = new externals._Request(input, core.utils.extend({}, init, {body: null}));\n\n            if (!req.url) throw new Error('Url is not defined');\n            if (!req.method) req.method = 'GET';\n            if (req.method && allowedMethods.indexOf(req.method) < 0) throw new Error('Method has wrong value: ' + req.method);\n\n            if (!req.headers.has('Accept')) req.headers.set('Accept', 'application/json');\n\n            // Serialize body\n            if (core.utils.isPlainObject(init.body) || !init.body) {\n\n                if (!req.headers.has('Content-Type')) req.headers.set('Content-Type', 'application/json');\n\n                var contentType = req.headers.get('Content-Type');\n\n                if (contentType.indexOf('application/json') > -1) {\n\n                    body = JSON.stringify(init.body);\n\n                } else if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n\n                    body = core.utils.queryStringify(init.body);\n\n                }\n\n            }\n\n            req.credentials = 'include';\n            req.mode = 'cors';\n\n            if (init.query) {\n                req.url = req.url + (req.url.indexOf('?') > -1 ? '&' : '?') + core.utils.queryStringify(init.query);\n            }\n\n            // Create another request with encoded body\n            req = new externals._Request(req.url, core.utils.extend(req, {body: body}));\n\n            // Keep the original body accessible directly (for mocks)\n            req.body = init.body;\n\n            return req;\n\n        }\n\n    }\n\n    export interface IApiError extends Error {\n        stack?:string;\n        originalMessage:string;\n        apiResponse:ApiResponse;\n    }\n\n    export interface IClientRequestInit extends RequestInit {\n        query?: string;\n    }\n\n}","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n\nmodule RingCentral.sdk.platform {\n\n    export class Queue {\n\n        protected _cacheId:string;\n        protected _pollInterval:number;\n        protected _releaseTimeout:number;\n\n        protected _cache:core.Cache;\n        protected _promise:Promise<any>;\n\n        constructor(cache:core.Cache, cacheId:string) {\n\n            this._cache = cache;\n            this._cacheId = cacheId;\n\n            this.setPollInterval(250);\n            this.setReleaseTimeout(5000); // If queue was not released then force it to do so after some timeout\n\n        }\n\n        isPaused() {\n\n            var storage = this._cache,\n                cacheId = this._cacheId,\n                time = storage.getItem(cacheId);\n\n            return !!time && Date.now() - parseInt(time) < this._releaseTimeout;\n        }\n\n        pause() {\n            this._cache.setItem(this._cacheId, Date.now());\n            return this;\n        }\n\n        resume() {\n            this._cache.removeItem(this._cacheId);\n            return this;\n        }\n\n        poll() {\n\n            if (this._promise) return this._promise;\n\n            this._promise = new externals._Promise((resolve, reject) => {\n\n                core.utils.poll((next) => {\n\n                    if (this.isPaused()) return next();\n\n                    this._promise = null;\n\n                    this.resume(); // this is actually not needed but why not\n\n                    resolve(null);\n\n                }, this._pollInterval);\n\n            });\n\n            return this._promise;\n\n        }\n\n        releaseTimeout() {\n            return this._releaseTimeout;\n        }\n\n        pollInterval() {\n            return this._pollInterval;\n        }\n\n        setReleaseTimeout(releaseTimeout:number) {\n            this._releaseTimeout = releaseTimeout;\n            return this;\n        }\n\n        setPollInterval(pollInterval:number) {\n            this._pollInterval = pollInterval;\n            return this;\n        }\n\n    }\n\n}","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../core/Cache.ts\" />\n/// <reference path=\"../core/Log\" />\n/// <reference path=\"../http/Client.ts\" />\n/// <reference path=\"../http/ApiResponse.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n/// <reference path=\"./Queue.ts\" />\n\nmodule RingCentral.sdk.platform {\n\n    export class Platform extends core.Observable<Platform> {\n\n        protected static _urlPrefix:string = '/restapi';\n        protected static _apiVersion:string = 'v1.0';\n        protected static _accessTokenTtl:number = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        protected static _refreshTokenTtl:number = 10 * 60 * 60; // 10 hours\n        protected static _refreshTokenTtlRemember:number = 7 * 24 * 60 * 60; // 1 week\n        protected static _tokenEndpoint:string = '/restapi/oauth/token';\n        protected static _revokeEndpoint:string = '/restapi/oauth/revoke';\n        protected static _authorizeEndpoint:string = '/restapi/oauth/authorize';\n\n        protected _server:string;\n        protected _appKey:string;\n        protected _appSecret:string;\n\n        protected _refreshDelayMs:number = 100;\n        protected _clearCacheOnRefreshError:boolean = true;\n        protected _cacheId:string = 'platform';\n\n        protected _queue:Queue;\n        protected _cache:core.Cache;\n        protected _client:http.Client;\n        protected _auth:Auth;\n\n        public events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n\n        constructor(client:http.Client,\n                    cache:core.Cache,\n                    queue:Queue,\n                    server:string,\n                    appKey:string,\n                    appSecret:string) {\n\n            super();\n\n            this._server = server;\n            this._appKey = appKey;\n            this._appSecret = appSecret;\n\n            this._cache = cache;\n            this._client = client;\n            this._queue = new Queue(this._cache, this._cacheId + '-refresh');\n            this._auth = new Auth(this._cache, this._cacheId);\n\n        }\n\n        auth():Auth {\n            return this._auth;\n        }\n\n        createUrl(path, options?:{addMethod?: string; addToken?: boolean; addServer?: boolean}):string {\n\n            path = path || '';\n            options = options || {};\n\n            var builtUrl = '',\n                hasHttp = path.indexOf('http://') != -1 || path.indexOf('https://') != -1;\n\n            if (options.addServer && !hasHttp) builtUrl += this._server;\n\n            if (path.indexOf(Platform._urlPrefix) == -1 && !hasHttp) builtUrl += Platform._urlPrefix + '/' + Platform._apiVersion;\n\n            builtUrl += path;\n\n            if (options.addMethod || options.addToken) builtUrl += (path.indexOf('?') > -1 ? '&' : '?');\n\n            if (options.addMethod) builtUrl += '_method=' + options.addMethod;\n            if (options.addToken) builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this._auth.accessToken();\n\n            return builtUrl;\n\n        }\n\n        authUrl(options:{\n            redirectUri:string;\n            display?:string; // page|popup|touch|mobile, default 'page'\n            prompt?:string; // sso|login|consent, default is 'login sso consent'\n            state?:string;\n            brandId?:string|number;\n        }) {\n\n            options = options || <any>{};\n\n            return this.createUrl(Platform._authorizeEndpoint + '?' + core.utils.queryStringify({\n                    'response_type': 'code',\n                    'redirect_uri': options.redirectUri || '',\n                    'client_id': this._appKey,\n                    'state': options.state || '',\n                    'brand_id': options.brandId || '',\n                    'display': options.display || '',\n                    'prompt': options.prompt || ''\n                }), {addServer: true})\n\n        }\n\n        parseAuthRedirectUrl(url:string) {\n\n            var qs = core.utils.parseQueryString(url.split('?').reverse()[0]),\n                error = qs.error_description || qs.error;\n\n            if (error) {\n                var e = <IAuthError> new Error(error);\n                e.error = qs.error;\n                throw e;\n            }\n\n            return qs;\n\n        }\n\n        loggedIn():Promise<boolean> {\n\n            return this._ensureAuthentication()\n                .then(()=> {\n                    return true;\n                })\n                .catch(()=> {\n                    return false;\n                });\n\n        }\n\n        login(options?:{\n            username?:string;\n            password?: string;\n            extension?:string;\n            endpointId?:string;\n            code?:string;\n            redirectUri?:string;\n            clientId?:string;\n            remember?:boolean\n        }):Promise<http.ApiResponse> {\n\n            options = options || <any>{};\n\n            options.remember = options.remember || false;\n\n            var body = <any>{\n                \"access_token_ttl\": Platform._accessTokenTtl,\n                \"refresh_token_ttl\": options.remember ? Platform._refreshTokenTtlRemember : Platform._refreshTokenTtl\n            };\n\n            if (!options.code) {\n\n                body.grant_type = 'password';\n                body.username = options.username;\n                body.password = options.password;\n                body.extension = options.extension || '';\n\n            } else if (options.code) {\n\n                body.grant_type = 'authorization_code';\n                body.code = options.code;\n                body.redirect_uri = options.redirectUri;\n                //body.client_id = this.getCredentials().key; // not needed\n\n            }\n\n            if (options.endpointId) body.endpoint_id = options.endpointId;\n\n            return this._tokenRequest(Platform._tokenEndpoint, body).then((res:http.ApiResponse) => {\n\n                this._auth\n                    .setData(res.json())\n                    .setRemember(options.remember);\n\n                this.emit(this.events.authorizeSuccess, res);\n\n                return res;\n\n            }).catch((e:http.IApiError):any => {\n\n                this._cache.clean();\n\n                this.emit(this.events.authorizeError, e);\n\n                throw e;\n\n            });\n\n        }\n\n        refresh():Promise<http.ApiResponse> {\n\n            var refresh = <Promise<http.ApiResponse>>new externals._Promise((resolve, reject) => {\n\n                if (this._queue.isPaused()) {\n                    return resolve(this._refreshPolling());\n                }\n\n                this._queue.pause();\n\n                // Make sure all existing AJAX calls had a chance to reach the server\n                setTimeout(() => {\n\n                    core.log.debug('Platform.refresh(): Performing token refresh (access token', this._auth.accessToken(), ', refresh token', this._auth.refreshToken(), ')');\n\n                    // Perform sanity checks\n                    if (!this._auth.refreshToken()) return reject(new Error('Refresh token is missing'));\n                    if (!this._auth.refreshTokenValid()) return reject(new Error('Refresh token has expired'));\n                    if (!this._queue.isPaused()) return reject(new Error('Queue was resumed before refresh call'));\n\n                    resolve(this._tokenRequest(Platform._tokenEndpoint, {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": this._auth.refreshToken(),\n                        \"access_token_ttl\": Platform._accessTokenTtl,\n                        \"refresh_token_ttl\": this._auth.remember() ? Platform._refreshTokenTtlRemember : Platform._refreshTokenTtl\n                    }));\n\n                }, this._refreshDelayMs);\n\n            });\n\n            return refresh.then((res:http.ApiResponse) => {\n\n                // This means refresh has happened elsewhere and we are here because of timeout\n                if (res && res.json && res.json()) {\n\n                    var json = res.json();\n\n                    core.log.info('Platform.refresh(): Token was refreshed', res);\n\n                    if (!json.refresh_token || !json.access_token) {\n                        throw http.Client.makeError(new Error('Malformed OAuth response'), res);\n                    }\n\n                    this._auth.setData(json);\n                    this._queue.resume();\n\n                }\n\n                this.emit(this.events.refreshSuccess, res);\n\n                return res;\n\n            }).catch((e:http.IApiError):any => {\n\n                e = http.Client.makeError(e);\n\n                if (this._clearCacheOnRefreshError) {\n                    this._cache.clean();\n                }\n\n                this.emit(this.events.accessViolation, e);\n                this.emit(this.events.refreshError, e);\n\n                throw e;\n\n            });\n\n        }\n\n        /**\n         * @returns {Promise}\n         */\n        logout():Promise<http.ApiResponse> {\n\n            this._queue.pause();\n\n            return this._tokenRequest(Platform._revokeEndpoint, {\n                token: this._auth.accessToken()\n            }).then((res)  => {\n\n                this._queue.resume();\n                this._cache.clean();\n\n                this.emit(this.events.logoutSuccess, res);\n\n                return res;\n\n            }).catch((e:http.IApiError):any => {\n\n                this._queue.resume();\n\n                this.emit(this.events.accessViolation, e);\n                this.emit(this.events.logoutError, e);\n\n                throw e;\n\n            });\n\n        }\n\n        inflateRequest(request:Request, options?:IPlatformOptions):Promise<Request> {\n\n            options = options || {};\n\n            if (options.skipAuthCheck) return externals._Promise.resolve(request);\n\n            return this\n                ._ensureAuthentication()\n                .then(() => {\n\n                    request.headers.set('Authorization', this._authHeader());\n                    request.url = this.createUrl(request.url, {addServer: true});\n\n                    return request;\n\n                });\n\n        }\n\n        sendRequest(request:Request, options?:IPlatformOptions):Promise<http.ApiResponse> {\n\n            return this\n                .inflateRequest(request, options)\n                .then((req) => {\n                    return this._client.sendRequest(req);\n                })\n                .catch((e:http.IApiError) => {\n\n                    // Guard is for errors that come from polling\n                    if (!e.apiResponse || !e.apiResponse.response() || (e.apiResponse.response().status != 401)) throw e;\n\n                    this._auth.cancelAccessToken();\n\n                    return this.sendRequest(request, options);\n\n                });\n\n        }\n\n        /**\n         * General purpose function to send anything to server\n         */\n        send(url:string, options?:IPlatformCombinedOptions):Promise<http.ApiResponse> {\n\n            try {\n\n                // This has to be done here in order to let NodeJS Fetch to create Request\n                url = this.createUrl(url, {addServer: true});\n\n                return this.sendRequest(http.Client.createRequest(url, options), options);\n\n            } catch (e) {\n                return externals._Promise.reject(e);\n            }\n\n        }\n\n        get(url:string, options?:IPlatformCombinedOptions) {\n            options = options || {};\n            options.method = 'GET';\n            return this.send(url, options);\n        }\n\n        post(url:string, options:IPlatformCombinedOptions) {\n            options = options || {};\n            options.method = 'POST';\n            return this.send(url, options);\n        }\n\n        put(url:string, options:IPlatformCombinedOptions) {\n            options = options || {};\n            options.method = 'PUT';\n            return this.send(url, options);\n        }\n\n        'delete'(url:string, options?:IPlatformCombinedOptions) {\n            options = options || {};\n            options.method = 'DELETE';\n            return this.send(url, options);\n        }\n\n        protected _tokenRequest(path:string, body:any):Promise<http.ApiResponse> {\n\n            return this.send(path, {\n                skipAuthCheck: true,\n                body: body,\n                method: 'POST',\n                headers: {\n                    'Authorization': 'Basic ' + this._apiKey(),\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                }\n            });\n\n        }\n\n        protected _ensureAuthentication() {\n\n            if (this._isAccessTokenValid()) return externals._Promise.resolve(null);\n            return this.refresh();\n\n        }\n\n        protected _isAccessTokenValid():boolean {\n\n            return (this._auth.accessTokenValid() && !this._queue.isPaused());\n\n        }\n\n        protected _refreshPolling():Promise<any> {\n\n            core.log.warn('Platform.refresh(): Refresh is already in progress, polling started');\n\n            return this._queue.poll().then(()=> {\n\n                if (!this._isAccessTokenValid()) {\n                    throw new Error('Automatic authentification timeout');\n                }\n\n                return null;\n\n            });\n\n        }\n\n        protected _apiKey() {\n            var apiKey = this._appKey + ':' + this._appSecret;\n            return (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        }\n\n        protected _authHeader() {\n            var token = this._auth.accessToken();\n            return this._auth.tokenType() + (token ? ' ' + token : '');\n        }\n\n    }\n\n    export interface IAuthError extends Error {\n        error?:string;\n    }\n\n    export interface IPlatformOptions {\n        skipAuthCheck?:boolean;\n    }\n\n    export interface IPlatformCombinedOptions extends IPlatformOptions, http.IClientRequestInit {}\n\n}","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Log.ts\" />\n/// <reference path=\"../platform/Platform.ts\" />\n/// <reference path=\"../http/ApiResponse.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n\nmodule RingCentral.sdk.subscription {\n\n\n    export class Subscription extends core.Observable<Subscription> {\n\n        protected _renewHandicapMs = 2 * 60 * 1000;\n\n        protected _subscription:ISubscription|any;\n        protected _timeout;\n        protected _eventFilters:string[];\n        protected _pubnub:PUBNUBInstance;\n\n        protected _platform:platform.Platform;\n        protected _pubnubFactory:pubnub.PubnubFactory;\n\n        public events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n\n        constructor(pubnubFactory:pubnub.PubnubFactory, platform:platform.Platform) {\n\n            super();\n\n            this._pubnubFactory = pubnubFactory;\n            this._platform = platform;\n\n            this._pubnub = null;\n            this._eventFilters = [];\n            this._timeout = null;\n            this._subscription = null;\n\n        }\n\n        alive() {\n\n            return this._subscription &&\n                   this._subscription.id &&\n                   this._subscription.deliveryMode &&\n                   this._subscription.deliveryMode.subscriberKey &&\n                   this._subscription.deliveryMode.address;\n\n        }\n\n        setSubscription(subscription) {\n\n            this._clearTimeout();\n\n            this._subscription = subscription;\n\n            if (!this._pubnub) this._subscribeAtPubnub();\n\n            this._setTimeout();\n\n            return this;\n\n        }\n\n        subscription():ISubscription {\n            return this._subscription;\n        }\n\n        /**\n         * Creates or updates subscription if there is an active one\n         * @param {{events?:string[]}} [options] New array of events\n         * @returns {Promise}\n         */\n        register(options?:{events?:string[]}):Promise<http.ApiResponse> {\n\n            if (this.alive()) {\n                return this.renew(options);\n            } else {\n                return this.subscribe(options);\n            }\n\n        }\n\n        addEvents(events:string[]) {\n            this._eventFilters = this._eventFilters.concat(events);\n            return this;\n        }\n\n        setEvents(events:string[]) {\n            this._eventFilters = events;\n            return this;\n        }\n\n        subscribe(options?:{events?:string[]}):Promise<http.ApiResponse> {\n\n            options = options || {};\n\n            if (options.events) this.setEvents(options.events);\n\n            this._clearTimeout();\n\n            return <Promise<http.ApiResponse>>new externals._Promise((resolve, reject) => {\n\n                if (!this._eventFilters || !this._eventFilters.length) throw new Error('Events are undefined');\n\n                resolve(this._platform.post('/restapi/v1.0/subscription', {\n                    body: {\n                        eventFilters: this._getFullEventFilters(),\n                        deliveryMode: {\n                            transportType: 'PubNub'\n                        }\n                    }\n                }));\n\n            }).then((ajax:http.ApiResponse) => {\n\n                    this.setSubscription(ajax.json())\n                        .emit(this.events.subscribeSuccess, ajax);\n\n                    return ajax;\n\n                }).catch((e):any => {\n\n                    e = http.Client.makeError(e);\n\n                    this.reset()\n                        .emit(this.events.subscribeError, e);\n\n                    throw e;\n\n                });\n\n        }\n\n        renew(options?:{events?:string[]}):Promise<http.ApiResponse> {\n\n            options = options || {};\n\n            if (options.events) this.setEvents(options.events);\n\n            this._clearTimeout();\n\n            return <Promise<http.ApiResponse>>new externals._Promise((resolve, reject) => {\n\n                if (!this.alive()) throw new Error('Subscription is not alive');\n\n                if (!this._eventFilters || !this._eventFilters.length) throw new Error('Events are undefined');\n\n                return this._platform.put('/restapi/v1.0/subscription/' + this._subscription.id, {\n                    body: {\n                        eventFilters: this._getFullEventFilters()\n                    }\n                });\n\n            })\n                .then((ajax:http.ApiResponse) => {\n\n                    this.setSubscription(ajax.json())\n                        .emit(this.events.renewSuccess, ajax.json());\n\n                    return ajax;\n\n                })\n                .catch((e):any => {\n\n                    e = http.Client.makeError(e);\n\n                    this.reset()\n                        .emit(this.events.renewError, e);\n\n                    throw e;\n\n                });\n\n        }\n\n        remove():Promise<http.ApiResponse> {\n\n            return <Promise<http.ApiResponse>>new externals._Promise((resolve, reject)  => {\n\n                if (!this._subscription || !this._subscription.id) throw new Error('Subscription ID is required');\n\n                resolve(this._platform.delete('/restapi/v1.0/subscription/' + this._subscription.id));\n\n            }).then((ajax:http.ApiResponse) => {\n\n                    this.reset()\n                        .emit(this.events.removeSuccess, ajax);\n\n                    return ajax;\n\n                }).catch((e):any => {\n\n                    e = http.Client.makeError(e);\n\n                    this.emit(this.events.removeError, e);\n\n                    throw e;\n\n                });\n\n        }\n\n        /**\n         * Remove subscription and disconnect from PUBNUB\n         * This method resets subscription at client side but backend is not notified\n         */\n        reset() {\n            this._clearTimeout();\n            if (this.alive() && this._pubnub) this._pubnub.unsubscribe({channel: this._subscription.deliveryMode.address});\n            this._subscription = null;\n            return this;\n        }\n\n        destroy():Subscription {\n\n            this.reset();\n\n            core.log.info('RC.subscription.Subscription: Destroyed');\n\n            return super.destroy();\n\n        }\n\n        protected _getFullEventFilters() {\n\n            return this._eventFilters.map((event) => {\n                return this._platform.createUrl(event);\n            });\n\n        }\n\n        protected _setTimeout() {\n\n            this._clearTimeout();\n\n            if (!this.alive()) throw new Error('Subscription is not alive');\n\n            var timeToExpiration = (this._subscription.expiresIn * 1000) - this._renewHandicapMs;\n\n            this._timeout = setTimeout(() => {\n\n                this.renew({});\n\n            }, timeToExpiration);\n\n            return this;\n\n        }\n\n        protected _clearTimeout() {\n\n            clearTimeout(this._timeout);\n\n            return this;\n\n        }\n\n        protected _decrypt(message:any) {\n\n            if (!this.alive()) throw new Error('Subscription is not alive');\n\n            if (this._subscription.deliveryMode.encryptionKey) {\n\n                var PUBNUB = this._pubnubFactory.getPubnub();\n\n                message = PUBNUB.crypto_obj.decrypt(message, this._subscription.deliveryMode.encryptionKey, {\n                    encryptKey: false,\n                    keyEncoding: 'base64',\n                    keyLength: 128,\n                    mode: 'ecb'\n                });\n\n            }\n\n            return message;\n\n        }\n\n        protected _notify(message:any) {\n\n            this.emit(this.events.notification, this._decrypt(message));\n\n            return this;\n\n        }\n\n        protected _subscribeAtPubnub():Subscription {\n\n            if (!this.alive()) throw new Error('Subscription is not alive');\n\n            var PUBNUB = this._pubnubFactory.getPubnub();\n\n            this._pubnub = PUBNUB.init({\n                ssl: true,\n                subscribe_key: this._subscription.deliveryMode.subscriberKey\n            });\n\n            this._pubnub.ready();\n\n            this._pubnub.subscribe({\n                channel: this._subscription.deliveryMode.address,\n                message: (message, env, channel) => {\n\n                    core.log.info('RC.core.Subscription: Incoming message', message);\n                    this._notify(message);\n\n                },\n                connect: () => {\n                    core.log.info('RC.core.Subscription: PUBNUB connected');\n                }\n            });\n\n            return this;\n\n        }\n\n    }\n\n    export interface ISubscription {\n        id?:string;\n        uri?: string;\n        eventFilters?:string[];\n        expirationTime?:string; // 2014-03-12T19:54:35.613Z\n        expiresIn?:number;\n        deliveryMode?: {\n            transportType?:string;\n            encryption?:boolean;\n            address?:string;\n            subscriberKey?:string;\n            encryptionKey?:string;\n            secretKey?:string;\n        };\n        creationTime?:string; // 2014-03-12T19:54:35.613Z\n        status?:string; // Active\n    }\n\n}","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n\nmodule RingCentral.sdk.pubnub {\n\n    export class PubnubMock extends core.Observable<PubnubMock> implements PUBNUBInstance {\n\n        private options:PUBNUBInitOptions;\n        crypto_obj:PUBNUBCryptoObj;\n\n        constructor(options:PUBNUBInitOptions) {\n            super();\n            this.options = options;\n            this.crypto_obj = externals._PUBNUB.crypto_obj;\n        }\n\n        ready() {}\n\n        subscribe(options:PUBNUBSubscribeOptions) {\n            this.on('message-' + options.channel, options.message);\n        }\n\n        unsubscribe(options:PUBNUBUnsubscribeOptions) {\n            this.off('message-' + options.channel);\n        }\n\n        receiveMessage(msg, channel) {\n            this.emit('message-' + channel, msg, 'env', channel);\n        }\n\n    }\n\n    export class PubnubMockFactory implements PUBNUB {\n\n        crypto_obj:PUBNUBCryptoObj;\n\n        constructor() {\n            this.crypto_obj = externals._PUBNUB.crypto_obj;\n        }\n\n        init(options:PUBNUBInitOptions) {\n            return new PubnubMock(options);\n        }\n\n    }\n\n}","/// <reference path=\"../pubnub/PubnubMock.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n\nmodule RingCentral.sdk.pubnub {\n\n    export class PubnubFactory {\n\n        private _useMock:boolean = false;\n        private _mock:PubnubMockFactory;\n\n        constructor(flag:boolean) {\n            this._useMock = !!flag;\n            this._mock = new PubnubMockFactory();\n        }\n\n        getPubnub():PUBNUB {\n            return this._useMock ? this._mock : externals._PUBNUB;\n        }\n\n    }\n\n}","/// <reference path=\"./externals.d.ts\" />\n/// <reference path=\"./core/Cache.ts\" />\n/// <reference path=\"./core/Log.ts\" />\n/// <reference path=\"./core/Observable.ts\" />\n/// <reference path=\"./core/PageVisibility.ts\" />\n/// <reference path=\"./core/Utils.ts\" />\n/// <reference path=\"./http/Client.ts\" />\n/// <reference path=\"./platform/Platform.ts\" />\n/// <reference path=\"./platform/Queue.ts\" />\n/// <reference path=\"./subscription/Subscription.ts\" />\n/// <reference path=\"./pubnub/PubnubFactory.ts\" />\n/// <reference path=\"./externals/Externals.ts\" />\n\nmodule RingCentral.sdk {\n\n    export class SDK {\n\n        static version = '2.0.0';\n\n        static server = {\n            sandbox: 'https://platform.devtest.ringcentral.com',\n            production: 'https://platform.ringcentral.com'\n        };\n\n        private _platform:platform.Platform;\n        private _cache:core.Cache;\n        private _queue:platform.Queue;\n        private _client:http.Client;\n        private _pubnubFactory:pubnub.PubnubFactory;\n        private _mockRegistry:mocks.Registry;\n\n        constructor(options?:{\n            server:string;\n            appKey:string;\n            appSecret:string;\n            appName?:string;\n            appVersion?:string;\n            cachePrefix?:string;\n            useHttpMock?:boolean;\n            usePubnubMock?:boolean;\n        }) {\n\n            options = options || <any>{};\n\n            externals.get();\n\n            this._mockRegistry = new mocks.Registry();\n\n            this._cache = new core.Cache(typeof localStorage !== 'undefined' ? localStorage : <Storage>{}, options.cachePrefix);\n\n            this._queue = new platform.Queue(this._cache, 'platform-refresh');\n\n            this._client = options.useHttpMock ? new http.ClientMock(this._mockRegistry) : new http.Client();\n\n            this._platform = new platform.Platform(this._client, this._cache, this._queue, options.server, options.appKey, options.appSecret);\n\n            this._pubnubFactory = new pubnub.PubnubFactory(options.usePubnubMock);\n\n            //TODO Link Platform events with Subscriptions and the rest\n\n        }\n\n        platform():platform.Platform {\n            return this._platform;\n        }\n\n        cache():core.Cache {\n            return this._cache;\n        }\n\n        createSubscription():subscription.Subscription {\n            return new subscription.Subscription(this._pubnubFactory, this._platform);\n        }\n\n        createPageVisibility() {\n            return new core.PageVisibility();\n        }\n\n        createObservable() {\n            return new core.Observable();\n        }\n\n        log() {\n            return core.log;\n        }\n\n        utils() {\n            return core.utils;\n        }\n\n        mockRegistry() { return this._mockRegistry; }\n\n    }\n\n}\n\nvar e = RingCentral.sdk.externals.get();\n\nif (typeof define === 'function' && define.amd) {\n\n    define(['pubnub'], function(PUBNUB) {\n        e._PUBNUB = PUBNUB;\n        return RingCentral.sdk;\n    });\n\n} else if (typeof module === 'object' && module.exports) {\n\n    e._PUBNUB = require('pubnub');\n    e._Promise = typeof (Promise) !== 'undefined' ? Promise : require('es6-promise').Promise;\n    e._fetch = require('node-fetch');\n    e._Request = e._fetch['Request'];\n    e._Response = e._fetch['Response'];\n    e._Headers = e._fetch['Headers'];\n\n    module.exports = RingCentral.sdk;\n\n} else {\n\n    //TODO noConflict\n\n}\n","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../mocks/Registry.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n/// <reference path=\"./ApiResponse.ts\" />\n\nmodule RingCentral.sdk.http {\n\n    export class ClientMock extends Client {\n\n        private _registry:mocks.Registry;\n\n        constructor(registry:mocks.Registry) {\n            super();\n            this._registry = registry;\n        }\n\n        protected _loadResponse(request:Request):Promise<Response> {\n\n            return new externals._Promise((resolve) => {\n\n                core.log.debug('API REQUEST', request.method, request.url);\n\n                var mock = this._registry.find(request);\n\n                resolve(mock.getResponse(request));\n\n            });\n\n        }\n\n    }\n\n}","/// <reference path=\"../externals.d.ts\" />\n/// <reference path=\"../core/Utils.ts\" />\n/// <reference path=\"../core/Observable.ts\" />\n/// <reference path=\"../core/Cache.ts\" />\n/// <reference path=\"../core/Log\" />\n/// <reference path=\"../http/Client.ts\" />\n/// <reference path=\"../http/ApiResponse.ts\" />\n/// <reference path=\"../externals/Externals.ts\" />\n/// <reference path=\"./Queue.ts\" />\n\nmodule RingCentral.sdk.platform {\n\n    export class Auth {\n\n        static refreshHandicapMs:number = 60 * 1000; // 1 minute\n        static forcedTokenType = 'forced';\n\n        protected _cacheId:string;\n        protected _cache:core.Cache;\n\n        constructor(cache:core.Cache, cacheId:string) {\n\n            this._cache = cache;\n            this._cacheId = cacheId;\n\n        }\n\n        accessToken() {\n            return this.data().access_token;\n        }\n\n        refreshToken() {\n            return this.data().refresh_token;\n        }\n\n        tokenType() {\n            return this.data().token_type;\n        }\n\n        data():IAuthData {\n\n            return this._cache.getItem(this._cacheId) || {\n                    token_type: '',\n                    access_token: '',\n                    expires_in: 0,\n                    refresh_token: '',\n                    refresh_token_expires_in: 0\n                };\n\n        }\n\n        setData(authData:IAuthData) {\n\n            var oldAuthData = this.data();\n\n            authData = core.utils.extend({}, oldAuthData, authData);\n\n            authData.expire_time = Date.now() + (authData.expires_in * 1000);\n            authData.refresh_token_expire_time = Date.now() + (authData.refresh_token_expires_in * 1000);\n\n            core.log.info('Auth.setData(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n\n            this._cache.setItem(this._cacheId, authData);\n\n            return this;\n\n        }\n\n        /**\n         * Check if there is a valid (not expired) access token\n         */\n        accessTokenValid():boolean {\n\n            var authData = this.data();\n            return (authData.token_type === Auth.forcedTokenType || (authData.expire_time - Auth.refreshHandicapMs > Date.now()));\n\n        }\n\n        /**\n         * Check if there is a valid (not expired) access token\n         */\n        refreshTokenValid():boolean {\n\n            return (this.data().refresh_token_expire_time > Date.now());\n\n        }\n\n        cancelAccessToken() {\n\n            return this.setData({\n                access_token: '',\n                expires_in: 0\n            });\n\n        }\n\n        /**\n         * This method sets a special authentication mode used in Service Web\n         * @return {Platform}\n         */\n        forceAuthentication() {\n\n            this.setData(<IAuthData>{\n                token_type: Auth.forcedTokenType,\n                access_token: '',\n                expires_in: 0,\n                refresh_token: '',\n                refresh_token_expires_in: 0\n            });\n\n            return this;\n\n        }\n\n        setRemember(remember?:boolean):Auth {\n\n            return this.setData({remember: remember});\n\n        }\n\n        remember():boolean {\n\n            return !!this.data().remember;\n\n        }\n\n    }\n\n\n    export interface IAuthData {\n        remember?:boolean;\n        token_type?:string;\n        access_token?:string;\n        expires_in?:number; // actually it's string\n        expire_time?:number;\n        refresh_token?:string;\n        refresh_token_expires_in?:number; // actually it's string\n        refresh_token_expire_time?:number;\n        scope?:string;\n    }\n\n}","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.2.0\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$toString = {}.toString;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    function lib$es6$promise$asap$$asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    var lib$es6$promise$asap$$default = lib$es6$promise$asap$$asap;\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      var nextTick = process.nextTick;\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // setImmediate should be used instead instead\n      var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n        nextTick = setImmediate;\n      }\n      return function() {\n        nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertex() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertex();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$default(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFullfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      var enumerator = this;\n\n      enumerator._instanceConstructor = Constructor;\n      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (enumerator._validateInput(input)) {\n        enumerator._input     = input;\n        enumerator.length     = input.length;\n        enumerator._remaining = input.length;\n\n        enumerator._init();\n\n        if (enumerator.length === 0) {\n          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n        } else {\n          enumerator.length = enumerator.length || 0;\n          enumerator._enumerate();\n          if (enumerator._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n      }\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$es6$promise$utils$$isArray(input);\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var enumerator = this;\n\n      var length  = enumerator.length;\n      var promise = enumerator.promise;\n      var input   = enumerator._input;\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        enumerator._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var enumerator = this;\n      var c = enumerator._instanceConstructor;\n\n      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n          entry._onerror = null;\n          enumerator._settledAt(entry._state, i, entry._result);\n        } else {\n          enumerator._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        enumerator._remaining--;\n        enumerator._result[i] = entry;\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var enumerator = this;\n      var promise = enumerator.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        enumerator._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          enumerator._result[i] = value;\n        }\n      }\n\n      if (enumerator._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n    var lib$es6$promise$promise$$counter = 0;\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise’s eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this._id = lib$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        if (!lib$es6$promise$utils$$isFunction(resolver)) {\n          lib$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n          lib$es6$promise$promise$$needsNew();\n        }\n\n        lib$es6$promise$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$default;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor(lib$es6$promise$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          lib$es6$promise$asap$$default(function(){\n            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n","(function() {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit)\n    this.type = 'default'\n    this.url = null\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    var request\n    if (Request.prototype.isPrototypeOf(input) && !init) {\n      request = input\n    } else {\n      request = new Request(input, init)\n    }\n\n    return new Promise(function(resolve, reject) {\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})();\n"],"sourceRoot":"/source/"}