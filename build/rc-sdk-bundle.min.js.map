{"version":3,"sources":["webpack/universalModuleDefinition","rc-sdk-bundle.js","webpack/bootstrap 2e8d980a7dae0926eaa2","../src/lib/RCSDK.ts","../src/lib/helpers/ContactGroup.ts","external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}","../src/lib/helpers/Conferencing.ts","../src/lib/core/pubnub/PubnubMock.ts","../src/lib/core/xhr/XhrMock.ts","../src/lib/core/xhr/XhrResponse.ts","../src/lib/core/AjaxObserver.ts","../src/lib/core/Cache.ts","../src/lib/core/Context.ts","../src/lib/core/Helper.ts","../src/lib/core/List.ts","../src/lib/core/Log.ts","../src/lib/core/Observable.ts","../src/lib/core/PageVisibility.ts","../src/lib/core/Platform.ts","../src/lib/core/Subscription.ts","../src/lib/core/Utils.ts","../src/lib/core/Validator.ts","../src/lib/helpers/Account.ts","../src/lib/helpers/BlockedNumber.ts","../src/lib/helpers/Call.ts","../src/lib/helpers/Contact.ts","external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}","../src/lib/helpers/Country.ts","../src/lib/helpers/Device.ts","../src/lib/helpers/DeviceModel.ts","../src/lib/helpers/Extension.ts","../src/lib/helpers/ForwardingNumber.ts","../src/lib/helpers/Language.ts","../src/lib/helpers/Location.ts","../src/lib/helpers/Message.ts","../src/lib/helpers/PhoneNumber.ts","../src/lib/helpers/Presence.ts","../src/lib/helpers/Ringout.ts","../src/lib/helpers/Service.ts","../src/lib/helpers/ShippingMethod.ts","../src/lib/helpers/State.ts","../src/lib/helpers/Timezone.ts","bower_components/pubnub/web/pubnub.js","bower_components/es6-promise-polyfill/promise.js","../src/lib/core/http/Request.ts","~/gulp-webpack-build/~/node-libs-browser/~/timers-browserify/main.js","(webpack)/buildin/module.js","../src/lib/core/http/Headers.ts","../src/lib/core/http/Response.ts","~/gulp-webpack-build/~/node-libs-browser/~/process/browser.js"],"names":["root","factory","exports","module","require","e","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_23__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","pubnubMock","xhrMock","xhrResponse","ajaxObserver","cache","context","helper","list","log","observable","pageVisibility","platform","subscription","utils","validator","accountHelper","blockedNumberHelper","callHelper","contactHelper","contactGroupHelper","conferencingHelper","countryHelper","deviceHelper","deviceModelHelper","extensionHelper","forwardingNumberHelper","languageHelper","locationHelper","messageHelper","phoneNumberHelper","presenceHelper","ringoutHelper","serviceHelper","shippingMethodHelper","stateHelper","timezoneHelper","promise","pubnub","RCSDK","options","_context","$get","injections","getCache","setPrefix","cachePrefix","getPlatform","setServer","server","setCredentials","appKey","appSecret","prototype","getContext","getAjaxObserver","getXhrResponse","getSubscription","getPageVisibility","getHelper","getObservable","getValidator","getLog","getUtils","getList","getCountryHelper","getDeviceModelHelper","getLanguageHelper","getLocationHelper","getShippingMethodHelper","getStateHelper","getTimezoneHelper","getAccountHelper","getBlockedNumberHelper","getCallHelper","getConferencingHelper","getContactHelper","getContactGroupHelper","getDeviceHelper","getExtensionHelper","getForwardingNumberHelper","getMessageHelper","getPhoneNumberHelper","getPresenceHelper","getRingoutHelper","getServiceHelper","version","url","sandbox","production","localStorage","Promise","PUBNUB","XHR","XMLHttpRequest","ActiveXObject","e1","e2","e3","e4","Error","createSingleton","ContactGroup","__extends","d","b","__","constructor","hasOwnProperty","_super","createUrl","validate","item","field","required","groupName","Helper","code","Conferencing","apply","arguments","PubnubFactory","PubnubMock","crypto_obj","getPubnubReal","ready","subscribe","on","channel","message","unsubscribe","off","receiveMessage","msg","emit","Observable","init","XhrMock","responses","async","method","requestHeaders","withCredentials","data","readyState","responseHeaders","status","getResponseHeader","header","toLowerCase","setRequestHeader","value","getAllResponseHeaders","res","forEach","name","push","join","open","send","_this","contentType","getRequestHeader","JSON","parse","parseQueryString","debug","currentResponse","find","setTimeout","onerror","setStatus","setResponseHeader","response","getPromise","onLoad","stringify","responseText","onload","then","bind","abort","XhrResponse","add","clear","ajax","indexOf","path","test","AjaxObserver","events","beforeRequest","requestSuccess","requestError","Cache","storage","getLocalStorage","prefix","prefixKey","key","setItem","removeItem","getItem","clean","Context","singletons","stubPubnub","stubAjax","usePubnubStub","flag","useAjaxStub","getPubnub","getXHR","defaultProperty","getId","object","isNew","getUri","resetAsNew","uri","parseMultipartResponse","isMultipart","filter","result","error","map","loadRequest","extend","saveRequest","post","body","deleteRequest","syncRequest","sync","query","get","syncToken","syncType","nextPageExists","navigation","index","array","getIdFn","gather","reduce","merge","target","supplement","mergeItems","supplementIndex","updatedIDs","newItem","List","numberComparator","stringComparator","propertyExtractor","property","a","parseString","localeCompare","parseNumber","comparator","extractFn","sortBy","compareFn","item1","item2","equalsFilter","obj","condition","containsFilter","toString","regexpFilter","RegExp","filterConfigs","self","opt","filterBy","filterFn","pass","Log","console","warn","info","logDebug","logInfo","logWarnings","logErrors","addTimestamps","disableAll","enableAll","parseArguments","args","argumentsToArray","unshift","Date","toLocaleString","_i","length","Object","defineProperty","enumerable","writable","hasListeners","event","listeners","registerOneTimeEvent","oneTimeEvents","oneTimeArguments","callback","isOneTimeEventFired","getOneTimeEventArgumens","isOneTimeEvent","setOneTimeEventFired","setOneTimeEventArgumens","some","cb","i","offAll","destroy","emitAndCallback","concat","PageVisibility","change","hidden","onchange","evt","window","v","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","visible","type","document","addEventListener","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","isVisible","Platform","request","accessViolation","logoutSuccess","logoutError","authorizeSuccess","authorizeError","refreshSuccess","refreshError","apiKey","account","urlPrefix","apiVersion","accountPrefix","accessTokenTtl","refreshTokenTtl","refreshTokenTtlRemember","refreshHandicapMs","refreshDelayMs","clearCacheOnRefreshError","refreshPromise","cacheId","pollInterval","releaseTimeout","getStorage","getRequest","clearStorage","btoa","Buffer","getCredentials","credentials","atob","split","secret","remember","undefined","getAuthURL","apiUrl","queryStringify","response_type","redirect_uri","redirectUri","client_id","state","brand_id","brandId","display","prompt","addServer","parseAuthRedirectUrl","qs","reverse","error_description","authorize","access_token_ttl","refresh_token_ttl","username","grant_type","password","extension","reject","authCall","setCache","isPaused","now","parseInt","pause","resume","refresh","resolve","refreshPolling","authData","getAuthData","access_token","refresh_token","refreshExpireTime","logout","token","getToken","poll","next","isTokenValid","getTokenType","token_type","expires_in","refresh_token_expires_in","forcedTokenType","expireTime","getTime","isAuthorized","cancelAccessToken","oldAuthData","forceAuthentication","apiCall","setOptions","setHeader","isUnauthorized","put","builtUrl","hasHttp","replace","addMethod","addToken","Subscription","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","eventFilters","timeout","expirationTime","expiresIn","deliveryMode","transportType","encryption","address","subscriberKey","secretKey","creationTime","register","isSubscribed","renew","addEvents","setEvents","getFullEventFilters","clearTimeout","updateSubscription","subscribeAtPubnub","remove","timeToExpiration","renewHandicapMs","decrypt","encryptionKey","encryptKey","keyEncoding","keyLength","mode","notify","ssl","subscribe_key","env","connect","Utils","hasOwn","rdigit","class2type","targetObject","sourceObject","src","copy","copyIsArray","clone","deep","isFunction","isPlainObject","isArray","parameters","vv","encodeURIComponent","queryString","argsParsed","arg","decodeURIComponent","trim","pair","isEmail","multiple","isPhoneNumber","Array","slice","isDate","isWindow","isNaN","String","nodeType","getProperty","part","fn","interval","stopPolling","delay","s","n","parseFloat","Validator","validators","errors","isValid","email","phone","max","min","Account","BlockedNumber","extensionId","phoneNumber","Call","presence","contact","personal","active","getSessionId","sessionId","isInProgress","isAlive","availability","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","duration","hours","Math","floor","mins","secs","alive","attachContacts","contacts","calls","callerInfos","attachToCallerInfos","checkMergeability","outboundRingOutCall","inboundCall","dateString","strict","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","secondCall","parsePresenceCalls","activeCalls","activeCall","isCallInProgress","telephonyStatus","getSignature","cleanup","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","Contact","phoneFields","faxFields","addressFields","addressSubFields","nameFields","otherFields","emailFields","groupId","getFieldValues","where","fields","asHash","getFullName","getEmails","getPhones","getFaxes","getAddresses","match","string","inAddresses","transformFn","toLocaleLowerCase","found","matchWith","transformed","subField","matchAsPhone","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","startsWith","phonesOnly","faxesOnly","opts","firstName","lastName","email2","email3","Country","Device","deviceModel","order","emergencyServiceAddress","street","city","country","zip","customerName","model","DeviceModel","devices","deviceClass","addons","count","device","cleanForSaving","addon","Extension","department","user","announcement","voicemail","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","search","extensionNumber","ForwardingNumber","forwardingNumber","hasFeature","feature","features","Language","languages","Location","uniqueNPAs","stateId","onlyUniqueNPA","npa","nxx","Message","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentUrl","attachments","getAttachmentContentType","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","validatePager","PhoneNumber","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","Presence","detailed","isAvailable","presenceStatus","presences","attachToExtensions","extensions","ex","presenceCall","Ringout","ringout","callStatus","isSuccess","isError","Service","isSmsEnabled","isServiceFeatureEnabledMethod","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","isEnabled","serviceFeatures","f","featureName","enabled","ShippingMethod","State","countryId","Timezone","unique","NOW","rnow","build_url","url_components","url_params","URLBIT","params","each","value_str","encode","PARAMSBIT","updater","fun","rate","last","runnit","grep","fin","l","supplant","str","values","REPL","_","wait","generate_uuid","u","r","random","o","k","pam_encode","charCodeAt","toUpperCase","generate_channel_list","channels","nopresence","subscribed","sort","generate_channel_group_list","channel_groups","channel_group","READY","READY_BUFFER","SECOND","PNmessage","apns","keys","aps","alert","badge","exclude1","exclude","getPubnubMessage","publish","PN_API","setup","_get_url_params","_object_to_key_list","_object_to_key_list_sorted","_get_pam_sign_input_from_params","si","validate_presence_heartbeat","heartbeat","cur_heartbeat","err","PRESENCE_HB_THRESHOLD","PRESENCE_HB_DEFAULT","encrypt","input","CIPHER_KEY","_presence_heartbeat","PRESENCE_HB_TIMEOUT","PRESENCE_HB_INTERVAL","CHANNELS","CHANNEL_GROUPS","PRESENCE_HB_RUNNING","SELF","start_presence_heartbeat","NO_WAIT_FOR_PENDING","PUB_QUEUE","sending","xdr","shift","each_channel_group","chang","each_channel","chan","_invoke_callback","callback_data","_invoke_error","CR","url1","jsonp","jsonp_cb","AUTH_KEY","STD_ORIGIN","SUBSCRIBE_KEY","success","fail","_poll_online","_is_online","_reset_offline","_poll_timer","_poll_online2","TIME_CHECK","detect_time_detla","_poll_timer2","KEEPALIVE","SUB_RECEIVER","detect_latency","tt","adjusted_time","TIME_DRIFT","time","calculate","ptime","latency","stime","SUB_WINDOWING","DEF_WINDOWING","SUB_TIMEOUT","DEF_SUB_TIMEOUT","DEF_KEEPALIVE","NOLEAVE","PUBLISH_KEY","SECRET_KEY","hmac_SHA256","SSL","ORIGIN","nextorigin","SUB_ORIGIN","CONNECT","CLOAK","SUB_CALLBACK","SUB_CHANNEL","SUB_RESTORE","TIMETOKEN","RESUMED","STATE","PRESENCE_HB","COMPATIBLE_35","db","set","UUID","USE_INSTANCEID","INSTANCEID","LEAVE","blocking","auth_key","uuid","auth","origin","PRESENCE_SUFFIX","LEAVE_GROUP","set_resumed","resumed","get_cipher_key","set_cipher_key","raw_encrypt","raw_decrypt","get_heartbeat","set_heartbeat","heartbeat_interval","get_heartbeat_interval","set_heartbeat_interval","get_version","SDK_VER","getGcmMessageObject","getApnsMessageObject","x","newPnMessage","gcm","_add_param","val","namespace","ns_ch","cloak","ns_ch_a","channel_group_list_groups","channel_group_list_channels","channel_group_remove_channel","channel_group_remove_group","channel_group_add_channel","channel_group_cloak","channel_group_list_namespaces","channel_group_remove_namespace","history","cipher_key","start","end","include_token","payload","decrypted_messages","new_message","replay","source","destination","stop","limit","store","add_msg","ch","CB_CALLED","chg","_test_connection","disconnected","reconnect","disconnect","_connect","st","sub_timeout","SUB_ERROR","idlecb","connected","windowing","backfill","next_callback","channels2","list2","channel2","chobj","decrypted_msg","noheresync","timetoken","restore","settings","here","uid","timestamp","occupancy","here_now","uuids","where_now","grant","ttl","w","sign_input","signature","mobile_gw_provision","op","gw_type","device_id","audit","revoke","set_uuid","get_uuid","get_subscibed_channels","presence_heartbeat","stop_timers","each-channel","offline","SHA256","CryptoJS","parse_options","defaultOptions","allowedKeyEncodings","allowedKeyLengths","allowedModes","decode_key","get_padded_key","get_mode","get_iv","iv","hex_message","encryptedHexArray","base_64_encrypted","binary_enc","json_plain","ciphertext","plaintext","toJSON","valueOf","quote","escapable","lastIndex","meta","holder","partial","mind","gap","rep","isFinite","indent","cx","\b","\t","\n","\f","\r","\"","\\","replacer","space","eval","DEF_TIMEOUT","ori","failover","get_hmac_SHA256","hash","$","getElementById","elements","el","getElementsByTagName","node","etype","rapfun","cancelBubble","preventDefault","stopPropagation","attachEvent","head","attr","attribute","setAttribute","getAttribute","css","element","styles","style","create","createElement","XORIGN","FDomainRequest","script","finished","xhrtme","timer","done","append","appendChild","failed","parentNode","removeChild","ASYNC","xhr","complete","XDomainRequest","onabort","onloadend","onreadystatechange","eee","navigator","pubnubs","fdomainrequest","SWF","UA","userAgent","PNSDK","opera","postError","ls","cookieGet","cookie","cookieSet","cookieTest","unbind","fire","PDIV","CREATE_PUBNUB","leave_on_unload","pnsdk","PN","prop","pdiv","notest","publish_key","location","href","position","top","unescape","WS","protocols","bits","protocol","reason","wasClean","close","g","lib","q","Base","mixIn","$super","WordArray","words","sigBytes","clamp","ceil","enc","Hex","substr","Latin1","fromCharCode","j","Utf8","escape","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","blockSize","_minBufferSize","_doProcessBlock","splice","Hasher","cfg","_doReset","update","finalize","_doFinalize","_createHelper","_createHmacHelper","t","HMAC","algo","sqrt","pow","_hash","HmacSHA256","_hasher","_oKey","_iKey","Base64","_map","charAt","sin","MD5","z","A","B","C","D","E","HmacMD5","EvpKDF","keySize","hasher","iterations","compute","Cipher","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","_xformMode","_key","process","ivSize","StreamCipher","_iv","_prevBlock","BlockCipherMode","Encryptor","Decryptor","_cipher","processBlock","encryptBlock","decryptBlock","CBC","pad","Pkcs7","unpad","BlockCipher","padding","_mode","CipherParams","formatter","format","OpenSSL","salt","SerializableCipher","algorithm","_parse","kdf","execute","PasswordBasedCipher","F","G","y","H","AES","_nRounds","_keySchedule","_invKeySchedule","_doCryptBlock","ECB","offset","setImmediate","global","asyncFlush","asyncQueue","asyncTimer","asyncCall","asyncSetTimer","invokeResolver","resolver","resolvePromise","rejectPromise","invokeCallback","subscriber","owner","settled","state_","data_","FULFILLED","handleThenable","REJECTED","resolved","TypeError","fulfill","PENDING","SEALED","publishFulfillment","publishRejection","then_","NativePromise","nativePromiseSupported","NOOP","onFulfillment","onRejection","fulfilled","rejected","catch","all","promises","Class","remaining","results","race","Function","Request","observer","isLoaded","setHeaders","headers","checkOptions","hasHeader","Headers","jsonContentType","getEncodedBody","isJson","isUrlEncoded","responsePromise","statusText","clearImmediate","Timeout","clearFn","_id","_clearFn","nextTick","immediateIds","nextImmediateId","setInterval","clearInterval","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","webpackPolyfill","deprecate","paths","children","getHeader","isContentType","getContentType","setContentType","multipartContentType","urlencodedContentType","Response","tmp","bodySeparator","json","parts","headerSeparator","checkStatus","getError","boundary","boundarySeparator","pop","statusInfo","stack","description","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","len","run","Item","noop","title","browser","argv","versions","addListener","once","removeListener","removeAllListeners","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"rc-sdk-bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory((function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()), require(\"dom-storage\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"exports\", \"exports\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory((function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()), require(\"dom-storage\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"XMLHttpRequest\"], root[\"localStorage\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_23__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory((function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()), require(\"dom-storage\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"exports\", \"exports\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory((function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()), require(\"dom-storage\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"XMLHttpRequest\"], root[\"localStorage\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_23__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = __webpack_require__(4);\nvar xhrMock = __webpack_require__(5);\nvar xhrResponse = __webpack_require__(6);\nvar ajaxObserver = __webpack_require__(7);\nvar cache = __webpack_require__(8);\nvar context = __webpack_require__(9);\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar log = __webpack_require__(12);\nvar observable = __webpack_require__(13);\nvar pageVisibility = __webpack_require__(14);\nvar platform = __webpack_require__(15);\nvar subscription = __webpack_require__(16);\nvar utils = __webpack_require__(17);\nvar validator = __webpack_require__(18);\nvar accountHelper = __webpack_require__(19);\nvar blockedNumberHelper = __webpack_require__(20);\nvar callHelper = __webpack_require__(21);\nvar contactHelper = __webpack_require__(22);\nvar contactGroupHelper = __webpack_require__(1);\nvar conferencingHelper = __webpack_require__(3);\nvar countryHelper = __webpack_require__(24);\nvar deviceHelper = __webpack_require__(25);\nvar deviceModelHelper = __webpack_require__(26);\nvar extensionHelper = __webpack_require__(27);\nvar forwardingNumberHelper = __webpack_require__(28);\nvar languageHelper = __webpack_require__(29);\nvar locationHelper = __webpack_require__(30);\nvar messageHelper = __webpack_require__(31);\nvar phoneNumberHelper = __webpack_require__(32);\nvar presenceHelper = __webpack_require__(33);\nvar ringoutHelper = __webpack_require__(34);\nvar serviceHelper = __webpack_require__(35);\nvar shippingMethodHelper = __webpack_require__(36);\nvar stateHelper = __webpack_require__(37);\nvar timezoneHelper = __webpack_require__(38);\nvar promise = __webpack_require__(40);\nvar pubnub = __webpack_require__(39);\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () { return this._context; };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () { return ajaxObserver.$get(this.getContext()); };\n    RCSDK.prototype.getXhrResponse = function () { return xhrResponse.$get(this.getContext()); };\n    RCSDK.prototype.getPlatform = function () { return platform.$get(this.getContext()); };\n    RCSDK.prototype.getCache = function () { return cache.$get(this.getContext()); };\n    RCSDK.prototype.getSubscription = function () { return subscription.$get(this.getContext()); };\n    RCSDK.prototype.getPageVisibility = function () { return pageVisibility.$get(this.getContext()); };\n    RCSDK.prototype.getHelper = function () { return helper.$get(this.getContext()); };\n    RCSDK.prototype.getObservable = function () { return observable.$get(this.getContext()); };\n    RCSDK.prototype.getValidator = function () { return validator.$get(this.getContext()); };\n    RCSDK.prototype.getLog = function () { return log.$get(this.getContext()); };\n    RCSDK.prototype.getUtils = function () { return utils.$get(this.getContext()); };\n    RCSDK.prototype.getList = function () { return list.$get(this.getContext()); };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () { return countryHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceModelHelper = function () { return deviceModelHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLanguageHelper = function () { return languageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLocationHelper = function () { return locationHelper.$get(this.getContext()); };\n    RCSDK.prototype.getShippingMethodHelper = function () { return shippingMethodHelper.$get(this.getContext()); };\n    RCSDK.prototype.getStateHelper = function () { return stateHelper.$get(this.getContext()); };\n    RCSDK.prototype.getTimezoneHelper = function () { return timezoneHelper.$get(this.getContext()); };\n    RCSDK.prototype.getAccountHelper = function () { return accountHelper.$get(this.getContext()); };\n    RCSDK.prototype.getBlockedNumberHelper = function () { return blockedNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getCallHelper = function () { return callHelper.$get(this.getContext()); };\n    RCSDK.prototype.getConferencingHelper = function () { return conferencingHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactHelper = function () { return contactHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactGroupHelper = function () { return contactGroupHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceHelper = function () { return deviceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getExtensionHelper = function () { return extensionHelper.$get(this.getContext()); };\n    RCSDK.prototype.getForwardingNumberHelper = function () { return forwardingNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getMessageHelper = function () { return messageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPhoneNumberHelper = function () { return phoneNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPresenceHelper = function () { return presenceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getRingoutHelper = function () { return ringoutHelper.$get(this.getContext()); };\n    RCSDK.prototype.getServiceHelper = function () { return serviceHelper.$get(this.getContext()); };\n    RCSDK.version = '1.3.0';\n    RCSDK.url = {\n        sandbox: 'https://platform.devtest.ringcentral.com',\n        production: 'https://platform.ringcentral.com'\n    };\n    RCSDK.injections = {\n        localStorage: (typeof (localStorage) !== 'undefined'\n            ? localStorage\n            : __webpack_require__(23)),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : promise.Promise,\n        PUBNUB: pubnub,\n        XHR: function () {\n            try {\n                return new XMLHttpRequest();\n            }\n            catch (e) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e1) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e2) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e3) { }\n            try {\n                return new (__webpack_require__(2))();\n            }\n            catch (e4) { } // Node only\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        },\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar validator = __webpack_require__(18);\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\nif(typeof __WEBPACK_EXTERNAL_MODULE_2__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(13);\nvar PubnubMock = (function (_super) {\n    __extends(PubnubMock, _super);\n    function PubnubMock(context, options) {\n        this.options = options;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n        _super.call(this, context);\n    }\n    PubnubMock.prototype.ready = function () { };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.on('message-' + options.channel, options.message);\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n        this.off('message-' + options.channel);\n    };\n    PubnubMock.prototype.receiveMessage = function (msg, channel) {\n        this.emit('message-' + channel, msg, 'env', channel);\n    };\n    return PubnubMock;\n})(observable.Observable);\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock(this.context, options);\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar utils = __webpack_require__(17);\nvar log = __webpack_require__(12);\nvar xhrResponse = __webpack_require__(6); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(13);\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.getPubnubReal();\n    };\n    Context.prototype.getPubnubReal = function () {\n        return this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(17);\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(17);\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(17);\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(17);\nvar log = __webpack_require__(12);\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(13);\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(13);\nvar cache = __webpack_require__(8);\nvar request = __webpack_require__(41);\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.getCredentials = function () {\n        var credentials = ((typeof atob == 'function')\n            ? atob(this.apiKey)\n            : new Buffer(this.apiKey, 'base64').toString('utf-8')).split(':');\n        return {\n            key: credentials[0],\n            secret: credentials[1]\n        };\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.getAuthURL = function (options) {\n        options = options || {};\n        return this.apiUrl('/restapi/oauth/authorize?' + this.utils.queryStringify({\n            'response_type': 'code',\n            'redirect_uri': options.redirectUri || '',\n            'client_id': this.getCredentials().key,\n            'state': options.state || '',\n            'brand_id': options.brandId || '',\n            'display': options.display || '',\n            'prompt': options.prompt || ''\n        }), { addServer: true });\n    };\n    Platform.prototype.parseAuthRedirectUrl = function (url) {\n        var qs = this.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n        if (error) {\n            var e = new Error(error);\n            e.error = qs.error;\n            throw e;\n        }\n        return qs;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        var body = {\n            \"access_token_ttl\": this.accessTokenTtl,\n            \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n        };\n        if (options.username) {\n            body.grant_type = 'password';\n            body.username = options.username;\n            body.password = options.password;\n            body.extension = options.extension || '';\n        }\n        else if (options.code) {\n            body.grant_type = 'authorization_code';\n            body.code = options.code;\n            body.redirect_uri = options.redirectUri;\n        }\n        else {\n            return this.context.getPromise().reject(new Error('Unsupported authorization flow'));\n        }\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: body\n        }).then(function (response) {\n            _this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage()\n                .emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data)\n                .resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume()\n                .clearStorage()\n                .emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume()\n                .emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this\n                .refresh()\n                .then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '', hasHttp = url.indexOf('http://') != -1 || url.indexOf('https://') != -1;\n        if (options.addServer && !hasHttp)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1 && !hasHttp)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(13);\nvar platform = __webpack_require__(15);\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .subscribeAtPubnub()\n                .emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        })\n            .then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        })\n            .catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe()\n                .emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            _this.renew({});\n        }, timeToExpiration);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.decrypt = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var PUBNUB = this.getPubnub();\n            message = PUBNUB.crypto_obj.decrypt(message, this.subscription.deliveryMode.encryptionKey, {\n                encryptKey: false,\n                keyEncoding: 'base64',\n                keyLength: 128,\n                mode: 'ecb'\n            });\n        }\n        return message;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.notify = function (message) {\n        this.emit(this.events.notification, this.decrypt(message));\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(17);\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar validator = __webpack_require__(18);\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar presence = __webpack_require__(33);\nvar contact = __webpack_require__(22);\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar validator = __webpack_require__(18);\nvar list = __webpack_require__(11);\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar validator = __webpack_require__(18);\nvar extension = __webpack_require__(27);\nvar deviceModel = __webpack_require__(26);\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n        /**\n         * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n         */\n        this.devices = [\n            {\n                id: '-1',\n                name: 'Softphone'\n            },\n            {\n                id: '0',\n                name: 'Existing device'\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '23',\n                name: 'Polycom IP 321 Basic IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '30',\n                name: 'Polycom IP 550 HD Manager IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '37',\n                name: 'Polycom IP 6000 Conference Phone',\n                deviceClass: 'Conference Phone'\n            },\n            {\n                id: '40',\n                name: 'Polycom IP 335 HD IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '51',\n                name: 'Cisco SPA-303 Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\tDesk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '3'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '52',\n                name: 'Cisco SPA-122 ATA',\n                deviceClass: 'Analog Adapter'\n            },\n            {\n                id: '53',\n                name: 'Polycom VVX-500 Color Touchscreen',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '54',\n                name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '55',\n                name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n                deviceClass: 'Desk Phone'\n            }\n        ];\n    }\n    DeviceModel.prototype.getId = function (device) {\n        if (!device)\n            return null;\n        return device.id + (device.addons && device.addons[0]\n            ? '-' + device.addons[0].id + '-' + device.addons[0].count\n            : '');\n    };\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     */\n    DeviceModel.prototype.cleanForSaving = function (device) {\n        if (!device)\n            return null;\n        delete device.name;\n        delete device.deviceClass;\n        if (device.addons && device.addons.length > 0) {\n            device.addons.forEach(function (addon, i) {\n                delete device.addons[i].name;\n            });\n        }\n        else {\n            delete device.addons;\n        }\n        return device;\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n        this.languages = [\n            {\n                id: '1033',\n                name: 'English (US)'\n            },\n            {\n                id: '3084',\n                name: 'French (Canada)'\n            }\n        ];\n    }\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar state = __webpack_require__(37);\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar validator = __webpack_require__(18);\nvar subscription = __webpack_require__(16);\nvar platform = __webpack_require__(15);\nvar contact = __webpack_require__(22);\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar extension = __webpack_require__(27);\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar subscription = __webpack_require__(16);\nvar extension = __webpack_require__(27);\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar validator = __webpack_require__(18);\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar list = __webpack_require__(11);\nvar country = __webpack_require__(24);\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(10);\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {// Version: 3.7.11\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     JSON     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\n(window['JSON'] && window['JSON']['stringify']) || (function () {\n    window['JSON'] || (window['JSON'] = {});\n\n    function toJSON(key) {\n        try      { return this.valueOf() }\n        catch(e) { return null }\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n    function quote(string) {\n        escapable.lastIndex = 0;\n        return escapable.test(string) ?\n            '\"' + string.replace(escapable, function (a) {\n                var c = meta[a];\n                return typeof c === 'string' ? c :\n                    '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n            }) + '\"' :\n            '\"' + string + '\"';\n    }\n\n    function str(key, holder) {\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            partial,\n            mind  = gap,\n            value = holder[key];\n\n        if (value && typeof value === 'object') {\n            value = toJSON.call( value, key );\n        }\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n        switch (typeof value) {\n        case 'string':\n            return quote(value);\n\n        case 'number':\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n            return String(value);\n\n        case 'object':\n\n            if (!value) {\n                return 'null';\n            }\n\n            gap += indent;\n            partial = [];\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n                v = partial.length === 0 ? '[]' :\n                    gap ? '[\\n' + gap +\n                            partial.join(',\\n' + gap) + '\\n' +\n                                mind + ']' :\n                          '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n                for (k in value) {\n                    if (Object.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n\n            v = partial.length === 0 ? '{}' :\n                gap ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' +\n                        mind + '}' : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n    if (typeof JSON['stringify'] !== 'function') {\n        JSON['stringify'] = function (value, replacer, space) {\n            var i;\n            gap = '';\n            indent = '';\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                     typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n            return str('', {'': value});\n        };\n    }\n\n    if (typeof JSON['parse'] !== 'function') {\n        // JSON is parsed on the server for security.\n        JSON['parse'] = function (text) {return eval('('+text+')')};\n    }\n}());\nvar NOW             = 1\n,   READY           = false\n,   READY_BUFFER    = []\n,   PRESENCE_SUFFIX = '-pnpres'\n,   DEF_WINDOWING   = 10     // MILLISECONDS.\n,   DEF_TIMEOUT     = 10000  // MILLISECONDS.\n,   DEF_SUB_TIMEOUT = 310    // SECONDS.\n,   DEF_KEEPALIVE   = 60     // SECONDS (FOR TIMESYNC).\n,   SECOND          = 1000   // A THOUSAND MILLISECONDS.\n,   URLBIT          = '/'\n,   PARAMSBIT       = '&'\n,   PRESENCE_HB_THRESHOLD = 5\n,   PRESENCE_HB_DEFAULT  = 30\n,   SDK_VER         = '3.7.11'\n,   REPL            = /{([\\w\\-]+)}/g;\n\n/**\n * UTILITIES\n */\nfunction unique() { return'x'+ ++NOW+''+(+new Date) }\nfunction rnow()   { return+new Date }\n\n/**\n * NEXTORIGIN\n * ==========\n * var next_origin = nextorigin();\n */\nvar nextorigin = (function() {\n    var max = 20\n    ,   ori = Math.floor(Math.random() * max);\n    return function( origin, failover ) {\n        return origin.indexOf('pubsub.') > 0\n            && origin.replace(\n             'pubsub', 'ps' + (\n                failover ? generate_uuid().split('-')[0] :\n                (++ori < max? ori : ori=1)\n            ) ) || origin;\n    }\n})();\n\n\n/**\n * Build Url\n * =======\n *\n */\nfunction build_url( url_components, url_params ) {\n    var url    = url_components.join(URLBIT)\n    ,   params = [];\n\n    if (!url_params) return url;\n\n    each( url_params, function( key, value ) {\n        var value_str = (typeof value == 'object')?JSON['stringify'](value):value;\n        (typeof value != 'undefined' &&\n            value != null && encode(value_str).length > 0\n        ) && params.push(key + \"=\" + encode(value_str));\n    } );\n\n    url += \"?\" + params.join(PARAMSBIT);\n    return url;\n}\n\n/**\n * UPDATER\n * =======\n * var timestamp = unique();\n */\nfunction updater( fun, rate ) {\n    var timeout\n    ,   last   = 0\n    ,   runnit = function() {\n        if (last + rate > rnow()) {\n            clearTimeout(timeout);\n            timeout = setTimeout( runnit, rate );\n        }\n        else {\n            last = rnow();\n            fun();\n        }\n    };\n\n    return runnit;\n}\n\n/**\n * GREP\n * ====\n * var list = grep( [1,2,3], function(item) { return item % 2 } )\n */\nfunction grep( list, fun ) {\n    var fin = [];\n    each( list || [], function(l) { fun(l) && fin.push(l) } );\n    return fin\n}\n\n/**\n * SUPPLANT\n * ========\n * var text = supplant( 'Hello {name}!', { name : 'John' } )\n */\nfunction supplant( str, values ) {\n    return str.replace( REPL, function( _, match ) {\n        return values[match] || _\n    } );\n}\n\n/**\n * timeout\n * =======\n * timeout( function(){}, 100 );\n */\nfunction timeout( fun, wait ) {\n    return setTimeout( fun, wait );\n}\n\n/**\n * uuid\n * ====\n * var my_uuid = generate_uuid();\n */\nfunction generate_uuid(callback) {\n    var u = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,\n    function(c) {\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n        return v.toString(16);\n    });\n    if (callback) callback(u);\n    return u;\n}\n\nfunction isArray(arg) {\n  return !!arg && typeof arg !== 'string' && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n  //return !!arg && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n}\n\n/**\n * EACH\n * ====\n * each( [1,2,3], function(item) { } )\n */\nfunction each( o, f) {\n    if ( !o || !f ) return;\n\n    if ( isArray(o) )\n        for ( var i = 0, l = o.length; i < l; )\n            f.call( o[i], o[i], i++ );\n    else\n        for ( var i in o )\n            o.hasOwnProperty    &&\n            o.hasOwnProperty(i) &&\n            f.call( o[i], i, o[i] );\n}\n\n/**\n * MAP\n * ===\n * var list = map( [1,2,3], function(item) { return item + 1 } )\n */\nfunction map( list, fun ) {\n    var fin = [];\n    each( list || [], function( k, v ) { fin.push(fun( k, v )) } );\n    return fin;\n}\n\n\nfunction pam_encode(str) {\n  return encodeURIComponent(str).replace(/[!'()*~]/g, function(c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\n/**\n * ENCODE\n * ======\n * var encoded_data = encode('path');\n */\nfunction encode(path) { return encodeURIComponent(path) }\n\n/**\n * Generate Subscription Channel List\n * ==================================\n * generate_channel_list(channels_object);\n */\nfunction generate_channel_list(channels, nopresence) {\n    var list = [];\n    each( channels, function( channel, status ) {\n        if (nopresence) {\n            if(channel.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel);\n            }\n        } else {\n            if (status.subscribed) list.push(channel);\n        }\n    });\n    return list.sort();\n}\n\n/**\n * Generate Subscription Channel Groups List\n * ==================================\n * generate_channel_group_list(channels_groups object);\n */\nfunction generate_channel_group_list(channel_groups, nopresence) {\n    var list = [];\n    each(channel_groups, function( channel_group, status ) {\n        if (nopresence) {\n            if(channel_group.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel_group);\n            }\n        } else {\n            if (status.subscribed) list.push(channel_group);\n        }\n    });\n    return list.sort();\n}\n\n// PUBNUB READY TO CONNECT\nfunction ready() { timeout( function() {\n    if (READY) return;\n    READY = 1;\n    each( READY_BUFFER, function(connect) { connect() } );\n}, SECOND ); }\n\nfunction PNmessage(args) {\n    msg = args || {'apns' : {}},\n    msg['getPubnubMessage'] = function() {\n        var m = {};\n\n        if (Object.keys(msg['apns']).length) {\n            m['pn_apns'] = {\n                    'aps' : {\n                        'alert' : msg['apns']['alert'] ,\n                        'badge' : msg['apns']['badge']\n                    }\n            }\n            for (var k in msg['apns']) {\n                m['pn_apns'][k] = msg['apns'][k];\n            }\n            var exclude1 = ['badge','alert'];\n            for (var k in exclude1) {\n                delete m['pn_apns'][exclude1[k]];\n            }\n        }\n\n\n\n        if (msg['gcm']) {\n            m['pn_gcm'] = {\n                'data' : msg['gcm']\n            }\n        }\n\n        for (var k in msg) {\n            m[k] = msg[k];\n        }\n        var exclude = ['apns','gcm','publish', 'channel','callback','error'];\n        for (var k in exclude) {\n            delete m[exclude[k]];\n        }\n\n        return m;\n    };\n    msg['publish'] = function() {\n\n        var m = msg.getPubnubMessage();\n\n        if (msg['pubnub'] && msg['channel']) {\n            msg['pubnub'].publish({\n                'message' : m,\n                'channel' : msg['channel'],\n                'callback' : msg['callback'],\n                'error' : msg['error']\n            })\n        }\n    };\n    return msg;\n}\n\nfunction PN_API(setup) {\n    var SUB_WINDOWING =  +setup['windowing']   || DEF_WINDOWING\n    ,   SUB_TIMEOUT   = (+setup['timeout']     || DEF_SUB_TIMEOUT) * SECOND\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   TIME_CHECK    = setup['timecheck']     || 0\n    ,   NOLEAVE       = setup['noleave']       || 0\n    ,   PUBLISH_KEY   = setup['publish_key']   || 'demo'\n    ,   SUBSCRIBE_KEY = setup['subscribe_key'] || 'demo'\n    ,   AUTH_KEY      = setup['auth_key']      || ''\n    ,   SECRET_KEY    = setup['secret_key']    || ''\n    ,   hmac_SHA256   = setup['hmac_SHA256']\n    ,   SSL           = setup['ssl']            ? 's' : ''\n    ,   ORIGIN        = 'http'+SSL+'://'+(setup['origin']||'pubsub.pubnub.com')\n    ,   STD_ORIGIN    = nextorigin(ORIGIN)\n    ,   SUB_ORIGIN    = nextorigin(ORIGIN)\n    ,   CONNECT       = function(){}\n    ,   PUB_QUEUE     = []\n    ,   CLOAK         = true\n    ,   TIME_DRIFT    = 0\n    ,   SUB_CALLBACK  = 0\n    ,   SUB_CHANNEL   = 0\n    ,   SUB_RECEIVER  = 0\n    ,   SUB_RESTORE   = setup['restore'] || 0\n    ,   SUB_BUFF_WAIT = 0\n    ,   TIMETOKEN     = 0\n    ,   RESUMED       = false\n    ,   CHANNELS      = {}\n    ,   CHANNEL_GROUPS       = {}\n    ,   SUB_ERROR     = function(){}\n    ,   STATE         = {}\n    ,   PRESENCE_HB_TIMEOUT  = null\n    ,   PRESENCE_HB          = validate_presence_heartbeat(\n        setup['heartbeat'] || setup['pnexpires'] || 0, setup['error']\n    )\n    ,   PRESENCE_HB_INTERVAL = setup['heartbeat_interval'] || (PRESENCE_HB / 2) -1\n    ,   PRESENCE_HB_RUNNING  = false\n    ,   NO_WAIT_FOR_PENDING  = setup['no_wait_for_pending']\n    ,   COMPATIBLE_35 = setup['compatible_3.5']  || false\n    ,   xdr           = setup['xdr']\n    ,   params        = setup['params'] || {}\n    ,   error         = setup['error']      || function() {}\n    ,   _is_online    = setup['_is_online'] || function() { return 1 }\n    ,   jsonp_cb      = setup['jsonp_cb']   || function() { return 0 }\n    ,   db            = setup['db']         || {'get': function(){}, 'set': function(){}}\n    ,   CIPHER_KEY    = setup['cipher_key']\n    ,   UUID          = setup['uuid'] || ( !setup['unique_uuid'] && db && db['get'](SUBSCRIBE_KEY+'uuid') || '')\n    ,   USE_INSTANCEID = setup['instance_id'] || false\n    ,   INSTANCEID     = ''\n    ,   _poll_timer\n    ,   _poll_timer2;\n\n    if (PRESENCE_HB === 2) PRESENCE_HB_INTERVAL = 1;\n\n    var crypto_obj    = setup['crypto_obj'] ||\n        {\n            'encrypt' : function(a,key){ return a},\n            'decrypt' : function(b,key){return b}\n        };\n\n    function _get_url_params(data) {\n        if (!data) data = {};\n        each( params , function( key, value ) {\n            if (!(key in data)) data[key] = value;\n        });\n        return data;\n    }\n\n    function _object_to_key_list(o) {\n        var l = []\n        each( o , function( key, value ) {\n            l.push(key);\n        });\n        return l;\n    }\n    function _object_to_key_list_sorted(o) {\n        return _object_to_key_list(o).sort();\n    }\n\n    function _get_pam_sign_input_from_params(params) {\n        var si = \"\";\n        var l = _object_to_key_list_sorted(params);\n\n        for (var i in l) {\n            var k = l[i]\n            si += k + \"=\" + pam_encode(params[k]) ;\n            if (i != l.length - 1) si += \"&\"\n        }\n        return si;\n    }\n\n    function validate_presence_heartbeat(heartbeat, cur_heartbeat, error) {\n        var err = false;\n\n        if (typeof heartbeat === 'undefined') {\n            return cur_heartbeat;\n        }\n\n        if (typeof heartbeat === 'number') {\n            if (heartbeat > PRESENCE_HB_THRESHOLD || heartbeat == 0)\n                err = false;\n            else\n                err = true;\n        } else if(typeof heartbeat === 'boolean'){\n            if (!heartbeat) {\n                return 0;\n            } else {\n                return PRESENCE_HB_DEFAULT;\n            }\n        } else {\n            err = true;\n        }\n\n        if (err) {\n            error && error(\"Presence Heartbeat value invalid. Valid range ( x > \" + PRESENCE_HB_THRESHOLD + \" or x = 0). Current Value : \" + (cur_heartbeat || PRESENCE_HB_THRESHOLD));\n            return cur_heartbeat || PRESENCE_HB_THRESHOLD;\n        } else return heartbeat;\n    }\n\n    function encrypt(input, key) {\n        return crypto_obj['encrypt'](input, key || CIPHER_KEY) || input;\n    }\n    function decrypt(input, key) {\n        return crypto_obj['decrypt'](input, key || CIPHER_KEY) ||\n               crypto_obj['decrypt'](input, CIPHER_KEY) ||\n               input;\n    }\n\n    function error_common(message, callback) {\n        callback && callback({ 'error' : message || \"error occurred\"});\n        error && error(message);\n    }\n    function _presence_heartbeat() {\n\n        clearTimeout(PRESENCE_HB_TIMEOUT);\n\n        if (!PRESENCE_HB_INTERVAL || PRESENCE_HB_INTERVAL >= 500 ||\n            PRESENCE_HB_INTERVAL < 1 ||\n            (!generate_channel_list(CHANNELS,true).length  && !generate_channel_group_list(CHANNEL_GROUPS, true).length ) )\n        {\n            PRESENCE_HB_RUNNING = false;\n            return;\n        }\n\n        PRESENCE_HB_RUNNING = true;\n        SELF['presence_heartbeat']({\n            'callback' : function(r) {\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            },\n            'error' : function(e) {\n                error && error(\"Presence Heartbeat unable to reach Pubnub servers.\" + JSON.stringify(e));\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            }\n        });\n    }\n\n    function start_presence_heartbeat() {\n        !PRESENCE_HB_RUNNING && _presence_heartbeat();\n    }\n\n    function publish(next) {\n\n        if (NO_WAIT_FOR_PENDING) {\n            if (!PUB_QUEUE.length) return;\n        } else {\n            if (next) PUB_QUEUE.sending = 0;\n            if ( PUB_QUEUE.sending || !PUB_QUEUE.length ) return;\n            PUB_QUEUE.sending = 1;\n        }\n\n        xdr(PUB_QUEUE.shift());\n    }\n    function each_channel_group(callback) {\n        var count = 0;\n\n        each( generate_channel_group_list(CHANNEL_GROUPS), function(channel_group) {\n            var chang = CHANNEL_GROUPS[channel_group];\n\n            if (!chang) return;\n\n            count++;\n            (callback||function(){})(chang);\n        } );\n\n        return count;\n    }\n\n    function each_channel(callback) {\n        var count = 0;\n\n        each( generate_channel_list(CHANNELS), function(channel) {\n            var chan = CHANNELS[channel];\n\n            if (!chan) return;\n\n            count++;\n            (callback||function(){})(chan);\n        } );\n\n        return count;\n    }\n    function _invoke_callback(response, callback, err) {\n        if (typeof response == 'object') {\n            if (response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n\n                err && err(callback_data);\n                return;\n\n            }\n            if (response['payload']) {\n                if (response['next_page'])\n                    callback && callback(response['payload'], response['next_page']);\n                else\n                    callback && callback(response['payload']);\n                return;\n            }\n        }\n        callback && callback(response);\n    }\n\n    function _invoke_error(response,err) {\n\n        if (typeof response == 'object' && response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n                \n                err && err(callback_data);\n                return;\n        } else {\n            err && err(response);\n        }\n    }\n    function CR(args, callback, url1, data) {\n            var callback        = args['callback']      || callback\n            ,   err             = args['error']         || error\n            ,   jsonp           = jsonp_cb();\n\n            data = data || {};\n            \n            if (!data['auth']) {\n                data['auth'] = args['auth_key'] || AUTH_KEY;\n            }\n            \n            var url = [\n                    STD_ORIGIN, 'v1', 'channel-registration',\n                    'sub-key', SUBSCRIBE_KEY\n                ];\n\n            url.push.apply(url,url1);\n            \n            if (jsonp) data['callback']              = jsonp;\n            \n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n    }\n\n    // Announce Leave Event\n    var SELF = {\n        'LEAVE' : function( channel, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel\n            if (channel.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 2000,\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel), 'leave'\n                ]\n            });\n            return true;\n        },\n        'LEAVE_GROUP' : function( channel_group, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel Group\n            if (channel_group.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (channel_group && channel_group.length > 0) data['channel-group'] = channel_group;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 5000,\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(','), 'leave'\n                ]\n            });\n            return true;\n        },\n        'set_resumed' : function(resumed) {\n                RESUMED = resumed;\n        },\n        'get_cipher_key' : function() {\n            return CIPHER_KEY;\n        },\n        'set_cipher_key' : function(key) {\n            CIPHER_KEY = key;\n        },\n        'raw_encrypt' : function(input, key) {\n            return encrypt(input, key);\n        },\n        'raw_decrypt' : function(input, key) {\n            return decrypt(input, key);\n        },\n        'get_heartbeat' : function() {\n            return PRESENCE_HB;\n        },\n        \n        'set_heartbeat' : function(heartbeat, heartbeat_interval) {\n            PRESENCE_HB = validate_presence_heartbeat(heartbeat, PRESENCE_HB, error);\n            PRESENCE_HB_INTERVAL = heartbeat_interval || (PRESENCE_HB / 2) - 1;\n            if (PRESENCE_HB == 2) {\n                PRESENCE_HB_INTERVAL = 1;\n            }\n            CONNECT();\n            _presence_heartbeat();\n        },\n        \n        'get_heartbeat_interval' : function() {\n            return PRESENCE_HB_INTERVAL;\n        },\n        \n        'set_heartbeat_interval' : function(heartbeat_interval) {\n            PRESENCE_HB_INTERVAL = heartbeat_interval;\n            _presence_heartbeat();\n        },\n        \n        'get_version' : function() {\n            return SDK_VER;\n        },\n        'getGcmMessageObject' : function(obj) {\n            return {\n                'data' : obj\n            }\n        },\n        'getApnsMessageObject' : function(obj) {\n            var x =  {\n                'aps' : { 'badge' : 1, 'alert' : ''}\n            }\n            for (k in obj) {\n                k[x] = obj[k];\n            }\n            return x;\n        },\n        'newPnMessage' : function() {\n            var x = {};\n            if (gcm) x['pn_gcm'] = gcm;\n            if (apns) x['pn_apns'] = apns;\n            for ( k in n ) {\n                x[k] = n[k];\n            }\n            return x;\n        },\n\n        '_add_param' : function(key,val) {\n            params[key] = val;\n        },\n\n        'channel_group' : function(args, callback) {\n            var ns_ch       = args['channel_group']\n            ,   callback    = callback         || args['callback']\n            ,   channels    = args['channels'] || args['channel']\n            ,   cloak       = args['cloak']\n            ,   namespace\n            ,   channel_group\n            ,   url = []\n            ,   data = {}\n            ,   mode = args['mode'] || 'add';\n\n\n            if (ns_ch) {\n                var ns_ch_a = ns_ch.split(':');\n\n                if (ns_ch_a.length > 1) {\n                    namespace = (ns_ch_a[0] === '*')?null:ns_ch_a[0];\n\n                    channel_group = ns_ch_a[1];\n                } else {\n                    channel_group = ns_ch_a[0];\n                }\n            }\n\n            namespace && url.push('namespace') && url.push(encode(namespace));\n\n            url.push('channel-group');\n\n            if (channel_group && channel_group !== '*') {\n                url.push(channel_group);\n            }\n\n            if (channels ) {\n                if (isArray(channels)) {\n                    channels = channels.join(',');\n                }\n                data[mode] = channels;\n                data['cloak'] = (CLOAK)?'true':'false';\n            } else {\n                if (mode === 'remove') url.push('remove');\n            }\n\n            if (typeof cloak != 'undefined') data['cloak'] = (cloak)?'true':'false';\n\n            CR(args, callback, url, data);\n        },\n\n        'channel_group_list_groups' : function(args, callback) {\n            var namespace;\n\n            namespace = args['namespace'] || args['ns'] || args['channel_group'] || null;\n            if (namespace) {\n                args[\"channel_group\"] = namespace + \":*\";\n            }\n\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_list_channels' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_remove_channel' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_remove_group' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (args['channel']) return error('Use channel_group_remove_channel if you want to remove a channel from a group.');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_add_channel' : function(args, callback) {\n           if (!args['channel_group']) return error('Missing Channel Group');\n           if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_cloak' : function(args, callback) {\n            if (typeof args['cloak'] == 'undefined') {\n                callback(CLOAK);\n                return;\n            }\n            CLOAK = args['cloak'];\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_list_namespaces' : function(args, callback) {\n            var url = ['namespace'];\n            CR(args, callback, url);\n        },\n        'channel_group_remove_namespace' : function(args, callback) {\n            var url = ['namespace',args['namespace'],'remove'];\n            CR(args, callback, url);\n        },\n\n        /*\n            PUBNUB.history({\n                channel  : 'my_chat_channel',\n                limit    : 100,\n                callback : function(history) { }\n            });\n        */\n        'history' : function( args, callback ) {\n            var callback         = args['callback'] || callback\n            ,   count            = args['count']    || args['limit'] || 100\n            ,   reverse          = args['reverse']  || \"false\"\n            ,   err              = args['error']    || function(){}\n            ,   auth_key         = args['auth_key'] || AUTH_KEY\n            ,   cipher_key       = args['cipher_key']\n            ,   channel          = args['channel']\n            ,   channel_group    = args['channel_group']\n            ,   start            = args['start']\n            ,   end              = args['end']\n            ,   include_token    = args['include_token']\n            ,   params           = {}\n            ,   jsonp            = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) return error('Missing Channel');\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            params['stringtoken'] = 'true';\n            params['count']       = count;\n            params['reverse']     = reverse;\n            params['auth']        = auth_key;\n\n            if (channel_group) {\n                params['channel-group'] = channel_group;\n                if (!channel) {\n                    channel = ','; \n                }\n            }\n            if (jsonp) params['callback']              = jsonp;\n            if (start) params['start']                 = start;\n            if (end)   params['end']                   = end;\n            if (include_token) params['include_token'] = 'true';\n\n            // Send Message\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(params),\n                success  : function(response) {\n                    if (typeof response == 'object' && response['error']) {\n                        err({'message' : response['message'], 'payload' : response['payload']});\n                        return;\n                    }\n                    var messages = response[0];\n                    var decrypted_messages = [];\n                    for (var a = 0; a < messages.length; a++) {\n                        var new_message = decrypt(messages[a],cipher_key);\n                        try {\n                            decrypted_messages['push'](JSON['parse'](new_message));\n                        } catch (e) {\n                            decrypted_messages['push']((new_message));\n                        }\n                    }\n                    callback([decrypted_messages, response[1], response[2]]);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'history', 'sub-key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel)\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.replay({\n                source      : 'my_channel',\n                destination : 'new_channel'\n            });\n        */\n        'replay' : function(args, callback) {\n            var callback    = callback || args['callback'] || function(){}\n            ,   auth_key    = args['auth_key'] || AUTH_KEY\n            ,   source      = args['source']\n            ,   destination = args['destination']\n            ,   stop        = args['stop']\n            ,   start       = args['start']\n            ,   end         = args['end']\n            ,   reverse     = args['reverse']\n            ,   limit       = args['limit']\n            ,   jsonp       = jsonp_cb()\n            ,   data        = {}\n            ,   url;\n\n            // Check User Input\n            if (!source)        return error('Missing Source Channel');\n            if (!destination)   return error('Missing Destination Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Setup URL Params\n            if (jsonp != '0') data['callback'] = jsonp;\n            if (stop)         data['stop']     = 'all';\n            if (reverse)      data['reverse']  = 'true';\n            if (start)        data['start']    = start;\n            if (end)          data['end']      = end;\n            if (limit)        data['count']    = limit;\n\n            data['auth'] = auth_key;\n\n            // Compose URL Parts\n            url = [\n                STD_ORIGIN, 'v1', 'replay',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                source, destination\n            ];\n\n            // Start (or Stop) Replay!\n            xdr({\n                callback : jsonp,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function() { callback([ 0, 'Disconnected' ]) },\n                url      : url,\n                data     : _get_url_params(data)\n            });\n        },\n\n        /*\n            PUBNUB.auth('AJFLKAJSDKLA');\n        */\n        'auth' : function(auth) {\n            AUTH_KEY = auth;\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.time(function(time){ });\n        */\n        'time' : function(callback) {\n            var jsonp = jsonp_cb();\n\n            var data = { 'uuid' : UUID, 'auth' : AUTH_KEY }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [STD_ORIGIN, 'time', jsonp],\n                success  : function(response) { callback(response[0]) },\n                fail     : function() { callback(0) }\n            });\n        },\n\n        /*\n            PUBNUB.publish({\n                channel : 'my_chat_channel',\n                message : 'hello!'\n            });\n        */\n        'publish' : function( args, callback ) {\n            var msg      = args['message'];\n            if (!msg) return error('Missing Message');\n\n            var callback = callback || args['callback'] || msg['callback'] || function(){}\n            ,   channel  = args['channel'] || msg['channel']\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   cipher_key = args['cipher_key']\n            ,   err      = args['error'] || msg['error'] || function() {}\n            ,   post     = args['post'] || false\n            ,   store    = ('store_in_history' in args) ? args['store_in_history']: true\n            ,   jsonp    = jsonp_cb()\n            ,   add_msg  = 'push'\n            ,   url;\n\n            if (args['prepend']) add_msg = 'unshift'\n\n            if (!channel)       return error('Missing Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (msg['getPubnubMessage']) {\n                msg = msg['getPubnubMessage']();\n            }\n\n            // If trying to send Object\n            msg = JSON['stringify'](encrypt(msg, cipher_key));\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'publish',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                0, encode(channel),\n                jsonp, encode(msg)\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key }\n\n            if (!store) params['store'] =\"0\"\n\n            if (USE_INSTANCEID) params['instanceid'] = INSTANCEID;\n\n            // Queue Message Send\n            PUB_QUEUE[add_msg]({\n                callback : jsonp,\n                timeout  : SECOND * 5,\n                url      : url,\n                data     : _get_url_params(params),\n                fail     : function(response){\n                    _invoke_error(response, err);\n                    publish(1);\n                },\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                    publish(1);\n                },\n                mode     : (post)?'POST':'GET'\n            });\n\n            // Send Message\n            publish();\n        },\n\n        /*\n            PUBNUB.unsubscribe({ channel : 'my_chat' });\n        */\n        'unsubscribe' : function(args, callback) {\n            var channel       = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   auth_key      = args['auth_key']    || AUTH_KEY\n            ,   callback      = callback            || args['callback'] || function(){}\n            ,   err           = args['error']       || function(){};\n\n            TIMETOKEN   = 0;\n            //SUB_RESTORE = 1;    REVISIT !!!!\n\n            if (channel) {\n                // Prepare Channel(s)\n                channel = map( (\n                    channel.join ? channel.join(',') : ''+channel\n                ).split(','), function(channel) {\n                    if (!CHANNELS[channel]) return;\n                    return channel + ',' + channel + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over Channels\n                each( channel.split(','), function(ch) {\n                    var CB_CALLED = true;\n                    if (!ch) return;\n                    CHANNELS[ch] = 0;\n                    if (ch in STATE) delete STATE[ch];\n                    if (READY) {\n                        CB_CALLED = SELF['LEAVE']( ch, 0 , auth_key, callback, err);\n                    }\n                    if (!CB_CALLED) callback({action : \"leave\"});\n\n                    \n                } );\n            }\n\n            if (channel_group) {\n                // Prepare channel group(s)\n                channel_group = map( (\n                    channel_group.join ? channel_group.join(',') : ''+channel_group\n                ).split(','), function(channel_group) {\n                    if (!CHANNEL_GROUPS[channel_group]) return;\n                    return channel_group + ',' + channel_group + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over channel groups\n                each( channel_group.split(','), function(chg) {\n                    var CB_CALLED = true;\n                    if (!chg) return;\n                    CHANNEL_GROUPS[chg] = 0;\n                    if (chg in STATE) delete STATE[chg];\n                    if (READY) {\n                        CB_CALLED = SELF['LEAVE_GROUP']( chg, 0 , auth_key, callback, err);\n                    }\n                    if (!CB_CALLED) callback({action : \"leave\"});\n\n                } );\n            }\n\n            // Reset Connection if Count Less\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.subscribe({\n                channel  : 'my_chat'\n                callback : function(message) { }\n            });\n        */\n        'subscribe' : function( args, callback ) {\n            var channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   callback        = callback            || args['callback']\n            ,   callback        = callback            || args['message']\n            ,   connect         = args['connect']     || function(){}\n            ,   reconnect       = args['reconnect']   || function(){}\n            ,   disconnect      = args['disconnect']  || function(){}\n            ,   SUB_ERROR       = args['error']       || SUB_ERROR || function(){}\n            ,   idlecb          = args['idle']        || function(){}\n            ,   presence        = args['presence']    || 0\n            ,   noheresync      = args['noheresync']  || 0\n            ,   backfill        = args['backfill']    || 0\n            ,   timetoken       = args['timetoken']   || 0\n            ,   sub_timeout     = args['timeout']     || SUB_TIMEOUT\n            ,   windowing       = args['windowing']   || SUB_WINDOWING\n            ,   state           = args['state']\n            ,   heartbeat       = args['heartbeat'] || args['pnexpires']\n            ,   heartbeat_interval = args['heartbeat_interval']\n            ,   restore         = args['restore'] || SUB_RESTORE;\n\n            AUTH_KEY            = args['auth_key']    || AUTH_KEY;\n\n            // Restore Enabled?\n            SUB_RESTORE = restore;\n\n            // Always Reset the TT\n            TIMETOKEN = timetoken;\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) {\n                return error('Missing Channel');\n            }\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (heartbeat || heartbeat === 0 || heartbeat_interval || heartbeat_interval === 0) {\n                SELF['set_heartbeat'](heartbeat, heartbeat_interval);\n            }\n\n            // Setup Channel(s)\n            if (channel) {\n                each( (channel.join ? channel.join(',') : ''+channel).split(','),\n                function(channel) {\n                    var settings = CHANNELS[channel] || {};\n\n                    // Store Channel State\n                    CHANNELS[SUB_CHANNEL = channel] = {\n                        name         : channel,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    if (state) {\n                        if (channel in state) {\n                            STATE[channel] = state[channel];\n                        } else {\n                            STATE[channel] = state;\n                        }\n                    }\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel'  : channel + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel'  : channel,\n                        'data'     : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel ); } );\n                        }\n                    });\n                } );\n            }\n\n            // Setup Channel Groups\n            if (channel_group) {\n                each( (channel_group.join ? channel_group.join(',') : ''+channel_group).split(','),\n                function(channel_group) {\n                    var settings = CHANNEL_GROUPS[channel_group] || {};\n\n                    CHANNEL_GROUPS[channel_group] = {\n                        name         : channel_group,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel_group'  : channel_group + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore,\n                        'auth_key' : AUTH_KEY\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel_group'  : channel_group,\n                        'data'           : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel_group ); } );\n                        }\n                    });\n                } );\n            }\n\n\n            // Test Network Connection\n            function _test_connection(success) {\n                if (success) {\n                    // Begin Next Socket Connection\n                    timeout( CONNECT, SECOND );\n                }\n                else {\n                    // New Origin on Failed Connection\n                    STD_ORIGIN = nextorigin( ORIGIN, 1 );\n                    SUB_ORIGIN = nextorigin( ORIGIN, 1 );\n\n                    // Re-test Connection\n                    timeout( function() {\n                        SELF['time'](_test_connection);\n                    }, SECOND );\n                }\n\n                // Disconnect & Reconnect\n                each_channel(function(channel){\n                    // Reconnect\n                    if (success && channel.disconnected) {\n                        channel.disconnected = 0;\n                        return channel.reconnect(channel.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel.disconnected) {\n                        channel.disconnected = 1;\n                        channel.disconnect(channel.name);\n                    }\n                });\n                \n                // Disconnect & Reconnect for channel groups\n                each_channel_group(function(channel_group){\n                    // Reconnect\n                    if (success && channel_group.disconnected) {\n                        channel_group.disconnected = 0;\n                        return channel_group.reconnect(channel_group.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel_group.disconnected) {\n                        channel_group.disconnected = 1;\n                        channel_group.disconnect(channel_group.name);\n                    }\n                });\n            }\n\n            // Evented Subscribe\n            function _connect() {\n                var jsonp           = jsonp_cb()\n                ,   channels        = generate_channel_list(CHANNELS).join(',')\n                ,   channel_groups  = generate_channel_group_list(CHANNEL_GROUPS).join(',');\n\n                // Stop Connection\n                if (!channels && !channel_groups) return;\n\n                if (!channels) channels = ',';\n\n                // Connect to PubNub Subscribe Servers\n                _reset_offline();\n\n                var data = _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY });\n\n                if (channel_groups) {\n                    data['channel-group'] = channel_groups;\n                }\n\n\n                var st = JSON.stringify(STATE);\n                if (st.length > 2) data['state'] = JSON.stringify(STATE);\n\n                if (PRESENCE_HB) data['heartbeat'] = PRESENCE_HB;\n\n                if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n                start_presence_heartbeat();\n                SUB_RECEIVER = xdr({\n                    timeout  : sub_timeout,\n                    callback : jsonp,\n                    fail     : function(response) {\n                        if (response && response['error'] && response['service']) {\n                            _invoke_error(response, SUB_ERROR);\n                            _test_connection(1);\n                        } else {\n                            SELF['time'](function(success){\n                                !success && ( _invoke_error(response, SUB_ERROR));\n                                _test_connection(success);\n                            });\n                        }\n                    },\n                    data     : _get_url_params(data),\n                    url      : [\n                        SUB_ORIGIN, 'subscribe',\n                        SUBSCRIBE_KEY, encode(channels),\n                        jsonp, TIMETOKEN\n                    ],\n                    success : function(messages) {\n\n                        // Check for Errors\n                        if (!messages || (\n                            typeof messages == 'object' &&\n                            'error' in messages         &&\n                            messages['error']\n                        )) {\n                            SUB_ERROR(messages['error']);\n                            return timeout( CONNECT, SECOND );\n                        }\n\n                        // User Idle Callback\n                        idlecb(messages[1]);\n\n                        // Restore Previous Connection Point if Needed\n                        TIMETOKEN = !TIMETOKEN               &&\n                                    SUB_RESTORE              &&\n                                    db['get'](SUBSCRIBE_KEY) || messages[1];\n\n                        /*\n                        // Connect\n                        each_channel_registry(function(registry){\n                            if (registry.connected) return;\n                            registry.connected = 1;\n                            registry.connect(channel.name);\n                        });\n                        */\n\n                        // Connect\n                        each_channel(function(channel){\n                            if (channel.connected) return;\n                            channel.connected = 1;\n                            channel.connect(channel.name);\n                        });\n\n                        // Connect for channel groups\n                        each_channel_group(function(channel_group){\n                            if (channel_group.connected) return;\n                            channel_group.connected = 1;\n                            channel_group.connect(channel_group.name);\n                        });\n\n                        if (RESUMED && !SUB_RESTORE) {\n                                TIMETOKEN = 0;\n                                RESUMED = false;\n                                // Update Saved Timetoken\n                                db['set']( SUBSCRIBE_KEY, 0 );\n                                timeout( _connect, windowing );\n                                return;\n                        }\n\n                        // Invoke Memory Catchup and Receive Up to 100\n                        // Previous Messages from the Queue.\n                        if (backfill) {\n                            TIMETOKEN = 10000;\n                            backfill  = 0;\n                        }\n\n                        // Update Saved Timetoken\n                        db['set']( SUBSCRIBE_KEY, messages[1] );\n\n                        // Route Channel <---> Callback for Message\n                        var next_callback = (function() {\n                            var channels = '';\n                            var channels2 = '';\n\n                            if (messages.length > 3) {\n                                channels  = messages[3];\n                                channels2 = messages[2];\n                            } else if (messages.length > 2) {\n                                channels = messages[2];\n                            } else {\n                                channels =  map(\n                                    generate_channel_list(CHANNELS), function(chan) { return map(\n                                        Array(messages[0].length)\n                                        .join(',').split(','),\n                                        function() { return chan; }\n                                    ) }).join(',')\n                            }\n\n                            var list  = channels.split(',');\n                            var list2 = (channels2)?channels2.split(','):[];\n\n                            return function() {\n                                var channel  = list.shift()||SUB_CHANNEL;\n                                var channel2 = list2.shift();\n\n                                var chobj = {};\n\n                                if (channel2) {\n                                    if (channel && channel.indexOf('-pnpres') >= 0 \n                                        && channel2.indexOf('-pnpres') < 0) {\n                                        channel2 += '-pnpres';\n                                    }\n                                    chobj = CHANNEL_GROUPS[channel2] || CHANNELS[channel2] || {'callback' : function(){}};\n                                } else {\n                                    chobj = CHANNELS[channel];\n                                }\n\n                                var r = [\n                                    chobj\n                                    .callback||SUB_CALLBACK,\n                                    channel.split(PRESENCE_SUFFIX)[0]\n                                ];\n                                channel2 && r.push(channel2.split(PRESENCE_SUFFIX)[0]);\n                                return r;\n                            };\n                        })();\n\n                        var latency = detect_latency(+messages[1]);\n                        each( messages[0], function(msg) {\n                            var next = next_callback();\n                            var decrypted_msg = decrypt(msg,\n                                (CHANNELS[next[1]])?CHANNELS[next[1]]['cipher_key']:null);\n                            next[0] && next[0]( decrypted_msg, messages, next[2] || next[1], latency, next[1]);\n                        });\n\n                        timeout( _connect, windowing );\n                    }\n                });\n            }\n\n            CONNECT = function() {\n                _reset_offline();\n                timeout( _connect, windowing );\n            };\n\n            // Reduce Status Flicker\n            if (!READY) return READY_BUFFER.push(CONNECT);\n\n            // Connect Now\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.here_now({ channel : 'my_chat', callback : fun });\n        */\n        'here_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   jsonp    = jsonp_cb()\n            ,   uuids    = ('uuids' in args) ? args['uuids'] : true\n            ,   state    = args['state']\n            ,   data     = { 'uuid' : UUID, 'auth' : auth_key };\n\n            if (!uuids) data['disable_uuids'] = 1;\n            if (state) data['state'] = 1;\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            var url = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY\n                ];\n\n            channel && url.push('channel') && url.push(encode(channel));\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (channel_group) {\n                data['channel-group'] = channel_group;\n                !channel && url.push('channel') && url.push(','); \n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n        },\n\n        /*\n            PUBNUB.current_channels_by_uuid({ channel : 'my_chat', callback : fun });\n        */\n        'where_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   uuid     = args['uuid']     || UUID\n            ,   data     = { 'auth' : auth_key };\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY,\n                    'uuid', encode(uuid)\n                ]\n            });\n        },\n\n        'state' : function(args, callback) {\n            var callback = args['callback'] || callback || function(r) {}\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   state    = args['state']\n            ,   uuid     = args['uuid'] || UUID\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   url\n            ,   data     = _get_url_params({ 'auth' : auth_key });\n\n            // Make sure we have a Channel\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!uuid) return error('Missing UUID');\n            if (!channel && !channel_group) return error('Missing Channel');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (typeof channel != 'undefined'\n                && CHANNELS[channel] && CHANNELS[channel].subscribed ) {\n                if (state) STATE[channel] = state;\n            }\n\n            if (typeof channel_group != 'undefined'\n                && CHANNEL_GROUPS[channel_group]\n                && CHANNEL_GROUPS[channel_group].subscribed\n                ) {\n                if (state) STATE[channel_group] = state;\n                data['channel-group'] = channel_group;\n\n                if (!channel) {\n                    channel = ',';\n                }\n            }\n\n            data['state'] = JSON.stringify(state);\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            if (state) {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', uuid, 'data'\n                ]\n            } else {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', encode(uuid)\n                ]\n            }\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n\n            });\n\n        },\n\n        /*\n            PUBNUB.grant({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                ttl      : 24 * 60, // Minutes\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'grant' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']  || args['channels']\n            ,   channel_group   = args['channel_group']\n            ,   jsonp           = jsonp_cb()\n            ,   ttl             = args['ttl']\n            ,   r               = (args['read'] )?\"1\":\"0\"\n            ,   w               = (args['write'])?\"1\":\"0\"\n            ,   m               = (args['manage'])?\"1\":\"0\"\n            ,   auth_key        = args['auth_key'] || args['auth_keys'];\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\" + PUBLISH_KEY + \"\\n\"\n                    + \"grant\" + \"\\n\";\n\n            var data = {\n                'w'         : w,\n                'r'         : r,\n                'timestamp' : timestamp\n            };\n            if (args['manage']) {\n                data['m'] = m;\n            }\n            if (isArray(channel)) {\n                channel = channel['join'](',');\n            }\n            if (isArray(auth_key)) {\n                auth_key = auth_key['join'](',');\n            }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (ttl || ttl === 0) data['ttl'] = ttl;\n\n            if (auth_key) data['auth'] = auth_key;\n\n            data = _get_url_params(data)\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'grant' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n         PUBNUB.mobile_gw_provision ({\n         device_id: 'A655FBA9931AB',\n         op       : 'add' | 'remove',\n         gw_type  : 'apns' | 'gcm',\n         channel  : 'my_chat',\n         callback : fun,\n         error    : fun,\n         });\n         */\n\n        'mobile_gw_provision' : function( args ) {\n\n            var callback = args['callback'] || function(){}\n                ,   auth_key       = args['auth_key'] || AUTH_KEY\n                ,   err            = args['error'] || function() {}\n                ,   jsonp          = jsonp_cb()\n                ,   channel        = args['channel']\n                ,   op             = args['op']\n                ,   gw_type        = args['gw_type']\n                ,   device_id      = args['device_id']\n                ,   url;\n\n            if (!device_id)     return error('Missing Device ID (device_id)');\n            if (!gw_type)       return error('Missing GW Type (gw_type: gcm or apns)');\n            if (!op)            return error('Missing GW Operation (op: add or remove)');\n            if (!channel)       return error('Missing gw destination Channel (channel)');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'v1/push/sub-key',\n                SUBSCRIBE_KEY, 'devices', device_id\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key, 'type': gw_type};\n\n            if (op == \"add\") {\n                params['add'] = channel;\n            } else if (op == \"remove\") {\n                params['remove'] = channel;\n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : params,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n        },\n\n        /*\n            PUBNUB.audit({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'audit' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   auth_key        = args['auth_key']\n            ,   jsonp           = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\"\n                + PUBLISH_KEY + \"\\n\"\n                + \"audit\" + \"\\n\";\n\n            var data = {'timestamp' : timestamp };\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (auth_key) data['auth']    = auth_key;\n\n            data = _get_url_params(data);\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'audit' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.revoke({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'revoke' : function( args, callback ) {\n            args['read']  = false;\n            args['write'] = false;\n            SELF['grant']( args, callback );\n        },\n        'set_uuid' : function(uuid) {\n            UUID = uuid;\n            CONNECT();\n        },\n        'get_uuid' : function() {\n            return UUID;\n        },\n        'isArray'  : function(arg) {\n            return isArray(arg);\n        },\n        'get_subscibed_channels' : function() {\n            return generate_channel_list(CHANNELS, true);\n        },\n        'presence_heartbeat' : function(args) {\n            var callback = args['callback'] || function() {}\n            var err      = args['error']    || function() {}\n            var jsonp    = jsonp_cb();\n            var data     = { 'uuid' : UUID, 'auth' : AUTH_KEY };\n\n            var st = JSON['stringify'](STATE);\n            if (st.length > 2) data['state'] = JSON['stringify'](STATE);\n\n            if (PRESENCE_HB > 0 && PRESENCE_HB < 320) data['heartbeat'] = PRESENCE_HB;\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            var channels        = encode(generate_channel_list(CHANNELS, true)['join'](','));\n            var channel_groups  = generate_channel_group_list(CHANNEL_GROUPS, true)['join'](',');\n\n            if (!channels) channels = ',';\n            if (channel_groups) data['channel-group'] = channel_groups;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel' , channels,\n                    'heartbeat'\n                ],\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) { _invoke_error(response, err); }\n            });\n        },\n        'stop_timers': function () {\n            clearTimeout(_poll_timer);\n            clearTimeout(_poll_timer2);\n        },\n\n        // Expose PUBNUB Functions\n        'xdr'           : xdr,\n        'ready'         : ready,\n        'db'            : db,\n        'uuid'          : generate_uuid,\n        'map'           : map,\n        'each'          : each,\n        'each-channel'  : each_channel,\n        'grep'          : grep,\n        'offline'       : function(){ _reset_offline(\n            1, { \"message\" : \"Offline. Please check your network settings.\" })\n        },\n        'supplant'      : supplant,\n        'now'           : rnow,\n        'unique'        : unique,\n        'updater'       : updater\n    };\n\n    function _poll_online() {\n        _is_online() || _reset_offline( 1, {\n            \"error\" : \"Offline. Please check your network settings. \"\n        });\n        _poll_timer && clearTimeout(_poll_timer);\n        _poll_timer = timeout( _poll_online, SECOND );\n    }\n\n    function _poll_online2() {\n        if (!TIME_CHECK) return;\n        SELF['time'](function(success){\n            detect_time_detla( function(){}, success );\n            success || _reset_offline( 1, {\n                \"error\" : \"Heartbeat failed to connect to Pubnub Servers.\" +\n                    \"Please check your network settings.\"\n                });\n            _poll_timer2 && clearTimeout(_poll_timer2);\n            _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n        });\n    }\n\n    function _reset_offline(err, msg) {\n        SUB_RECEIVER && SUB_RECEIVER(err, msg);\n        SUB_RECEIVER = null;\n\n        clearTimeout(_poll_timer);\n        clearTimeout(_poll_timer2);\n    }\n    \n    if (!UUID) UUID = SELF['uuid']();\n    if (!INSTANCEID) INSTANCEID = SELF['uuid']();\n    db['set']( SUBSCRIBE_KEY + 'uuid', UUID );\n\n    _poll_timer  = timeout( _poll_online,  SECOND    );\n    _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n    PRESENCE_HB_TIMEOUT = timeout(\n        start_presence_heartbeat,\n        ( PRESENCE_HB_INTERVAL - 3 ) * SECOND\n    );\n\n    // Detect Age of Message\n    function detect_latency(tt) {\n        var adjusted_time = rnow() - TIME_DRIFT;\n        return adjusted_time - tt / 10000;\n    }\n\n    detect_time_detla();\n    function detect_time_detla( cb, time ) {\n        var stime = rnow();\n\n        time && calculate(time) || SELF['time'](calculate);\n\n        function calculate(time) {\n            if (!time) return;\n            var ptime   = time / 10000\n            ,   latency = (rnow() - stime) / 2;\n            TIME_DRIFT = rnow() - (ptime + latency);\n            cb && cb(TIME_DRIFT);\n        }\n    }\n\n    return SELF;\n}\nfunction crypto_obj() {\n\n    function SHA256(s) {\n        return CryptoJS['SHA256'](s)['toString'](CryptoJS['enc']['Hex']);\n    }\n\n    var iv = \"0123456789012345\";\n\n    var allowedKeyEncodings = ['hex', 'utf8', 'base64', 'binary'];\n    var allowedKeyLengths = [128, 256];\n    var allowedModes = ['ecb', 'cbc'];\n\n    var defaultOptions = {\n        'encryptKey': true,\n        'keyEncoding': 'utf8',\n        'keyLength': 256,\n        'mode': 'cbc'\n    };\n\n    function parse_options(options) {\n\n        // Defaults\n        options = options || {};\n        if (!options['hasOwnProperty']('encryptKey')) options['encryptKey'] = defaultOptions['encryptKey'];\n        if (!options['hasOwnProperty']('keyEncoding')) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (!options['hasOwnProperty']('keyLength')) options['keyLength'] = defaultOptions['keyLength'];\n        if (!options['hasOwnProperty']('mode')) options['mode'] = defaultOptions['mode'];\n\n        // Validation\n        if (allowedKeyEncodings['indexOf'](options['keyEncoding']['toLowerCase']()) == -1) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (allowedKeyLengths['indexOf'](parseInt(options['keyLength'], 10)) == -1) options['keyLength'] = defaultOptions['keyLength'];\n        if (allowedModes['indexOf'](options['mode']['toLowerCase']()) == -1) options['mode'] = defaultOptions['mode'];\n\n        return options;\n\n    }\n\n    function decode_key(key, options) {\n        if (options['keyEncoding'] == 'base64') {\n            return CryptoJS['enc']['Base64']['parse'](key);\n        } else if (options['keyEncoding'] == 'hex') {\n            return CryptoJS['enc']['Hex']['parse'](key);\n        } else {\n            return key;\n        }\n    }\n\n    function get_padded_key(key, options) {\n        key = decode_key(key, options);\n        if (options['encryptKey']) {\n            return CryptoJS['enc']['Utf8']['parse'](SHA256(key)['slice'](0, 32));\n        } else {\n            return key;\n        }\n    }\n\n    function get_mode(options) {\n        if (options['mode'] == 'ecb') {\n            return CryptoJS['mode']['ECB'];\n        } else {\n            return CryptoJS['mode']['CBC'];\n        }\n    }\n\n    function get_iv(options) {\n        return (options['mode'] == 'cbc') ? CryptoJS['enc']['Utf8']['parse'](iv) : null;\n    }\n\n    return {\n\n        'encrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            var hex_message = JSON['stringify'](data);\n            var encryptedHexArray = CryptoJS['AES']['encrypt'](hex_message, cipher_key, {'iv': iv, 'mode': mode})['ciphertext'];\n            var base_64_encrypted = encryptedHexArray['toString'](CryptoJS['enc']['Base64']);\n            return base_64_encrypted || data;\n        },\n\n        'decrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            try {\n                var binary_enc = CryptoJS['enc']['Base64']['parse'](data);\n                var json_plain = CryptoJS['AES']['decrypt']({'ciphertext': binary_enc}, cipher_key, {'iv': iv, 'mode': mode})['toString'](CryptoJS['enc']['Utf8']);\n                var plaintext = JSON['parse'](json_plain);\n                return plaintext;\n            }\n            catch (e) {\n                return undefined;\n            }\n        }\n    };\n}\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     UTIL     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nwindow['PUBNUB'] || (function() {\n\n/**\n * UTIL LOCALS\n */\n\nvar SWF             = 'https://pubnub.a.ssl.fastly.net/pubnub.swf'\n,   ASYNC           = 'async'\n,   UA              = navigator.userAgent\n,   PNSDK           = 'PubNub-JS-' + 'Web' + '/' + '3.7.11'\n,   XORIGN          = UA.indexOf('MSIE 6') == -1;\n\n/**\n * CONSOLE COMPATIBILITY\n */\nwindow.console || (window.console=window.console||{});\nconsole.log    || (\n    console.log   =\n    console.error =\n    ((window.opera||{}).postError||function(){})\n);\n\n/**\n * LOCAL STORAGE OR COOKIE\n */\nvar db = (function(){\n    var store = {};\n    var ls = false;\n    try {\n        ls = window['localStorage'];\n    } catch (e) { }\n    var cookieGet = function(key) {\n        if (document.cookie.indexOf(key) == -1) return null;\n        return ((document.cookie||'').match(\n            RegExp(key+'=([^;]+)')\n        )||[])[1] || null;\n    };\n    var cookieSet = function( key, value ) {\n        document.cookie = key + '=' + value +\n            '; expires=Thu, 1 Aug 2030 20:00:00 UTC; path=/';\n    };\n    var cookieTest = (function() {\n        try {\n            cookieSet('pnctest', '1');\n            return cookieGet('pnctest') === '1';\n        } catch (e) {\n            return false;\n        }\n    }());\n    return {\n        'get' : function(key) {\n            try {\n                if (ls) return ls.getItem(key);\n                if (cookieTest) return cookieGet(key);\n                return store[key];\n            } catch(e) {\n                return store[key];\n            }\n        },\n        'set' : function( key, value ) {\n            try {\n                if (ls) return ls.setItem( key, value ) && 0;\n                if (cookieTest) cookieSet( key, value );\n                store[key] = value;\n            } catch(e) {\n                store[key] = value;\n            }\n        }\n    };\n})();\n\nfunction get_hmac_SHA256(data,key) {\n    var hash = CryptoJS['HmacSHA256'](data, key);\n    return hash.toString(CryptoJS['enc']['Base64']);\n}\n\n/**\n * $\n * =\n * var div = $('divid');\n */\nfunction $(id) { return document.getElementById(id) }\n\n/**\n * ERROR\n * =====\n * error('message');\n */\nfunction error(message) { console['error'](message) }\n\n/**\n * SEARCH\n * ======\n * var elements = search('a div span');\n */\nfunction search( elements, start) {\n    var list = [];\n    each( elements.split(/\\s+/), function(el) {\n        each( (start || document).getElementsByTagName(el), function(node) {\n            list.push(node);\n        } );\n    });\n    return list;\n}\n\n/**\n * BIND\n * ====\n * bind( 'keydown', search('a')[0], function(element) {\n *     ...\n * } );\n */\nfunction bind( type, el, fun ) {\n    each( type.split(','), function(etype) {\n        var rapfun = function(e) {\n            if (!e) e = window.event;\n            if (!fun(e)) {\n                e.cancelBubble = true;\n                e.preventDefault  && e.preventDefault();\n                e.stopPropagation && e.stopPropagation();\n            }\n        };\n\n        if ( el.addEventListener ) el.addEventListener( etype, rapfun, false );\n        else if ( el.attachEvent ) el.attachEvent( 'on' + etype, rapfun );\n        else  el[ 'on' + etype ] = rapfun;\n    } );\n}\n\n/**\n * UNBIND\n * ======\n * unbind( 'keydown', search('a')[0] );\n */\nfunction unbind( type, el, fun ) {\n    if ( el.removeEventListener ) el.removeEventListener( type, false );\n    else if ( el.detachEvent ) el.detachEvent( 'on' + type, false );\n    else  el[ 'on' + type ] = null;\n}\n\n/**\n * HEAD\n * ====\n * head().appendChild(elm);\n */\nfunction head() { return search('head')[0] }\n\n/**\n * ATTR\n * ====\n * var attribute = attr( node, 'attribute' );\n */\nfunction attr( node, attribute, value ) {\n    if (value) node.setAttribute( attribute, value );\n    else return node && node.getAttribute && node.getAttribute(attribute);\n}\n\n/**\n * CSS\n * ===\n * var obj = create('div');\n */\nfunction css( element, styles ) {\n    for (var style in styles) if (styles.hasOwnProperty(style))\n        try {element.style[style] = styles[style] + (\n            '|width|height|top|left|'.indexOf(style) > 0 &&\n            typeof styles[style] == 'number'\n            ? 'px' : ''\n        )}catch(e){}\n}\n\n/**\n * CREATE\n * ======\n * var obj = create('div');\n */\nfunction create(element) { return document.createElement(element) }\n\n\n/**\n * jsonp_cb\n * ========\n * var callback = jsonp_cb();\n */\nfunction jsonp_cb() { return XORIGN || FDomainRequest() ? 0 : unique() }\n\n\n\n/**\n * EVENTS\n * ======\n * PUBNUB.events.bind( 'you-stepped-on-flower', function(message) {\n *     // Do Stuff with message\n * } );\n *\n * PUBNUB.events.fire( 'you-stepped-on-flower', \"message-data\" );\n * PUBNUB.events.fire( 'you-stepped-on-flower', {message:\"data\"} );\n * PUBNUB.events.fire( 'you-stepped-on-flower', [1,2,3] );\n *\n */\nvar events = {\n    'list'   : {},\n    'unbind' : function( name ) { events.list[name] = [] },\n    'bind'   : function( name, fun ) {\n        (events.list[name] = events.list[name] || []).push(fun);\n    },\n    'fire' : function( name, data ) {\n        each(\n            events.list[name] || [],\n            function(fun) { fun(data) }\n        );\n    }\n};\n\n/**\n * XDR Cross Domain Request\n * ========================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction xdr( setup ) {\n    if (XORIGN || FDomainRequest()) return ajax(setup);\n\n    var script    = create('script')\n    ,   callback  = setup.callback\n    ,   id        = unique()\n    ,   finished  = 0\n    ,   xhrtme    = setup.timeout || DEF_TIMEOUT\n    ,   timer     = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail      = setup.fail    || function(){}\n    ,   data      = setup.data    || {}\n    ,   success   = setup.success || function(){}\n    ,   append    = function() { head().appendChild(script) }\n    ,   done      = function( failed, response ) {\n            if (finished) return;\n            finished = 1;\n\n            script.onerror = null;\n            clearTimeout(timer);\n\n            (failed || !response) || success(response);\n\n            timeout( function() {\n                failed && fail();\n                var s = $(id)\n                ,   p = s && s.parentNode;\n                p && p.removeChild(s);\n            }, SECOND );\n        };\n\n    window[callback] = function(response) {\n        done( 0, response );\n    };\n\n    if (!setup.blocking) script[ASYNC] = ASYNC;\n\n    script.onerror = function() { done(1) };\n    script.src     = build_url( setup.url, data );\n\n    attr( script, 'id', id );\n\n    append();\n    return done;\n}\n\n/**\n * CORS XHR Request\n * ================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction ajax( setup ) {\n    var xhr, response\n    ,   finished = function() {\n            if (loaded) return;\n            loaded = 1;\n\n            clearTimeout(timer);\n\n            try       { response = JSON['parse'](xhr.responseText); }\n            catch (r) { return done(1); }\n\n            complete = 1;\n            success(response);\n        }\n    ,   complete = 0\n    ,   loaded   = 0\n    ,   xhrtme   = setup.timeout || DEF_TIMEOUT\n    ,   timer    = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail     = setup.fail    || function(){}\n    ,   data     = setup.data    || {}\n    ,   success  = setup.success || function(){}\n    ,   async    = !(setup.blocking)\n    ,   done     = function(failed,response) {\n            if (complete) return;\n            complete = 1;\n\n            clearTimeout(timer);\n\n            if (xhr) {\n                xhr.onerror = xhr.onload = null;\n                xhr.abort && xhr.abort();\n                xhr = null;\n            }\n\n            failed && fail(response);\n        };\n\n    // Send\n    try {\n        xhr = FDomainRequest()      ||\n              window.XDomainRequest &&\n              new XDomainRequest()  ||\n              new XMLHttpRequest();\n\n        xhr.onerror = xhr.onabort   = function(e){ done(\n            1, e || (xhr && xhr.responseText) || { \"error\" : \"Network Connection Error\"}\n        ) };\n        xhr.onload  = xhr.onloadend = finished;\n        xhr.onreadystatechange = function() {\n            if (xhr && xhr.readyState == 4) {\n                switch(xhr.status) {\n                    case 200:\n                        break;\n                    default:\n                        try {\n                            response = JSON['parse'](xhr.responseText);\n                            done(1,response);\n                        }\n                        catch (r) { return done(1, {status : xhr.status, payload : null, message : xhr.responseText}); }\n                        return;\n                }\n            }\n        }\n\n        var url = build_url(setup.url,data);\n\n        xhr.open( 'GET', url, async );\n        if (async) xhr.timeout = xhrtme;\n        xhr.send();\n    }\n    catch(eee) {\n        done(0);\n        XORIGN = 0;\n        return xdr(setup);\n    }\n\n    // Return 'done'\n    return done;\n}\n\n// Test Connection State\nfunction _is_online() {\n    if (!('onLine' in navigator)) return 1;\n    try       { return navigator['onLine'] }\n    catch (e) { return true }\n}\n\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     PUBNUB     ===========================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nvar PDIV          = $('pubnub') || 0\n,   CREATE_PUBNUB = function(setup) {\n\n    // Force JSONP if requested from user.\n    if (setup['jsonp'])  XORIGN = 0;\n    else                 XORIGN = UA.indexOf('MSIE 6') == -1;\n\n    var SUBSCRIBE_KEY = setup['subscribe_key'] || ''\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   UUID          = setup['uuid'] || db['get'](SUBSCRIBE_KEY+'uuid')||'';\n\n    var leave_on_unload = setup['leave_on_unload'] || 0;\n\n    setup['xdr']        = xdr;\n    setup['db']         = db;\n    setup['error']      = setup['error'] || error;\n    setup['_is_online'] = _is_online;\n    setup['jsonp_cb']   = jsonp_cb;\n    setup['hmac_SHA256']= get_hmac_SHA256;\n    setup['crypto_obj'] = crypto_obj();\n    setup['params']     = { 'pnsdk' : PNSDK }\n\n    var SELF = function(setup) {\n        return CREATE_PUBNUB(setup);\n    };\n\n    var PN = PN_API(setup);\n\n    for (var prop in PN) {\n        if (PN.hasOwnProperty(prop)) {\n            SELF[prop] = PN[prop];\n        }\n    }\n    SELF['css']         = css;\n    SELF['$']           = $;\n    SELF['create']      = create;\n    SELF['bind']        = bind;\n    SELF['head']        = head;\n    SELF['search']      = search;\n    SELF['attr']        = attr;\n    SELF['events']      = events;\n    SELF['init']        = SELF;\n    SELF['secure']      = SELF;\n    SELF['crypto_obj']  = crypto_obj(); // export to instance\n\n\n    // Add Leave Functions\n    bind( 'beforeunload', window, function() {\n        if (leave_on_unload) SELF['each-channel'](function(ch){ SELF['LEAVE']( ch.name, 0 ) });\n        return true;\n    } );\n\n    // Return without Testing\n    if (setup['notest']) return SELF;\n\n    bind( 'offline', window,   SELF['offline'] );\n    bind( 'offline', document, SELF['offline'] );\n\n    // Return PUBNUB Socket Object\n    return SELF;\n};\nCREATE_PUBNUB['init']   = CREATE_PUBNUB;\nCREATE_PUBNUB['secure'] = CREATE_PUBNUB;\nCREATE_PUBNUB['crypto_obj'] = crypto_obj(); // export to constructor\n\n// Bind for PUBNUB Readiness to Subscribe\nif (document.readyState === 'complete') {\n    timeout( ready, 0 );\n}\nelse {\n    bind( 'load', window, function(){ timeout( ready, 0 ) } );\n}\n\nvar pdiv = PDIV || {};\n\n// CREATE A PUBNUB GLOBAL OBJECT\nPUBNUB = CREATE_PUBNUB({\n    'notest'        : 1,\n    'publish_key'   : attr( pdiv, 'pub-key' ),\n    'subscribe_key' : attr( pdiv, 'sub-key' ),\n    'ssl'           : !document.location.href.indexOf('https') ||\n                      attr( pdiv, 'ssl' ) == 'on',\n    'origin'        : attr( pdiv, 'origin' ),\n    'uuid'          : attr( pdiv, 'uuid' )\n});\n\n// jQuery Interface\nwindow['jQuery'] && (window['jQuery']['PUBNUB'] = CREATE_PUBNUB);\n\n// For Modern JS + Testling.js - http://testling.com/\ntypeof(module) !== 'undefined' && (module['exports'] = PUBNUB) && ready();\n\nvar pubnubs = $('pubnubs') || 0;\n\n// LEAVE NOW IF NO PDIV.\nif (!PDIV) return;\n\n// PUBNUB Flash Socket\ncss( PDIV, { 'position' : 'absolute', 'top' : -SECOND } );\n\nif ('opera' in window || attr( PDIV, 'flash' )) PDIV['innerHTML'] =\n    '<object id=pubnubs data='  + SWF +\n    '><param name=movie value=' + SWF +\n    '><param name=allowscriptaccess value=always></object>';\n\n// Create Interface for Opera Flash\nPUBNUB['rdx'] = function( id, data ) {\n    if (!data) return FDomainRequest[id]['onerror']();\n    FDomainRequest[id]['responseText'] = unescape(data);\n    FDomainRequest[id]['onload']();\n};\n\nfunction FDomainRequest() {\n    if (!pubnubs || !pubnubs['get']) return 0;\n\n    var fdomainrequest = {\n        'id'    : FDomainRequest['id']++,\n        'send'  : function() {},\n        'abort' : function() { fdomainrequest['id'] = {} },\n        'open'  : function( method, url ) {\n            FDomainRequest[fdomainrequest['id']] = fdomainrequest;\n            pubnubs['get']( fdomainrequest['id'], url );\n        }\n    };\n\n    return fdomainrequest;\n}\nFDomainRequest['id'] = SECOND;\n\n})();\n(function(){\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET INTERFACE\n// ---------------------------------------------------------------------------\nvar WS = PUBNUB['ws'] = function( url, protocols ) {\n    if (!(this instanceof WS)) return new WS( url, protocols );\n\n    var self     = this\n    ,   url      = self.url      = url || ''\n    ,   protocol = self.protocol = protocols || 'Sec-WebSocket-Protocol'\n    ,   bits     = url.split('/')\n    ,   setup    = {\n         'ssl'           : bits[0] === 'wss:'\n        ,'origin'        : bits[2]\n        ,'publish_key'   : bits[3]\n        ,'subscribe_key' : bits[4]\n        ,'channel'       : bits[5]\n    };\n\n    // READY STATES\n    self['CONNECTING'] = 0; // The connection is not yet open.\n    self['OPEN']       = 1; // The connection is open and ready to communicate.\n    self['CLOSING']    = 2; // The connection is in the process of closing.\n    self['CLOSED']     = 3; // The connection is closed or couldn't be opened.\n\n    // CLOSE STATES\n    self['CLOSE_NORMAL']         = 1000; // Normal Intended Close; completed.\n    self['CLOSE_GOING_AWAY']     = 1001; // Closed Unexpecttedly.\n    self['CLOSE_PROTOCOL_ERROR'] = 1002; // Server: Not Supported.\n    self['CLOSE_UNSUPPORTED']    = 1003; // Server: Unsupported Protocol.\n    self['CLOSE_TOO_LARGE']      = 1004; // Server: Too Much Data.\n    self['CLOSE_NO_STATUS']      = 1005; // Server: No reason.\n    self['CLOSE_ABNORMAL']       = 1006; // Abnormal Disconnect.\n\n    // Events Default\n    self['onclose']   = self['onerror'] =\n    self['onmessage'] = self['onopen']  =\n    self['onsend']    =  function(){};\n\n    // Attributes\n    self['binaryType']     = '';\n    self['extensions']     = '';\n    self['bufferedAmount'] = 0;\n    self['trasnmitting']   = false;\n    self['buffer']         = [];\n    self['readyState']     = self['CONNECTING'];\n\n    // Close if no setup.\n    if (!url) {\n        self['readyState'] = self['CLOSED'];\n        self['onclose']({\n            'code'     : self['CLOSE_ABNORMAL'],\n            'reason'   : 'Missing URL',\n            'wasClean' : true\n        });\n        return self;\n    }\n\n    // PubNub WebSocket Emulation\n    self.pubnub       = PUBNUB['init'](setup);\n    self.pubnub.setup = setup;\n    self.setup        = setup;\n\n    self.pubnub['subscribe']({\n        'restore'    : false,\n        'channel'    : setup['channel'],\n        'disconnect' : self['onerror'],\n        'reconnect'  : self['onopen'],\n        'error'      : function() {\n            self['onclose']({\n                'code'     : self['CLOSE_ABNORMAL'],\n                'reason'   : 'Missing URL',\n                'wasClean' : false\n            });\n        },\n        'callback'   : function(message) {\n            self['onmessage']({ 'data' : message });\n        },\n        'connect'    : function() {\n            self['readyState'] = self['OPEN'];\n            self['onopen']();\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET SEND\n// ---------------------------------------------------------------------------\nWS.prototype.send = function(data) {\n    var self = this;\n    self.pubnub['publish']({\n        'channel'  : self.pubnub.setup['channel'],\n        'message'  : data,\n        'callback' : function(response) {\n            self['onsend']({ 'data' : response });\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET CLOSE\n// ---------------------------------------------------------------------------\nWS.prototype.close = function() {\n    var self = this;\n    self.pubnub['unsubscribe']({ 'channel' : self.pubnub.setup['channel'] });\n    self['readyState'] = self['CLOSED'];\n    self['onclose']({});\n};\n\n})();\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\nvar CryptoJS=CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&&c.mixIn(a);c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},\nr=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((b+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<\n32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-8*(b%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,\n2),16)<<24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-8*(b%4)&255));return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(a.charCodeAt(b)&255)<<24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}},\nu=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this);\na._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a,\nd)).finalize(c)}}});var t=f.algo={};return f}(Math);\n\n// SHA256\n(function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64>n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t<=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&&(8>n&&(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64>p;p++){if(16>p)a[p]=\nc[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k<<25|k>>>7)^(k<<14|k>>>18)^k>>>3)+a[p-7]+((l<<15|l>>>17)^(l<<13|l>>>19)^l>>>10)+a[p-16]}k=q+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&m^~h&n)+r[p]+a[p];l=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&g^f&g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;\nd[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math);\n\n// HMAC SHA256\n(function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;\"string\"==typeof g&&(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes>m&&(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j<h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g=\nthis._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})();\n\n// Base64\n(function(){var u=CryptoJS,p=u.lib.WordArray;u.enc.Base64={stringify:function(d){var l=d.words,p=d.sigBytes,t=this._map;d.clamp();d=[];for(var r=0;r<p;r+=3)for(var w=(l[r>>>2]>>>24-8*(r%4)&255)<<16|(l[r+1>>>2]>>>24-8*((r+1)%4)&255)<<8|l[r+2>>>2]>>>24-8*((r+2)%4)&255,v=0;4>v&&r+0.75*v<p;v++)d.push(t.charAt(w>>>6*(3-v)&63));if(l=t.charAt(64))for(;d.length%4;)d.push(l);return d.join(\"\")},parse:function(d){var l=d.length,s=this._map,t=s.charAt(64);t&&(t=d.indexOf(t),-1!=t&&(l=t));for(var t=[],r=0,w=0;w<\nl;w++)if(w%4){var v=s.indexOf(d.charAt(w-1))<<2*(w%4),b=s.indexOf(d.charAt(w))>>>6-2*(w%4);t[r>>>2]|=(v|b)<<24-8*(r%4);r++}return p.create(t,r)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}})();\n\n// BlockCipher\n(function(u){function p(b,n,a,c,e,j,k){b=b+(n&a|~n&c)+e+k;return(b<<j|b>>>32-j)+n}function d(b,n,a,c,e,j,k){b=b+(n&c|a&~c)+e+k;return(b<<j|b>>>32-j)+n}function l(b,n,a,c,e,j,k){b=b+(n^a^c)+e+k;return(b<<j|b>>>32-j)+n}function s(b,n,a,c,e,j,k){b=b+(a^(n|~c))+e+k;return(b<<j|b>>>32-j)+n}for(var t=CryptoJS,r=t.lib,w=r.WordArray,v=r.Hasher,r=t.algo,b=[],x=0;64>x;x++)b[x]=4294967296*u.abs(u.sin(x+1))|0;r=r.MD5=v.extend({_doReset:function(){this._hash=new w.init([1732584193,4023233417,2562383102,271733878])},\n_doProcessBlock:function(q,n){for(var a=0;16>a;a++){var c=n+a,e=q[c];q[c]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360}var a=this._hash.words,c=q[n+0],e=q[n+1],j=q[n+2],k=q[n+3],z=q[n+4],r=q[n+5],t=q[n+6],w=q[n+7],v=q[n+8],A=q[n+9],B=q[n+10],C=q[n+11],u=q[n+12],D=q[n+13],E=q[n+14],x=q[n+15],f=a[0],m=a[1],g=a[2],h=a[3],f=p(f,m,g,h,c,7,b[0]),h=p(h,f,m,g,e,12,b[1]),g=p(g,h,f,m,j,17,b[2]),m=p(m,g,h,f,k,22,b[3]),f=p(f,m,g,h,z,7,b[4]),h=p(h,f,m,g,r,12,b[5]),g=p(g,h,f,m,t,17,b[6]),m=p(m,g,h,f,w,22,b[7]),\nf=p(f,m,g,h,v,7,b[8]),h=p(h,f,m,g,A,12,b[9]),g=p(g,h,f,m,B,17,b[10]),m=p(m,g,h,f,C,22,b[11]),f=p(f,m,g,h,u,7,b[12]),h=p(h,f,m,g,D,12,b[13]),g=p(g,h,f,m,E,17,b[14]),m=p(m,g,h,f,x,22,b[15]),f=d(f,m,g,h,e,5,b[16]),h=d(h,f,m,g,t,9,b[17]),g=d(g,h,f,m,C,14,b[18]),m=d(m,g,h,f,c,20,b[19]),f=d(f,m,g,h,r,5,b[20]),h=d(h,f,m,g,B,9,b[21]),g=d(g,h,f,m,x,14,b[22]),m=d(m,g,h,f,z,20,b[23]),f=d(f,m,g,h,A,5,b[24]),h=d(h,f,m,g,E,9,b[25]),g=d(g,h,f,m,k,14,b[26]),m=d(m,g,h,f,v,20,b[27]),f=d(f,m,g,h,D,5,b[28]),h=d(h,f,\nm,g,j,9,b[29]),g=d(g,h,f,m,w,14,b[30]),m=d(m,g,h,f,u,20,b[31]),f=l(f,m,g,h,r,4,b[32]),h=l(h,f,m,g,v,11,b[33]),g=l(g,h,f,m,C,16,b[34]),m=l(m,g,h,f,E,23,b[35]),f=l(f,m,g,h,e,4,b[36]),h=l(h,f,m,g,z,11,b[37]),g=l(g,h,f,m,w,16,b[38]),m=l(m,g,h,f,B,23,b[39]),f=l(f,m,g,h,D,4,b[40]),h=l(h,f,m,g,c,11,b[41]),g=l(g,h,f,m,k,16,b[42]),m=l(m,g,h,f,t,23,b[43]),f=l(f,m,g,h,A,4,b[44]),h=l(h,f,m,g,u,11,b[45]),g=l(g,h,f,m,x,16,b[46]),m=l(m,g,h,f,j,23,b[47]),f=s(f,m,g,h,c,6,b[48]),h=s(h,f,m,g,w,10,b[49]),g=s(g,h,f,m,\nE,15,b[50]),m=s(m,g,h,f,r,21,b[51]),f=s(f,m,g,h,u,6,b[52]),h=s(h,f,m,g,k,10,b[53]),g=s(g,h,f,m,B,15,b[54]),m=s(m,g,h,f,e,21,b[55]),f=s(f,m,g,h,v,6,b[56]),h=s(h,f,m,g,x,10,b[57]),g=s(g,h,f,m,t,15,b[58]),m=s(m,g,h,f,D,21,b[59]),f=s(f,m,g,h,z,6,b[60]),h=s(h,f,m,g,C,10,b[61]),g=s(g,h,f,m,j,15,b[62]),m=s(m,g,h,f,A,21,b[63]);a[0]=a[0]+f|0;a[1]=a[1]+m|0;a[2]=a[2]+g|0;a[3]=a[3]+h|0},_doFinalize:function(){var b=this._data,n=b.words,a=8*this._nDataBytes,c=8*b.sigBytes;n[c>>>5]|=128<<24-c%32;var e=u.floor(a/\n4294967296);n[(c+64>>>9<<4)+15]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360;n[(c+64>>>9<<4)+14]=(a<<8|a>>>24)&16711935|(a<<24|a>>>8)&4278255360;b.sigBytes=4*(n.length+1);this._process();b=this._hash;n=b.words;for(a=0;4>a;a++)c=n[a],n[a]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;return b},clone:function(){var b=v.clone.call(this);b._hash=this._hash.clone();return b}});t.MD5=v._createHelper(r);t.HmacMD5=v._createHmacHelper(r)})(Math);\n(function(){var u=CryptoJS,p=u.lib,d=p.Base,l=p.WordArray,p=u.algo,s=p.EvpKDF=d.extend({cfg:d.extend({keySize:4,hasher:p.MD5,iterations:1}),init:function(d){this.cfg=this.cfg.extend(d)},compute:function(d,r){for(var p=this.cfg,s=p.hasher.create(),b=l.create(),u=b.words,q=p.keySize,p=p.iterations;u.length<q;){n&&s.update(n);var n=s.update(d).finalize(r);s.reset();for(var a=1;a<p;a++)n=s.finalize(n),s.reset();b.concat(n)}b.sigBytes=4*q;return b}});u.EvpKDF=function(d,l,p){return s.create(p).compute(d,\nl)}})();\n\n// Cipher\nCryptoJS.lib.Cipher||function(u){var p=CryptoJS,d=p.lib,l=d.Base,s=d.WordArray,t=d.BufferedBlockAlgorithm,r=p.enc.Base64,w=p.algo.EvpKDF,v=d.Cipher=t.extend({cfg:l.extend(),createEncryptor:function(e,a){return this.create(this._ENC_XFORM_MODE,e,a)},createDecryptor:function(e,a){return this.create(this._DEC_XFORM_MODE,e,a)},init:function(e,a,b){this.cfg=this.cfg.extend(b);this._xformMode=e;this._key=a;this.reset()},reset:function(){t.reset.call(this);this._doReset()},process:function(e){this._append(e);return this._process()},\nfinalize:function(e){e&&this._append(e);return this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(e){return{encrypt:function(b,k,d){return(\"string\"==typeof k?c:a).encrypt(e,b,k,d)},decrypt:function(b,k,d){return(\"string\"==typeof k?c:a).decrypt(e,b,k,d)}}}});d.StreamCipher=v.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var b=p.mode={},x=function(e,a,b){var c=this._iv;c?this._iv=u:c=this._prevBlock;for(var d=0;d<b;d++)e[a+d]^=\nc[d]},q=(d.BlockCipherMode=l.extend({createEncryptor:function(e,a){return this.Encryptor.create(e,a)},createDecryptor:function(e,a){return this.Decryptor.create(e,a)},init:function(e,a){this._cipher=e;this._iv=a}})).extend();q.Encryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize;x.call(this,e,a,c);b.encryptBlock(e,a);this._prevBlock=e.slice(a,a+c)}});q.Decryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize,d=e.slice(a,a+c);b.decryptBlock(e,a);x.call(this,\ne,a,c);this._prevBlock=d}});b=b.CBC=q;q=(p.pad={}).Pkcs7={pad:function(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,l=[],n=0;n<c;n+=4)l.push(d);c=s.create(l,c);a.concat(c)},unpad:function(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255}};d.BlockCipher=v.extend({cfg:v.cfg.extend({mode:b,padding:q}),reset:function(){v.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;this._mode=c.call(a,\nthis,b&&b.words)},_doProcessBlock:function(a,b){this._mode.processBlock(a,b)},_doFinalize:function(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0)}else b=this._process(!0),a.unpad(b);return b},blockSize:4});var n=d.CipherParams=l.extend({init:function(a){this.mixIn(a)},toString:function(a){return(a||this.formatter).stringify(this)}}),b=(p.format={}).OpenSSL={stringify:function(a){var b=a.ciphertext;a=a.salt;return(a?s.create([1398893684,\n1701076831]).concat(a).concat(b):b).toString(r)},parse:function(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=s.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16}return n.create({ciphertext:a,salt:c})}},a=d.SerializableCipher=l.extend({cfg:l.extend({format:b}),encrypt:function(a,b,c,d){d=this.cfg.extend(d);var l=a.createEncryptor(c,d);b=l.finalize(b);l=l.cfg;return n.create({ciphertext:b,key:c,iv:l.iv,algorithm:a,mode:l.mode,padding:l.padding,blockSize:a.blockSize,formatter:d.format})},\ndecrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext)},_parse:function(a,b){return\"string\"==typeof a?b.parse(a,this):a}}),p=(p.kdf={}).OpenSSL={execute:function(a,b,c,d){d||(d=s.random(8));a=w.create({keySize:b+c}).compute(a,d);c=s.create(a.words.slice(b),4*c);a.sigBytes=4*b;return n.create({key:a,iv:c,salt:d})}},c=d.PasswordBasedCipher=a.extend({cfg:a.cfg.extend({kdf:p}),encrypt:function(b,c,d,l){l=this.cfg.extend(l);d=l.kdf.execute(d,\nb.keySize,b.ivSize);l.iv=d.iv;b=a.encrypt.call(this,b,c,d.key,l);b.mixIn(d);return b},decrypt:function(b,c,d,l){l=this.cfg.extend(l);c=this._parse(c,l.format);d=l.kdf.execute(d,b.keySize,b.ivSize,c.salt);l.iv=d.iv;return a.decrypt.call(this,b,c,d.key,l)}})}();\n\n// AES\n(function(){for(var u=CryptoJS,p=u.lib.BlockCipher,d=u.algo,l=[],s=[],t=[],r=[],w=[],v=[],b=[],x=[],q=[],n=[],a=[],c=0;256>c;c++)a[c]=128>c?c<<1:c<<1^283;for(var e=0,j=0,c=0;256>c;c++){var k=j^j<<1^j<<2^j<<3^j<<4,k=k>>>8^k&255^99;l[e]=k;s[k]=e;var z=a[e],F=a[z],G=a[F],y=257*a[k]^16843008*k;t[e]=y<<24|y>>>8;r[e]=y<<16|y>>>16;w[e]=y<<8|y>>>24;v[e]=y;y=16843009*G^65537*F^257*z^16843008*e;b[k]=y<<24|y>>>8;x[k]=y<<16|y>>>16;q[k]=y<<8|y>>>24;n[k]=y;e?(e=z^a[a[a[G^z]]],j^=a[a[j]]):e=j=1}var H=[0,1,2,4,8,\n16,32,64,128,27,54],d=d.AES=p.extend({_doReset:function(){for(var a=this._key,c=a.words,d=a.sigBytes/4,a=4*((this._nRounds=d+6)+1),e=this._keySchedule=[],j=0;j<a;j++)if(j<d)e[j]=c[j];else{var k=e[j-1];j%d?6<d&&4==j%d&&(k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255]):(k=k<<8|k>>>24,k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255],k^=H[j/d|0]<<24);e[j]=e[j-d]^k}c=this._invKeySchedule=[];for(d=0;d<a;d++)j=a-d,k=d%4?e[j]:e[j-4],c[d]=4>d||4>=j?k:b[l[k>>>24]]^x[l[k>>>16&255]]^q[l[k>>>\n8&255]]^n[l[k&255]]},encryptBlock:function(a,b){this._doCryptBlock(a,b,this._keySchedule,t,r,w,v,l)},decryptBlock:function(a,c){var d=a[c+1];a[c+1]=a[c+3];a[c+3]=d;this._doCryptBlock(a,c,this._invKeySchedule,b,x,q,n,s);d=a[c+1];a[c+1]=a[c+3];a[c+3]=d},_doCryptBlock:function(a,b,c,d,e,j,l,f){for(var m=this._nRounds,g=a[b]^c[0],h=a[b+1]^c[1],k=a[b+2]^c[2],n=a[b+3]^c[3],p=4,r=1;r<m;r++)var q=d[g>>>24]^e[h>>>16&255]^j[k>>>8&255]^l[n&255]^c[p++],s=d[h>>>24]^e[k>>>16&255]^j[n>>>8&255]^l[g&255]^c[p++],t=\nd[k>>>24]^e[n>>>16&255]^j[g>>>8&255]^l[h&255]^c[p++],n=d[n>>>24]^e[g>>>16&255]^j[h>>>8&255]^l[k&255]^c[p++],g=q,h=s,k=t;q=(f[g>>>24]<<24|f[h>>>16&255]<<16|f[k>>>8&255]<<8|f[n&255])^c[p++];s=(f[h>>>24]<<24|f[k>>>16&255]<<16|f[n>>>8&255]<<8|f[g&255])^c[p++];t=(f[k>>>24]<<24|f[n>>>16&255]<<16|f[g>>>8&255]<<8|f[h&255])^c[p++];n=(f[n>>>24]<<24|f[g>>>16&255]<<16|f[h>>>8&255]<<8|f[k&255])^c[p++];a[b]=q;a[b+1]=s;a[b+2]=t;a[b+3]=n},keySize:8});u.AES=p._createHelper(d)})();\n\n// Mode ECB\nCryptoJS.mode.ECB = (function () {\n    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n    ECB.Encryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.encryptBlock(words, offset);\n        }\n    });\n\n    ECB.Decryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.decryptBlock(words, offset);\n        }\n    });\n\n    return ECB;\n}());// Moved to hmac-sha-256.js\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(43)(module)))\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(setImmediate) {(function(global){\n\n//\n// Check for native Promise and it has correct interface\n//\n\nvar NativePromise = global['Promise'];\nvar nativePromiseSupported =\n  NativePromise &&\n  // Some of these methods are missing from\n  // Firefox/Chrome experimental implementations\n  'resolve' in NativePromise &&\n  'reject' in NativePromise &&\n  'all' in NativePromise &&\n  'race' in NativePromise &&\n  // Older version of the spec had a resolver object\n  // as the arg rather than a function\n  (function(){\n    var resolve;\n    new NativePromise(function(r){ resolve = r; });\n    return typeof resolve === 'function';\n  })();\n\n\n//\n// export if necessary\n//\n\nif (typeof exports !== 'undefined' && exports)\n{\n  // node.js\n  exports.Promise = Promise || NativePromise;\n}\nelse\n{\n  // in browser add to global\n  if (!nativePromiseSupported)\n    global['Promise'] = Promise;\n}\n\n\n//\n// Polyfill\n//\n\nvar PENDING = 'pending';\nvar SEALED = 'sealed';\nvar FULFILLED = 'fulfilled';\nvar REJECTED = 'rejected';\nvar NOOP = function(){};\n\n// async calls\nvar asyncSetTimer = typeof setImmediate !== 'undefined' ? setImmediate : setTimeout;\nvar asyncQueue = [];\nvar asyncTimer;\n\nfunction asyncFlush(){\n  // run promise callbacks\n  for (var i = 0; i < asyncQueue.length; i++)\n    asyncQueue[i][0](asyncQueue[i][1]);\n\n  // reset async asyncQueue\n  asyncQueue = [];\n  asyncTimer = false;\n}\n\nfunction asyncCall(callback, arg){\n  asyncQueue.push([callback, arg]);\n\n  if (!asyncTimer)\n  {\n    asyncTimer = true;\n    asyncSetTimer(asyncFlush, 0);\n  }\n}\n\n\nfunction invokeResolver(resolver, promise) {\n  function resolvePromise(value) {\n    resolve(promise, value);\n  }\n\n  function rejectPromise(reason) {\n    reject(promise, reason);\n  }\n\n  try {\n    resolver(resolvePromise, rejectPromise);\n  } catch(e) {\n    rejectPromise(e);\n  }\n}\n\nfunction invokeCallback(subscriber){\n  var owner = subscriber.owner;\n  var settled = owner.state_;\n  var value = owner.data_;  \n  var callback = subscriber[settled];\n  var promise = subscriber.then;\n\n  if (typeof callback === 'function')\n  {\n    settled = FULFILLED;\n    try {\n      value = callback(value);\n    } catch(e) {\n      reject(promise, e);\n    }\n  }\n\n  if (!handleThenable(promise, value))\n  {\n    if (settled === FULFILLED)\n      resolve(promise, value);\n\n    if (settled === REJECTED)\n      reject(promise, value);\n  }\n}\n\nfunction handleThenable(promise, value) {\n  var resolved;\n\n  try {\n    if (promise === value)\n      throw new TypeError('A promises callback cannot return that same promise.');\n\n    if (value && (typeof value === 'function' || typeof value === 'object'))\n    {\n      var then = value.then;  // then should be retrived only once\n\n      if (typeof then === 'function')\n      {\n        then.call(value, function(val){\n          if (!resolved)\n          {\n            resolved = true;\n\n            if (value !== val)\n              resolve(promise, val);\n            else\n              fulfill(promise, val);\n          }\n        }, function(reason){\n          if (!resolved)\n          {\n            resolved = true;\n\n            reject(promise, reason);\n          }\n        });\n\n        return true;\n      }\n    }\n  } catch (e) {\n    if (!resolved)\n      reject(promise, e);\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction resolve(promise, value){\n  if (promise === value || !handleThenable(promise, value))\n    fulfill(promise, value);\n}\n\nfunction fulfill(promise, value){\n  if (promise.state_ === PENDING)\n  {\n    promise.state_ = SEALED;\n    promise.data_ = value;\n\n    asyncCall(publishFulfillment, promise);\n  }\n}\n\nfunction reject(promise, reason){\n  if (promise.state_ === PENDING)\n  {\n    promise.state_ = SEALED;\n    promise.data_ = reason;\n\n    asyncCall(publishRejection, promise);\n  }\n}\n\nfunction publish(promise) {\n  promise.then_ = promise.then_.forEach(invokeCallback);\n}\n\nfunction publishFulfillment(promise){\n  promise.state_ = FULFILLED;\n  publish(promise);\n}\n\nfunction publishRejection(promise){\n  promise.state_ = REJECTED;\n  publish(promise);\n}\n\n/**\n* @class\n*/\nfunction Promise(resolver){\n  if (typeof resolver !== 'function')\n    throw new TypeError('Promise constructor takes a function argument');\n\n  if (this instanceof Promise === false)\n    throw new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');\n\n  this.then_ = [];\n\n  invokeResolver(resolver, this);\n}\n\nPromise.prototype = {\n  constructor: Promise,\n\n  state_: PENDING,\n  then_: null,\n  data_: undefined,\n\n  then: function(onFulfillment, onRejection){\n    var subscriber = {\n      owner: this,\n      then: new this.constructor(NOOP),\n      fulfilled: onFulfillment,\n      rejected: onRejection\n    };\n\n    if (this.state_ === FULFILLED || this.state_ === REJECTED)\n    {\n      // already resolved, call callback async\n      asyncCall(invokeCallback, subscriber);\n    }\n    else\n    {\n      // subscribe\n      this.then_.push(subscriber);\n    }\n\n    return subscriber.then;\n  },\n\n  'catch': function(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nPromise.all = function(promises){\n  var Class = this;\n\n  if (!Array.isArray(promises))\n    throw new TypeError('You must pass an array to Promise.all().');\n\n  return new Class(function(resolve, reject){\n    var results = [];\n    var remaining = 0;\n\n    function resolver(index){\n      remaining++;\n      return function(value){\n        results[index] = value;\n        if (!--remaining)\n          resolve(results);\n      };\n    }\n\n    for (var i = 0, promise; i < promises.length; i++)\n    {\n      promise = promises[i];\n\n      if (promise && typeof promise.then === 'function')\n        promise.then(resolver(i), reject);\n      else\n        results[i] = promise;\n    }\n\n    if (!remaining)\n      resolve(results);\n  });\n};\n\nPromise.race = function(promises){\n  var Class = this;\n\n  if (!Array.isArray(promises))\n    throw new TypeError('You must pass an array to Promise.race().');\n\n  return new Class(function(resolve, reject) {\n    for (var i = 0, promise; i < promises.length; i++)\n    {\n      promise = promises[i];\n\n      if (promise && typeof promise.then === 'function')\n        promise.then(resolve, reject);\n      else\n        resolve(promise);\n    }\n  });\n};\n\nPromise.resolve = function(value){\n  var Class = this;\n\n  if (value && typeof value === 'object' && value.constructor === Class)\n    return value;\n\n  return new Class(function(resolve){\n    resolve(value);\n  });\n};\n\nPromise.reject = function(reason){\n  var Class = this;\n\n  return new Class(function(resolve, reject){\n    reject(reason);\n  });\n};\n\n})(new Function('return this')());\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(42).setImmediate))\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = __webpack_require__(44);\nvar ajaxObserver = __webpack_require__(7);\nvar r = __webpack_require__(45);\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(46).nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(42).setImmediate, __webpack_require__(42).clearImmediate))\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(17);\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = __webpack_require__(44);\nvar log = __webpack_require__(12);\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=rc-sdk-bundle.js.map"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2e8d980a7dae0926eaa2\n **/","/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = require('./core/pubnub/PubnubMock');\nvar xhrMock = require('./core/xhr/XhrMock');\nvar xhrResponse = require('./core/xhr/XhrResponse');\nvar ajaxObserver = require('./core/AjaxObserver');\nvar cache = require('./core/Cache');\nvar context = require('./core/Context');\nvar helper = require('./core/Helper');\nvar list = require('./core/List');\nvar log = require('./core/Log');\nvar observable = require('./core/Observable');\nvar pageVisibility = require('./core/PageVisibility');\nvar platform = require('./core/Platform');\nvar subscription = require('./core/Subscription');\nvar utils = require('./core/Utils');\nvar validator = require('./core/Validator');\nvar accountHelper = require('./helpers/Account');\nvar blockedNumberHelper = require('./helpers/BlockedNumber');\nvar callHelper = require('./helpers/Call');\nvar contactHelper = require('./helpers/Contact');\nvar contactGroupHelper = require('./helpers/ContactGroup');\nvar conferencingHelper = require('./helpers/Conferencing');\nvar countryHelper = require('./helpers/Country');\nvar deviceHelper = require('./helpers/Device');\nvar deviceModelHelper = require('./helpers/DeviceModel');\nvar extensionHelper = require('./helpers/Extension');\nvar forwardingNumberHelper = require('./helpers/ForwardingNumber');\nvar languageHelper = require('./helpers/Language');\nvar locationHelper = require('./helpers/Location');\nvar messageHelper = require('./helpers/Message');\nvar phoneNumberHelper = require('./helpers/PhoneNumber');\nvar presenceHelper = require('./helpers/Presence');\nvar ringoutHelper = require('./helpers/Ringout');\nvar serviceHelper = require('./helpers/Service');\nvar shippingMethodHelper = require('./helpers/ShippingMethod');\nvar stateHelper = require('./helpers/State');\nvar timezoneHelper = require('./helpers/Timezone');\nvar promise = require('es6-promise');\nvar pubnub = require('pubnub');\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () { return this._context; };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () { return ajaxObserver.$get(this.getContext()); };\n    RCSDK.prototype.getXhrResponse = function () { return xhrResponse.$get(this.getContext()); };\n    RCSDK.prototype.getPlatform = function () { return platform.$get(this.getContext()); };\n    RCSDK.prototype.getCache = function () { return cache.$get(this.getContext()); };\n    RCSDK.prototype.getSubscription = function () { return subscription.$get(this.getContext()); };\n    RCSDK.prototype.getPageVisibility = function () { return pageVisibility.$get(this.getContext()); };\n    RCSDK.prototype.getHelper = function () { return helper.$get(this.getContext()); };\n    RCSDK.prototype.getObservable = function () { return observable.$get(this.getContext()); };\n    RCSDK.prototype.getValidator = function () { return validator.$get(this.getContext()); };\n    RCSDK.prototype.getLog = function () { return log.$get(this.getContext()); };\n    RCSDK.prototype.getUtils = function () { return utils.$get(this.getContext()); };\n    RCSDK.prototype.getList = function () { return list.$get(this.getContext()); };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () { return countryHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceModelHelper = function () { return deviceModelHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLanguageHelper = function () { return languageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLocationHelper = function () { return locationHelper.$get(this.getContext()); };\n    RCSDK.prototype.getShippingMethodHelper = function () { return shippingMethodHelper.$get(this.getContext()); };\n    RCSDK.prototype.getStateHelper = function () { return stateHelper.$get(this.getContext()); };\n    RCSDK.prototype.getTimezoneHelper = function () { return timezoneHelper.$get(this.getContext()); };\n    RCSDK.prototype.getAccountHelper = function () { return accountHelper.$get(this.getContext()); };\n    RCSDK.prototype.getBlockedNumberHelper = function () { return blockedNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getCallHelper = function () { return callHelper.$get(this.getContext()); };\n    RCSDK.prototype.getConferencingHelper = function () { return conferencingHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactHelper = function () { return contactHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactGroupHelper = function () { return contactGroupHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceHelper = function () { return deviceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getExtensionHelper = function () { return extensionHelper.$get(this.getContext()); };\n    RCSDK.prototype.getForwardingNumberHelper = function () { return forwardingNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getMessageHelper = function () { return messageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPhoneNumberHelper = function () { return phoneNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPresenceHelper = function () { return presenceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getRingoutHelper = function () { return ringoutHelper.$get(this.getContext()); };\n    RCSDK.prototype.getServiceHelper = function () { return serviceHelper.$get(this.getContext()); };\n    RCSDK.version = '1.3.0';\n    RCSDK.url = {\n        sandbox: 'https://platform.devtest.ringcentral.com',\n        production: 'https://platform.ringcentral.com'\n    };\n    RCSDK.injections = {\n        localStorage: (typeof (localStorage) !== 'undefined'\n            ? localStorage\n            : require('dom-' + 'storage')),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : promise.Promise,\n        PUBNUB: pubnub,\n        XHR: function () {\n            try {\n                return new XMLHttpRequest();\n            }\n            catch (e) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e1) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e2) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e3) { }\n            try {\n                return new (require('xhr' + '2'))();\n            }\n            catch (e4) { } // Node only\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        },\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/RCSDK.ts\n ** module id = 0\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/ContactGroup.ts\n ** module id = 1\n ** module chunks = 0\n **/","if(typeof __WEBPACK_EXTERNAL_MODULE_2__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}\n ** module id = 2\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Conferencing.ts\n ** module id = 3\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('../Observable');\nvar PubnubMock = (function (_super) {\n    __extends(PubnubMock, _super);\n    function PubnubMock(context, options) {\n        this.options = options;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n        _super.call(this, context);\n    }\n    PubnubMock.prototype.ready = function () { };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.on('message-' + options.channel, options.message);\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n        this.off('message-' + options.channel);\n    };\n    PubnubMock.prototype.receiveMessage = function (msg, channel) {\n        this.emit('message-' + channel, msg, 'env', channel);\n    };\n    return PubnubMock;\n})(observable.Observable);\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock(this.context, options);\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/pubnub/PubnubMock.ts\n ** module id = 4\n ** module chunks = 0\n **/","var utils = require('../Utils');\nvar log = require('../Log');\nvar xhrResponse = require('./XhrResponse'); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/xhr/XhrMock.ts\n ** module id = 5\n ** module chunks = 0\n **/","var XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/xhr/XhrResponse.ts\n ** module id = 6\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/AjaxObserver.ts\n ** module id = 7\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Cache.ts\n ** module id = 8\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.getPubnubReal();\n    };\n    Context.prototype.getPubnubReal = function () {\n        return this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Context.ts\n ** module id = 9\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Helper.ts\n ** module id = 10\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/List.ts\n ** module id = 11\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Log.ts\n ** module id = 12\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar log = require('./Log');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Observable.ts\n ** module id = 13\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/PageVisibility.ts\n ** module id = 14\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar cache = require('./Cache');\nvar request = require('./http/Request');\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.getCredentials = function () {\n        var credentials = ((typeof atob == 'function')\n            ? atob(this.apiKey)\n            : new Buffer(this.apiKey, 'base64').toString('utf-8')).split(':');\n        return {\n            key: credentials[0],\n            secret: credentials[1]\n        };\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.getAuthURL = function (options) {\n        options = options || {};\n        return this.apiUrl('/restapi/oauth/authorize?' + this.utils.queryStringify({\n            'response_type': 'code',\n            'redirect_uri': options.redirectUri || '',\n            'client_id': this.getCredentials().key,\n            'state': options.state || '',\n            'brand_id': options.brandId || '',\n            'display': options.display || '',\n            'prompt': options.prompt || ''\n        }), { addServer: true });\n    };\n    Platform.prototype.parseAuthRedirectUrl = function (url) {\n        var qs = this.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n        if (error) {\n            var e = new Error(error);\n            e.error = qs.error;\n            throw e;\n        }\n        return qs;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        var body = {\n            \"access_token_ttl\": this.accessTokenTtl,\n            \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n        };\n        if (options.username) {\n            body.grant_type = 'password';\n            body.username = options.username;\n            body.password = options.password;\n            body.extension = options.extension || '';\n        }\n        else if (options.code) {\n            body.grant_type = 'authorization_code';\n            body.code = options.code;\n            body.redirect_uri = options.redirectUri;\n        }\n        else {\n            return this.context.getPromise().reject(new Error('Unsupported authorization flow'));\n        }\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: body\n        }).then(function (response) {\n            _this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage()\n                .emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data)\n                .resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume()\n                .clearStorage()\n                .emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume()\n                .emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this\n                .refresh()\n                .then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '', hasHttp = url.indexOf('http://') != -1 || url.indexOf('https://') != -1;\n        if (options.addServer && !hasHttp)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1 && !hasHttp)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Platform.ts\n ** module id = 15\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar platform = require('./Platform');\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .subscribeAtPubnub()\n                .emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        })\n            .then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        })\n            .catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe()\n                .emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            _this.renew({});\n        }, timeToExpiration);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.decrypt = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var PUBNUB = this.getPubnub();\n            message = PUBNUB.crypto_obj.decrypt(message, this.subscription.deliveryMode.encryptionKey, {\n                encryptKey: false,\n                keyEncoding: 'base64',\n                keyLength: 128,\n                mode: 'ecb'\n            });\n        }\n        return message;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.notify = function (message) {\n        this.emit(this.events.notification, this.decrypt(message));\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Subscription.ts\n ** module id = 16\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Utils.ts\n ** module id = 17\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Validator.ts\n ** module id = 18\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Account.ts\n ** module id = 19\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/BlockedNumber.ts\n ** module id = 20\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar presence = require('./Presence');\nvar contact = require('./Contact');\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Call.ts\n ** module id = 21\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar list = require('../core/List');\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Contact.ts\n ** module id = 22\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}\n ** module id = 23\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Country.ts\n ** module id = 24\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar extension = require('./Extension');\nvar deviceModel = require('./DeviceModel');\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Device.ts\n ** module id = 25\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n        /**\n         * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n         */\n        this.devices = [\n            {\n                id: '-1',\n                name: 'Softphone'\n            },\n            {\n                id: '0',\n                name: 'Existing device'\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '23',\n                name: 'Polycom IP 321 Basic IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '30',\n                name: 'Polycom IP 550 HD Manager IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '37',\n                name: 'Polycom IP 6000 Conference Phone',\n                deviceClass: 'Conference Phone'\n            },\n            {\n                id: '40',\n                name: 'Polycom IP 335 HD IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '51',\n                name: 'Cisco SPA-303 Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\tDesk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '3'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '52',\n                name: 'Cisco SPA-122 ATA',\n                deviceClass: 'Analog Adapter'\n            },\n            {\n                id: '53',\n                name: 'Polycom VVX-500 Color Touchscreen',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '54',\n                name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '55',\n                name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n                deviceClass: 'Desk Phone'\n            }\n        ];\n    }\n    DeviceModel.prototype.getId = function (device) {\n        if (!device)\n            return null;\n        return device.id + (device.addons && device.addons[0]\n            ? '-' + device.addons[0].id + '-' + device.addons[0].count\n            : '');\n    };\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     */\n    DeviceModel.prototype.cleanForSaving = function (device) {\n        if (!device)\n            return null;\n        delete device.name;\n        delete device.deviceClass;\n        if (device.addons && device.addons.length > 0) {\n            device.addons.forEach(function (addon, i) {\n                delete device.addons[i].name;\n            });\n        }\n        else {\n            delete device.addons;\n        }\n        return device;\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/DeviceModel.ts\n ** module id = 26\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Extension.ts\n ** module id = 27\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/ForwardingNumber.ts\n ** module id = 28\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n        this.languages = [\n            {\n                id: '1033',\n                name: 'English (US)'\n            },\n            {\n                id: '3084',\n                name: 'French (Canada)'\n            }\n        ];\n    }\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Language.ts\n ** module id = 29\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar state = require('./State');\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Location.ts\n ** module id = 30\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar validator = require('../core/Validator');\nvar subscription = require('../core/Subscription');\nvar platform = require('../core/Platform');\nvar contact = require('./Contact');\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Message.ts\n ** module id = 31\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar extension = require('./Extension');\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/PhoneNumber.ts\n ** module id = 32\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar subscription = require('../core/Subscription');\nvar extension = require('./Extension');\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Presence.ts\n ** module id = 33\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Ringout.ts\n ** module id = 34\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Service.ts\n ** module id = 35\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/ShippingMethod.ts\n ** module id = 36\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar country = require('./Country');\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/State.ts\n ** module id = 37\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Timezone.ts\n ** module id = 38\n ** module chunks = 0\n **/","// Version: 3.7.11\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     JSON     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\n(window['JSON'] && window['JSON']['stringify']) || (function () {\n    window['JSON'] || (window['JSON'] = {});\n\n    function toJSON(key) {\n        try      { return this.valueOf() }\n        catch(e) { return null }\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n    function quote(string) {\n        escapable.lastIndex = 0;\n        return escapable.test(string) ?\n            '\"' + string.replace(escapable, function (a) {\n                var c = meta[a];\n                return typeof c === 'string' ? c :\n                    '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n            }) + '\"' :\n            '\"' + string + '\"';\n    }\n\n    function str(key, holder) {\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            partial,\n            mind  = gap,\n            value = holder[key];\n\n        if (value && typeof value === 'object') {\n            value = toJSON.call( value, key );\n        }\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n        switch (typeof value) {\n        case 'string':\n            return quote(value);\n\n        case 'number':\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n            return String(value);\n\n        case 'object':\n\n            if (!value) {\n                return 'null';\n            }\n\n            gap += indent;\n            partial = [];\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n                v = partial.length === 0 ? '[]' :\n                    gap ? '[\\n' + gap +\n                            partial.join(',\\n' + gap) + '\\n' +\n                                mind + ']' :\n                          '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n                for (k in value) {\n                    if (Object.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n\n            v = partial.length === 0 ? '{}' :\n                gap ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' +\n                        mind + '}' : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n    if (typeof JSON['stringify'] !== 'function') {\n        JSON['stringify'] = function (value, replacer, space) {\n            var i;\n            gap = '';\n            indent = '';\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                     typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n            return str('', {'': value});\n        };\n    }\n\n    if (typeof JSON['parse'] !== 'function') {\n        // JSON is parsed on the server for security.\n        JSON['parse'] = function (text) {return eval('('+text+')')};\n    }\n}());\nvar NOW             = 1\n,   READY           = false\n,   READY_BUFFER    = []\n,   PRESENCE_SUFFIX = '-pnpres'\n,   DEF_WINDOWING   = 10     // MILLISECONDS.\n,   DEF_TIMEOUT     = 10000  // MILLISECONDS.\n,   DEF_SUB_TIMEOUT = 310    // SECONDS.\n,   DEF_KEEPALIVE   = 60     // SECONDS (FOR TIMESYNC).\n,   SECOND          = 1000   // A THOUSAND MILLISECONDS.\n,   URLBIT          = '/'\n,   PARAMSBIT       = '&'\n,   PRESENCE_HB_THRESHOLD = 5\n,   PRESENCE_HB_DEFAULT  = 30\n,   SDK_VER         = '3.7.11'\n,   REPL            = /{([\\w\\-]+)}/g;\n\n/**\n * UTILITIES\n */\nfunction unique() { return'x'+ ++NOW+''+(+new Date) }\nfunction rnow()   { return+new Date }\n\n/**\n * NEXTORIGIN\n * ==========\n * var next_origin = nextorigin();\n */\nvar nextorigin = (function() {\n    var max = 20\n    ,   ori = Math.floor(Math.random() * max);\n    return function( origin, failover ) {\n        return origin.indexOf('pubsub.') > 0\n            && origin.replace(\n             'pubsub', 'ps' + (\n                failover ? generate_uuid().split('-')[0] :\n                (++ori < max? ori : ori=1)\n            ) ) || origin;\n    }\n})();\n\n\n/**\n * Build Url\n * =======\n *\n */\nfunction build_url( url_components, url_params ) {\n    var url    = url_components.join(URLBIT)\n    ,   params = [];\n\n    if (!url_params) return url;\n\n    each( url_params, function( key, value ) {\n        var value_str = (typeof value == 'object')?JSON['stringify'](value):value;\n        (typeof value != 'undefined' &&\n            value != null && encode(value_str).length > 0\n        ) && params.push(key + \"=\" + encode(value_str));\n    } );\n\n    url += \"?\" + params.join(PARAMSBIT);\n    return url;\n}\n\n/**\n * UPDATER\n * =======\n * var timestamp = unique();\n */\nfunction updater( fun, rate ) {\n    var timeout\n    ,   last   = 0\n    ,   runnit = function() {\n        if (last + rate > rnow()) {\n            clearTimeout(timeout);\n            timeout = setTimeout( runnit, rate );\n        }\n        else {\n            last = rnow();\n            fun();\n        }\n    };\n\n    return runnit;\n}\n\n/**\n * GREP\n * ====\n * var list = grep( [1,2,3], function(item) { return item % 2 } )\n */\nfunction grep( list, fun ) {\n    var fin = [];\n    each( list || [], function(l) { fun(l) && fin.push(l) } );\n    return fin\n}\n\n/**\n * SUPPLANT\n * ========\n * var text = supplant( 'Hello {name}!', { name : 'John' } )\n */\nfunction supplant( str, values ) {\n    return str.replace( REPL, function( _, match ) {\n        return values[match] || _\n    } );\n}\n\n/**\n * timeout\n * =======\n * timeout( function(){}, 100 );\n */\nfunction timeout( fun, wait ) {\n    return setTimeout( fun, wait );\n}\n\n/**\n * uuid\n * ====\n * var my_uuid = generate_uuid();\n */\nfunction generate_uuid(callback) {\n    var u = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,\n    function(c) {\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n        return v.toString(16);\n    });\n    if (callback) callback(u);\n    return u;\n}\n\nfunction isArray(arg) {\n  return !!arg && typeof arg !== 'string' && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n  //return !!arg && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n}\n\n/**\n * EACH\n * ====\n * each( [1,2,3], function(item) { } )\n */\nfunction each( o, f) {\n    if ( !o || !f ) return;\n\n    if ( isArray(o) )\n        for ( var i = 0, l = o.length; i < l; )\n            f.call( o[i], o[i], i++ );\n    else\n        for ( var i in o )\n            o.hasOwnProperty    &&\n            o.hasOwnProperty(i) &&\n            f.call( o[i], i, o[i] );\n}\n\n/**\n * MAP\n * ===\n * var list = map( [1,2,3], function(item) { return item + 1 } )\n */\nfunction map( list, fun ) {\n    var fin = [];\n    each( list || [], function( k, v ) { fin.push(fun( k, v )) } );\n    return fin;\n}\n\n\nfunction pam_encode(str) {\n  return encodeURIComponent(str).replace(/[!'()*~]/g, function(c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\n/**\n * ENCODE\n * ======\n * var encoded_data = encode('path');\n */\nfunction encode(path) { return encodeURIComponent(path) }\n\n/**\n * Generate Subscription Channel List\n * ==================================\n * generate_channel_list(channels_object);\n */\nfunction generate_channel_list(channels, nopresence) {\n    var list = [];\n    each( channels, function( channel, status ) {\n        if (nopresence) {\n            if(channel.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel);\n            }\n        } else {\n            if (status.subscribed) list.push(channel);\n        }\n    });\n    return list.sort();\n}\n\n/**\n * Generate Subscription Channel Groups List\n * ==================================\n * generate_channel_group_list(channels_groups object);\n */\nfunction generate_channel_group_list(channel_groups, nopresence) {\n    var list = [];\n    each(channel_groups, function( channel_group, status ) {\n        if (nopresence) {\n            if(channel_group.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel_group);\n            }\n        } else {\n            if (status.subscribed) list.push(channel_group);\n        }\n    });\n    return list.sort();\n}\n\n// PUBNUB READY TO CONNECT\nfunction ready() { timeout( function() {\n    if (READY) return;\n    READY = 1;\n    each( READY_BUFFER, function(connect) { connect() } );\n}, SECOND ); }\n\nfunction PNmessage(args) {\n    msg = args || {'apns' : {}},\n    msg['getPubnubMessage'] = function() {\n        var m = {};\n\n        if (Object.keys(msg['apns']).length) {\n            m['pn_apns'] = {\n                    'aps' : {\n                        'alert' : msg['apns']['alert'] ,\n                        'badge' : msg['apns']['badge']\n                    }\n            }\n            for (var k in msg['apns']) {\n                m['pn_apns'][k] = msg['apns'][k];\n            }\n            var exclude1 = ['badge','alert'];\n            for (var k in exclude1) {\n                delete m['pn_apns'][exclude1[k]];\n            }\n        }\n\n\n\n        if (msg['gcm']) {\n            m['pn_gcm'] = {\n                'data' : msg['gcm']\n            }\n        }\n\n        for (var k in msg) {\n            m[k] = msg[k];\n        }\n        var exclude = ['apns','gcm','publish', 'channel','callback','error'];\n        for (var k in exclude) {\n            delete m[exclude[k]];\n        }\n\n        return m;\n    };\n    msg['publish'] = function() {\n\n        var m = msg.getPubnubMessage();\n\n        if (msg['pubnub'] && msg['channel']) {\n            msg['pubnub'].publish({\n                'message' : m,\n                'channel' : msg['channel'],\n                'callback' : msg['callback'],\n                'error' : msg['error']\n            })\n        }\n    };\n    return msg;\n}\n\nfunction PN_API(setup) {\n    var SUB_WINDOWING =  +setup['windowing']   || DEF_WINDOWING\n    ,   SUB_TIMEOUT   = (+setup['timeout']     || DEF_SUB_TIMEOUT) * SECOND\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   TIME_CHECK    = setup['timecheck']     || 0\n    ,   NOLEAVE       = setup['noleave']       || 0\n    ,   PUBLISH_KEY   = setup['publish_key']   || 'demo'\n    ,   SUBSCRIBE_KEY = setup['subscribe_key'] || 'demo'\n    ,   AUTH_KEY      = setup['auth_key']      || ''\n    ,   SECRET_KEY    = setup['secret_key']    || ''\n    ,   hmac_SHA256   = setup['hmac_SHA256']\n    ,   SSL           = setup['ssl']            ? 's' : ''\n    ,   ORIGIN        = 'http'+SSL+'://'+(setup['origin']||'pubsub.pubnub.com')\n    ,   STD_ORIGIN    = nextorigin(ORIGIN)\n    ,   SUB_ORIGIN    = nextorigin(ORIGIN)\n    ,   CONNECT       = function(){}\n    ,   PUB_QUEUE     = []\n    ,   CLOAK         = true\n    ,   TIME_DRIFT    = 0\n    ,   SUB_CALLBACK  = 0\n    ,   SUB_CHANNEL   = 0\n    ,   SUB_RECEIVER  = 0\n    ,   SUB_RESTORE   = setup['restore'] || 0\n    ,   SUB_BUFF_WAIT = 0\n    ,   TIMETOKEN     = 0\n    ,   RESUMED       = false\n    ,   CHANNELS      = {}\n    ,   CHANNEL_GROUPS       = {}\n    ,   SUB_ERROR     = function(){}\n    ,   STATE         = {}\n    ,   PRESENCE_HB_TIMEOUT  = null\n    ,   PRESENCE_HB          = validate_presence_heartbeat(\n        setup['heartbeat'] || setup['pnexpires'] || 0, setup['error']\n    )\n    ,   PRESENCE_HB_INTERVAL = setup['heartbeat_interval'] || (PRESENCE_HB / 2) -1\n    ,   PRESENCE_HB_RUNNING  = false\n    ,   NO_WAIT_FOR_PENDING  = setup['no_wait_for_pending']\n    ,   COMPATIBLE_35 = setup['compatible_3.5']  || false\n    ,   xdr           = setup['xdr']\n    ,   params        = setup['params'] || {}\n    ,   error         = setup['error']      || function() {}\n    ,   _is_online    = setup['_is_online'] || function() { return 1 }\n    ,   jsonp_cb      = setup['jsonp_cb']   || function() { return 0 }\n    ,   db            = setup['db']         || {'get': function(){}, 'set': function(){}}\n    ,   CIPHER_KEY    = setup['cipher_key']\n    ,   UUID          = setup['uuid'] || ( !setup['unique_uuid'] && db && db['get'](SUBSCRIBE_KEY+'uuid') || '')\n    ,   USE_INSTANCEID = setup['instance_id'] || false\n    ,   INSTANCEID     = ''\n    ,   _poll_timer\n    ,   _poll_timer2;\n\n    if (PRESENCE_HB === 2) PRESENCE_HB_INTERVAL = 1;\n\n    var crypto_obj    = setup['crypto_obj'] ||\n        {\n            'encrypt' : function(a,key){ return a},\n            'decrypt' : function(b,key){return b}\n        };\n\n    function _get_url_params(data) {\n        if (!data) data = {};\n        each( params , function( key, value ) {\n            if (!(key in data)) data[key] = value;\n        });\n        return data;\n    }\n\n    function _object_to_key_list(o) {\n        var l = []\n        each( o , function( key, value ) {\n            l.push(key);\n        });\n        return l;\n    }\n    function _object_to_key_list_sorted(o) {\n        return _object_to_key_list(o).sort();\n    }\n\n    function _get_pam_sign_input_from_params(params) {\n        var si = \"\";\n        var l = _object_to_key_list_sorted(params);\n\n        for (var i in l) {\n            var k = l[i]\n            si += k + \"=\" + pam_encode(params[k]) ;\n            if (i != l.length - 1) si += \"&\"\n        }\n        return si;\n    }\n\n    function validate_presence_heartbeat(heartbeat, cur_heartbeat, error) {\n        var err = false;\n\n        if (typeof heartbeat === 'undefined') {\n            return cur_heartbeat;\n        }\n\n        if (typeof heartbeat === 'number') {\n            if (heartbeat > PRESENCE_HB_THRESHOLD || heartbeat == 0)\n                err = false;\n            else\n                err = true;\n        } else if(typeof heartbeat === 'boolean'){\n            if (!heartbeat) {\n                return 0;\n            } else {\n                return PRESENCE_HB_DEFAULT;\n            }\n        } else {\n            err = true;\n        }\n\n        if (err) {\n            error && error(\"Presence Heartbeat value invalid. Valid range ( x > \" + PRESENCE_HB_THRESHOLD + \" or x = 0). Current Value : \" + (cur_heartbeat || PRESENCE_HB_THRESHOLD));\n            return cur_heartbeat || PRESENCE_HB_THRESHOLD;\n        } else return heartbeat;\n    }\n\n    function encrypt(input, key) {\n        return crypto_obj['encrypt'](input, key || CIPHER_KEY) || input;\n    }\n    function decrypt(input, key) {\n        return crypto_obj['decrypt'](input, key || CIPHER_KEY) ||\n               crypto_obj['decrypt'](input, CIPHER_KEY) ||\n               input;\n    }\n\n    function error_common(message, callback) {\n        callback && callback({ 'error' : message || \"error occurred\"});\n        error && error(message);\n    }\n    function _presence_heartbeat() {\n\n        clearTimeout(PRESENCE_HB_TIMEOUT);\n\n        if (!PRESENCE_HB_INTERVAL || PRESENCE_HB_INTERVAL >= 500 ||\n            PRESENCE_HB_INTERVAL < 1 ||\n            (!generate_channel_list(CHANNELS,true).length  && !generate_channel_group_list(CHANNEL_GROUPS, true).length ) )\n        {\n            PRESENCE_HB_RUNNING = false;\n            return;\n        }\n\n        PRESENCE_HB_RUNNING = true;\n        SELF['presence_heartbeat']({\n            'callback' : function(r) {\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            },\n            'error' : function(e) {\n                error && error(\"Presence Heartbeat unable to reach Pubnub servers.\" + JSON.stringify(e));\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            }\n        });\n    }\n\n    function start_presence_heartbeat() {\n        !PRESENCE_HB_RUNNING && _presence_heartbeat();\n    }\n\n    function publish(next) {\n\n        if (NO_WAIT_FOR_PENDING) {\n            if (!PUB_QUEUE.length) return;\n        } else {\n            if (next) PUB_QUEUE.sending = 0;\n            if ( PUB_QUEUE.sending || !PUB_QUEUE.length ) return;\n            PUB_QUEUE.sending = 1;\n        }\n\n        xdr(PUB_QUEUE.shift());\n    }\n    function each_channel_group(callback) {\n        var count = 0;\n\n        each( generate_channel_group_list(CHANNEL_GROUPS), function(channel_group) {\n            var chang = CHANNEL_GROUPS[channel_group];\n\n            if (!chang) return;\n\n            count++;\n            (callback||function(){})(chang);\n        } );\n\n        return count;\n    }\n\n    function each_channel(callback) {\n        var count = 0;\n\n        each( generate_channel_list(CHANNELS), function(channel) {\n            var chan = CHANNELS[channel];\n\n            if (!chan) return;\n\n            count++;\n            (callback||function(){})(chan);\n        } );\n\n        return count;\n    }\n    function _invoke_callback(response, callback, err) {\n        if (typeof response == 'object') {\n            if (response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n\n                err && err(callback_data);\n                return;\n\n            }\n            if (response['payload']) {\n                if (response['next_page'])\n                    callback && callback(response['payload'], response['next_page']);\n                else\n                    callback && callback(response['payload']);\n                return;\n            }\n        }\n        callback && callback(response);\n    }\n\n    function _invoke_error(response,err) {\n\n        if (typeof response == 'object' && response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n                \n                err && err(callback_data);\n                return;\n        } else {\n            err && err(response);\n        }\n    }\n    function CR(args, callback, url1, data) {\n            var callback        = args['callback']      || callback\n            ,   err             = args['error']         || error\n            ,   jsonp           = jsonp_cb();\n\n            data = data || {};\n            \n            if (!data['auth']) {\n                data['auth'] = args['auth_key'] || AUTH_KEY;\n            }\n            \n            var url = [\n                    STD_ORIGIN, 'v1', 'channel-registration',\n                    'sub-key', SUBSCRIBE_KEY\n                ];\n\n            url.push.apply(url,url1);\n            \n            if (jsonp) data['callback']              = jsonp;\n            \n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n    }\n\n    // Announce Leave Event\n    var SELF = {\n        'LEAVE' : function( channel, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel\n            if (channel.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 2000,\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel), 'leave'\n                ]\n            });\n            return true;\n        },\n        'LEAVE_GROUP' : function( channel_group, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel Group\n            if (channel_group.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (channel_group && channel_group.length > 0) data['channel-group'] = channel_group;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 5000,\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(','), 'leave'\n                ]\n            });\n            return true;\n        },\n        'set_resumed' : function(resumed) {\n                RESUMED = resumed;\n        },\n        'get_cipher_key' : function() {\n            return CIPHER_KEY;\n        },\n        'set_cipher_key' : function(key) {\n            CIPHER_KEY = key;\n        },\n        'raw_encrypt' : function(input, key) {\n            return encrypt(input, key);\n        },\n        'raw_decrypt' : function(input, key) {\n            return decrypt(input, key);\n        },\n        'get_heartbeat' : function() {\n            return PRESENCE_HB;\n        },\n        \n        'set_heartbeat' : function(heartbeat, heartbeat_interval) {\n            PRESENCE_HB = validate_presence_heartbeat(heartbeat, PRESENCE_HB, error);\n            PRESENCE_HB_INTERVAL = heartbeat_interval || (PRESENCE_HB / 2) - 1;\n            if (PRESENCE_HB == 2) {\n                PRESENCE_HB_INTERVAL = 1;\n            }\n            CONNECT();\n            _presence_heartbeat();\n        },\n        \n        'get_heartbeat_interval' : function() {\n            return PRESENCE_HB_INTERVAL;\n        },\n        \n        'set_heartbeat_interval' : function(heartbeat_interval) {\n            PRESENCE_HB_INTERVAL = heartbeat_interval;\n            _presence_heartbeat();\n        },\n        \n        'get_version' : function() {\n            return SDK_VER;\n        },\n        'getGcmMessageObject' : function(obj) {\n            return {\n                'data' : obj\n            }\n        },\n        'getApnsMessageObject' : function(obj) {\n            var x =  {\n                'aps' : { 'badge' : 1, 'alert' : ''}\n            }\n            for (k in obj) {\n                k[x] = obj[k];\n            }\n            return x;\n        },\n        'newPnMessage' : function() {\n            var x = {};\n            if (gcm) x['pn_gcm'] = gcm;\n            if (apns) x['pn_apns'] = apns;\n            for ( k in n ) {\n                x[k] = n[k];\n            }\n            return x;\n        },\n\n        '_add_param' : function(key,val) {\n            params[key] = val;\n        },\n\n        'channel_group' : function(args, callback) {\n            var ns_ch       = args['channel_group']\n            ,   callback    = callback         || args['callback']\n            ,   channels    = args['channels'] || args['channel']\n            ,   cloak       = args['cloak']\n            ,   namespace\n            ,   channel_group\n            ,   url = []\n            ,   data = {}\n            ,   mode = args['mode'] || 'add';\n\n\n            if (ns_ch) {\n                var ns_ch_a = ns_ch.split(':');\n\n                if (ns_ch_a.length > 1) {\n                    namespace = (ns_ch_a[0] === '*')?null:ns_ch_a[0];\n\n                    channel_group = ns_ch_a[1];\n                } else {\n                    channel_group = ns_ch_a[0];\n                }\n            }\n\n            namespace && url.push('namespace') && url.push(encode(namespace));\n\n            url.push('channel-group');\n\n            if (channel_group && channel_group !== '*') {\n                url.push(channel_group);\n            }\n\n            if (channels ) {\n                if (isArray(channels)) {\n                    channels = channels.join(',');\n                }\n                data[mode] = channels;\n                data['cloak'] = (CLOAK)?'true':'false';\n            } else {\n                if (mode === 'remove') url.push('remove');\n            }\n\n            if (typeof cloak != 'undefined') data['cloak'] = (cloak)?'true':'false';\n\n            CR(args, callback, url, data);\n        },\n\n        'channel_group_list_groups' : function(args, callback) {\n            var namespace;\n\n            namespace = args['namespace'] || args['ns'] || args['channel_group'] || null;\n            if (namespace) {\n                args[\"channel_group\"] = namespace + \":*\";\n            }\n\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_list_channels' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_remove_channel' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_remove_group' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (args['channel']) return error('Use channel_group_remove_channel if you want to remove a channel from a group.');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_add_channel' : function(args, callback) {\n           if (!args['channel_group']) return error('Missing Channel Group');\n           if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_cloak' : function(args, callback) {\n            if (typeof args['cloak'] == 'undefined') {\n                callback(CLOAK);\n                return;\n            }\n            CLOAK = args['cloak'];\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_list_namespaces' : function(args, callback) {\n            var url = ['namespace'];\n            CR(args, callback, url);\n        },\n        'channel_group_remove_namespace' : function(args, callback) {\n            var url = ['namespace',args['namespace'],'remove'];\n            CR(args, callback, url);\n        },\n\n        /*\n            PUBNUB.history({\n                channel  : 'my_chat_channel',\n                limit    : 100,\n                callback : function(history) { }\n            });\n        */\n        'history' : function( args, callback ) {\n            var callback         = args['callback'] || callback\n            ,   count            = args['count']    || args['limit'] || 100\n            ,   reverse          = args['reverse']  || \"false\"\n            ,   err              = args['error']    || function(){}\n            ,   auth_key         = args['auth_key'] || AUTH_KEY\n            ,   cipher_key       = args['cipher_key']\n            ,   channel          = args['channel']\n            ,   channel_group    = args['channel_group']\n            ,   start            = args['start']\n            ,   end              = args['end']\n            ,   include_token    = args['include_token']\n            ,   params           = {}\n            ,   jsonp            = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) return error('Missing Channel');\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            params['stringtoken'] = 'true';\n            params['count']       = count;\n            params['reverse']     = reverse;\n            params['auth']        = auth_key;\n\n            if (channel_group) {\n                params['channel-group'] = channel_group;\n                if (!channel) {\n                    channel = ','; \n                }\n            }\n            if (jsonp) params['callback']              = jsonp;\n            if (start) params['start']                 = start;\n            if (end)   params['end']                   = end;\n            if (include_token) params['include_token'] = 'true';\n\n            // Send Message\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(params),\n                success  : function(response) {\n                    if (typeof response == 'object' && response['error']) {\n                        err({'message' : response['message'], 'payload' : response['payload']});\n                        return;\n                    }\n                    var messages = response[0];\n                    var decrypted_messages = [];\n                    for (var a = 0; a < messages.length; a++) {\n                        var new_message = decrypt(messages[a],cipher_key);\n                        try {\n                            decrypted_messages['push'](JSON['parse'](new_message));\n                        } catch (e) {\n                            decrypted_messages['push']((new_message));\n                        }\n                    }\n                    callback([decrypted_messages, response[1], response[2]]);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'history', 'sub-key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel)\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.replay({\n                source      : 'my_channel',\n                destination : 'new_channel'\n            });\n        */\n        'replay' : function(args, callback) {\n            var callback    = callback || args['callback'] || function(){}\n            ,   auth_key    = args['auth_key'] || AUTH_KEY\n            ,   source      = args['source']\n            ,   destination = args['destination']\n            ,   stop        = args['stop']\n            ,   start       = args['start']\n            ,   end         = args['end']\n            ,   reverse     = args['reverse']\n            ,   limit       = args['limit']\n            ,   jsonp       = jsonp_cb()\n            ,   data        = {}\n            ,   url;\n\n            // Check User Input\n            if (!source)        return error('Missing Source Channel');\n            if (!destination)   return error('Missing Destination Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Setup URL Params\n            if (jsonp != '0') data['callback'] = jsonp;\n            if (stop)         data['stop']     = 'all';\n            if (reverse)      data['reverse']  = 'true';\n            if (start)        data['start']    = start;\n            if (end)          data['end']      = end;\n            if (limit)        data['count']    = limit;\n\n            data['auth'] = auth_key;\n\n            // Compose URL Parts\n            url = [\n                STD_ORIGIN, 'v1', 'replay',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                source, destination\n            ];\n\n            // Start (or Stop) Replay!\n            xdr({\n                callback : jsonp,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function() { callback([ 0, 'Disconnected' ]) },\n                url      : url,\n                data     : _get_url_params(data)\n            });\n        },\n\n        /*\n            PUBNUB.auth('AJFLKAJSDKLA');\n        */\n        'auth' : function(auth) {\n            AUTH_KEY = auth;\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.time(function(time){ });\n        */\n        'time' : function(callback) {\n            var jsonp = jsonp_cb();\n\n            var data = { 'uuid' : UUID, 'auth' : AUTH_KEY }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [STD_ORIGIN, 'time', jsonp],\n                success  : function(response) { callback(response[0]) },\n                fail     : function() { callback(0) }\n            });\n        },\n\n        /*\n            PUBNUB.publish({\n                channel : 'my_chat_channel',\n                message : 'hello!'\n            });\n        */\n        'publish' : function( args, callback ) {\n            var msg      = args['message'];\n            if (!msg) return error('Missing Message');\n\n            var callback = callback || args['callback'] || msg['callback'] || function(){}\n            ,   channel  = args['channel'] || msg['channel']\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   cipher_key = args['cipher_key']\n            ,   err      = args['error'] || msg['error'] || function() {}\n            ,   post     = args['post'] || false\n            ,   store    = ('store_in_history' in args) ? args['store_in_history']: true\n            ,   jsonp    = jsonp_cb()\n            ,   add_msg  = 'push'\n            ,   url;\n\n            if (args['prepend']) add_msg = 'unshift'\n\n            if (!channel)       return error('Missing Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (msg['getPubnubMessage']) {\n                msg = msg['getPubnubMessage']();\n            }\n\n            // If trying to send Object\n            msg = JSON['stringify'](encrypt(msg, cipher_key));\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'publish',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                0, encode(channel),\n                jsonp, encode(msg)\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key }\n\n            if (!store) params['store'] =\"0\"\n\n            if (USE_INSTANCEID) params['instanceid'] = INSTANCEID;\n\n            // Queue Message Send\n            PUB_QUEUE[add_msg]({\n                callback : jsonp,\n                timeout  : SECOND * 5,\n                url      : url,\n                data     : _get_url_params(params),\n                fail     : function(response){\n                    _invoke_error(response, err);\n                    publish(1);\n                },\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                    publish(1);\n                },\n                mode     : (post)?'POST':'GET'\n            });\n\n            // Send Message\n            publish();\n        },\n\n        /*\n            PUBNUB.unsubscribe({ channel : 'my_chat' });\n        */\n        'unsubscribe' : function(args, callback) {\n            var channel       = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   auth_key      = args['auth_key']    || AUTH_KEY\n            ,   callback      = callback            || args['callback'] || function(){}\n            ,   err           = args['error']       || function(){};\n\n            TIMETOKEN   = 0;\n            //SUB_RESTORE = 1;    REVISIT !!!!\n\n            if (channel) {\n                // Prepare Channel(s)\n                channel = map( (\n                    channel.join ? channel.join(',') : ''+channel\n                ).split(','), function(channel) {\n                    if (!CHANNELS[channel]) return;\n                    return channel + ',' + channel + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over Channels\n                each( channel.split(','), function(ch) {\n                    var CB_CALLED = true;\n                    if (!ch) return;\n                    CHANNELS[ch] = 0;\n                    if (ch in STATE) delete STATE[ch];\n                    if (READY) {\n                        CB_CALLED = SELF['LEAVE']( ch, 0 , auth_key, callback, err);\n                    }\n                    if (!CB_CALLED) callback({action : \"leave\"});\n\n                    \n                } );\n            }\n\n            if (channel_group) {\n                // Prepare channel group(s)\n                channel_group = map( (\n                    channel_group.join ? channel_group.join(',') : ''+channel_group\n                ).split(','), function(channel_group) {\n                    if (!CHANNEL_GROUPS[channel_group]) return;\n                    return channel_group + ',' + channel_group + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over channel groups\n                each( channel_group.split(','), function(chg) {\n                    var CB_CALLED = true;\n                    if (!chg) return;\n                    CHANNEL_GROUPS[chg] = 0;\n                    if (chg in STATE) delete STATE[chg];\n                    if (READY) {\n                        CB_CALLED = SELF['LEAVE_GROUP']( chg, 0 , auth_key, callback, err);\n                    }\n                    if (!CB_CALLED) callback({action : \"leave\"});\n\n                } );\n            }\n\n            // Reset Connection if Count Less\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.subscribe({\n                channel  : 'my_chat'\n                callback : function(message) { }\n            });\n        */\n        'subscribe' : function( args, callback ) {\n            var channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   callback        = callback            || args['callback']\n            ,   callback        = callback            || args['message']\n            ,   connect         = args['connect']     || function(){}\n            ,   reconnect       = args['reconnect']   || function(){}\n            ,   disconnect      = args['disconnect']  || function(){}\n            ,   SUB_ERROR       = args['error']       || SUB_ERROR || function(){}\n            ,   idlecb          = args['idle']        || function(){}\n            ,   presence        = args['presence']    || 0\n            ,   noheresync      = args['noheresync']  || 0\n            ,   backfill        = args['backfill']    || 0\n            ,   timetoken       = args['timetoken']   || 0\n            ,   sub_timeout     = args['timeout']     || SUB_TIMEOUT\n            ,   windowing       = args['windowing']   || SUB_WINDOWING\n            ,   state           = args['state']\n            ,   heartbeat       = args['heartbeat'] || args['pnexpires']\n            ,   heartbeat_interval = args['heartbeat_interval']\n            ,   restore         = args['restore'] || SUB_RESTORE;\n\n            AUTH_KEY            = args['auth_key']    || AUTH_KEY;\n\n            // Restore Enabled?\n            SUB_RESTORE = restore;\n\n            // Always Reset the TT\n            TIMETOKEN = timetoken;\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) {\n                return error('Missing Channel');\n            }\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (heartbeat || heartbeat === 0 || heartbeat_interval || heartbeat_interval === 0) {\n                SELF['set_heartbeat'](heartbeat, heartbeat_interval);\n            }\n\n            // Setup Channel(s)\n            if (channel) {\n                each( (channel.join ? channel.join(',') : ''+channel).split(','),\n                function(channel) {\n                    var settings = CHANNELS[channel] || {};\n\n                    // Store Channel State\n                    CHANNELS[SUB_CHANNEL = channel] = {\n                        name         : channel,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    if (state) {\n                        if (channel in state) {\n                            STATE[channel] = state[channel];\n                        } else {\n                            STATE[channel] = state;\n                        }\n                    }\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel'  : channel + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel'  : channel,\n                        'data'     : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel ); } );\n                        }\n                    });\n                } );\n            }\n\n            // Setup Channel Groups\n            if (channel_group) {\n                each( (channel_group.join ? channel_group.join(',') : ''+channel_group).split(','),\n                function(channel_group) {\n                    var settings = CHANNEL_GROUPS[channel_group] || {};\n\n                    CHANNEL_GROUPS[channel_group] = {\n                        name         : channel_group,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel_group'  : channel_group + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore,\n                        'auth_key' : AUTH_KEY\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel_group'  : channel_group,\n                        'data'           : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel_group ); } );\n                        }\n                    });\n                } );\n            }\n\n\n            // Test Network Connection\n            function _test_connection(success) {\n                if (success) {\n                    // Begin Next Socket Connection\n                    timeout( CONNECT, SECOND );\n                }\n                else {\n                    // New Origin on Failed Connection\n                    STD_ORIGIN = nextorigin( ORIGIN, 1 );\n                    SUB_ORIGIN = nextorigin( ORIGIN, 1 );\n\n                    // Re-test Connection\n                    timeout( function() {\n                        SELF['time'](_test_connection);\n                    }, SECOND );\n                }\n\n                // Disconnect & Reconnect\n                each_channel(function(channel){\n                    // Reconnect\n                    if (success && channel.disconnected) {\n                        channel.disconnected = 0;\n                        return channel.reconnect(channel.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel.disconnected) {\n                        channel.disconnected = 1;\n                        channel.disconnect(channel.name);\n                    }\n                });\n                \n                // Disconnect & Reconnect for channel groups\n                each_channel_group(function(channel_group){\n                    // Reconnect\n                    if (success && channel_group.disconnected) {\n                        channel_group.disconnected = 0;\n                        return channel_group.reconnect(channel_group.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel_group.disconnected) {\n                        channel_group.disconnected = 1;\n                        channel_group.disconnect(channel_group.name);\n                    }\n                });\n            }\n\n            // Evented Subscribe\n            function _connect() {\n                var jsonp           = jsonp_cb()\n                ,   channels        = generate_channel_list(CHANNELS).join(',')\n                ,   channel_groups  = generate_channel_group_list(CHANNEL_GROUPS).join(',');\n\n                // Stop Connection\n                if (!channels && !channel_groups) return;\n\n                if (!channels) channels = ',';\n\n                // Connect to PubNub Subscribe Servers\n                _reset_offline();\n\n                var data = _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY });\n\n                if (channel_groups) {\n                    data['channel-group'] = channel_groups;\n                }\n\n\n                var st = JSON.stringify(STATE);\n                if (st.length > 2) data['state'] = JSON.stringify(STATE);\n\n                if (PRESENCE_HB) data['heartbeat'] = PRESENCE_HB;\n\n                if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n                start_presence_heartbeat();\n                SUB_RECEIVER = xdr({\n                    timeout  : sub_timeout,\n                    callback : jsonp,\n                    fail     : function(response) {\n                        if (response && response['error'] && response['service']) {\n                            _invoke_error(response, SUB_ERROR);\n                            _test_connection(1);\n                        } else {\n                            SELF['time'](function(success){\n                                !success && ( _invoke_error(response, SUB_ERROR));\n                                _test_connection(success);\n                            });\n                        }\n                    },\n                    data     : _get_url_params(data),\n                    url      : [\n                        SUB_ORIGIN, 'subscribe',\n                        SUBSCRIBE_KEY, encode(channels),\n                        jsonp, TIMETOKEN\n                    ],\n                    success : function(messages) {\n\n                        // Check for Errors\n                        if (!messages || (\n                            typeof messages == 'object' &&\n                            'error' in messages         &&\n                            messages['error']\n                        )) {\n                            SUB_ERROR(messages['error']);\n                            return timeout( CONNECT, SECOND );\n                        }\n\n                        // User Idle Callback\n                        idlecb(messages[1]);\n\n                        // Restore Previous Connection Point if Needed\n                        TIMETOKEN = !TIMETOKEN               &&\n                                    SUB_RESTORE              &&\n                                    db['get'](SUBSCRIBE_KEY) || messages[1];\n\n                        /*\n                        // Connect\n                        each_channel_registry(function(registry){\n                            if (registry.connected) return;\n                            registry.connected = 1;\n                            registry.connect(channel.name);\n                        });\n                        */\n\n                        // Connect\n                        each_channel(function(channel){\n                            if (channel.connected) return;\n                            channel.connected = 1;\n                            channel.connect(channel.name);\n                        });\n\n                        // Connect for channel groups\n                        each_channel_group(function(channel_group){\n                            if (channel_group.connected) return;\n                            channel_group.connected = 1;\n                            channel_group.connect(channel_group.name);\n                        });\n\n                        if (RESUMED && !SUB_RESTORE) {\n                                TIMETOKEN = 0;\n                                RESUMED = false;\n                                // Update Saved Timetoken\n                                db['set']( SUBSCRIBE_KEY, 0 );\n                                timeout( _connect, windowing );\n                                return;\n                        }\n\n                        // Invoke Memory Catchup and Receive Up to 100\n                        // Previous Messages from the Queue.\n                        if (backfill) {\n                            TIMETOKEN = 10000;\n                            backfill  = 0;\n                        }\n\n                        // Update Saved Timetoken\n                        db['set']( SUBSCRIBE_KEY, messages[1] );\n\n                        // Route Channel <---> Callback for Message\n                        var next_callback = (function() {\n                            var channels = '';\n                            var channels2 = '';\n\n                            if (messages.length > 3) {\n                                channels  = messages[3];\n                                channels2 = messages[2];\n                            } else if (messages.length > 2) {\n                                channels = messages[2];\n                            } else {\n                                channels =  map(\n                                    generate_channel_list(CHANNELS), function(chan) { return map(\n                                        Array(messages[0].length)\n                                        .join(',').split(','),\n                                        function() { return chan; }\n                                    ) }).join(',')\n                            }\n\n                            var list  = channels.split(',');\n                            var list2 = (channels2)?channels2.split(','):[];\n\n                            return function() {\n                                var channel  = list.shift()||SUB_CHANNEL;\n                                var channel2 = list2.shift();\n\n                                var chobj = {};\n\n                                if (channel2) {\n                                    if (channel && channel.indexOf('-pnpres') >= 0 \n                                        && channel2.indexOf('-pnpres') < 0) {\n                                        channel2 += '-pnpres';\n                                    }\n                                    chobj = CHANNEL_GROUPS[channel2] || CHANNELS[channel2] || {'callback' : function(){}};\n                                } else {\n                                    chobj = CHANNELS[channel];\n                                }\n\n                                var r = [\n                                    chobj\n                                    .callback||SUB_CALLBACK,\n                                    channel.split(PRESENCE_SUFFIX)[0]\n                                ];\n                                channel2 && r.push(channel2.split(PRESENCE_SUFFIX)[0]);\n                                return r;\n                            };\n                        })();\n\n                        var latency = detect_latency(+messages[1]);\n                        each( messages[0], function(msg) {\n                            var next = next_callback();\n                            var decrypted_msg = decrypt(msg,\n                                (CHANNELS[next[1]])?CHANNELS[next[1]]['cipher_key']:null);\n                            next[0] && next[0]( decrypted_msg, messages, next[2] || next[1], latency, next[1]);\n                        });\n\n                        timeout( _connect, windowing );\n                    }\n                });\n            }\n\n            CONNECT = function() {\n                _reset_offline();\n                timeout( _connect, windowing );\n            };\n\n            // Reduce Status Flicker\n            if (!READY) return READY_BUFFER.push(CONNECT);\n\n            // Connect Now\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.here_now({ channel : 'my_chat', callback : fun });\n        */\n        'here_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   jsonp    = jsonp_cb()\n            ,   uuids    = ('uuids' in args) ? args['uuids'] : true\n            ,   state    = args['state']\n            ,   data     = { 'uuid' : UUID, 'auth' : auth_key };\n\n            if (!uuids) data['disable_uuids'] = 1;\n            if (state) data['state'] = 1;\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            var url = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY\n                ];\n\n            channel && url.push('channel') && url.push(encode(channel));\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (channel_group) {\n                data['channel-group'] = channel_group;\n                !channel && url.push('channel') && url.push(','); \n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n        },\n\n        /*\n            PUBNUB.current_channels_by_uuid({ channel : 'my_chat', callback : fun });\n        */\n        'where_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   uuid     = args['uuid']     || UUID\n            ,   data     = { 'auth' : auth_key };\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY,\n                    'uuid', encode(uuid)\n                ]\n            });\n        },\n\n        'state' : function(args, callback) {\n            var callback = args['callback'] || callback || function(r) {}\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   state    = args['state']\n            ,   uuid     = args['uuid'] || UUID\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   url\n            ,   data     = _get_url_params({ 'auth' : auth_key });\n\n            // Make sure we have a Channel\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!uuid) return error('Missing UUID');\n            if (!channel && !channel_group) return error('Missing Channel');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (typeof channel != 'undefined'\n                && CHANNELS[channel] && CHANNELS[channel].subscribed ) {\n                if (state) STATE[channel] = state;\n            }\n\n            if (typeof channel_group != 'undefined'\n                && CHANNEL_GROUPS[channel_group]\n                && CHANNEL_GROUPS[channel_group].subscribed\n                ) {\n                if (state) STATE[channel_group] = state;\n                data['channel-group'] = channel_group;\n\n                if (!channel) {\n                    channel = ',';\n                }\n            }\n\n            data['state'] = JSON.stringify(state);\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            if (state) {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', uuid, 'data'\n                ]\n            } else {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', encode(uuid)\n                ]\n            }\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n\n            });\n\n        },\n\n        /*\n            PUBNUB.grant({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                ttl      : 24 * 60, // Minutes\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'grant' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']  || args['channels']\n            ,   channel_group   = args['channel_group']\n            ,   jsonp           = jsonp_cb()\n            ,   ttl             = args['ttl']\n            ,   r               = (args['read'] )?\"1\":\"0\"\n            ,   w               = (args['write'])?\"1\":\"0\"\n            ,   m               = (args['manage'])?\"1\":\"0\"\n            ,   auth_key        = args['auth_key'] || args['auth_keys'];\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\" + PUBLISH_KEY + \"\\n\"\n                    + \"grant\" + \"\\n\";\n\n            var data = {\n                'w'         : w,\n                'r'         : r,\n                'timestamp' : timestamp\n            };\n            if (args['manage']) {\n                data['m'] = m;\n            }\n            if (isArray(channel)) {\n                channel = channel['join'](',');\n            }\n            if (isArray(auth_key)) {\n                auth_key = auth_key['join'](',');\n            }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (ttl || ttl === 0) data['ttl'] = ttl;\n\n            if (auth_key) data['auth'] = auth_key;\n\n            data = _get_url_params(data)\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'grant' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n         PUBNUB.mobile_gw_provision ({\n         device_id: 'A655FBA9931AB',\n         op       : 'add' | 'remove',\n         gw_type  : 'apns' | 'gcm',\n         channel  : 'my_chat',\n         callback : fun,\n         error    : fun,\n         });\n         */\n\n        'mobile_gw_provision' : function( args ) {\n\n            var callback = args['callback'] || function(){}\n                ,   auth_key       = args['auth_key'] || AUTH_KEY\n                ,   err            = args['error'] || function() {}\n                ,   jsonp          = jsonp_cb()\n                ,   channel        = args['channel']\n                ,   op             = args['op']\n                ,   gw_type        = args['gw_type']\n                ,   device_id      = args['device_id']\n                ,   url;\n\n            if (!device_id)     return error('Missing Device ID (device_id)');\n            if (!gw_type)       return error('Missing GW Type (gw_type: gcm or apns)');\n            if (!op)            return error('Missing GW Operation (op: add or remove)');\n            if (!channel)       return error('Missing gw destination Channel (channel)');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'v1/push/sub-key',\n                SUBSCRIBE_KEY, 'devices', device_id\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key, 'type': gw_type};\n\n            if (op == \"add\") {\n                params['add'] = channel;\n            } else if (op == \"remove\") {\n                params['remove'] = channel;\n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : params,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n        },\n\n        /*\n            PUBNUB.audit({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'audit' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   auth_key        = args['auth_key']\n            ,   jsonp           = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\"\n                + PUBLISH_KEY + \"\\n\"\n                + \"audit\" + \"\\n\";\n\n            var data = {'timestamp' : timestamp };\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (auth_key) data['auth']    = auth_key;\n\n            data = _get_url_params(data);\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'audit' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.revoke({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'revoke' : function( args, callback ) {\n            args['read']  = false;\n            args['write'] = false;\n            SELF['grant']( args, callback );\n        },\n        'set_uuid' : function(uuid) {\n            UUID = uuid;\n            CONNECT();\n        },\n        'get_uuid' : function() {\n            return UUID;\n        },\n        'isArray'  : function(arg) {\n            return isArray(arg);\n        },\n        'get_subscibed_channels' : function() {\n            return generate_channel_list(CHANNELS, true);\n        },\n        'presence_heartbeat' : function(args) {\n            var callback = args['callback'] || function() {}\n            var err      = args['error']    || function() {}\n            var jsonp    = jsonp_cb();\n            var data     = { 'uuid' : UUID, 'auth' : AUTH_KEY };\n\n            var st = JSON['stringify'](STATE);\n            if (st.length > 2) data['state'] = JSON['stringify'](STATE);\n\n            if (PRESENCE_HB > 0 && PRESENCE_HB < 320) data['heartbeat'] = PRESENCE_HB;\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            var channels        = encode(generate_channel_list(CHANNELS, true)['join'](','));\n            var channel_groups  = generate_channel_group_list(CHANNEL_GROUPS, true)['join'](',');\n\n            if (!channels) channels = ',';\n            if (channel_groups) data['channel-group'] = channel_groups;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel' , channels,\n                    'heartbeat'\n                ],\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) { _invoke_error(response, err); }\n            });\n        },\n        'stop_timers': function () {\n            clearTimeout(_poll_timer);\n            clearTimeout(_poll_timer2);\n        },\n\n        // Expose PUBNUB Functions\n        'xdr'           : xdr,\n        'ready'         : ready,\n        'db'            : db,\n        'uuid'          : generate_uuid,\n        'map'           : map,\n        'each'          : each,\n        'each-channel'  : each_channel,\n        'grep'          : grep,\n        'offline'       : function(){ _reset_offline(\n            1, { \"message\" : \"Offline. Please check your network settings.\" })\n        },\n        'supplant'      : supplant,\n        'now'           : rnow,\n        'unique'        : unique,\n        'updater'       : updater\n    };\n\n    function _poll_online() {\n        _is_online() || _reset_offline( 1, {\n            \"error\" : \"Offline. Please check your network settings. \"\n        });\n        _poll_timer && clearTimeout(_poll_timer);\n        _poll_timer = timeout( _poll_online, SECOND );\n    }\n\n    function _poll_online2() {\n        if (!TIME_CHECK) return;\n        SELF['time'](function(success){\n            detect_time_detla( function(){}, success );\n            success || _reset_offline( 1, {\n                \"error\" : \"Heartbeat failed to connect to Pubnub Servers.\" +\n                    \"Please check your network settings.\"\n                });\n            _poll_timer2 && clearTimeout(_poll_timer2);\n            _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n        });\n    }\n\n    function _reset_offline(err, msg) {\n        SUB_RECEIVER && SUB_RECEIVER(err, msg);\n        SUB_RECEIVER = null;\n\n        clearTimeout(_poll_timer);\n        clearTimeout(_poll_timer2);\n    }\n    \n    if (!UUID) UUID = SELF['uuid']();\n    if (!INSTANCEID) INSTANCEID = SELF['uuid']();\n    db['set']( SUBSCRIBE_KEY + 'uuid', UUID );\n\n    _poll_timer  = timeout( _poll_online,  SECOND    );\n    _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n    PRESENCE_HB_TIMEOUT = timeout(\n        start_presence_heartbeat,\n        ( PRESENCE_HB_INTERVAL - 3 ) * SECOND\n    );\n\n    // Detect Age of Message\n    function detect_latency(tt) {\n        var adjusted_time = rnow() - TIME_DRIFT;\n        return adjusted_time - tt / 10000;\n    }\n\n    detect_time_detla();\n    function detect_time_detla( cb, time ) {\n        var stime = rnow();\n\n        time && calculate(time) || SELF['time'](calculate);\n\n        function calculate(time) {\n            if (!time) return;\n            var ptime   = time / 10000\n            ,   latency = (rnow() - stime) / 2;\n            TIME_DRIFT = rnow() - (ptime + latency);\n            cb && cb(TIME_DRIFT);\n        }\n    }\n\n    return SELF;\n}\nfunction crypto_obj() {\n\n    function SHA256(s) {\n        return CryptoJS['SHA256'](s)['toString'](CryptoJS['enc']['Hex']);\n    }\n\n    var iv = \"0123456789012345\";\n\n    var allowedKeyEncodings = ['hex', 'utf8', 'base64', 'binary'];\n    var allowedKeyLengths = [128, 256];\n    var allowedModes = ['ecb', 'cbc'];\n\n    var defaultOptions = {\n        'encryptKey': true,\n        'keyEncoding': 'utf8',\n        'keyLength': 256,\n        'mode': 'cbc'\n    };\n\n    function parse_options(options) {\n\n        // Defaults\n        options = options || {};\n        if (!options['hasOwnProperty']('encryptKey')) options['encryptKey'] = defaultOptions['encryptKey'];\n        if (!options['hasOwnProperty']('keyEncoding')) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (!options['hasOwnProperty']('keyLength')) options['keyLength'] = defaultOptions['keyLength'];\n        if (!options['hasOwnProperty']('mode')) options['mode'] = defaultOptions['mode'];\n\n        // Validation\n        if (allowedKeyEncodings['indexOf'](options['keyEncoding']['toLowerCase']()) == -1) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (allowedKeyLengths['indexOf'](parseInt(options['keyLength'], 10)) == -1) options['keyLength'] = defaultOptions['keyLength'];\n        if (allowedModes['indexOf'](options['mode']['toLowerCase']()) == -1) options['mode'] = defaultOptions['mode'];\n\n        return options;\n\n    }\n\n    function decode_key(key, options) {\n        if (options['keyEncoding'] == 'base64') {\n            return CryptoJS['enc']['Base64']['parse'](key);\n        } else if (options['keyEncoding'] == 'hex') {\n            return CryptoJS['enc']['Hex']['parse'](key);\n        } else {\n            return key;\n        }\n    }\n\n    function get_padded_key(key, options) {\n        key = decode_key(key, options);\n        if (options['encryptKey']) {\n            return CryptoJS['enc']['Utf8']['parse'](SHA256(key)['slice'](0, 32));\n        } else {\n            return key;\n        }\n    }\n\n    function get_mode(options) {\n        if (options['mode'] == 'ecb') {\n            return CryptoJS['mode']['ECB'];\n        } else {\n            return CryptoJS['mode']['CBC'];\n        }\n    }\n\n    function get_iv(options) {\n        return (options['mode'] == 'cbc') ? CryptoJS['enc']['Utf8']['parse'](iv) : null;\n    }\n\n    return {\n\n        'encrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            var hex_message = JSON['stringify'](data);\n            var encryptedHexArray = CryptoJS['AES']['encrypt'](hex_message, cipher_key, {'iv': iv, 'mode': mode})['ciphertext'];\n            var base_64_encrypted = encryptedHexArray['toString'](CryptoJS['enc']['Base64']);\n            return base_64_encrypted || data;\n        },\n\n        'decrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            try {\n                var binary_enc = CryptoJS['enc']['Base64']['parse'](data);\n                var json_plain = CryptoJS['AES']['decrypt']({'ciphertext': binary_enc}, cipher_key, {'iv': iv, 'mode': mode})['toString'](CryptoJS['enc']['Utf8']);\n                var plaintext = JSON['parse'](json_plain);\n                return plaintext;\n            }\n            catch (e) {\n                return undefined;\n            }\n        }\n    };\n}\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     UTIL     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nwindow['PUBNUB'] || (function() {\n\n/**\n * UTIL LOCALS\n */\n\nvar SWF             = 'https://pubnub.a.ssl.fastly.net/pubnub.swf'\n,   ASYNC           = 'async'\n,   UA              = navigator.userAgent\n,   PNSDK           = 'PubNub-JS-' + 'Web' + '/' + '3.7.11'\n,   XORIGN          = UA.indexOf('MSIE 6') == -1;\n\n/**\n * CONSOLE COMPATIBILITY\n */\nwindow.console || (window.console=window.console||{});\nconsole.log    || (\n    console.log   =\n    console.error =\n    ((window.opera||{}).postError||function(){})\n);\n\n/**\n * LOCAL STORAGE OR COOKIE\n */\nvar db = (function(){\n    var store = {};\n    var ls = false;\n    try {\n        ls = window['localStorage'];\n    } catch (e) { }\n    var cookieGet = function(key) {\n        if (document.cookie.indexOf(key) == -1) return null;\n        return ((document.cookie||'').match(\n            RegExp(key+'=([^;]+)')\n        )||[])[1] || null;\n    };\n    var cookieSet = function( key, value ) {\n        document.cookie = key + '=' + value +\n            '; expires=Thu, 1 Aug 2030 20:00:00 UTC; path=/';\n    };\n    var cookieTest = (function() {\n        try {\n            cookieSet('pnctest', '1');\n            return cookieGet('pnctest') === '1';\n        } catch (e) {\n            return false;\n        }\n    }());\n    return {\n        'get' : function(key) {\n            try {\n                if (ls) return ls.getItem(key);\n                if (cookieTest) return cookieGet(key);\n                return store[key];\n            } catch(e) {\n                return store[key];\n            }\n        },\n        'set' : function( key, value ) {\n            try {\n                if (ls) return ls.setItem( key, value ) && 0;\n                if (cookieTest) cookieSet( key, value );\n                store[key] = value;\n            } catch(e) {\n                store[key] = value;\n            }\n        }\n    };\n})();\n\nfunction get_hmac_SHA256(data,key) {\n    var hash = CryptoJS['HmacSHA256'](data, key);\n    return hash.toString(CryptoJS['enc']['Base64']);\n}\n\n/**\n * $\n * =\n * var div = $('divid');\n */\nfunction $(id) { return document.getElementById(id) }\n\n/**\n * ERROR\n * =====\n * error('message');\n */\nfunction error(message) { console['error'](message) }\n\n/**\n * SEARCH\n * ======\n * var elements = search('a div span');\n */\nfunction search( elements, start) {\n    var list = [];\n    each( elements.split(/\\s+/), function(el) {\n        each( (start || document).getElementsByTagName(el), function(node) {\n            list.push(node);\n        } );\n    });\n    return list;\n}\n\n/**\n * BIND\n * ====\n * bind( 'keydown', search('a')[0], function(element) {\n *     ...\n * } );\n */\nfunction bind( type, el, fun ) {\n    each( type.split(','), function(etype) {\n        var rapfun = function(e) {\n            if (!e) e = window.event;\n            if (!fun(e)) {\n                e.cancelBubble = true;\n                e.preventDefault  && e.preventDefault();\n                e.stopPropagation && e.stopPropagation();\n            }\n        };\n\n        if ( el.addEventListener ) el.addEventListener( etype, rapfun, false );\n        else if ( el.attachEvent ) el.attachEvent( 'on' + etype, rapfun );\n        else  el[ 'on' + etype ] = rapfun;\n    } );\n}\n\n/**\n * UNBIND\n * ======\n * unbind( 'keydown', search('a')[0] );\n */\nfunction unbind( type, el, fun ) {\n    if ( el.removeEventListener ) el.removeEventListener( type, false );\n    else if ( el.detachEvent ) el.detachEvent( 'on' + type, false );\n    else  el[ 'on' + type ] = null;\n}\n\n/**\n * HEAD\n * ====\n * head().appendChild(elm);\n */\nfunction head() { return search('head')[0] }\n\n/**\n * ATTR\n * ====\n * var attribute = attr( node, 'attribute' );\n */\nfunction attr( node, attribute, value ) {\n    if (value) node.setAttribute( attribute, value );\n    else return node && node.getAttribute && node.getAttribute(attribute);\n}\n\n/**\n * CSS\n * ===\n * var obj = create('div');\n */\nfunction css( element, styles ) {\n    for (var style in styles) if (styles.hasOwnProperty(style))\n        try {element.style[style] = styles[style] + (\n            '|width|height|top|left|'.indexOf(style) > 0 &&\n            typeof styles[style] == 'number'\n            ? 'px' : ''\n        )}catch(e){}\n}\n\n/**\n * CREATE\n * ======\n * var obj = create('div');\n */\nfunction create(element) { return document.createElement(element) }\n\n\n/**\n * jsonp_cb\n * ========\n * var callback = jsonp_cb();\n */\nfunction jsonp_cb() { return XORIGN || FDomainRequest() ? 0 : unique() }\n\n\n\n/**\n * EVENTS\n * ======\n * PUBNUB.events.bind( 'you-stepped-on-flower', function(message) {\n *     // Do Stuff with message\n * } );\n *\n * PUBNUB.events.fire( 'you-stepped-on-flower', \"message-data\" );\n * PUBNUB.events.fire( 'you-stepped-on-flower', {message:\"data\"} );\n * PUBNUB.events.fire( 'you-stepped-on-flower', [1,2,3] );\n *\n */\nvar events = {\n    'list'   : {},\n    'unbind' : function( name ) { events.list[name] = [] },\n    'bind'   : function( name, fun ) {\n        (events.list[name] = events.list[name] || []).push(fun);\n    },\n    'fire' : function( name, data ) {\n        each(\n            events.list[name] || [],\n            function(fun) { fun(data) }\n        );\n    }\n};\n\n/**\n * XDR Cross Domain Request\n * ========================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction xdr( setup ) {\n    if (XORIGN || FDomainRequest()) return ajax(setup);\n\n    var script    = create('script')\n    ,   callback  = setup.callback\n    ,   id        = unique()\n    ,   finished  = 0\n    ,   xhrtme    = setup.timeout || DEF_TIMEOUT\n    ,   timer     = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail      = setup.fail    || function(){}\n    ,   data      = setup.data    || {}\n    ,   success   = setup.success || function(){}\n    ,   append    = function() { head().appendChild(script) }\n    ,   done      = function( failed, response ) {\n            if (finished) return;\n            finished = 1;\n\n            script.onerror = null;\n            clearTimeout(timer);\n\n            (failed || !response) || success(response);\n\n            timeout( function() {\n                failed && fail();\n                var s = $(id)\n                ,   p = s && s.parentNode;\n                p && p.removeChild(s);\n            }, SECOND );\n        };\n\n    window[callback] = function(response) {\n        done( 0, response );\n    };\n\n    if (!setup.blocking) script[ASYNC] = ASYNC;\n\n    script.onerror = function() { done(1) };\n    script.src     = build_url( setup.url, data );\n\n    attr( script, 'id', id );\n\n    append();\n    return done;\n}\n\n/**\n * CORS XHR Request\n * ================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction ajax( setup ) {\n    var xhr, response\n    ,   finished = function() {\n            if (loaded) return;\n            loaded = 1;\n\n            clearTimeout(timer);\n\n            try       { response = JSON['parse'](xhr.responseText); }\n            catch (r) { return done(1); }\n\n            complete = 1;\n            success(response);\n        }\n    ,   complete = 0\n    ,   loaded   = 0\n    ,   xhrtme   = setup.timeout || DEF_TIMEOUT\n    ,   timer    = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail     = setup.fail    || function(){}\n    ,   data     = setup.data    || {}\n    ,   success  = setup.success || function(){}\n    ,   async    = !(setup.blocking)\n    ,   done     = function(failed,response) {\n            if (complete) return;\n            complete = 1;\n\n            clearTimeout(timer);\n\n            if (xhr) {\n                xhr.onerror = xhr.onload = null;\n                xhr.abort && xhr.abort();\n                xhr = null;\n            }\n\n            failed && fail(response);\n        };\n\n    // Send\n    try {\n        xhr = FDomainRequest()      ||\n              window.XDomainRequest &&\n              new XDomainRequest()  ||\n              new XMLHttpRequest();\n\n        xhr.onerror = xhr.onabort   = function(e){ done(\n            1, e || (xhr && xhr.responseText) || { \"error\" : \"Network Connection Error\"}\n        ) };\n        xhr.onload  = xhr.onloadend = finished;\n        xhr.onreadystatechange = function() {\n            if (xhr && xhr.readyState == 4) {\n                switch(xhr.status) {\n                    case 200:\n                        break;\n                    default:\n                        try {\n                            response = JSON['parse'](xhr.responseText);\n                            done(1,response);\n                        }\n                        catch (r) { return done(1, {status : xhr.status, payload : null, message : xhr.responseText}); }\n                        return;\n                }\n            }\n        }\n\n        var url = build_url(setup.url,data);\n\n        xhr.open( 'GET', url, async );\n        if (async) xhr.timeout = xhrtme;\n        xhr.send();\n    }\n    catch(eee) {\n        done(0);\n        XORIGN = 0;\n        return xdr(setup);\n    }\n\n    // Return 'done'\n    return done;\n}\n\n// Test Connection State\nfunction _is_online() {\n    if (!('onLine' in navigator)) return 1;\n    try       { return navigator['onLine'] }\n    catch (e) { return true }\n}\n\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     PUBNUB     ===========================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nvar PDIV          = $('pubnub') || 0\n,   CREATE_PUBNUB = function(setup) {\n\n    // Force JSONP if requested from user.\n    if (setup['jsonp'])  XORIGN = 0;\n    else                 XORIGN = UA.indexOf('MSIE 6') == -1;\n\n    var SUBSCRIBE_KEY = setup['subscribe_key'] || ''\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   UUID          = setup['uuid'] || db['get'](SUBSCRIBE_KEY+'uuid')||'';\n\n    var leave_on_unload = setup['leave_on_unload'] || 0;\n\n    setup['xdr']        = xdr;\n    setup['db']         = db;\n    setup['error']      = setup['error'] || error;\n    setup['_is_online'] = _is_online;\n    setup['jsonp_cb']   = jsonp_cb;\n    setup['hmac_SHA256']= get_hmac_SHA256;\n    setup['crypto_obj'] = crypto_obj();\n    setup['params']     = { 'pnsdk' : PNSDK }\n\n    var SELF = function(setup) {\n        return CREATE_PUBNUB(setup);\n    };\n\n    var PN = PN_API(setup);\n\n    for (var prop in PN) {\n        if (PN.hasOwnProperty(prop)) {\n            SELF[prop] = PN[prop];\n        }\n    }\n    SELF['css']         = css;\n    SELF['$']           = $;\n    SELF['create']      = create;\n    SELF['bind']        = bind;\n    SELF['head']        = head;\n    SELF['search']      = search;\n    SELF['attr']        = attr;\n    SELF['events']      = events;\n    SELF['init']        = SELF;\n    SELF['secure']      = SELF;\n    SELF['crypto_obj']  = crypto_obj(); // export to instance\n\n\n    // Add Leave Functions\n    bind( 'beforeunload', window, function() {\n        if (leave_on_unload) SELF['each-channel'](function(ch){ SELF['LEAVE']( ch.name, 0 ) });\n        return true;\n    } );\n\n    // Return without Testing\n    if (setup['notest']) return SELF;\n\n    bind( 'offline', window,   SELF['offline'] );\n    bind( 'offline', document, SELF['offline'] );\n\n    // Return PUBNUB Socket Object\n    return SELF;\n};\nCREATE_PUBNUB['init']   = CREATE_PUBNUB;\nCREATE_PUBNUB['secure'] = CREATE_PUBNUB;\nCREATE_PUBNUB['crypto_obj'] = crypto_obj(); // export to constructor\n\n// Bind for PUBNUB Readiness to Subscribe\nif (document.readyState === 'complete') {\n    timeout( ready, 0 );\n}\nelse {\n    bind( 'load', window, function(){ timeout( ready, 0 ) } );\n}\n\nvar pdiv = PDIV || {};\n\n// CREATE A PUBNUB GLOBAL OBJECT\nPUBNUB = CREATE_PUBNUB({\n    'notest'        : 1,\n    'publish_key'   : attr( pdiv, 'pub-key' ),\n    'subscribe_key' : attr( pdiv, 'sub-key' ),\n    'ssl'           : !document.location.href.indexOf('https') ||\n                      attr( pdiv, 'ssl' ) == 'on',\n    'origin'        : attr( pdiv, 'origin' ),\n    'uuid'          : attr( pdiv, 'uuid' )\n});\n\n// jQuery Interface\nwindow['jQuery'] && (window['jQuery']['PUBNUB'] = CREATE_PUBNUB);\n\n// For Modern JS + Testling.js - http://testling.com/\ntypeof(module) !== 'undefined' && (module['exports'] = PUBNUB) && ready();\n\nvar pubnubs = $('pubnubs') || 0;\n\n// LEAVE NOW IF NO PDIV.\nif (!PDIV) return;\n\n// PUBNUB Flash Socket\ncss( PDIV, { 'position' : 'absolute', 'top' : -SECOND } );\n\nif ('opera' in window || attr( PDIV, 'flash' )) PDIV['innerHTML'] =\n    '<object id=pubnubs data='  + SWF +\n    '><param name=movie value=' + SWF +\n    '><param name=allowscriptaccess value=always></object>';\n\n// Create Interface for Opera Flash\nPUBNUB['rdx'] = function( id, data ) {\n    if (!data) return FDomainRequest[id]['onerror']();\n    FDomainRequest[id]['responseText'] = unescape(data);\n    FDomainRequest[id]['onload']();\n};\n\nfunction FDomainRequest() {\n    if (!pubnubs || !pubnubs['get']) return 0;\n\n    var fdomainrequest = {\n        'id'    : FDomainRequest['id']++,\n        'send'  : function() {},\n        'abort' : function() { fdomainrequest['id'] = {} },\n        'open'  : function( method, url ) {\n            FDomainRequest[fdomainrequest['id']] = fdomainrequest;\n            pubnubs['get']( fdomainrequest['id'], url );\n        }\n    };\n\n    return fdomainrequest;\n}\nFDomainRequest['id'] = SECOND;\n\n})();\n(function(){\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET INTERFACE\n// ---------------------------------------------------------------------------\nvar WS = PUBNUB['ws'] = function( url, protocols ) {\n    if (!(this instanceof WS)) return new WS( url, protocols );\n\n    var self     = this\n    ,   url      = self.url      = url || ''\n    ,   protocol = self.protocol = protocols || 'Sec-WebSocket-Protocol'\n    ,   bits     = url.split('/')\n    ,   setup    = {\n         'ssl'           : bits[0] === 'wss:'\n        ,'origin'        : bits[2]\n        ,'publish_key'   : bits[3]\n        ,'subscribe_key' : bits[4]\n        ,'channel'       : bits[5]\n    };\n\n    // READY STATES\n    self['CONNECTING'] = 0; // The connection is not yet open.\n    self['OPEN']       = 1; // The connection is open and ready to communicate.\n    self['CLOSING']    = 2; // The connection is in the process of closing.\n    self['CLOSED']     = 3; // The connection is closed or couldn't be opened.\n\n    // CLOSE STATES\n    self['CLOSE_NORMAL']         = 1000; // Normal Intended Close; completed.\n    self['CLOSE_GOING_AWAY']     = 1001; // Closed Unexpecttedly.\n    self['CLOSE_PROTOCOL_ERROR'] = 1002; // Server: Not Supported.\n    self['CLOSE_UNSUPPORTED']    = 1003; // Server: Unsupported Protocol.\n    self['CLOSE_TOO_LARGE']      = 1004; // Server: Too Much Data.\n    self['CLOSE_NO_STATUS']      = 1005; // Server: No reason.\n    self['CLOSE_ABNORMAL']       = 1006; // Abnormal Disconnect.\n\n    // Events Default\n    self['onclose']   = self['onerror'] =\n    self['onmessage'] = self['onopen']  =\n    self['onsend']    =  function(){};\n\n    // Attributes\n    self['binaryType']     = '';\n    self['extensions']     = '';\n    self['bufferedAmount'] = 0;\n    self['trasnmitting']   = false;\n    self['buffer']         = [];\n    self['readyState']     = self['CONNECTING'];\n\n    // Close if no setup.\n    if (!url) {\n        self['readyState'] = self['CLOSED'];\n        self['onclose']({\n            'code'     : self['CLOSE_ABNORMAL'],\n            'reason'   : 'Missing URL',\n            'wasClean' : true\n        });\n        return self;\n    }\n\n    // PubNub WebSocket Emulation\n    self.pubnub       = PUBNUB['init'](setup);\n    self.pubnub.setup = setup;\n    self.setup        = setup;\n\n    self.pubnub['subscribe']({\n        'restore'    : false,\n        'channel'    : setup['channel'],\n        'disconnect' : self['onerror'],\n        'reconnect'  : self['onopen'],\n        'error'      : function() {\n            self['onclose']({\n                'code'     : self['CLOSE_ABNORMAL'],\n                'reason'   : 'Missing URL',\n                'wasClean' : false\n            });\n        },\n        'callback'   : function(message) {\n            self['onmessage']({ 'data' : message });\n        },\n        'connect'    : function() {\n            self['readyState'] = self['OPEN'];\n            self['onopen']();\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET SEND\n// ---------------------------------------------------------------------------\nWS.prototype.send = function(data) {\n    var self = this;\n    self.pubnub['publish']({\n        'channel'  : self.pubnub.setup['channel'],\n        'message'  : data,\n        'callback' : function(response) {\n            self['onsend']({ 'data' : response });\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET CLOSE\n// ---------------------------------------------------------------------------\nWS.prototype.close = function() {\n    var self = this;\n    self.pubnub['unsubscribe']({ 'channel' : self.pubnub.setup['channel'] });\n    self['readyState'] = self['CLOSED'];\n    self['onclose']({});\n};\n\n})();\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\nvar CryptoJS=CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&&c.mixIn(a);c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},\nr=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((b+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<\n32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-8*(b%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,\n2),16)<<24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-8*(b%4)&255));return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(a.charCodeAt(b)&255)<<24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}},\nu=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this);\na._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a,\nd)).finalize(c)}}});var t=f.algo={};return f}(Math);\n\n// SHA256\n(function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64>n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t<=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&&(8>n&&(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64>p;p++){if(16>p)a[p]=\nc[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k<<25|k>>>7)^(k<<14|k>>>18)^k>>>3)+a[p-7]+((l<<15|l>>>17)^(l<<13|l>>>19)^l>>>10)+a[p-16]}k=q+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&m^~h&n)+r[p]+a[p];l=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&g^f&g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;\nd[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math);\n\n// HMAC SHA256\n(function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;\"string\"==typeof g&&(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes>m&&(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j<h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g=\nthis._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})();\n\n// Base64\n(function(){var u=CryptoJS,p=u.lib.WordArray;u.enc.Base64={stringify:function(d){var l=d.words,p=d.sigBytes,t=this._map;d.clamp();d=[];for(var r=0;r<p;r+=3)for(var w=(l[r>>>2]>>>24-8*(r%4)&255)<<16|(l[r+1>>>2]>>>24-8*((r+1)%4)&255)<<8|l[r+2>>>2]>>>24-8*((r+2)%4)&255,v=0;4>v&&r+0.75*v<p;v++)d.push(t.charAt(w>>>6*(3-v)&63));if(l=t.charAt(64))for(;d.length%4;)d.push(l);return d.join(\"\")},parse:function(d){var l=d.length,s=this._map,t=s.charAt(64);t&&(t=d.indexOf(t),-1!=t&&(l=t));for(var t=[],r=0,w=0;w<\nl;w++)if(w%4){var v=s.indexOf(d.charAt(w-1))<<2*(w%4),b=s.indexOf(d.charAt(w))>>>6-2*(w%4);t[r>>>2]|=(v|b)<<24-8*(r%4);r++}return p.create(t,r)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}})();\n\n// BlockCipher\n(function(u){function p(b,n,a,c,e,j,k){b=b+(n&a|~n&c)+e+k;return(b<<j|b>>>32-j)+n}function d(b,n,a,c,e,j,k){b=b+(n&c|a&~c)+e+k;return(b<<j|b>>>32-j)+n}function l(b,n,a,c,e,j,k){b=b+(n^a^c)+e+k;return(b<<j|b>>>32-j)+n}function s(b,n,a,c,e,j,k){b=b+(a^(n|~c))+e+k;return(b<<j|b>>>32-j)+n}for(var t=CryptoJS,r=t.lib,w=r.WordArray,v=r.Hasher,r=t.algo,b=[],x=0;64>x;x++)b[x]=4294967296*u.abs(u.sin(x+1))|0;r=r.MD5=v.extend({_doReset:function(){this._hash=new w.init([1732584193,4023233417,2562383102,271733878])},\n_doProcessBlock:function(q,n){for(var a=0;16>a;a++){var c=n+a,e=q[c];q[c]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360}var a=this._hash.words,c=q[n+0],e=q[n+1],j=q[n+2],k=q[n+3],z=q[n+4],r=q[n+5],t=q[n+6],w=q[n+7],v=q[n+8],A=q[n+9],B=q[n+10],C=q[n+11],u=q[n+12],D=q[n+13],E=q[n+14],x=q[n+15],f=a[0],m=a[1],g=a[2],h=a[3],f=p(f,m,g,h,c,7,b[0]),h=p(h,f,m,g,e,12,b[1]),g=p(g,h,f,m,j,17,b[2]),m=p(m,g,h,f,k,22,b[3]),f=p(f,m,g,h,z,7,b[4]),h=p(h,f,m,g,r,12,b[5]),g=p(g,h,f,m,t,17,b[6]),m=p(m,g,h,f,w,22,b[7]),\nf=p(f,m,g,h,v,7,b[8]),h=p(h,f,m,g,A,12,b[9]),g=p(g,h,f,m,B,17,b[10]),m=p(m,g,h,f,C,22,b[11]),f=p(f,m,g,h,u,7,b[12]),h=p(h,f,m,g,D,12,b[13]),g=p(g,h,f,m,E,17,b[14]),m=p(m,g,h,f,x,22,b[15]),f=d(f,m,g,h,e,5,b[16]),h=d(h,f,m,g,t,9,b[17]),g=d(g,h,f,m,C,14,b[18]),m=d(m,g,h,f,c,20,b[19]),f=d(f,m,g,h,r,5,b[20]),h=d(h,f,m,g,B,9,b[21]),g=d(g,h,f,m,x,14,b[22]),m=d(m,g,h,f,z,20,b[23]),f=d(f,m,g,h,A,5,b[24]),h=d(h,f,m,g,E,9,b[25]),g=d(g,h,f,m,k,14,b[26]),m=d(m,g,h,f,v,20,b[27]),f=d(f,m,g,h,D,5,b[28]),h=d(h,f,\nm,g,j,9,b[29]),g=d(g,h,f,m,w,14,b[30]),m=d(m,g,h,f,u,20,b[31]),f=l(f,m,g,h,r,4,b[32]),h=l(h,f,m,g,v,11,b[33]),g=l(g,h,f,m,C,16,b[34]),m=l(m,g,h,f,E,23,b[35]),f=l(f,m,g,h,e,4,b[36]),h=l(h,f,m,g,z,11,b[37]),g=l(g,h,f,m,w,16,b[38]),m=l(m,g,h,f,B,23,b[39]),f=l(f,m,g,h,D,4,b[40]),h=l(h,f,m,g,c,11,b[41]),g=l(g,h,f,m,k,16,b[42]),m=l(m,g,h,f,t,23,b[43]),f=l(f,m,g,h,A,4,b[44]),h=l(h,f,m,g,u,11,b[45]),g=l(g,h,f,m,x,16,b[46]),m=l(m,g,h,f,j,23,b[47]),f=s(f,m,g,h,c,6,b[48]),h=s(h,f,m,g,w,10,b[49]),g=s(g,h,f,m,\nE,15,b[50]),m=s(m,g,h,f,r,21,b[51]),f=s(f,m,g,h,u,6,b[52]),h=s(h,f,m,g,k,10,b[53]),g=s(g,h,f,m,B,15,b[54]),m=s(m,g,h,f,e,21,b[55]),f=s(f,m,g,h,v,6,b[56]),h=s(h,f,m,g,x,10,b[57]),g=s(g,h,f,m,t,15,b[58]),m=s(m,g,h,f,D,21,b[59]),f=s(f,m,g,h,z,6,b[60]),h=s(h,f,m,g,C,10,b[61]),g=s(g,h,f,m,j,15,b[62]),m=s(m,g,h,f,A,21,b[63]);a[0]=a[0]+f|0;a[1]=a[1]+m|0;a[2]=a[2]+g|0;a[3]=a[3]+h|0},_doFinalize:function(){var b=this._data,n=b.words,a=8*this._nDataBytes,c=8*b.sigBytes;n[c>>>5]|=128<<24-c%32;var e=u.floor(a/\n4294967296);n[(c+64>>>9<<4)+15]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360;n[(c+64>>>9<<4)+14]=(a<<8|a>>>24)&16711935|(a<<24|a>>>8)&4278255360;b.sigBytes=4*(n.length+1);this._process();b=this._hash;n=b.words;for(a=0;4>a;a++)c=n[a],n[a]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;return b},clone:function(){var b=v.clone.call(this);b._hash=this._hash.clone();return b}});t.MD5=v._createHelper(r);t.HmacMD5=v._createHmacHelper(r)})(Math);\n(function(){var u=CryptoJS,p=u.lib,d=p.Base,l=p.WordArray,p=u.algo,s=p.EvpKDF=d.extend({cfg:d.extend({keySize:4,hasher:p.MD5,iterations:1}),init:function(d){this.cfg=this.cfg.extend(d)},compute:function(d,r){for(var p=this.cfg,s=p.hasher.create(),b=l.create(),u=b.words,q=p.keySize,p=p.iterations;u.length<q;){n&&s.update(n);var n=s.update(d).finalize(r);s.reset();for(var a=1;a<p;a++)n=s.finalize(n),s.reset();b.concat(n)}b.sigBytes=4*q;return b}});u.EvpKDF=function(d,l,p){return s.create(p).compute(d,\nl)}})();\n\n// Cipher\nCryptoJS.lib.Cipher||function(u){var p=CryptoJS,d=p.lib,l=d.Base,s=d.WordArray,t=d.BufferedBlockAlgorithm,r=p.enc.Base64,w=p.algo.EvpKDF,v=d.Cipher=t.extend({cfg:l.extend(),createEncryptor:function(e,a){return this.create(this._ENC_XFORM_MODE,e,a)},createDecryptor:function(e,a){return this.create(this._DEC_XFORM_MODE,e,a)},init:function(e,a,b){this.cfg=this.cfg.extend(b);this._xformMode=e;this._key=a;this.reset()},reset:function(){t.reset.call(this);this._doReset()},process:function(e){this._append(e);return this._process()},\nfinalize:function(e){e&&this._append(e);return this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(e){return{encrypt:function(b,k,d){return(\"string\"==typeof k?c:a).encrypt(e,b,k,d)},decrypt:function(b,k,d){return(\"string\"==typeof k?c:a).decrypt(e,b,k,d)}}}});d.StreamCipher=v.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var b=p.mode={},x=function(e,a,b){var c=this._iv;c?this._iv=u:c=this._prevBlock;for(var d=0;d<b;d++)e[a+d]^=\nc[d]},q=(d.BlockCipherMode=l.extend({createEncryptor:function(e,a){return this.Encryptor.create(e,a)},createDecryptor:function(e,a){return this.Decryptor.create(e,a)},init:function(e,a){this._cipher=e;this._iv=a}})).extend();q.Encryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize;x.call(this,e,a,c);b.encryptBlock(e,a);this._prevBlock=e.slice(a,a+c)}});q.Decryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize,d=e.slice(a,a+c);b.decryptBlock(e,a);x.call(this,\ne,a,c);this._prevBlock=d}});b=b.CBC=q;q=(p.pad={}).Pkcs7={pad:function(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,l=[],n=0;n<c;n+=4)l.push(d);c=s.create(l,c);a.concat(c)},unpad:function(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255}};d.BlockCipher=v.extend({cfg:v.cfg.extend({mode:b,padding:q}),reset:function(){v.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;this._mode=c.call(a,\nthis,b&&b.words)},_doProcessBlock:function(a,b){this._mode.processBlock(a,b)},_doFinalize:function(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0)}else b=this._process(!0),a.unpad(b);return b},blockSize:4});var n=d.CipherParams=l.extend({init:function(a){this.mixIn(a)},toString:function(a){return(a||this.formatter).stringify(this)}}),b=(p.format={}).OpenSSL={stringify:function(a){var b=a.ciphertext;a=a.salt;return(a?s.create([1398893684,\n1701076831]).concat(a).concat(b):b).toString(r)},parse:function(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=s.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16}return n.create({ciphertext:a,salt:c})}},a=d.SerializableCipher=l.extend({cfg:l.extend({format:b}),encrypt:function(a,b,c,d){d=this.cfg.extend(d);var l=a.createEncryptor(c,d);b=l.finalize(b);l=l.cfg;return n.create({ciphertext:b,key:c,iv:l.iv,algorithm:a,mode:l.mode,padding:l.padding,blockSize:a.blockSize,formatter:d.format})},\ndecrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext)},_parse:function(a,b){return\"string\"==typeof a?b.parse(a,this):a}}),p=(p.kdf={}).OpenSSL={execute:function(a,b,c,d){d||(d=s.random(8));a=w.create({keySize:b+c}).compute(a,d);c=s.create(a.words.slice(b),4*c);a.sigBytes=4*b;return n.create({key:a,iv:c,salt:d})}},c=d.PasswordBasedCipher=a.extend({cfg:a.cfg.extend({kdf:p}),encrypt:function(b,c,d,l){l=this.cfg.extend(l);d=l.kdf.execute(d,\nb.keySize,b.ivSize);l.iv=d.iv;b=a.encrypt.call(this,b,c,d.key,l);b.mixIn(d);return b},decrypt:function(b,c,d,l){l=this.cfg.extend(l);c=this._parse(c,l.format);d=l.kdf.execute(d,b.keySize,b.ivSize,c.salt);l.iv=d.iv;return a.decrypt.call(this,b,c,d.key,l)}})}();\n\n// AES\n(function(){for(var u=CryptoJS,p=u.lib.BlockCipher,d=u.algo,l=[],s=[],t=[],r=[],w=[],v=[],b=[],x=[],q=[],n=[],a=[],c=0;256>c;c++)a[c]=128>c?c<<1:c<<1^283;for(var e=0,j=0,c=0;256>c;c++){var k=j^j<<1^j<<2^j<<3^j<<4,k=k>>>8^k&255^99;l[e]=k;s[k]=e;var z=a[e],F=a[z],G=a[F],y=257*a[k]^16843008*k;t[e]=y<<24|y>>>8;r[e]=y<<16|y>>>16;w[e]=y<<8|y>>>24;v[e]=y;y=16843009*G^65537*F^257*z^16843008*e;b[k]=y<<24|y>>>8;x[k]=y<<16|y>>>16;q[k]=y<<8|y>>>24;n[k]=y;e?(e=z^a[a[a[G^z]]],j^=a[a[j]]):e=j=1}var H=[0,1,2,4,8,\n16,32,64,128,27,54],d=d.AES=p.extend({_doReset:function(){for(var a=this._key,c=a.words,d=a.sigBytes/4,a=4*((this._nRounds=d+6)+1),e=this._keySchedule=[],j=0;j<a;j++)if(j<d)e[j]=c[j];else{var k=e[j-1];j%d?6<d&&4==j%d&&(k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255]):(k=k<<8|k>>>24,k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255],k^=H[j/d|0]<<24);e[j]=e[j-d]^k}c=this._invKeySchedule=[];for(d=0;d<a;d++)j=a-d,k=d%4?e[j]:e[j-4],c[d]=4>d||4>=j?k:b[l[k>>>24]]^x[l[k>>>16&255]]^q[l[k>>>\n8&255]]^n[l[k&255]]},encryptBlock:function(a,b){this._doCryptBlock(a,b,this._keySchedule,t,r,w,v,l)},decryptBlock:function(a,c){var d=a[c+1];a[c+1]=a[c+3];a[c+3]=d;this._doCryptBlock(a,c,this._invKeySchedule,b,x,q,n,s);d=a[c+1];a[c+1]=a[c+3];a[c+3]=d},_doCryptBlock:function(a,b,c,d,e,j,l,f){for(var m=this._nRounds,g=a[b]^c[0],h=a[b+1]^c[1],k=a[b+2]^c[2],n=a[b+3]^c[3],p=4,r=1;r<m;r++)var q=d[g>>>24]^e[h>>>16&255]^j[k>>>8&255]^l[n&255]^c[p++],s=d[h>>>24]^e[k>>>16&255]^j[n>>>8&255]^l[g&255]^c[p++],t=\nd[k>>>24]^e[n>>>16&255]^j[g>>>8&255]^l[h&255]^c[p++],n=d[n>>>24]^e[g>>>16&255]^j[h>>>8&255]^l[k&255]^c[p++],g=q,h=s,k=t;q=(f[g>>>24]<<24|f[h>>>16&255]<<16|f[k>>>8&255]<<8|f[n&255])^c[p++];s=(f[h>>>24]<<24|f[k>>>16&255]<<16|f[n>>>8&255]<<8|f[g&255])^c[p++];t=(f[k>>>24]<<24|f[n>>>16&255]<<16|f[g>>>8&255]<<8|f[h&255])^c[p++];n=(f[n>>>24]<<24|f[g>>>16&255]<<16|f[h>>>8&255]<<8|f[k&255])^c[p++];a[b]=q;a[b+1]=s;a[b+2]=t;a[b+3]=n},keySize:8});u.AES=p._createHelper(d)})();\n\n// Mode ECB\nCryptoJS.mode.ECB = (function () {\n    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n    ECB.Encryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.encryptBlock(words, offset);\n        }\n    });\n\n    ECB.Decryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.decryptBlock(words, offset);\n        }\n    });\n\n    return ECB;\n}());// Moved to hmac-sha-256.js\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./bower_components/pubnub/web/pubnub.js\n ** module id = 39\n ** module chunks = 0\n **/","(function(global){\n\n//\n// Check for native Promise and it has correct interface\n//\n\nvar NativePromise = global['Promise'];\nvar nativePromiseSupported =\n  NativePromise &&\n  // Some of these methods are missing from\n  // Firefox/Chrome experimental implementations\n  'resolve' in NativePromise &&\n  'reject' in NativePromise &&\n  'all' in NativePromise &&\n  'race' in NativePromise &&\n  // Older version of the spec had a resolver object\n  // as the arg rather than a function\n  (function(){\n    var resolve;\n    new NativePromise(function(r){ resolve = r; });\n    return typeof resolve === 'function';\n  })();\n\n\n//\n// export if necessary\n//\n\nif (typeof exports !== 'undefined' && exports)\n{\n  // node.js\n  exports.Promise = Promise || NativePromise;\n}\nelse\n{\n  // in browser add to global\n  if (!nativePromiseSupported)\n    global['Promise'] = Promise;\n}\n\n\n//\n// Polyfill\n//\n\nvar PENDING = 'pending';\nvar SEALED = 'sealed';\nvar FULFILLED = 'fulfilled';\nvar REJECTED = 'rejected';\nvar NOOP = function(){};\n\n// async calls\nvar asyncSetTimer = typeof setImmediate !== 'undefined' ? setImmediate : setTimeout;\nvar asyncQueue = [];\nvar asyncTimer;\n\nfunction asyncFlush(){\n  // run promise callbacks\n  for (var i = 0; i < asyncQueue.length; i++)\n    asyncQueue[i][0](asyncQueue[i][1]);\n\n  // reset async asyncQueue\n  asyncQueue = [];\n  asyncTimer = false;\n}\n\nfunction asyncCall(callback, arg){\n  asyncQueue.push([callback, arg]);\n\n  if (!asyncTimer)\n  {\n    asyncTimer = true;\n    asyncSetTimer(asyncFlush, 0);\n  }\n}\n\n\nfunction invokeResolver(resolver, promise) {\n  function resolvePromise(value) {\n    resolve(promise, value);\n  }\n\n  function rejectPromise(reason) {\n    reject(promise, reason);\n  }\n\n  try {\n    resolver(resolvePromise, rejectPromise);\n  } catch(e) {\n    rejectPromise(e);\n  }\n}\n\nfunction invokeCallback(subscriber){\n  var owner = subscriber.owner;\n  var settled = owner.state_;\n  var value = owner.data_;  \n  var callback = subscriber[settled];\n  var promise = subscriber.then;\n\n  if (typeof callback === 'function')\n  {\n    settled = FULFILLED;\n    try {\n      value = callback(value);\n    } catch(e) {\n      reject(promise, e);\n    }\n  }\n\n  if (!handleThenable(promise, value))\n  {\n    if (settled === FULFILLED)\n      resolve(promise, value);\n\n    if (settled === REJECTED)\n      reject(promise, value);\n  }\n}\n\nfunction handleThenable(promise, value) {\n  var resolved;\n\n  try {\n    if (promise === value)\n      throw new TypeError('A promises callback cannot return that same promise.');\n\n    if (value && (typeof value === 'function' || typeof value === 'object'))\n    {\n      var then = value.then;  // then should be retrived only once\n\n      if (typeof then === 'function')\n      {\n        then.call(value, function(val){\n          if (!resolved)\n          {\n            resolved = true;\n\n            if (value !== val)\n              resolve(promise, val);\n            else\n              fulfill(promise, val);\n          }\n        }, function(reason){\n          if (!resolved)\n          {\n            resolved = true;\n\n            reject(promise, reason);\n          }\n        });\n\n        return true;\n      }\n    }\n  } catch (e) {\n    if (!resolved)\n      reject(promise, e);\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction resolve(promise, value){\n  if (promise === value || !handleThenable(promise, value))\n    fulfill(promise, value);\n}\n\nfunction fulfill(promise, value){\n  if (promise.state_ === PENDING)\n  {\n    promise.state_ = SEALED;\n    promise.data_ = value;\n\n    asyncCall(publishFulfillment, promise);\n  }\n}\n\nfunction reject(promise, reason){\n  if (promise.state_ === PENDING)\n  {\n    promise.state_ = SEALED;\n    promise.data_ = reason;\n\n    asyncCall(publishRejection, promise);\n  }\n}\n\nfunction publish(promise) {\n  promise.then_ = promise.then_.forEach(invokeCallback);\n}\n\nfunction publishFulfillment(promise){\n  promise.state_ = FULFILLED;\n  publish(promise);\n}\n\nfunction publishRejection(promise){\n  promise.state_ = REJECTED;\n  publish(promise);\n}\n\n/**\n* @class\n*/\nfunction Promise(resolver){\n  if (typeof resolver !== 'function')\n    throw new TypeError('Promise constructor takes a function argument');\n\n  if (this instanceof Promise === false)\n    throw new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');\n\n  this.then_ = [];\n\n  invokeResolver(resolver, this);\n}\n\nPromise.prototype = {\n  constructor: Promise,\n\n  state_: PENDING,\n  then_: null,\n  data_: undefined,\n\n  then: function(onFulfillment, onRejection){\n    var subscriber = {\n      owner: this,\n      then: new this.constructor(NOOP),\n      fulfilled: onFulfillment,\n      rejected: onRejection\n    };\n\n    if (this.state_ === FULFILLED || this.state_ === REJECTED)\n    {\n      // already resolved, call callback async\n      asyncCall(invokeCallback, subscriber);\n    }\n    else\n    {\n      // subscribe\n      this.then_.push(subscriber);\n    }\n\n    return subscriber.then;\n  },\n\n  'catch': function(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nPromise.all = function(promises){\n  var Class = this;\n\n  if (!Array.isArray(promises))\n    throw new TypeError('You must pass an array to Promise.all().');\n\n  return new Class(function(resolve, reject){\n    var results = [];\n    var remaining = 0;\n\n    function resolver(index){\n      remaining++;\n      return function(value){\n        results[index] = value;\n        if (!--remaining)\n          resolve(results);\n      };\n    }\n\n    for (var i = 0, promise; i < promises.length; i++)\n    {\n      promise = promises[i];\n\n      if (promise && typeof promise.then === 'function')\n        promise.then(resolver(i), reject);\n      else\n        results[i] = promise;\n    }\n\n    if (!remaining)\n      resolve(results);\n  });\n};\n\nPromise.race = function(promises){\n  var Class = this;\n\n  if (!Array.isArray(promises))\n    throw new TypeError('You must pass an array to Promise.race().');\n\n  return new Class(function(resolve, reject) {\n    for (var i = 0, promise; i < promises.length; i++)\n    {\n      promise = promises[i];\n\n      if (promise && typeof promise.then === 'function')\n        promise.then(resolve, reject);\n      else\n        resolve(promise);\n    }\n  });\n};\n\nPromise.resolve = function(value){\n  var Class = this;\n\n  if (value && typeof value === 'object' && value.constructor === Class)\n    return value;\n\n  return new Class(function(resolve){\n    resolve(value);\n  });\n};\n\nPromise.reject = function(reason){\n  var Class = this;\n\n  return new Class(function(resolve, reject){\n    reject(reason);\n  });\n};\n\n})(new Function('return this')());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./bower_components/es6-promise-polyfill/promise.js\n ** module id = 40\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = require('./Headers');\nvar ajaxObserver = require('../AjaxObserver');\nvar r = require('./Response');\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/http/Request.ts\n ** module id = 41\n ** module chunks = 0\n **/","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gulp-webpack-build/~/node-libs-browser/~/timers-browserify/main.js\n ** module id = 42\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 43\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = require('../Utils');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/http/Headers.ts\n ** module id = 44\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = require('./Headers');\nvar log = require('../Log');\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/http/Response.ts\n ** module id = 45\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gulp-webpack-build/~/node-libs-browser/~/process/browser.js\n ** module id = 46\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}