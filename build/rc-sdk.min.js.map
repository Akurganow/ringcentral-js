{"version":3,"sources":["webpack/universalModuleDefinition","rc-sdk.js","webpack/bootstrap d9190ead77c26edd0191","../src/lib/RCSDK.ts","../src/lib/helpers/BlockedNumber.ts","external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}","external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}","external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}","../src/lib/helpers/Conferencing.ts","../src/lib/core/pubnub/PubnubMock.ts","../src/lib/core/xhr/XhrMock.ts","../src/lib/core/xhr/XhrResponse.ts","../src/lib/core/AjaxObserver.ts","../src/lib/core/Cache.ts","../src/lib/core/Context.ts","../src/lib/core/Helper.ts","../src/lib/core/List.ts","../src/lib/core/Log.ts","../src/lib/core/Observable.ts","../src/lib/core/PageVisibility.ts","../src/lib/core/Platform.ts","../src/lib/core/Subscription.ts","../src/lib/core/Utils.ts","../src/lib/core/Validator.ts","../src/lib/helpers/Account.ts","external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}","../src/lib/helpers/Call.ts","../src/lib/helpers/Contact.ts","../src/lib/helpers/ContactGroup.ts","../src/lib/helpers/Country.ts","../src/lib/helpers/Device.ts","../src/lib/helpers/DeviceModel.ts","../src/lib/helpers/Extension.ts","../src/lib/helpers/ForwardingNumber.ts","../src/lib/helpers/Language.ts","../src/lib/helpers/Location.ts","../src/lib/helpers/Message.ts","../src/lib/helpers/PhoneNumber.ts","../src/lib/helpers/Presence.ts","../src/lib/helpers/Ringout.ts","../src/lib/helpers/Service.ts","../src/lib/helpers/ShippingMethod.ts","../src/lib/helpers/State.ts","../src/lib/helpers/Timezone.ts","../src/lib/core/http/Request.ts","../src/lib/core/http/Headers.ts","../src/lib/core/http/Response.ts"],"names":["root","factory","exports","module","require","e","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_22__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","pubnubMock","xhrMock","xhrResponse","ajaxObserver","cache","context","helper","list","log","observable","pageVisibility","platform","subscription","utils","validator","accountHelper","blockedNumberHelper","callHelper","contactHelper","contactGroupHelper","conferencingHelper","countryHelper","deviceHelper","deviceModelHelper","extensionHelper","forwardingNumberHelper","languageHelper","locationHelper","messageHelper","phoneNumberHelper","presenceHelper","ringoutHelper","serviceHelper","shippingMethodHelper","stateHelper","timezoneHelper","promise","pubnub","RCSDK","options","_context","$get","injections","getCache","setPrefix","cachePrefix","getPlatform","setServer","server","setCredentials","appKey","appSecret","prototype","getContext","getAjaxObserver","getXhrResponse","getSubscription","getPageVisibility","getHelper","getObservable","getValidator","getLog","getUtils","getList","getCountryHelper","getDeviceModelHelper","getLanguageHelper","getLocationHelper","getShippingMethodHelper","getStateHelper","getTimezoneHelper","getAccountHelper","getBlockedNumberHelper","getCallHelper","getConferencingHelper","getContactHelper","getContactGroupHelper","getDeviceHelper","getExtensionHelper","getForwardingNumberHelper","getMessageHelper","getPhoneNumberHelper","getPresenceHelper","getRingoutHelper","getServiceHelper","version","url","sandbox","production","localStorage","Promise","PUBNUB","XHR","XMLHttpRequest","ActiveXObject","e1","e2","e3","e4","Error","createSingleton","BlockedNumber","__extends","d","b","__","constructor","hasOwnProperty","_super","createUrl","extensionId","validate","item","field","phone","phoneNumber","required","name","Helper","code","Conferencing","apply","arguments","PubnubFactory","PubnubMock","crypto_obj","getPubnubReal","ready","subscribe","on","channel","message","unsubscribe","off","receiveMessage","msg","emit","Observable","init","XhrMock","responses","async","method","requestHeaders","withCredentials","data","readyState","responseHeaders","status","getResponseHeader","header","toLowerCase","setRequestHeader","value","getAllResponseHeaders","res","forEach","push","join","open","send","_this","contentType","getRequestHeader","JSON","parse","parseQueryString","debug","currentResponse","find","setTimeout","onerror","setStatus","setResponseHeader","response","getPromise","onLoad","stringify","responseText","onload","then","bind","abort","XhrResponse","add","clear","ajax","indexOf","path","test","AjaxObserver","events","beforeRequest","requestSuccess","requestError","Cache","storage","getLocalStorage","prefix","prefixKey","key","setItem","removeItem","getItem","clean","Context","singletons","stubPubnub","stubAjax","usePubnubStub","flag","useAjaxStub","getPubnub","getXHR","defaultProperty","getId","object","isNew","getUri","resetAsNew","uri","parseMultipartResponse","isMultipart","filter","result","error","map","loadRequest","extend","saveRequest","post","body","deleteRequest","syncRequest","sync","query","get","syncToken","syncType","nextPageExists","navigation","index","array","getIdFn","gather","reduce","merge","target","supplement","mergeItems","supplementIndex","updatedIDs","newItem","List","numberComparator","stringComparator","propertyExtractor","property","a","parseString","localeCompare","parseNumber","comparator","extractFn","sortBy","compareFn","item1","item2","equalsFilter","obj","condition","containsFilter","toString","regexpFilter","RegExp","filterConfigs","self","opt","filterBy","filterFn","pass","Log","console","warn","info","logDebug","logInfo","logWarnings","logErrors","addTimestamps","disableAll","enableAll","parseArguments","args","argumentsToArray","unshift","Date","toLocaleString","_i","length","Object","defineProperty","enumerable","writable","hasListeners","event","listeners","registerOneTimeEvent","oneTimeEvents","oneTimeArguments","callback","isOneTimeEventFired","getOneTimeEventArgumens","isOneTimeEvent","setOneTimeEventFired","setOneTimeEventArgumens","some","cb","i","offAll","destroy","emitAndCallback","concat","PageVisibility","change","hidden","onchange","evt","window","v","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","visible","type","document","addEventListener","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","isVisible","Platform","request","accessViolation","logoutSuccess","logoutError","authorizeSuccess","authorizeError","refreshSuccess","refreshError","apiKey","account","urlPrefix","apiVersion","accountPrefix","accessTokenTtl","refreshTokenTtl","refreshTokenTtlRemember","refreshHandicapMs","refreshDelayMs","clearCacheOnRefreshError","refreshPromise","cacheId","pollInterval","releaseTimeout","getStorage","getRequest","clearStorage","btoa","Buffer","getCredentials","credentials","atob","split","secret","remember","undefined","getAuthURL","apiUrl","queryStringify","response_type","redirect_uri","redirectUri","client_id","state","brand_id","brandId","display","prompt","addServer","parseAuthRedirectUrl","qs","reverse","error_description","authorize","access_token_ttl","refresh_token_ttl","username","grant_type","password","extension","reject","authCall","setCache","isPaused","now","parseInt","pause","resume","refresh","resolve","refreshPolling","authData","getAuthData","access_token","refresh_token","refreshExpireTime","logout","token","getToken","poll","next","isTokenValid","getTokenType","token_type","expires_in","refresh_token_expires_in","forcedTokenType","expireTime","getTime","isAuthorized","cancelAccessToken","oldAuthData","forceAuthentication","apiCall","setOptions","setHeader","isUnauthorized","put","builtUrl","hasHttp","replace","addMethod","addToken","Subscription","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","eventFilters","timeout","expirationTime","expiresIn","deliveryMode","transportType","encryption","address","subscriberKey","secretKey","creationTime","register","isSubscribed","renew","addEvents","setEvents","getFullEventFilters","clearTimeout","updateSubscription","subscribeAtPubnub","remove","timeToExpiration","renewHandicapMs","decrypt","encryptionKey","encryptKey","keyEncoding","keyLength","mode","notify","ssl","subscribe_key","env","connect","Utils","hasOwn","rdigit","class2type","targetObject","sourceObject","src","copy","copyIsArray","clone","deep","isFunction","isPlainObject","isArray","parameters","vv","encodeURIComponent","queryString","argsParsed","arg","decodeURIComponent","trim","pair","isEmail","multiple","isPhoneNumber","Array","slice","isDate","isWindow","isNaN","String","nodeType","getProperty","part","fn","interval","stopPolling","delay","s","n","parseFloat","Validator","validators","errors","isValid","email","max","min","Account","Call","presence","contact","personal","active","getSessionId","sessionId","isInProgress","isAlive","availability","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","duration","hours","Math","floor","mins","secs","alive","attachContacts","contacts","calls","callerInfos","attachToCallerInfos","checkMergeability","outboundRingOutCall","inboundCall","dateString","strict","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","secondCall","parsePresenceCalls","activeCalls","activeCall","isCallInProgress","telephonyStatus","getSignature","cleanup","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","Contact","phoneFields","faxFields","addressFields","addressSubFields","nameFields","otherFields","emailFields","groupId","getFieldValues","where","fields","asHash","getFullName","getEmails","getPhones","getFaxes","getAddresses","match","string","inAddresses","transformFn","toLocaleLowerCase","found","matchWith","transformed","subField","matchAsPhone","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","startsWith","phonesOnly","faxesOnly","opts","firstName","lastName","email2","email3","ContactGroup","groupName","Country","Device","deviceModel","order","emergencyServiceAddress","street","city","country","zip","customerName","model","DeviceModel","devices","deviceClass","addons","count","device","cleanForSaving","addon","Extension","department","user","announcement","voicemail","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","search","extensionNumber","ForwardingNumber","forwardingNumber","hasFeature","feature","features","Language","languages","Location","uniqueNPAs","stateId","onlyUniqueNPA","npa","nxx","Message","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentUrl","attachments","getAttachmentContentType","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","validatePager","PhoneNumber","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","Presence","detailed","isAvailable","presenceStatus","presences","attachToExtensions","extensions","ex","presenceCall","Ringout","ringout","callStatus","isSuccess","isError","Service","isSmsEnabled","isServiceFeatureEnabledMethod","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","isEnabled","serviceFeatures","f","featureName","enabled","ShippingMethod","State","countryId","Timezone","Request","r","xhr","observer","isLoaded","setHeaders","headers","checkOptions","hasHeader","Headers","jsonContentType","toUpperCase","getEncodedBody","isJson","isUrlEncoded","responsePromise","statusText","getHeader","isContentType","getContentType","setContentType","multipartContentType","urlencodedContentType","Response","tmp","bodySeparator","shift","json","parts","headerSeparator","checkStatus","getError","boundary","boundarySeparator","pop","statusInfo","stack","description"],"mappings":"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","file":"rc-sdk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()), require(\"es6-promise\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"pubnub\", \"exports\", \"exports\", \"es6-promise\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()), require(\"es6-promise\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"PUBNUB\"], root[\"localStorage\"], root[\"XMLHttpRequest\"], root[\"Promise\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_22__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()), require(\"es6-promise\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"pubnub\", \"exports\", \"exports\", \"es6-promise\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()), require(\"es6-promise\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"PUBNUB\"], root[\"localStorage\"], root[\"XMLHttpRequest\"], root[\"Promise\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_22__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = __webpack_require__(6);\nvar xhrMock = __webpack_require__(7);\nvar xhrResponse = __webpack_require__(8);\nvar ajaxObserver = __webpack_require__(9);\nvar cache = __webpack_require__(10);\nvar context = __webpack_require__(11);\nvar helper = __webpack_require__(12);\nvar list = __webpack_require__(13);\nvar log = __webpack_require__(14);\nvar observable = __webpack_require__(15);\nvar pageVisibility = __webpack_require__(16);\nvar platform = __webpack_require__(17);\nvar subscription = __webpack_require__(18);\nvar utils = __webpack_require__(19);\nvar validator = __webpack_require__(20);\nvar accountHelper = __webpack_require__(21);\nvar blockedNumberHelper = __webpack_require__(1);\nvar callHelper = __webpack_require__(23);\nvar contactHelper = __webpack_require__(24);\nvar contactGroupHelper = __webpack_require__(25);\nvar conferencingHelper = __webpack_require__(5);\nvar countryHelper = __webpack_require__(26);\nvar deviceHelper = __webpack_require__(27);\nvar deviceModelHelper = __webpack_require__(28);\nvar extensionHelper = __webpack_require__(29);\nvar forwardingNumberHelper = __webpack_require__(30);\nvar languageHelper = __webpack_require__(31);\nvar locationHelper = __webpack_require__(32);\nvar messageHelper = __webpack_require__(33);\nvar phoneNumberHelper = __webpack_require__(34);\nvar presenceHelper = __webpack_require__(35);\nvar ringoutHelper = __webpack_require__(36);\nvar serviceHelper = __webpack_require__(37);\nvar shippingMethodHelper = __webpack_require__(38);\nvar stateHelper = __webpack_require__(39);\nvar timezoneHelper = __webpack_require__(40);\nvar promise = __webpack_require__(22);\nvar pubnub = __webpack_require__(2);\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () { return this._context; };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () { return ajaxObserver.$get(this.getContext()); };\n    RCSDK.prototype.getXhrResponse = function () { return xhrResponse.$get(this.getContext()); };\n    RCSDK.prototype.getPlatform = function () { return platform.$get(this.getContext()); };\n    RCSDK.prototype.getCache = function () { return cache.$get(this.getContext()); };\n    RCSDK.prototype.getSubscription = function () { return subscription.$get(this.getContext()); };\n    RCSDK.prototype.getPageVisibility = function () { return pageVisibility.$get(this.getContext()); };\n    RCSDK.prototype.getHelper = function () { return helper.$get(this.getContext()); };\n    RCSDK.prototype.getObservable = function () { return observable.$get(this.getContext()); };\n    RCSDK.prototype.getValidator = function () { return validator.$get(this.getContext()); };\n    RCSDK.prototype.getLog = function () { return log.$get(this.getContext()); };\n    RCSDK.prototype.getUtils = function () { return utils.$get(this.getContext()); };\n    RCSDK.prototype.getList = function () { return list.$get(this.getContext()); };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () { return countryHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceModelHelper = function () { return deviceModelHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLanguageHelper = function () { return languageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLocationHelper = function () { return locationHelper.$get(this.getContext()); };\n    RCSDK.prototype.getShippingMethodHelper = function () { return shippingMethodHelper.$get(this.getContext()); };\n    RCSDK.prototype.getStateHelper = function () { return stateHelper.$get(this.getContext()); };\n    RCSDK.prototype.getTimezoneHelper = function () { return timezoneHelper.$get(this.getContext()); };\n    RCSDK.prototype.getAccountHelper = function () { return accountHelper.$get(this.getContext()); };\n    RCSDK.prototype.getBlockedNumberHelper = function () { return blockedNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getCallHelper = function () { return callHelper.$get(this.getContext()); };\n    RCSDK.prototype.getConferencingHelper = function () { return conferencingHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactHelper = function () { return contactHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactGroupHelper = function () { return contactGroupHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceHelper = function () { return deviceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getExtensionHelper = function () { return extensionHelper.$get(this.getContext()); };\n    RCSDK.prototype.getForwardingNumberHelper = function () { return forwardingNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getMessageHelper = function () { return messageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPhoneNumberHelper = function () { return phoneNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPresenceHelper = function () { return presenceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getRingoutHelper = function () { return ringoutHelper.$get(this.getContext()); };\n    RCSDK.prototype.getServiceHelper = function () { return serviceHelper.$get(this.getContext()); };\n    RCSDK.version = '1.3.0';\n    RCSDK.url = {\n        sandbox: 'https://platform.devtest.ringcentral.com',\n        production: 'https://platform.ringcentral.com'\n    };\n    RCSDK.injections = {\n        localStorage: (typeof (localStorage) !== 'undefined'\n            ? localStorage\n            : __webpack_require__(3)),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : promise.Promise,\n        PUBNUB: pubnub,\n        XHR: function () {\n            try {\n                return new XMLHttpRequest();\n            }\n            catch (e) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e1) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e2) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e3) { }\n            try {\n                return new (__webpack_require__(4))();\n            }\n            catch (e4) { } // Node only\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        },\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar validator = __webpack_require__(20);\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\nif(typeof __WEBPACK_EXTERNAL_MODULE_4__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(15);\nvar PubnubMock = (function (_super) {\n    __extends(PubnubMock, _super);\n    function PubnubMock(context, options) {\n        this.options = options;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n        _super.call(this, context);\n    }\n    PubnubMock.prototype.ready = function () { };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.on('message-' + options.channel, options.message);\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n        this.off('message-' + options.channel);\n    };\n    PubnubMock.prototype.receiveMessage = function (msg, channel) {\n        this.emit('message-' + channel, msg, 'env', channel);\n    };\n    return PubnubMock;\n})(observable.Observable);\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock(this.context, options);\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar utils = __webpack_require__(19);\nvar log = __webpack_require__(14);\nvar xhrResponse = __webpack_require__(8); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(15);\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.getPubnubReal();\n    };\n    Context.prototype.getPubnubReal = function () {\n        return this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(19);\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(19);\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(19);\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(19);\nvar log = __webpack_require__(14);\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(15);\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(15);\nvar cache = __webpack_require__(10);\nvar request = __webpack_require__(41);\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.getCredentials = function () {\n        var credentials = ((typeof atob == 'function')\n            ? atob(this.apiKey)\n            : new Buffer(this.apiKey, 'base64').toString('utf-8')).split(':');\n        return {\n            key: credentials[0],\n            secret: credentials[1]\n        };\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.getAuthURL = function (options) {\n        options = options || {};\n        return this.apiUrl('/restapi/oauth/authorize?' + this.utils.queryStringify({\n            'response_type': 'code',\n            'redirect_uri': options.redirectUri || '',\n            'client_id': this.getCredentials().key,\n            'state': options.state || '',\n            'brand_id': options.brandId || '',\n            'display': options.display || '',\n            'prompt': options.prompt || ''\n        }), { addServer: true });\n    };\n    Platform.prototype.parseAuthRedirectUrl = function (url) {\n        var qs = this.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n        if (error) {\n            var e = new Error(error);\n            e.error = qs.error;\n            throw e;\n        }\n        return qs;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        var body = {\n            \"access_token_ttl\": this.accessTokenTtl,\n            \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n        };\n        if (options.username) {\n            body.grant_type = 'password';\n            body.username = options.username;\n            body.password = options.password;\n            body.extension = options.extension || '';\n        }\n        else if (options.code) {\n            body.grant_type = 'authorization_code';\n            body.code = options.code;\n            body.redirect_uri = options.redirectUri;\n        }\n        else {\n            return this.context.getPromise().reject(new Error('Unsupported authorization flow'));\n        }\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: body\n        }).then(function (response) {\n            _this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage()\n                .emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data)\n                .resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume()\n                .clearStorage()\n                .emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume()\n                .emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this\n                .refresh()\n                .then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '', hasHttp = url.indexOf('http://') != -1 || url.indexOf('https://') != -1;\n        if (options.addServer && !hasHttp)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1 && !hasHttp)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(15);\nvar platform = __webpack_require__(17);\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .subscribeAtPubnub()\n                .emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        })\n            .then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        })\n            .catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe()\n                .emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            _this.renew({});\n        }, timeToExpiration);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.decrypt = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var PUBNUB = this.getPubnub();\n            message = PUBNUB.crypto_obj.decrypt(message, this.subscription.deliveryMode.encryptionKey, {\n                encryptKey: false,\n                keyEncoding: 'base64',\n                keyLength: 128,\n                mode: 'ecb'\n            });\n        }\n        return message;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.notify = function (message) {\n        this.emit(this.events.notification, this.decrypt(message));\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(19);\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar list = __webpack_require__(13);\nvar presence = __webpack_require__(35);\nvar contact = __webpack_require__(24);\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar validator = __webpack_require__(20);\nvar list = __webpack_require__(13);\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar validator = __webpack_require__(20);\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar validator = __webpack_require__(20);\nvar extension = __webpack_require__(29);\nvar deviceModel = __webpack_require__(28);\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n        /**\n         * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n         */\n        this.devices = [\n            {\n                id: '-1',\n                name: 'Softphone'\n            },\n            {\n                id: '0',\n                name: 'Existing device'\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '23',\n                name: 'Polycom IP 321 Basic IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '30',\n                name: 'Polycom IP 550 HD Manager IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '37',\n                name: 'Polycom IP 6000 Conference Phone',\n                deviceClass: 'Conference Phone'\n            },\n            {\n                id: '40',\n                name: 'Polycom IP 335 HD IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '51',\n                name: 'Cisco SPA-303 Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\tDesk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '3'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '52',\n                name: 'Cisco SPA-122 ATA',\n                deviceClass: 'Analog Adapter'\n            },\n            {\n                id: '53',\n                name: 'Polycom VVX-500 Color Touchscreen',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '54',\n                name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '55',\n                name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n                deviceClass: 'Desk Phone'\n            }\n        ];\n    }\n    DeviceModel.prototype.getId = function (device) {\n        if (!device)\n            return null;\n        return device.id + (device.addons && device.addons[0]\n            ? '-' + device.addons[0].id + '-' + device.addons[0].count\n            : '');\n    };\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     */\n    DeviceModel.prototype.cleanForSaving = function (device) {\n        if (!device)\n            return null;\n        delete device.name;\n        delete device.deviceClass;\n        if (device.addons && device.addons.length > 0) {\n            device.addons.forEach(function (addon, i) {\n                delete device.addons[i].name;\n            });\n        }\n        else {\n            delete device.addons;\n        }\n        return device;\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar list = __webpack_require__(13);\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar list = __webpack_require__(13);\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n        this.languages = [\n            {\n                id: '1033',\n                name: 'English (US)'\n            },\n            {\n                id: '3084',\n                name: 'French (Canada)'\n            }\n        ];\n    }\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar list = __webpack_require__(13);\nvar state = __webpack_require__(39);\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar list = __webpack_require__(13);\nvar validator = __webpack_require__(20);\nvar subscription = __webpack_require__(18);\nvar platform = __webpack_require__(17);\nvar contact = __webpack_require__(24);\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar list = __webpack_require__(13);\nvar extension = __webpack_require__(29);\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar subscription = __webpack_require__(18);\nvar extension = __webpack_require__(29);\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar validator = __webpack_require__(20);\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar list = __webpack_require__(13);\nvar country = __webpack_require__(26);\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(12);\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = __webpack_require__(42);\nvar ajaxObserver = __webpack_require__(9);\nvar r = __webpack_require__(43);\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(19);\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = __webpack_require__(42);\nvar log = __webpack_require__(14);\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=rc-sdk.js.map"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d9190ead77c26edd0191\n **/","/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = require('./core/pubnub/PubnubMock');\nvar xhrMock = require('./core/xhr/XhrMock');\nvar xhrResponse = require('./core/xhr/XhrResponse');\nvar ajaxObserver = require('./core/AjaxObserver');\nvar cache = require('./core/Cache');\nvar context = require('./core/Context');\nvar helper = require('./core/Helper');\nvar list = require('./core/List');\nvar log = require('./core/Log');\nvar observable = require('./core/Observable');\nvar pageVisibility = require('./core/PageVisibility');\nvar platform = require('./core/Platform');\nvar subscription = require('./core/Subscription');\nvar utils = require('./core/Utils');\nvar validator = require('./core/Validator');\nvar accountHelper = require('./helpers/Account');\nvar blockedNumberHelper = require('./helpers/BlockedNumber');\nvar callHelper = require('./helpers/Call');\nvar contactHelper = require('./helpers/Contact');\nvar contactGroupHelper = require('./helpers/ContactGroup');\nvar conferencingHelper = require('./helpers/Conferencing');\nvar countryHelper = require('./helpers/Country');\nvar deviceHelper = require('./helpers/Device');\nvar deviceModelHelper = require('./helpers/DeviceModel');\nvar extensionHelper = require('./helpers/Extension');\nvar forwardingNumberHelper = require('./helpers/ForwardingNumber');\nvar languageHelper = require('./helpers/Language');\nvar locationHelper = require('./helpers/Location');\nvar messageHelper = require('./helpers/Message');\nvar phoneNumberHelper = require('./helpers/PhoneNumber');\nvar presenceHelper = require('./helpers/Presence');\nvar ringoutHelper = require('./helpers/Ringout');\nvar serviceHelper = require('./helpers/Service');\nvar shippingMethodHelper = require('./helpers/ShippingMethod');\nvar stateHelper = require('./helpers/State');\nvar timezoneHelper = require('./helpers/Timezone');\nvar promise = require('es6-promise');\nvar pubnub = require('pubnub');\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () { return this._context; };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () { return ajaxObserver.$get(this.getContext()); };\n    RCSDK.prototype.getXhrResponse = function () { return xhrResponse.$get(this.getContext()); };\n    RCSDK.prototype.getPlatform = function () { return platform.$get(this.getContext()); };\n    RCSDK.prototype.getCache = function () { return cache.$get(this.getContext()); };\n    RCSDK.prototype.getSubscription = function () { return subscription.$get(this.getContext()); };\n    RCSDK.prototype.getPageVisibility = function () { return pageVisibility.$get(this.getContext()); };\n    RCSDK.prototype.getHelper = function () { return helper.$get(this.getContext()); };\n    RCSDK.prototype.getObservable = function () { return observable.$get(this.getContext()); };\n    RCSDK.prototype.getValidator = function () { return validator.$get(this.getContext()); };\n    RCSDK.prototype.getLog = function () { return log.$get(this.getContext()); };\n    RCSDK.prototype.getUtils = function () { return utils.$get(this.getContext()); };\n    RCSDK.prototype.getList = function () { return list.$get(this.getContext()); };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () { return countryHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceModelHelper = function () { return deviceModelHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLanguageHelper = function () { return languageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLocationHelper = function () { return locationHelper.$get(this.getContext()); };\n    RCSDK.prototype.getShippingMethodHelper = function () { return shippingMethodHelper.$get(this.getContext()); };\n    RCSDK.prototype.getStateHelper = function () { return stateHelper.$get(this.getContext()); };\n    RCSDK.prototype.getTimezoneHelper = function () { return timezoneHelper.$get(this.getContext()); };\n    RCSDK.prototype.getAccountHelper = function () { return accountHelper.$get(this.getContext()); };\n    RCSDK.prototype.getBlockedNumberHelper = function () { return blockedNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getCallHelper = function () { return callHelper.$get(this.getContext()); };\n    RCSDK.prototype.getConferencingHelper = function () { return conferencingHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactHelper = function () { return contactHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactGroupHelper = function () { return contactGroupHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceHelper = function () { return deviceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getExtensionHelper = function () { return extensionHelper.$get(this.getContext()); };\n    RCSDK.prototype.getForwardingNumberHelper = function () { return forwardingNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getMessageHelper = function () { return messageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPhoneNumberHelper = function () { return phoneNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPresenceHelper = function () { return presenceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getRingoutHelper = function () { return ringoutHelper.$get(this.getContext()); };\n    RCSDK.prototype.getServiceHelper = function () { return serviceHelper.$get(this.getContext()); };\n    RCSDK.version = '1.3.0';\n    RCSDK.url = {\n        sandbox: 'https://platform.devtest.ringcentral.com',\n        production: 'https://platform.ringcentral.com'\n    };\n    RCSDK.injections = {\n        localStorage: (typeof (localStorage) !== 'undefined'\n            ? localStorage\n            : require('dom-' + 'storage')),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : promise.Promise,\n        PUBNUB: pubnub,\n        XHR: function () {\n            try {\n                return new XMLHttpRequest();\n            }\n            catch (e) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e1) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e2) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e3) { }\n            try {\n                return new (require('xhr' + '2'))();\n            }\n            catch (e4) { } // Node only\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        },\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/RCSDK.ts\n ** module id = 0\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/BlockedNumber.ts\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}\n ** module id = 3\n ** module chunks = 0\n **/","if(typeof __WEBPACK_EXTERNAL_MODULE_4__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}\n ** module id = 4\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Conferencing.ts\n ** module id = 5\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('../Observable');\nvar PubnubMock = (function (_super) {\n    __extends(PubnubMock, _super);\n    function PubnubMock(context, options) {\n        this.options = options;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n        _super.call(this, context);\n    }\n    PubnubMock.prototype.ready = function () { };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.on('message-' + options.channel, options.message);\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n        this.off('message-' + options.channel);\n    };\n    PubnubMock.prototype.receiveMessage = function (msg, channel) {\n        this.emit('message-' + channel, msg, 'env', channel);\n    };\n    return PubnubMock;\n})(observable.Observable);\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock(this.context, options);\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/pubnub/PubnubMock.ts\n ** module id = 6\n ** module chunks = 0\n **/","var utils = require('../Utils');\nvar log = require('../Log');\nvar xhrResponse = require('./XhrResponse'); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/xhr/XhrMock.ts\n ** module id = 7\n ** module chunks = 0\n **/","var XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/xhr/XhrResponse.ts\n ** module id = 8\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/AjaxObserver.ts\n ** module id = 9\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Cache.ts\n ** module id = 10\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.getPubnubReal();\n    };\n    Context.prototype.getPubnubReal = function () {\n        return this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Context.ts\n ** module id = 11\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Helper.ts\n ** module id = 12\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/List.ts\n ** module id = 13\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Log.ts\n ** module id = 14\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar log = require('./Log');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Observable.ts\n ** module id = 15\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/PageVisibility.ts\n ** module id = 16\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar cache = require('./Cache');\nvar request = require('./http/Request');\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.getCredentials = function () {\n        var credentials = ((typeof atob == 'function')\n            ? atob(this.apiKey)\n            : new Buffer(this.apiKey, 'base64').toString('utf-8')).split(':');\n        return {\n            key: credentials[0],\n            secret: credentials[1]\n        };\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.getAuthURL = function (options) {\n        options = options || {};\n        return this.apiUrl('/restapi/oauth/authorize?' + this.utils.queryStringify({\n            'response_type': 'code',\n            'redirect_uri': options.redirectUri || '',\n            'client_id': this.getCredentials().key,\n            'state': options.state || '',\n            'brand_id': options.brandId || '',\n            'display': options.display || '',\n            'prompt': options.prompt || ''\n        }), { addServer: true });\n    };\n    Platform.prototype.parseAuthRedirectUrl = function (url) {\n        var qs = this.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n        if (error) {\n            var e = new Error(error);\n            e.error = qs.error;\n            throw e;\n        }\n        return qs;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        var body = {\n            \"access_token_ttl\": this.accessTokenTtl,\n            \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n        };\n        if (options.username) {\n            body.grant_type = 'password';\n            body.username = options.username;\n            body.password = options.password;\n            body.extension = options.extension || '';\n        }\n        else if (options.code) {\n            body.grant_type = 'authorization_code';\n            body.code = options.code;\n            body.redirect_uri = options.redirectUri;\n        }\n        else {\n            return this.context.getPromise().reject(new Error('Unsupported authorization flow'));\n        }\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: body\n        }).then(function (response) {\n            _this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage()\n                .emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data)\n                .resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume()\n                .clearStorage()\n                .emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume()\n                .emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this\n                .refresh()\n                .then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '', hasHttp = url.indexOf('http://') != -1 || url.indexOf('https://') != -1;\n        if (options.addServer && !hasHttp)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1 && !hasHttp)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Platform.ts\n ** module id = 17\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar platform = require('./Platform');\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .subscribeAtPubnub()\n                .emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        })\n            .then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        })\n            .catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe()\n                .emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            _this.renew({});\n        }, timeToExpiration);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.decrypt = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var PUBNUB = this.getPubnub();\n            message = PUBNUB.crypto_obj.decrypt(message, this.subscription.deliveryMode.encryptionKey, {\n                encryptKey: false,\n                keyEncoding: 'base64',\n                keyLength: 128,\n                mode: 'ecb'\n            });\n        }\n        return message;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.notify = function (message) {\n        this.emit(this.events.notification, this.decrypt(message));\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Subscription.ts\n ** module id = 18\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Utils.ts\n ** module id = 19\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/Validator.ts\n ** module id = 20\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Account.ts\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}\n ** module id = 22\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar presence = require('./Presence');\nvar contact = require('./Contact');\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Call.ts\n ** module id = 23\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar list = require('../core/List');\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Contact.ts\n ** module id = 24\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/ContactGroup.ts\n ** module id = 25\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Country.ts\n ** module id = 26\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar extension = require('./Extension');\nvar deviceModel = require('./DeviceModel');\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Device.ts\n ** module id = 27\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n        /**\n         * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n         */\n        this.devices = [\n            {\n                id: '-1',\n                name: 'Softphone'\n            },\n            {\n                id: '0',\n                name: 'Existing device'\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '23',\n                name: 'Polycom IP 321 Basic IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '30',\n                name: 'Polycom IP 550 HD Manager IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '37',\n                name: 'Polycom IP 6000 Conference Phone',\n                deviceClass: 'Conference Phone'\n            },\n            {\n                id: '40',\n                name: 'Polycom IP 335 HD IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '51',\n                name: 'Cisco SPA-303 Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\tDesk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '3'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '52',\n                name: 'Cisco SPA-122 ATA',\n                deviceClass: 'Analog Adapter'\n            },\n            {\n                id: '53',\n                name: 'Polycom VVX-500 Color Touchscreen',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '54',\n                name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '55',\n                name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n                deviceClass: 'Desk Phone'\n            }\n        ];\n    }\n    DeviceModel.prototype.getId = function (device) {\n        if (!device)\n            return null;\n        return device.id + (device.addons && device.addons[0]\n            ? '-' + device.addons[0].id + '-' + device.addons[0].count\n            : '');\n    };\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     */\n    DeviceModel.prototype.cleanForSaving = function (device) {\n        if (!device)\n            return null;\n        delete device.name;\n        delete device.deviceClass;\n        if (device.addons && device.addons.length > 0) {\n            device.addons.forEach(function (addon, i) {\n                delete device.addons[i].name;\n            });\n        }\n        else {\n            delete device.addons;\n        }\n        return device;\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/DeviceModel.ts\n ** module id = 28\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Extension.ts\n ** module id = 29\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/ForwardingNumber.ts\n ** module id = 30\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n        this.languages = [\n            {\n                id: '1033',\n                name: 'English (US)'\n            },\n            {\n                id: '3084',\n                name: 'French (Canada)'\n            }\n        ];\n    }\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Language.ts\n ** module id = 31\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar state = require('./State');\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Location.ts\n ** module id = 32\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar validator = require('../core/Validator');\nvar subscription = require('../core/Subscription');\nvar platform = require('../core/Platform');\nvar contact = require('./Contact');\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Message.ts\n ** module id = 33\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar extension = require('./Extension');\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/PhoneNumber.ts\n ** module id = 34\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar subscription = require('../core/Subscription');\nvar extension = require('./Extension');\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Presence.ts\n ** module id = 35\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Ringout.ts\n ** module id = 36\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Service.ts\n ** module id = 37\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/ShippingMethod.ts\n ** module id = 38\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar country = require('./Country');\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/State.ts\n ** module id = 39\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/helpers/Timezone.ts\n ** module id = 40\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = require('./Headers');\nvar ajaxObserver = require('../AjaxObserver');\nvar r = require('./Response');\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/http/Request.ts\n ** module id = 41\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = require('../Utils');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/http/Headers.ts\n ** module id = 42\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = require('./Headers');\nvar log = require('../Log');\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/lib/core/http/Response.ts\n ** module id = 43\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}