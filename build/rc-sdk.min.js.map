{"version":3,"sources":["/source/rc-sdk.js","/source/core/pubnub/PubnubMock.js","/source/core/Utils.js","/source/core/Log.js","/source/core/xhr/XhrResponse.js","/source/core/xhr/XhrMock.js","/source/core/Context.js","/source/core/Observable.js","/source/core/AjaxObserver.js","/source/core/Ajax.js","/source/core/Cache.js","/source/core/Platform.js","/source/core/Subscription.js","/source/core/PageVisibility.js","/source/core/Helper.js","/source/core/Validator.js","/source/core/List.js","/source/helpers/Country.js","/source/helpers/DeviceModel.js","/source/helpers/Language.js","/source/helpers/State.js","/source/helpers/Location.js","/source/helpers/ShippingMethod.js","/source/helpers/Timezone.js","/source/helpers/Account.js","/source/helpers/BlockedNumber.js","/source/helpers/Extension.js","/source/helpers/Presence.js","/source/helpers/Contact.js","/source/helpers/Call.js","/source/helpers/Conferencing.js","/source/helpers/ContactGroup.js","/source/helpers/Device.js","/source/helpers/ForwardingNumber.js","/source/helpers/Message.js","/source/helpers/PhoneNumber.js","/source/helpers/Ringout.js","/source/helpers/Service.js","/source/RCSDK.js","/source/umd.js"],"names":["core_pubnub_PubnubMock","core_Utils","core_Log","core_xhr_XhrResponse","core_xhr_XhrMock","core_Context","core_Observable","core_AjaxObserver","core_Ajax","core_Cache","core_Platform","core_Subscription","core_PageVisibility","core_Helper","core_Validator","core_List","helpers_Country","helpers_DeviceModel","helpers_Language","helpers_State","helpers_Location","helpers_ShippingMethod","helpers_Timezone","helpers_Account","helpers_BlockedNumber","helpers_Extension","helpers_Presence","helpers_Contact","helpers_Call","helpers_Conferencing","helpers_ContactGroup","helpers_Device","helpers_ForwardingNumber","helpers_Message","helpers_PhoneNumber","helpers_Ringout","helpers_Service","RCSDK","exports","WS","url","pubnub","ready","onmessage","onclose","onerror","onopen","close","code","reason","wasClean","receiveMessage","data","$get","ws","hasOwn","Object","prototype","hasOwnProperty","toString","rdigit","class2type","split","forEach","name","toLowerCase","Utils","extend","options","src","copy","copyIsArray","clone","target","arguments","i","length","deep","isFunction","isPlainObject","isArray","undefined","object","cb","res","queryStringify","parameters","array","self","v","vv","push","encodeURIComponent","join","parseQueryString","queryString","argsParsed","arg","decodeURIComponent","indexOf","trim","pair","key","value","isEmail","multiple","test","isPhoneNumber","argumentsToArray","args","Array","slice","call","isDate","obj","type","isWindow","isNaN","String","nodeType","constructor","getProperty","property","eval","e","poll","fn","interval","timeout","stopPolling","next","delay","setTimeout","clearTimeout","parseString","s","parseNumber","n","parseFloat","Log","logDebug","logInfo","logWarnings","logErrors","addTimestamps","console","log","warn","info","error","disableAll","enableAll","parseArguments","unshift","Date","toLocaleString","debug","apply","XhrResponse","responses","add","response","clear","find","ajax","currentResponse","path","Class","context","createSingleton","XhrMock","async","method","requestHeaders","withCredentials","readyState","responseHeaders","status","getResponseHeader","header","setRequestHeader","open","send","onLoad","JSON","stringify","responseText","onload","bind","contentType","getRequestHeader","parse","Error","setStatus","setResponseHeader","Promise","getPromise","then","catch","abort","Context","injections","singletons","stubPubnub","stubAjax","factory","usePubnubStub","flag","useAjaxStub","getCryptoJS","CryptoJS","getPubnub","PUBNUB","getLocalStorage","localStorage","getXHR","XHR","Observable","defineProperty","enumerable","writable","hasListeners","event","listeners","registerOneTimeEvent","oneTimeEvents","oneTimeArguments","on","events","callback","isOneTimeEventFired","getOneTimeEventArgumens","emit","splice","result","isOneTimeEvent","setOneTimeEventFired","setOneTimeEventArgumens","some","off","offAll","destroy","emitAndCallback","concat","AjaxObserver","create","beforeRequest","requestSuccess","requestError","Ajax","headers","observer","xhr","jsonContentType","multipartContentType","boundarySeparator","headerSeparator","bodySeparator","getOptions","setOptions","isResponseContentType","getResponseContentType","isResponseMultipart","isResponseUnauthorized","getContentType","isMultipart","isUnauthorized","isLoaded","checkOptions","defaultHeaders","keys","toUpperCase","get","post","request","parseResponse","resolve","reject","checkStatus","substr","boundary","match","parts","shift","pop","map","part","subParts","replace","ajaxPart","headerParts","statusInfo","stack","message","error_description","description","Cache","prefix","storage","prefixKey","setItem","removeItem","getItem","item","clean","Platform","server","apiKey","account","urlPrefix","apiVersion","accountPrefix","accessTokenTtl","refreshTokenTtl","refreshTokenTtlRemember","refreshHandicapMs","refreshDelayMs","clearCacheOnRefreshError","refreshPromise","forcedTokenType","cacheId","pollInterval","releaseTimeout","accessViolation","logoutSuccess","logoutError","authorizeSuccess","authorizeError","refreshSuccess","refreshError","getStorage","getAjax","clearStorage","remember","authorize","authCall","username","extension","password","setCache","isPaused","now","parseInt","pause","resume","refresh","refreshPolling","authData","getAuthData","access_token","refresh_token","refreshExpireTime","logout","token","getToken","isTokenValid","getTokenType","token_type","expires_in","refresh_token_expires_in","expireTime","getTime","isAuthorized","cancelAccessToken","oldAuthData","forceAuthentication","apiCall","apiUrl","addServer","builtUrl","addMethod","addToken","Subscription","eventFilters","subscription","expirationTime","expiresIn","deliveryMode","transportType","encryption","address","subscriberKey","secretKey","id","creationTime","uri","socket","renewHandicapMs","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","createPubnub","getCrypto","getPlatform","register","isSubscribed","renew","subscribe","addEvents","setEvents","getFullEventFilters","updateSubscription","subscribeAtPubnub","unsubscribe","remove","timeToExpiration","CLOSE_NORMAL","notify","encryptionKey","enc","Base64","decrypted","AES","decrypt","ciphertext","mode","ECB","padding","pad","Pkcs7","Utf8","PageVisibility","onchange","evt","window","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","visible","document","hidden","change","addEventListener","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","isVisible","Helper","defaultProperty","getContext","createUrl","getId","isNew","getUri","resetAsNew","parseMultipartResponse","filter","loadRequest","saveRequest","deleteRequest","syncRequest","sync","syncToken","syncType","nextPageExists","navigation","index","getIdFn","gather","reduce","merge","supplement","mergeItems","supplementIndex","updatedIDs","newItem","Validator","validate","validators","errors","isValid","validator","field","email","phone","required","max","min","List","propertyExtractor","stringComparator","a","b","localeCompare","numberComparator","comparator","item1","item2","compareFn","extractFn","sortBy","equalsFilter","condition","containsFilter","regexpFilter","RegExp","filterConfigs","pass","opt","filterFn","filterBy","CountryHelper","DeviceModelHelper","device","addons","count","cleanForSaving","deviceClass","addon","devices","LanguageHelper","languages","StateHelper","countryHelper","countryId","opts","country","LocationHelper","state","uniqueNPAs","stateId","onlyUniqueNPA","npa","nxx","ShippingMethodHelper","shippingMethods","TimezoneHelper","AccountHelper","BlockedNumberHelper","extensionId","phoneNumber","ExtensionHelper","department","user","announcement","voicemail","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","search","toLocaleLowerCase","extensionNumber","PresenceHelper","detailed","presence","isAvailable","presenceStatus","getSubscription","presences","attachToExtensions","extensions","isCallInProgress","presenceCall","telephonyStatus","ContactHelper","root","groupId","getFieldValues","where","fields","asHash","getFullName","contact","nameFields","getEmails","emailFields","getPhones","phoneFields","getFaxes","faxFields","getAddresses","addressFields","isAlive","availability","string","matchWith","found","transformed","transformFn","strict","otherFields","inAddresses","addressSubFields","subField","matchAsPhone","attachToCallerInfos","callerInfos","contacts","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","alive","startsWith","phonesOnly","faxesOnly","firstName","lastName","email2","email3","CallHelper","personal","active","getSessionId","sessionId","isInProgress","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","duration","hours","Math","floor","mins","secs","attachContacts","calls","checkMergeability","outboundRingOutCall","inboundCall","dateString","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","secondCall","parsePresenceCalls","activeCalls","activeCall","getSignature","cleanup","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","ConferencingHelper","ContactGroupHelper","groupName","DeviceHelper","deviceModel","order","emergencyServiceAddress","street","city","zip","customerName","model","ForwardingNumberHelper","forwardingNumber","hasFeature","feature","features","MessageHelper","platform","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentUrl","attachments","getAttachmentContentType","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","validatePager","PhoneNumberHelper","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","RingoutHelper","ringout","callStatus","isSuccess","isError","ServiceHelper","isServiceFeatureEnabledMethod","serviceFeatures","isEnabled","f","featureName","enabled","isSmsEnabled","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","_context","XMLHttpRequest","ActiveXObject","e1","e2","e3","getPUBNUB","version","getAjaxObserver","getXhrResponse","getCache","getPageVisibility","getHelper","getObservable","getValidator","getLog","getUtils","getList","getCountryHelper","getDeviceModelHelper","getLanguageHelper","getLocationHelper","getShippingMethodHelper","getStateHelper","getTimezoneHelper","getAccountHelper","getBlockedNumberHelper","getCallHelper","getConferencingHelper","getContactHelper","getContactGroupHelper","getDeviceHelper","getExtensionHelper","getForwardingNumberHelper","getMessageHelper","getPhoneNumberHelper","getPresenceHelper","getRingoutHelper","getServiceHelper","Function","module","require","define","amd","noConflict","old"],"mappings":"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","file":"rc-sdk.min.js","sourcesContent":[null,"/**\n * istanbul ignore next\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/pubnub/PubnubMock', [\n    'require',\n    'exports',\n    'module'\n], function (require, exports, module) {\n    'use strict';\n    function WS(url) {\n        this.url = url;\n        this.pubnub = {\n            ready: function () {\n            }\n        };\n        this.onmessage = function () {\n        };\n        this.onclose = function () {\n        };\n        this.onerror = function () {\n        };\n        this.onopen = function () {\n        };\n        this.close = function (code, reason) {\n            this.onclose({\n                code: code,\n                reason: reason,\n                wasClean: true\n            });\n        };\n        /**\n         * This stub allows to simulate message arrival\n         * @param data\n         */\n        this.receiveMessage = function (data) {\n            this.onmessage({ data: data });\n        };\n        this.onopen();\n    }\n    /**\n     * @alias RCSDK.core.pubnub.Mock\n     * @type {PUBNUB}\n     */\n    module.exports = {\n        /**\n         * @param {Context} context\n         * @returns {PUBNUB}\n         */\n        $get: function (context) {\n            return { ws: WS };\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Utils', [\n    'require',\n    'exports',\n    'module'\n], function (require, exports, module) {\n    'use strict';\n    var hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n    // Populate the class2type map\n    'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n        class2type['[object ' + name + ']'] = name.toLowerCase();\n    });\n    /**\n     * @alias RCSDK.core.Utils\n     * @name Utils\n     */\n    var Utils = module.exports = {\n        /**\n         * Ported from jQuery.fn.extend\n         * Optional first parameter makes deep copy\n         * @param {object} targetObject\n         * @param {object} sourceObject\n         * @returns {object}\n         */\n        extend: function extend(targetObject, sourceObject) {\n            var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n            // Handle a deep copy situation\n            if (typeof target === 'boolean') {\n                deep = target;\n                // skip the boolean and the target\n                target = arguments[i] || {};\n                i++;\n            }\n            // Handle case when target is a string or something (possible in deep copy)\n            if (typeof target !== 'object' && !this.isFunction(target)) {\n                target = {};\n            }\n            for (; i < length; i++) {\n                // Only deal with non-null/undefined values\n                if ((options = arguments[i]) != null) {\n                    // Extend the base object\n                    for (name in options) {\n                        src = target[name];\n                        copy = options[name];\n                        // Prevent never-ending loop\n                        if (target === copy) {\n                            continue;\n                        }\n                        // Recurse if we're merging plain objects or arrays\n                        if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                            if (copyIsArray) {\n                                copyIsArray = false;\n                                clone = src && this.isArray(src) ? src : [];\n                            } else {\n                                clone = src && this.isPlainObject(src) ? src : {};\n                            }\n                            // Never move original objects, clone them\n                            target[name] = this.extend(deep, clone, copy);    // Don't bring in undefined values\n                        } else if (copy !== undefined) {\n                            target[name] = copy;\n                        }\n                    }\n                }\n            }\n            // Return the modified object\n            return target;\n        },\n        forEach: function (object, cb) {\n            for (var i in object) {\n                if (!object.hasOwnProperty(i))\n                    continue;\n                var res = cb(object[i], i);\n                if (res === false)\n                    break;\n            }\n        },\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n         * @param {object} parameters\n         * @returns {string}\n         */\n        queryStringify: function (parameters) {\n            var array = [], self = this;\n            this.forEach(parameters, function (v, i) {\n                if (self.isArray(v)) {\n                    v.forEach(function (vv) {\n                        array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                    });\n                } else {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n                }\n            });\n            return array.join('&');\n        },\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n         * @param {string} queryString\n         * @returns {object}\n         */\n        parseQueryString: function (queryString) {\n            var argsParsed = {}, self = this;\n            queryString.split('&').forEach(function (arg) {\n                arg = decodeURIComponent(arg);\n                if (arg.indexOf('=') == -1) {\n                    argsParsed[arg.trim()] = true;\n                } else {\n                    var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                    if (key in argsParsed) {\n                        if (key in argsParsed && !self.isArray(argsParsed[key]))\n                            argsParsed[key] = [argsParsed[key]];\n                        argsParsed[key].push(value);\n                    } else {\n                        argsParsed[key] = value;\n                    }\n                }\n            });\n            return argsParsed;\n        },\n        /**\n         * Returns true if the passed value is valid email address.\n         * @param {string} v\n         * @param {boolean} multiple Checks multiple comma separated emails according to RFC 2822\n         * @returns {boolean}\n         */\n        isEmail: function (v, multiple) {\n            if (!!multiple) {\n                //this Regexp is also suitable for multiple emails (comma separated)\n                return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n            } else {\n                return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n            }\n        },\n        isPhoneNumber: function (v) {\n            return /\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join(''));\n        },\n        /**\n         * @param args\n         * @returns {Array}\n         */\n        argumentsToArray: function (args) {\n            return Array.prototype.slice.call(args || [], 0);\n        },\n        isDate: function (obj) {\n            return this.type(obj) === 'date';\n        },\n        isFunction: function (obj) {\n            return this.type(obj) === 'function';\n        },\n        isArray: Array.isArray || function (obj) {\n            return this.type(obj) === 'array';\n        },\n        // A crude way of determining if an object is a window\n        isWindow: function (obj) {\n            return obj && typeof obj === 'object' && 'setInterval' in obj;\n        },\n        isNaN: function (obj) {\n            return obj == null || !rdigit.test(obj) || isNaN(obj);\n        },\n        type: function (obj) {\n            return obj == null ? String(obj) : class2type[toString.call(obj)] || 'object';\n        },\n        isPlainObject: function (obj) {\n            // Must be an Object.\n            // Because of IE, we also have to check the presence of the constructor property.\n            // Make sure that DOM nodes and window objects don't pass through, as well\n            if (!obj || this.type(obj) !== 'object' || obj.nodeType || this.isWindow(obj)) {\n                return false;\n            }\n            // Not own constructor property must be Object\n            if (obj.constructor && !hasOwn.call(obj, 'constructor') && !hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {\n                return false;\n            }\n            // Own properties are enumerated firstly, so to speed up,\n            // if last one is own, then all properties are own.\n            var key;\n            for (key in obj) {\n            }\n            return key === undefined || hasOwn.call(obj, key);\n        },\n        getProperty: function (obj, property) {\n            try {\n                return eval('obj.' + property);    //TODO Refactor\n            } catch (e) {\n                return undefined;\n            }\n        },\n        poll: function (fn, interval, timeout) {\n            this.stopPolling(timeout);\n            interval = interval || 1000;\n            var next = function (delay) {\n                delay = delay || interval;\n                interval = delay;\n                return setTimeout(function () {\n                    fn(next, delay);\n                }, delay);\n            };\n            return next();\n        },\n        stopPolling: function (timeout) {\n            timeout && clearTimeout(timeout);\n        },\n        parseString: function (s) {\n            return s ? s.toString() : '';\n        },\n        parseNumber: function (n) {\n            if (!n)\n                return 0;\n            n = parseFloat(n);\n            return isNaN(n) ? 0 : n;\n        },\n        $get: function (context) {\n            return Utils;\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Log', [\n    'require',\n    'exports',\n    'module',\n    'core/Utils'\n], function (require, exports, module) {\n    'use strict';\n    var Utils = require('./Utils');\n    /**\n     * @alias RCSDK.core.Log\n     * @name Log\n     */\n    var Log = module.exports = {\n        logDebug: false,\n        logInfo: false,\n        logWarnings: false,\n        logErrors: false,\n        addTimestamps: true,\n        /** @type {Console} */\n        console: console || {\n            // safety\n            log: function () {\n            },\n            warn: function () {\n            },\n            info: function () {\n            },\n            error: function () {\n            }\n        },\n        disableAll: function () {\n            this.logDebug = false;\n            this.logInfo = false;\n            this.logWarnings = false;\n            this.logErrors = false;\n        },\n        enableAll: function () {\n            this.logDebug = true;\n            this.logInfo = true;\n            this.logWarnings = true;\n            this.logErrors = true;\n        },\n        parseArguments: function (args) {\n            args = Utils.argumentsToArray(args);\n            if (this.addTimestamps)\n                args.unshift(new Date().toLocaleString(), '-');\n            return args;\n        },\n        debug: function () {\n            if (this.logDebug)\n                this.console.log.apply(this.console, this.parseArguments(arguments));\n        },\n        info: function () {\n            if (this.logInfo)\n                this.console.info.apply(this.console, this.parseArguments(arguments));\n        },\n        warn: function () {\n            if (this.logWarnings)\n                this.console.warn.apply(this.console, this.parseArguments(arguments));\n        },\n        error: function () {\n            if (this.logErrors)\n                this.console.error.apply(this.console, this.parseArguments(arguments));\n        },\n        $get: function (context) {\n            return Log;\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/xhr/XhrResponse', [\n    'require',\n    'exports',\n    'module'\n], function (require, exports, module) {\n    'use strict';\n    /**\n     * Ajax Response Manager\n     * @constructor\n     * @alias RCSDK.core.XhrResponse\n     */\n    function XhrResponse() {\n        /** @type {IXhrResponse[]} */\n        this.responses = [];\n    }\n    /**\n     * @param {IXhrResponse} response\n     */\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    /**\n     * @param {XhrMock} ajax\n     * @returns {IXhrResponse}\n     */\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    module.exports = {\n        Class: XhrResponse,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrResponse}\n         */\n        $get: function (context) {\n            return context.createSingleton('XhrResponse', function () {\n                return new XhrResponse(context);\n            });\n        }\n    };    /**\n     * @typedef {Object} IXhrResponse\n     * @property {string} path\n     * @property {function(Ajax)} response Response mock function\n     * @property {function(Ajax)} test? This will be executed to determine, whether this mock is applicable\n     */\n});","/**\n * istanbul ignore next\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/xhr/XhrMock', [\n    'require',\n    'exports',\n    'module',\n    'core/Log',\n    'core/Utils',\n    'core/xhr/XhrResponse'\n], function (require, exports, module) {\n    'use strict';\n    var Log = require('../Log'), Utils = require('../Utils');\n    /**\n     * @constructor\n     * @alias RCSDK.core.ajax.XhrMock\n     * @extends XMLHttpRequest\n     */\n    function XhrMock(context) {\n        // Service\n        this.responses = require('./XhrResponse').$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n        this.context = context;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = Utils.parseQueryString(this.data);\n        }\n        Log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                this.onerror && this.onerror(new Error('Unknown request: ' + this.url));\n            }.bind(this), 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise();\n        function onLoad(res) {\n            if (this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            this.responseText = res;\n            setTimeout(function () {\n                this.onload && this.onload();\n            }.bind(this), 1);\n        }\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        } else\n            onLoad.call(this, res);\n    };\n    XhrMock.prototype.abort = function () {\n        Log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    module.exports = {\n        Class: XhrMock,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrMock}\n         */\n        $get: function (context) {\n            return new XhrMock(context);\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Context', [\n    'require',\n    'exports',\n    'module',\n    'core/pubnub/PubnubMock',\n    'core/xhr/XhrMock'\n], function (require, exports, module) {\n    'use strict';\n    /**\n     * @constructor\n     * @param {IInjections} injections\n     */\n    function Context(injections) {\n        /** @private */\n        this.singletons = {};\n        /** @type {IInjections} */\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    /**\n     * @param {string} name\n     * @param {function} factory\n     * @returns {*}\n     */\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    /**\n     * @returns {CryptoJS}\n     */\n    Context.prototype.getCryptoJS = function () {\n        return this.injections.CryptoJS;\n    };\n    /**\n     * @returns {PUBNUB}\n     */\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? require('./pubnub/PubnubMock').$get(this) : this.injections.PUBNUB;\n    };\n    /**\n     * @returns {Storage}\n     * @abstract\n     */\n    Context.prototype.getLocalStorage = function () {\n        return this.injections.localStorage;\n    };\n    /**\n     * @returns {function(new:Promise)}\n     */\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Context.prototype.getXHR = function () {\n        return this.stubAjax ? require('./xhr/XhrMock').$get(this) : new this.injections.XHR();\n    };\n    module.exports = {\n        Class: Context,\n        /**\n         * @param {IInjections} injections\n         */\n        $get: function (injections) {\n            return new Context(injections);\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Observable', [\n    'require',\n    'exports',\n    'module',\n    'core/Utils',\n    'core/Log'\n], function (require, exports, module) {\n    var Utils = require('./Utils'), Log = require('./Log');\n    /**\n     * @constructor\n     * @alias RCSDK.core.Observable\n     */\n    function Observable() {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', {\n            value: {},\n            enumerable: false,\n            writable: true\n        });\n        Object.defineProperty(this, 'oneTimeEvents', {\n            value: {},\n            enumerable: false,\n            writable: true\n        });\n        Object.defineProperty(this, 'oneTimeArguments', {\n            value: {},\n            enumerable: false,\n            writable: true\n        });\n    }\n    // Object.create({}) is not needed\n    // Do not put Object or Function.prototype instead of {}, otherwise all instances will get non-writable 'name' property\n    // Observable.prototype = {};\n    Object.defineProperty(Observable.prototype, 'constructor', {\n        value: Observable,\n        enumerable: false\n    });\n    Observable.prototype.hasListeners = function (event) {\n        return event in this.listeners;\n    };\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                // Fire listener immediately if is inited already\n                Log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        if (this.isOneTimeEventFired(event)) {\n            Log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var self = this, args = Utils.argumentsToArray(arguments).splice(1), result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(self, args);\n            return result === false;\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var self = this;\n        if (!callback) {\n            delete this.listeners[event];\n        } else {\n            if (!this.hasListeners(event))\n                return this;\n            this.listeners[event].forEach(function (cb, i) {\n                if (cb === callback)\n                    delete self.listeners[event][i];\n            });\n        }\n        return this;\n    };\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return event in this.oneTimeEvents;\n    };\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return this.oneTimeEvents[event];\n    };\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    Observable.prototype.offAll = function () {\n        this.listeners = {};\n        this.oneTimeEvents = {};\n        this.oneTimeArguments = {};\n    };\n    Observable.prototype.destroy = function () {\n        this.offAll();\n        Log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    /**\n     * @param {string} event\n     * @param {Array} args\n     * @param {function} [callback]\n     */\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = Utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    module.exports = {\n        Class: Observable,\n        /**\n         * @param {Context} context\n         * @returns {Observable}\n         */\n        $get: function (context) {\n            return new Observable(context);\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/AjaxObserver', [\n    'require',\n    'exports',\n    'module',\n    'core/Observable'\n], function (require, exports, module) {\n    'use strict';\n    var Observable = require('./Observable').Class;\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.AjaxObserver\n     */\n    function AjaxObserver() {\n        Observable.call(this);\n    }\n    AjaxObserver.prototype = Object.create(Observable.prototype);\n    AjaxObserver.prototype.events = {\n        beforeRequest: 'beforeRequest',\n        // parameters: ajax\n        requestSuccess: 'requestSuccess',\n        // means that response was successfully fetched from server\n        requestError: 'requestError'    // means that request failed completely\n    };\n    module.exports = {\n        Class: AjaxObserver,\n        /**\n         * @param {Context} context\n         * @returns {AjaxObserver}\n         */\n        $get: function (context) {\n            return context.createSingleton('AjaxObserver', function () {\n                return new AjaxObserver();\n            });\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Ajax', [\n    'require',\n    'exports',\n    'module',\n    'core/Observable',\n    'core/Utils',\n    'core/Log',\n    'core/AjaxObserver'\n], function (require, exports, module) {\n    'use strict';\n    var Observable = require('./Observable').Class, Utils = require('./Utils'), Log = require('./Log'), jsonContentType = 'application/json', multipartContentType = 'multipart/mixed', boundarySeparator = '--', headerSeparator = ':', bodySeparator = '\\n\\n';\n    /**\n     * @typedef {Object} IAjaxOptions\n     * @property {string} url\n     * @property {string} method?\n     * @property {boolean} async?\n     * @property {Object} post?\n     * @property {Object} get?\n     * @property {Object} headers?\n     */\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Ajax\n     * @param {Context} [context]\n     */\n    function Ajax(context) {\n        Observable.call(this);\n        /** @type {Ajax[]|object} */\n        this.data = null;\n        /** @type {Error|null} */\n        this.error = null;\n        this.response = '';\n        this.headers = {};\n        this.status = 0;\n        /**\n         * @type {IAjaxOptions}\n         * @protected\n         */\n        this.options = {};\n        this.context = context;\n        /** @type {AjaxObserver} */\n        this.observer = require('./AjaxObserver').$get(context);\n        /** @type {XMLHttpRequest} */\n        this.xhr = null;\n    }\n    Ajax.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Ajax.prototype, 'constructor', {\n        value: Ajax,\n        enumerable: false\n    });\n    /**\n     * @returns {IAjaxOptions}\n     */\n    Ajax.prototype.getOptions = function () {\n        return this.options;\n    };\n    /**\n     * @param {IAjaxOptions} [options]\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setOptions = function (options) {\n        if (options)\n            this.options = options;\n        return this;\n    };\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setRequestHeader = function (name, value) {\n        this.options.headers = this.options.headers || {};\n        this.options.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setResponseHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    /**\n     * @param {string} name\n     * @returns {string}\n     */\n    Ajax.prototype.getRequestHeader = function (name) {\n        this.options.headers = this.options.headers || {};\n        return this.options.headers[name.toLowerCase()];\n    };\n    /**\n     * @param {string} name\n     * @returns {string}\n     */\n    Ajax.prototype.getResponseHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    /**\n     * @param {string} type\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseContentType = function (type) {\n        return this.getResponseContentType().indexOf(type) > -1;\n    };\n    /**\n     * @returns {string}\n     */\n    Ajax.prototype.getResponseContentType = function () {\n        return this.getResponseHeader('Content-Type') || '';\n    };\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseMultipart = function () {\n        return this.isResponseContentType(multipartContentType);\n    };\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseUnauthorized = function () {\n        return this.status == 401;\n    };\n    /**\n     * @deprecated\n     * @returns {string}\n     */\n    Ajax.prototype.getContentType = function () {\n        return this.getResponseContentType();\n    };\n    /**\n     * @deprecated\n     * @returns {boolean}\n     */\n    Ajax.prototype.isMultipart = function () {\n        return this.isResponseMultipart();\n    };\n    /**\n     * @deprecated\n     * @returns {boolean}\n     */\n    Ajax.prototype.isUnauthorized = function () {\n        return this.isResponseUnauthorized();\n    };\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isLoaded = function () {\n        return !!this.status;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     * @returns {Ajax}\n     */\n    Ajax.prototype.checkOptions = function () {\n        if (!this.options.url)\n            throw new Error('Url is not defined');\n        var defaultHeaders = {\n                'Accept': jsonContentType,\n                'Content-Type': jsonContentType\n            }, headers = this.options.headers || {};\n        this.options.headers = {};\n        Object.keys(defaultHeaders).forEach(function (key) {\n            this.setRequestHeader(key, defaultHeaders[key]);\n        }, this);\n        Object.keys(headers).forEach(function (key) {\n            this.setRequestHeader(key, headers[key]);\n        }, this);\n        this.options.method = this.options.method ? this.options.method.toUpperCase() : 'GET';\n        this.options.async = this.options.async !== undefined ? this.options.async : true;\n        this.options.get = this.options.get || null;\n        this.options.post = this.options.post ? typeof this.options.post !== 'string' && this.getRequestHeader('Content-Type') === jsonContentType ? JSON.stringify(this.options.post) : this.options.post : '';\n        this.options.url = this.options.url + (this.options.get ? (this.options.url.indexOf('?') > -1 ? '&' : '?') + Utils.queryStringify(this.options.get) : '');\n        if ([\n                'GET',\n                'POST',\n                'PUT',\n                'DELETE',\n                'PATCH',\n                'OPTIONS'\n            ].indexOf(this.options.method) < 0)\n            throw new Error('Method has wrong value');\n        delete this.options.get;\n        return this;\n    };\n    /**\n     * @returns {Promise}\n     */\n    Ajax.prototype.send = function () {\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        return this.request().then(function (ajax) {\n            ajax.parseResponse();\n            if (ajax.error)\n                throw ajax.error;\n            return ajax;\n        }.bind(this)).then(function (ajax) {\n            this.observer.emit(this.observer.events.requestSuccess, ajax);\n            return ajax;\n        }.bind(this)).catch(function (e) {\n            e.ajax = this;\n            this.observer.emit(this.observer.events.requestError, e);\n            throw e;\n        }.bind(this));\n    };\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Ajax.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    /**\n     * @returns {Promise}\n     */\n    Ajax.prototype.request = function () {\n        return new (this.context.getPromise())(function (resolve, reject) {\n            this.checkOptions();\n            var options = this.options, xhr = this.getXHR();\n            xhr.open(options.method, options.url, options.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                this.status = xhr.status;\n                this.response = xhr.responseText;\n                this.setResponseHeader('Content-Type', xhr.getResponseHeader('Content-Type'));\n                resolve(this);\n            }.bind(this);\n            xhr.onerror = function (event) {\n                reject(new Error('The request cannot be sent'));    // CORS or network issue\n            };\n            Utils.forEach(options.headers, function (value, header) {\n                xhr.setRequestHeader(header, value);\n            });\n            xhr.send(options.method === 'GET' ? null : options.post);\n            this.xhr = xhr;\n        }.bind(this));\n    };\n    Ajax.prototype.checkStatus = function (status) {\n        return status.toString().substr(0, 1) == '2';\n    };\n    Ajax.prototype.parseResponse = function () {\n        if (!this.isResponseMultipart()) {\n            try {\n                if (typeof this.response == 'string' && this.isResponseContentType(jsonContentType)) {\n                    this.data = JSON.parse(this.response);\n                } else {\n                    this.data = this.response;    //TODO Add more parsers\n                }\n                if (!this.checkStatus(this.status))\n                    this.error = new Error(this.data.message || this.data.error_description || this.data.description || 'Unknown error');\n            } catch (e) {\n                // Capture parse errors\n                Log.error('Ajax.parseResponse(): Unable to parse data');\n                Log.error(e.stack || e);\n                Log.error(this.response);\n                this.error = e;\n            }\n        } else {\n            try {\n                var boundary = this.getResponseContentType().match(/boundary=([^;]+)/i)[1], parts = this.response.split(boundarySeparator + boundary);\n                if (parts[0].trim() == '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == boundarySeparator)\n                    parts.pop();\n                // Step 1. Parse all parts into Ajax objects\n                parts = parts.map(function (part) {\n                    var subParts = part.trim().replace(/\\r/g, '').split(bodySeparator), ajaxPart = new Ajax(this.context);\n                    (subParts.length > 1 ? subParts.shift() : '').split('\\n').forEach(function (header) {\n                        if (header.length == 0)\n                            return res;\n                        var headerParts = header.split(headerSeparator), name = headerParts.shift().trim();\n                        ajaxPart.setResponseHeader(name, headerParts.join(headerSeparator).trim());\n                    }, this);\n                    ajaxPart.response = subParts.join(bodySeparator);\n                    return ajaxPart;\n                }, this);\n                // Step 2. Claim first part as statuses, assign status from this and parse the response\n                var statusInfo = parts.shift();\n                statusInfo.status = this.status;\n                statusInfo.parseResponse();\n                // Steo 3. For the rest of parts assign status and parse the response\n                this.data = parts.map(function (part, i) {\n                    part.status = statusInfo.data.response[i].status;\n                    part.parseResponse();\n                    return part;\n                }, this);\n            } catch (e) {\n                Log.error('Ajax.parseResponse(): Unable to parse batch response');\n                Log.error(e.stack || e);\n                Log.error(this.response);\n                this.error = e;\n            }\n        }\n        return this;\n    };\n    Ajax.prototype.destroy = function () {\n        this.xhr && this.xhr.abort();\n        return Observable.prototype.destroy.call(this);\n    };\n    module.exports = {\n        Class: Ajax,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {Ajax}\n         */\n        $get: function (context) {\n            return new Ajax(context);\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Cache', [\n    'require',\n    'exports',\n    'module',\n    'core/Observable',\n    'core/Utils'\n], function (require, exports, module) {\n    'use strict';\n    var Observable = require('./Observable').Class, Utils = require('./Utils');\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Cache\n     * @param {Context} context\n     */\n    function Cache(context) {\n        Observable.call(this);\n        this.prefix = 'rc-';\n        this.storage = context.getLocalStorage();    // storage must be defined from outside\n    }\n    Cache.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Cache.prototype, 'constructor', {\n        value: Cache,\n        enumerable: false\n    });\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    module.exports = {\n        Class: Cache,\n        /**\n         * @param {Context} context\n         * @returns {Cache}\n         */\n        $get: function (context) {\n            return context.createSingleton('Cache', function () {\n                return new Cache(context);\n            });\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Platform', [\n    'require',\n    'exports',\n    'module',\n    'core/Utils',\n    'core/Observable',\n    'core/Log',\n    'core/Cache',\n    'core/Ajax'\n], function (require, exports, module) {\n    'use strict';\n    var Utils = require('./Utils'), Observable = require('./Observable').Class, Log = require('./Log'), forcedTokenType = 'forced';\n    /**\n     * @typedef {Object} PlatformAuthInfo\n     * @property {string} token_type\n     * @property {string} access_token\n     * @property {string} expires_in\n     * @property {int} expireTime\n     * @property {string} refresh_token\n     * @property {string} refresh_token_expires_in\n     * @property {int} refreshExpireTime\n     * @property {string} scope\n     */\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Platform\n     * @param {Context} context\n     */\n    function Platform(context) {\n        Observable.call(this);\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = 10 * 60;\n        // 10 minutes\n        this.refreshTokenTtl = 10 * 60 * 60;\n        // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60;\n        // 1 week\n        this.refreshHandicapMs = 60 * 1000;\n        // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        /** @type {Promise} */\n        this.refreshPromise = null;\n        this.context = context;\n    }\n    Platform.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Platform.prototype, 'constructor', {\n        value: Platform,\n        enumerable: false\n    });\n    Platform.prototype.cacheId = 'platform';\n    Platform.prototype.pollInterval = 250;\n    Platform.prototype.releaseTimeout = 5000;\n    // If queue was not released then force it to do so after some timeout\n    Platform.prototype.events = {\n        accessViolation: 'accessViolation',\n        logoutSuccess: 'logoutSuccess',\n        logoutError: 'logoutError',\n        authorizeSuccess: 'authorizeSuccess',\n        authorizeError: 'authorizeError',\n        refreshSuccess: 'refreshSuccess',\n        refreshError: 'refreshError'\n    };\n    /**\n     * @returns {Cache}\n     */\n    Platform.prototype.getStorage = function () {\n        return require('./Cache').$get(this.context);\n    };\n    /**\n     * @returns {Ajax}\n     */\n    Platform.prototype.getAjax = function () {\n        return require('./Ajax').$get(this.context);\n    };\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    /**\n     * @param {boolean} [remember]\n     * @returns {Platform|boolean}\n     */\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember != undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    /**\n     * @param {string} options.username\n     * @param {string} options.password\n     * @param {string} [options.extension]\n     * @param {boolean} [options.remember]\n     * @returns {Promise}\n     */\n    Platform.prototype.authorize = function (options) {\n        options = options || {};\n        options.remember = options.remember || false;\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: {\n                'grant_type': 'password',\n                'username': options.username,\n                'extension': options.extension || '',\n                'password': options.password,\n                'access_token_ttl': this.accessTokenTtl,\n                'refresh_token_ttl': options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n            }\n        }).then(function (ajax) {\n            this.setCache(ajax.data).remember(options.remember).emitAndCallback(this.events.authorizeSuccess, []);\n            return ajax;\n        }.bind(this)).catch(function (e) {\n            this.clearStorage().emitAndCallback(this.events.authorizeError, [e]);\n            throw e;\n        }.bind(this));\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    /**\n     * Gets resolved into Ajax or null if refresh resolved from elsewhere\n     * @returns {Promise}\n     */\n    Platform.prototype.refresh = function () {\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (this.isPaused()) {\n                return resolve(this.refreshPolling(null));\n            } else {\n                this.pause();\n            }\n            var authData = this.getAuthData();\n            Log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n            if (!authData || !authData.refresh_token)\n                throw new Error('Refresh token is missing');\n            if (Date.now() > authData.refreshExpireTime)\n                throw new Error('Refresh token has expired');\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                resolve(this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        'grant_type': 'refresh_token',\n                        'refresh_token': authData.refresh_token,\n                        'access_token_ttl': this.accessTokenTtl,\n                        'refresh_token_ttl': this.remember() ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                    }\n                }));\n            }.bind(this), this.refreshDelayMs);\n        }.bind(this));\n        return refresh.then(function (ajax) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!ajax || !ajax.data)\n                return ajax;\n            Log.info('Platform.refresh(): Token was refreshed');\n            if (!ajax.data.refresh_token || !ajax.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = ajax;\n                throw e;\n            }\n            this.setCache(ajax.data).resume();\n            return ajax;\n        }.bind(this)).then(function (result) {\n            this.emit(this.events.refreshSuccess, result);\n            return result;\n        }.bind(this)).catch(function (e) {\n            if (this.clearCacheOnRefreshError)\n                this.clearStorage();\n            this.emitAndCallback(this.events.accessViolation, [e]).emitAndCallback(this.events.refreshError, [e]);\n            throw e;\n        }.bind(this));\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            get: { token: this.getToken() }\n        }).then(function (ajax) {\n            this.resume().clearStorage().emit(this.events.logoutSuccess, ajax);\n            return ajax;\n        }.bind(this)).catch(function (e) {\n            this.resume().emitAndCallback(this.events.accessViolation, [e]).emitAndCallback(this.events.logoutError, [e]);\n            throw e;\n        }.bind(this));\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            Log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            Utils.poll(function (next) {\n                if (this.isPaused())\n                    return next();\n                this.refreshPromise = null;\n                this.resume();\n                if (this.isTokenValid()) {\n                    resolve(result);\n                } else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }.bind(this), this.pollInterval);\n        }.bind(this));\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    /**\n     * @returns {PlatformAuthInfo}\n     */\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     * @returns {boolean}\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return authData.token_type == forcedTokenType || new Date(authData.expireTime).getTime() - this.refreshHandicapMs > Date.now() && !this.isPaused();\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     * @returns {Promise}\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(Utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    /**\n     * @param {object} authData\n     * @returns {Platform}\n     */\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        Log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + authData.expires_in * 1000;\n        authData.refreshExpireTime = Date.now() + authData.refresh_token_expires_in * 1000;\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.apiCall = function (options) {\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized()    // Refresh will occur inside\n.then(function () {\n            var token = this.getToken();\n            return this.getAjax().setOptions(options).setRequestHeader('Authorization', this.getTokenType() + (token ? ' ' + token : '')).send();\n        }.bind(this)).catch(function (e) {\n            if (!e.ajax || !e.ajax.isResponseUnauthorized())\n                throw e;\n            this.cancelAccessToken();\n            return this.refresh().then(function () {\n                // Re-send with same options\n                return this.apiCall(options);\n            }.bind(this));\n        }.bind(this));\n    };\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.post = Utils.queryStringify(options.post);\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getAjax().setOptions(options).setRequestHeader('Content-Type', 'application/x-www-form-urlencoded').setRequestHeader('Accept', 'application/json').setRequestHeader('Authorization', 'Basic' + this.apiKey).send();\n    };\n    /**\n     *\n     * @param url\n     * @param {{addMethod?: string, addToken?: boolean, addServer?: boolean}} [options]\n     * @returns {string}\n     */\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '';\n        if (options.addServer && url.indexOf('http://') == -1 && url.indexOf('https://') == -1)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += url.indexOf('?') > -1 ? '&' : '?';\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    module.exports = {\n        Class: Platform,\n        /**\n         * @param {Context} context\n         * @returns {Platform}\n         */\n        $get: function (context) {\n            return context.createSingleton('Platform', function () {\n                return new Platform(context);\n            });\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Subscription', [\n    'require',\n    'exports',\n    'module',\n    'core/Observable',\n    'core/Log',\n    'core/Utils',\n    'core/Platform'\n], function (require, exports, module) {\n    'use strict';\n    var Observable = require('./Observable').Class, Log = require('./Log'), Utils = require('./Utils'), renewHandicapMs = 60 * 1000;\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Subscription\n     * @param {Context} context\n     */\n    function Subscription(context) {\n        Observable.call(this);\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            // 2014-03-12T19:54:35.613Z\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            // 2014-03-12T19:54:35.613Z\n            status: '',\n            // Active\n            uri: ''\n        };\n        /** @type {PUBNUB.ws} */\n        this.socket = null;\n        this.context = context;\n    }\n    Subscription.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Subscription.prototype, 'constructor', {\n        value: Subscription,\n        enumerable: false\n    });\n    Subscription.prototype.events = {\n        notification: 'notification',\n        removeSuccess: 'removeSuccess',\n        removeError: 'removeError',\n        renewSuccess: 'renewSuccess',\n        renewError: 'renewError',\n        subscribeSuccess: 'subscribeSuccess',\n        subscribeError: 'subscribeError'\n    };\n    /**\n     * @param {string} url\n     * @returns {PUBNUB.ws}\n     */\n    Subscription.prototype.createPubnub = function (url) {\n        return new (this.getPubnub()).ws(url);\n    };\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getCrypto = function () {\n        return this.context.getCryptoJS();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return require('./Platform').$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        } else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        return this.eventFilters.map(function (event) {\n            return this.getPlatform().apiUrl(event);\n        }.bind(this));\n    };\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.subscribe = function (options) {\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!this.eventFilters || !this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }.bind(this)).then(function () {\n            return this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: this.getFullEventFilters(),\n                    deliveryMode: { transportType: 'PubNub' }\n                }\n            });\n        }.bind(this)).then(function (ajax) {\n            this.updateSubscription(ajax.data).subscribeAtPubnub().emit(this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }.bind(this)).catch(function (e) {\n            this.unsubscribe().emit(this.events.subscribeError, e);\n            throw e;\n        }.bind(this));\n    };\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.renew = function (options) {\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!this.subscription || !this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!this.eventFilters || !this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }.bind(this)).then(function () {\n            return this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + this.subscription.id,\n                post: { eventFilters: this.getFullEventFilters() }\n            });\n        }.bind(this)).then(function (ajax) {\n            this.updateSubscription(ajax.data).emit(this.events.renewSuccess, ajax.data);\n            return ajax;\n        }.bind(this)).catch(function (e) {\n            this.unsubscribe().emit(this.events.renewError, e);\n            throw e;\n        }.bind(this));\n    };\n    /**\n     * @param {boolean} [options.async]\n     * @returns {Promise}\n     */\n    Subscription.prototype.remove = function (options) {\n        options = Utils.extend({ async: true }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!this.subscription || !this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve();\n        }.bind(this)).then(function () {\n            return this.getPlatform().apiCall({\n                async: !!options.async,\n                // Warning! This is necessary because this method is used in beforeunload hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + this.subscription.id\n            });\n        }.bind(this)).then(function (ajax) {\n            this.unsubscribe().emit(this.events.removeSuccess, ajax);\n            return ajax;\n        }.bind(this)).catch(function (e) {\n            this.unsubscribe().emit(this.events.removeError, e);\n            throw e;\n        }.bind(this));\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        return Observable.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription && this.subscription.deliveryMode && this.subscription.deliveryMode.subscriberKey && this.subscription.deliveryMode.address;\n    };\n    /**\n     * @protected\n     */\n    Subscription.prototype.setTimeout = function () {\n        var timeToExpiration = this.subscription.expiresIn * 1000 - renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            this.renew({});\n        }.bind(this), timeToExpiration);\n    };\n    /**\n     * @protected\n     */\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    /**\n     * Set new subscription info and re-create timeout\n     * @protected\n     * @param subscription\n     * @returns {Subscription}\n     */\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from socket\n     * @protected\n     * @returns {Subscription}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.socket && this.socket.close(this.socket.CLOSE_NORMAL, 'Connection terminated by client');\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * @abstract\n     * @param {Object} message\n     * @returns {Subscription}\n     */\n    Subscription.prototype.notify = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var CryptoJS = this.getCrypto();\n            var key = CryptoJS.enc.Base64.parse(this.subscription.deliveryMode.encryptionKey);\n            var data = CryptoJS.enc.Base64.parse(message);\n            var decrypted = CryptoJS.AES.decrypt({ ciphertext: data }, key, {\n                mode: CryptoJS.mode.ECB,\n                padding: CryptoJS.pad.Pkcs7\n            }).toString(CryptoJS.enc.Utf8);\n            message = JSON.parse(decrypted);\n        }\n        this.emit(this.events.notification, message);\n        return this;\n    };\n    /**\n     * @returns {Subscription}\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        if (!this.isSubscribed())\n            return this;\n        // ws(s)://ORIGIN/PUBLISH_KEY/SUBSCRIBE_KEY/CHANNEL\n        var url = 'wss://pubsub.pubnub.com//' + this.subscription.deliveryMode.subscriberKey + '/' + this.subscription.deliveryMode.address;\n        this.socket = this.createPubnub(url);\n        this.socket.pubnub && this.socket.pubnub.ready();\n        //TODO This may be unnecessary\n        this.socket.onmessage = function (e) {\n            Log.info('Subscription: Socket received message', e);\n            this.notify(e.data);\n        }.bind(this);\n        this.socket.onclose = function () {\n            Log.info('Subscription: Socket closed');\n        };\n        this.socket.onerror = function (e) {\n            Log.error('Subscription: Socket error');\n            Log.error(e.stack || e);\n        };\n        this.socket.onopen = function () {\n            Log.info('Subscription: Socket open');\n        };\n        return this;\n    };\n    module.exports = {\n        Class: Subscription,\n        /**\n         * @param {Context} context\n         * @returns {Subscription}\n         */\n        $get: function (context) {\n            return new Subscription(context);\n        }\n    };\n});","/**\n * istanbul ignore next\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/PageVisibility', [\n    'require',\n    'exports',\n    'module',\n    'core/Observable'\n], function (require, exports, module) {\n    'use strict';\n    var Observable = require('./Observable').Class;\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.PageVisibility\n     */\n    function PageVisibility() {\n        Observable.call(this);\n        var hidden = 'hidden', self = this;\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener('visibilitychange', onchange);\n        else if ((hidden = 'mozHidden') in document)\n            document.addEventListener('mozvisibilitychange', onchange);\n        else if ((hidden = 'webkitHidden') in document)\n            document.addEventListener('webkitvisibilitychange', onchange);\n        else if ((hidden = 'msHidden') in document)\n            document.addEventListener('msvisibilitychange', onchange);    // IE 9 and lower:\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;    // All others:\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n        function onchange(evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                    focus: v,\n                    focusin: v,\n                    pageshow: v,\n                    blur: h,\n                    focusout: h,\n                    pagehide: h\n                };\n            self.visible = evt.type in evtMap ? evtMap[evt.type] == v : !document[hidden];\n            self.emit(self.events.change, self.visible);\n        }\n    }\n    PageVisibility.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(PageVisibility.prototype, 'constructor', {\n        value: PageVisibility,\n        enumerable: false\n    });\n    PageVisibility.prototype.events = { change: 'change' };\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    module.exports = {\n        Class: PageVisibility,\n        /**\n         * @param {Context} context\n         * @returns {PageVisibility}\n         */\n        $get: function (context) {\n            return new PageVisibility();\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Helper', [\n    'require',\n    'exports',\n    'module',\n    'core/Utils'\n], function (require, exports, module) {\n    'use strict';\n    var Utils = require('./Utils');\n    /**\n     * @alias RCSDK.core.Helper\n     * @constructor\n     * @param {Context} context\n     */\n    function Helper(context) {\n        this.context = context;\n    }\n    Helper.prototype.defaultProperty = 'id';\n    /**\n     * @returns {Context}\n     */\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    /**\n     * @param {object} [options]\n     * @param {string} [id]\n     */\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {boolean}\n     */\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {IHelperObject}\n     */\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    /**\n     * @param {Ajax} ajax\n     * @return {IHelperObject[]}\n     */\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isResponseMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return !result.error;\n            }).map(function (result) {\n                return result.data;\n            });\n        } else {\n            // Single ID\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} [object]\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return Utils.extend(options || {}, {\n            url: options && options.url || object && this.getUri(object) || this.createUrl(),\n            method: options && options.method || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && options.post))\n            throw new Error('No Object');\n        return Utils.extend(options || {}, {\n            method: options && options.method || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: options && options.url || this.getUri(object) || this.createUrl(),\n            post: options && options.post || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return Utils.extend(options || {}, {\n            method: options && options.method || 'DELETE',\n            url: options && options.url || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.get = options.get || {};\n        if (!!options.get.syncToken) {\n            options.get = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        } else {\n            options.get.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return data && data.navigation && 'nextPage' in data.navigation;\n    };\n    /**\n     * @param {IHelperObject[]} array - an array to be indexed\n     * @param {function(object)} [getIdFn] - must return an ID for each array item\n     * @param {boolean} [gather] - if true, then each index will have an array of items, that has same ID, otherwise the first indexed item wins\n     * @returns {*}\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || index[id] && !gather)\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            } else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * @param {IHelperObject[]} target\n     * @param {IHelperObject[]} supplement\n     * @param {function(IHelperObject)} [getIdFn]\n     * @param {boolean} [mergeItems] - if true, properties of _supplement_ item will be applied to _target_ item, otherwise _target_ item will be replaced\n     * @returns {*}\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [];\n        var result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? mergeItems ? Utils.extend(item, newItem) : newItem : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    module.exports = {\n        Class: Helper,\n        /**\n         * @param {Context} context\n         * @returns {Helper}\n         */\n        $get: function (context) {\n            return new Helper(context);\n        }\n    };    /**\n     * @typedef {object} IHelperObject\n     * @property {string} id\n     * @property {string} uri\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Validator', [\n    'require',\n    'exports',\n    'module',\n    'core/Utils'\n], function (require, exports, module) {\n    'use strict';\n    var Utils = require('./Utils');\n    /**\n     * @typedef {object} IValidator\n     * @property {string} field\n     * @property {function} validator\n     */\n    /**\n     * @typedef {object} IValidatorResult\n     * @property {boolean} isValid\n     * @property {Object.<number, Error[]>} errors\n     */\n    /**\n     * @alias RCSDK.core.Validator\n     * @name Validator\n     */\n    var Validator = module.exports = {\n        /**\n         * @param {IValidator[]} validators\n         * @returns {IValidatorResult}\n         */\n        validate: function (validators) {\n            /** @type {IValidatorResult} */\n            var result = {\n                errors: {},\n                isValid: true\n            };\n            result.errors = validators.reduce(function (errors, validator) {\n                var res = validator.validator();\n                if (res.length > 0) {\n                    result.isValid = false;\n                    errors[validator.field] = errors[validator.field] || [];\n                    errors[validator.field] = errors[validator.field].concat(res);\n                }\n                return errors;\n            }, {});\n            return result;\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * @deprecated\n         * @param value\n         * @param multiple\n         * @returns {Function}\n         */\n        email: function (value, multiple) {\n            return function () {\n                if (!value)\n                    return [];\n                return Utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n            };\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * TODO International phone numbers\n         * @deprecated\n         * @param value\n         * @returns {Function}\n         */\n        phone: function (value) {\n            return function () {\n                if (!value)\n                    return [];\n                return Utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n            };\n        },\n        required: function (value) {\n            return function () {\n                return !value ? [new Error('Field is required')] : [];\n            };\n        },\n        length: function (value, max, min) {\n            return function () {\n                var errors = [];\n                if (!value)\n                    return errors;\n                value = value.toString();\n                if (min && value.length < min)\n                    errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n                if (max && value.length > max)\n                    errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n                return errors;\n            };\n        },\n        $get: function (context) {\n            return Validator;\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/List', [\n    'require',\n    'exports',\n    'module',\n    'core/Utils'\n], function (require, exports, module) {\n    'use strict';\n    var Utils = require('./Utils');\n    /**\n     * @alias RCSDK.core.List\n     * @name List\n     */\n    var List = module.exports = {\n        /**\n         * @param {string} property\n         * @returns {function(object)}\n         */\n        propertyExtractor: function (property) {\n            return function (item, options) {\n                return property ? item && item[property] || null : item;\n            };\n        },\n        /**\n         * Non-string types are converted to string\n         * Non-string types are extracted as an empty string if they could be converted to false\n         * If no options.sortBy given the item itself is extracted\n         * Compares strings:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {string} a\n         * @param {string} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        stringComparator: function (a, b, options) {\n            return Utils.parseString(a).localeCompare(Utils.parseString(b));\n        },\n        /**\n         * Non-numeric types are extracted as 0 if they could be converted to false\n         * Objects that could not be converted to number are extracted as 0\n         * If no options.sortBy given the item itself is extracted\n         * See parseFloat for more info\n         * Compares numbers:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Function does not check types\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {number} a\n         * @param {number} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        numberComparator: function (a, b, options) {\n            return Utils.parseNumber(a) - Utils.parseNumber(b);\n        },\n        /**\n         * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n         * compare function (_compareFn_ option, by default Helper.stringComparator)\n         * Merged options are provided to _extractFn_ and _compareFn_\n         * TODO Check memory leaks for all that options links\n         * @param {IListComparatorOptions} [options]\n         * @returns {function(object, object)}\n         */\n        comparator: function (options) {\n            options = Utils.extend({\n                extractFn: this.propertyExtractor(options && options.sortBy || null),\n                compareFn: this.stringComparator\n            }, options);\n            /**\n             * @param {object} item1\n             * @param {object} item2\n             * @returns {number}\n             */\n            function comparator(item1, item2) {\n                return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n            }\n            return comparator;\n        },\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        equalsFilter: function (obj, options) {\n            return options.condition === obj;\n        },\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        containsFilter: function (obj, options) {\n            return obj && obj.toString().indexOf(options.condition) > -1;\n        },\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options - `condition` must be an instance of RegExp\n         * @returns {boolean}\n         */\n        regexpFilter: function (obj, options) {\n            if (!(options.condition instanceof RegExp))\n                throw new Error('Condition must be an instance of RegExp');\n            return options.condition.test(obj);\n        },\n        /**\n         * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n         * compare function (`filterFn` option, by default Helper.equalsFilter)\n         * Merged options are provided to `extractFn` and `compareFn`\n         * Set `filterBy` to null to force `propertyExtractor` to return object itself\n         * TODO Check memory leaks for all that options links\n         * @param {IListFilterOptions[]} [filterConfigs]\n         * @returns {function(object)}\n         */\n        filter: function (filterConfigs) {\n            var self = this;\n            filterConfigs = (filterConfigs || []).map(function (opt) {\n                return Utils.extend({\n                    condition: '',\n                    extractFn: self.propertyExtractor(opt && opt.filterBy || null),\n                    filterFn: self.equalsFilter\n                }, opt);\n            });\n            /**\n             * @param {object} item\n             * @returns {boolean}\n             */\n            function filter(item) {\n                return filterConfigs.reduce(function (pass, opt) {\n                    if (!pass || !opt.condition)\n                        return pass;\n                    return opt.filterFn(opt.extractFn(item, opt), opt);\n                }, true);\n            }\n            return filter;\n        },\n        $get: function (context) {\n            return List;\n        }\n    };    /**\n     * @typedef {object} IListComparatorOptions\n     * @property {string} sortBy\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} compareFn\n     */\n          /**\n     * @typedef {object} IListFilterOptions\n     * @property {string} filterBy\n     * @property {object} condition\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} filterFn\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Country', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CountryHelper(context) {\n        Helper.call(this, context);\n    }\n    CountryHelper.prototype = Object.create(Helper.prototype);\n    CountryHelper.prototype.createUrl = function () {\n        return '/dictionary/country';\n    };\n    module.exports = {\n        Class: CountryHelper,\n        /**\n         * @param {Context} context\n         * @returns {CountryHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('CountryHelper', function () {\n                return new CountryHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} ICountry\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} callingCode\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/DeviceModel', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceModelHelper(context) {\n        Helper.call(this, context);\n    }\n    DeviceModelHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * @param {IDeviceModel} device\n     * @returns {string}\n     */\n    DeviceModelHelper.prototype.getId = function (device) {\n        if (!device)\n            return null;\n        return device.id + (device.addons && device.addons[0] ? '-' + device.addons[0].id + '-' + device.addons[0].count : '');\n    };\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     * @param {IDeviceModel} device\n     * @returns {IDeviceModel}\n     */\n    DeviceModelHelper.prototype.cleanForSaving = function (device) {\n        if (!device)\n            return null;\n        delete device.name;\n        delete device.deviceClass;\n        if (device.addons && device.addons.length > 0) {\n            device.addons.forEach(function (addon, i) {\n                delete device.addons[i].name;\n            });\n        } else {\n            delete device.addons;\n        }\n        return device;\n    };\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n     * @type {IDeviceModel[]}\n     */\n    DeviceModelHelper.prototype.devices = [\n        {\n            id: '-1',\n            name: 'Softphone'\n        },\n        {\n            id: '0',\n            name: 'Existing device'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '23',\n            name: 'Polycom IP 321 Basic IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '30',\n            name: 'Polycom IP 550 HD Manager IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '37',\n            name: 'Polycom IP 6000 Conference Phone',\n            deviceClass: 'Conference Phone'\n        },\n        {\n            id: '40',\n            name: 'Polycom IP 335 HD IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '51',\n            name: 'Cisco SPA-303 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [{\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [{\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [{\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }]\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\\tDesk Phone',\n            addons: [{\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [{\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '1'\n                }]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [{\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '2'\n                }]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [{\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '3'\n                }]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '52',\n            name: 'Cisco SPA-122 ATA',\n            deviceClass: 'Analog Adapter'\n        },\n        {\n            id: '53',\n            name: 'Polycom VVX-500 Color Touchscreen',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '54',\n            name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '55',\n            name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        }\n    ];\n    module.exports = {\n        Class: DeviceModelHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceModelHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('DeviceModelHelper', function () {\n                return new DeviceModelHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IDeviceModel\n     * @property {string} id\n     * @property {string} name\n     * @property {string} deviceClass\n     * @property {string} addons\n     */\n          /**\n     * @typedef {Object} IDeviceModelAddon\n     * @property {string} id\n     * @property {string} name\n     * @property {string} count\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Language', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LanguageHelper(context) {\n        Helper.call(this, context);\n    }\n    LanguageHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * @type {ILanguage[]}\n     */\n    LanguageHelper.prototype.languages = [\n        {\n            id: '1033',\n            name: 'English (US)'\n        },\n        {\n            id: '3084',\n            name: 'French (Canada)'\n        }\n    ];\n    module.exports = {\n        Class: LanguageHelper,\n        /**\n         * @param {Context} context\n         * @returns {LanguageHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('LanguageHelper', function () {\n                return new LanguageHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} ILanguage\n     * @property {string} id\n     * @property {string} name\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/State', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/List',\n    'core/Utils',\n    'helpers/Country'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, List = require('../core/List'), Utils = require('../core/Utils');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function StateHelper(context) {\n        Helper.call(this, context);\n        this.countryHelper = require('./Country').$get(context);\n    }\n    StateHelper.prototype = Object.create(Helper.prototype);\n    StateHelper.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    /**\n     * @param {IStateOptions} options\n     * @returns {function(IState)}\n     */\n    StateHelper.prototype.filter = function (options) {\n        options = Utils.extend({ countryId: '' }, options);\n        return List.filter([{\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return this.countryHelper.getId(item.country) == opts.condition;\n                }.bind(this)\n            }]);\n    };\n    module.exports = {\n        Class: StateHelper,\n        /**\n         * @param {Context} context\n         * @returns {StateHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('StateHelper', function () {\n                return new StateHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IState\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {ICountry} country\n     */\n          /**\n     * @typedef {object} IStateOptions\n     * @property {string} countryId\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Location', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/List',\n    'core/Utils',\n    'helpers/State'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, List = require('../core/List'), Utils = require('../core/Utils');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LocationHelper(context) {\n        Helper.call(this, context);\n        this.state = require('./State').$get(context);\n    }\n    LocationHelper.prototype = Object.create(Helper.prototype);\n    LocationHelper.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    /**\n     * @param {ILocationFilterOptions} options\n     * @returns {function(ILocation)}\n     */\n    LocationHelper.prototype.filter = function (options) {\n        var uniqueNPAs = [];\n        options = Utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return List.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return this.state.getId(item.state) == opts.condition;\n                }.bind(this)\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    } else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {comparator}\n     */\n    LocationHelper.prototype.comparator = function (options) {\n        options = Utils.extend({ sortBy: 'npa' }, options);\n        if (options.sortBy == 'nxx') {\n            /**\n             * @param {ILocation} item\n             * @returns {number}\n             */\n            options.extractFn = function (item) {\n                return parseInt(item.npa) * 1000000 + parseInt(item.nxx);\n            };\n            options.compareFn = List.numberComparator;\n        }\n        return List.comparator(options);\n    };\n    module.exports = {\n        Class: LocationHelper,\n        /**\n         * @param {Context} context\n         * @returns {LocationHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('LocationHelper', function () {\n                return new LocationHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} ILocation\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {IState} state\n     */\n          /**\n     * @typedef {object} ILocationFilterOptions\n     * @property {string} stateId\n     * @property {boolean} onlyUniqueNPA\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/ShippingMethod', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ShippingMethodHelper(context) {\n        Helper.call(this, context);\n    }\n    ShippingMethodHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-3 id done\n     * @type {IShippingMethod[]}\n     */\n    ShippingMethodHelper.prototype.shippingMethods = [\n        {\n            id: '1',\n            name: 'Ground Shipping (5-7 business days)'\n        },\n        {\n            id: '2',\n            name: '2-days Shipping'\n        },\n        {\n            id: '3',\n            name: 'Overnight Shipping'\n        }\n    ];\n    module.exports = {\n        Class: ShippingMethodHelper,\n        /**\n         * @param {Context} context\n         * @returns {ShippingMethodHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('ShippingMethodHelper', function () {\n                return new ShippingMethodHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IShippingMethod\n     * @property {string} id\n     * @property {string} name\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Timezone', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function TimezoneHelper(context) {\n        Helper.call(this, context);\n    }\n    TimezoneHelper.prototype = Object.create(Helper.prototype);\n    TimezoneHelper.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    module.exports = {\n        Class: TimezoneHelper,\n        /**\n         * @param {Context} context\n         * @returns {TimezoneHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('TimezoneHelper', function () {\n                return new TimezoneHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} ITimezone\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} description\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Account', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function AccountHelper(context) {\n        Helper.call(this, context);\n    }\n    AccountHelper.prototype = Object.create(Helper.prototype);\n    AccountHelper.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    module.exports = {\n        Class: AccountHelper,\n        /**\n         * @param {Context} context\n         * @returns {AccountHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('AccountHelper', function () {\n                return new AccountHelper(context);\n            });\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/BlockedNumber', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Validator'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Validator = require('../core/Validator');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function BlockedNumberHelper(context) {\n        Helper.call(this, context);\n    }\n    BlockedNumberHelper.prototype = Object.create(Helper.prototype);\n    /**\n     *\n     * @param {IBlockedNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    BlockedNumberHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId ? options.extensionId : '~') + '/blocked-number' + (id ? '/' + id : '');\n    };\n    /**\n     * @param {IBlockedNumber} item\n     */\n    BlockedNumberHelper.prototype.validate = function (item) {\n        return Validator.validate([\n            {\n                field: 'phoneNumber',\n                validator: Validator.phone(item.phoneNumber)\n            },\n            {\n                field: 'phoneNumber',\n                validator: Validator.required(item.phoneNumber)\n            },\n            {\n                field: 'name',\n                validator: Validator.required(item.name)\n            }\n        ]);\n    };\n    module.exports = {\n        Class: BlockedNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {BlockedNumberHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('BlockedNumberHelper', function () {\n                return new BlockedNumberHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IBlockedNumber\n     * @property {string} name\n     * @property {string} phoneNumber\n     */\n          /**\n     * @typedef {object} IBlockedNumberOptions\n     * @property {string} extensionId\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Extension', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/List',\n    'core/Utils'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, List = require('../core/List'), Utils = require('../core/Utils');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ExtensionHelper(context) {\n        Helper.call(this, context);\n    }\n    ExtensionHelper.prototype = Object.create(Helper.prototype);\n    ExtensionHelper.prototype.type = {\n        department: 'Department',\n        user: 'User',\n        announcement: 'Announcement',\n        voicemail: 'Voicemail'\n    };\n    /**\n     *\n     * @param {IExtensionOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ExtensionHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' + (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') + (id ? '/' + id : '');\n    };\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ExtensionHelper.prototype.comparator = function (options) {\n        return List.comparator(Utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: List.numberComparator\n        }, options));\n    };\n    /**\n     * @param {IExtensionFilterOptions} [options]\n     * @returns {function(IExtension)}\n     */\n    ExtensionHelper.prototype.filter = function (options) {\n        options = Utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return List.filter([\n            {\n                filterBy: 'type',\n                condition: options.type\n            },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: List.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && item.name.toLocaleLowerCase() + ' ') + (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    module.exports = {\n        Class: ExtensionHelper,\n        /**\n         * @param {Context} context\n         * @returns {ExtensionHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('ExtensionHelper', function () {\n                return new ExtensionHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IExtensionOptions\n     * @property {string} departmentId\n     */\n          /**\n     * @typedef {object} IExtensionFilterOptions\n     * @property {string} search\n     * @property {string} type\n     */\n          /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ShortExtensionInfo\n     * @typedef {object} IExtensionShort\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     */\n          /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ExtensionInfo\n     * @typedef {object} IExtension\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} type\n     * @property {IContactBrief} contact\n     * @property {IExtensionRegionalSettings} regionalSettings\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} status\n     * @property {string} setupWizardState\n     */\n          /**\n     * @typedef {object} IExtensionRegionalSettings\n     * @property {ITimezone} timezone\n     * @property {ILanguage} language\n     * @property {ICountry} homeCountry\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Presence', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Utils',\n    'helpers/Extension',\n    'core/Subscription'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Utils = require('../core/Utils');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PresenceHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n    PresenceHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PresenceHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    /**\n     * @param {IPresence} presence\n     * @returns {string}\n     */\n    PresenceHelper.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    /**\n     * @param {IPresence} presence\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {Subscription}\n     */\n    PresenceHelper.prototype.getSubscription = function (options, id) {\n        return require('../core/Subscription').$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    /**\n     *\n     * @param {Subscription} subscription\n     * @param {IPresence[]} presences\n     * @param {IPresenceOptions} options\n     * @returns {*}\n     */\n    PresenceHelper.prototype.updateSubscription = function (subscription, presences, options) {\n        var events = presences.map(this.getId, this).map(function (id) {\n            return this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    /**\n     * @param {IExtension[]} extensions\n     * @param {IPresence[]} presences\n     * @param {bool} [merge]\n     * @returns {*}\n     */\n    PresenceHelper.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var index = this.index(presences);\n        extensions.forEach(/** @param {IExtension} extension */\n        function (extension) {\n            var presence = index[this.extension.getId(extension)];\n            if (presence) {\n                if ('presence' in extension && merge) {\n                    Utils.extend(extension.presence, presence);\n                } else {\n                    extension.presence = presence;\n                }\n            }\n        }, this);\n    };\n    /**\n     * @param {IPresenceCall} presenceCall\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isCallInProgress = function (presenceCall) {\n        return presenceCall && presenceCall.telephonyStatus != 'NoCall';\n    };\n    module.exports = {\n        Class: PresenceHelper,\n        /**\n         * @param {Context} context\n         * @returns {PresenceHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('PresenceHelper', function () {\n                return new PresenceHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {Object} IPresence\n     * @property {IExtension} extension\n     * @property {IPresenceCall[]} activeCalls\n     * @property {string} presenceStatus - Offline, Busy, Available\n     * @property {string} telephonyStatus - NoCall, CallConnected, Ringing, OnHold\n     * @property {string} userStatus - Offline, Busy, Available\n     * @property {string} dndStatus - TakeAllCalls, DoNotAcceptAnyCalls, DoNotAcceptDepartmentCalls, TakeDepartmentCallsOnly\n     * @property {boolean} allowSeeMyPresence\n     * @property {boolean} ringOnMonitoredCall\n     * @property {boolean} pickUpCallsOnHold\n     * @property {number} extensionId\n     * @property {number} sequence\n     */\n          /**\n     * @typedef {Object} IPresenceCall\n     * @property {string} direction\n     * @property {string} from\n     * @property {string} to\n     * @property {string} sessionId\n     * @property {string} id\n     * @property {string} telephonyStatus\n     */\n          /**\n     * @typedef {Object} IPresenceOptions\n     * @property {boolean} detailed\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Contact', [\n    'require',\n    'exports',\n    'module',\n    'core/Utils',\n    'core/Validator',\n    'core/Helper',\n    'core/List'\n], function (require, exports, module) {\n    'use strict';\n    var Utils = require('../core/Utils'), Validator = require('../core/Validator'), Helper = require('../core/Helper').Class, List = require('../core/List');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactHelper(context) {\n        Helper.call(this, context);\n    }\n    ContactHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * @param {IContactOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ContactHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId ? options.extensionId : '~') + '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root + (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') + (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     * @param {(IContact|object)} where\n     * @param {Array} fields\n     * @param {boolean} [asHash]\n     * @protected\n     * @returns {Object}\n     */\n    ContactHelper.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                } else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    /**\n     * @param {IContact} contact\n     * @returns {string}\n     */\n    ContactHelper.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    /**\n     * @param {IContact} contact\n     * @returns {boolean}\n     */\n    ContactHelper.prototype.isAlive = function (contact) {\n        return contact.availability == 'Alive';\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} string\n     * @param {IContactMatchOptions} [options]\n     * @returns {(string|null)}\n     */\n    ContactHelper.prototype.match = function (contact, string, options) {\n        options = Utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        function matchWith(value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = options.strict ? transformed == string : transformed.indexOf(string) > -1;\n            if (match)\n                found = value;\n        }\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            }, this);\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} phone\n     * @param {IContactMatchOptions} [options]\n     * @returns {string|null}\n     */\n    ContactHelper.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, Utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/gi, '') : '';    //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     * @param {ICallerInfo[]} callerInfos\n     * @param {IContact[]} contacts\n     * @param {IContactMatchOptions} [options]\n     */\n    ContactHelper.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n                return callerInfo.phoneNumber;\n            }, true);\n        Utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ContactHelper.prototype.comparator = function (options) {\n        var self = this;\n        return List.comparator(Utils.extend({\n            extractFn: function (contact, options) {\n                return self.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     * @param {IContactOptions} [options]\n     * @returns {function(IContact)}\n     */\n    ContactHelper.prototype.filter = function (options) {\n        var self = this;\n        options = Utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return List.filter([\n            {\n                condition: options.alive,\n                filterFn: this.isAlive\n            },\n            {\n                condition: options.startsWith,\n                filterFn: function (item, opts) {\n                    return self.match(item, opts.condition);\n                }\n            },\n            {\n                condition: options.phonesOnly,\n                filterFn: function (item, opts) {\n                    return self.getPhones(item).length > 0;\n                }\n            },\n            {\n                condition: options.faxesOnly,\n                filterFn: function (item, opts) {\n                    return self.getFaxes(item).length > 0;\n                }\n            }\n        ]);\n    };\n    /**\n     * @param {IContact} item\n     */\n    ContactHelper.prototype.validate = function (item) {\n        return Validator.validate([\n            {\n                field: 'firstName',\n                validator: Validator.required(item.firstName)\n            },\n            {\n                field: 'lastName',\n                validator: Validator.required(item.lastName)\n            },\n            {\n                field: 'email',\n                validator: Validator.email(item.email)\n            },\n            {\n                field: 'email2',\n                validator: Validator.email(item.email2)\n            },\n            {\n                field: 'email3',\n                validator: Validator.email(item.email3)\n            }\n        ]);\n    };\n    ContactHelper.prototype.phoneFields = [\n        'homePhone',\n        'homePhone2',\n        'businessPhone',\n        'businessPhone2',\n        'mobilePhone',\n        'companyPhone',\n        'assistantPhone',\n        'carPhone',\n        'otherPhone',\n        'callbackPhone'\n    ];\n    ContactHelper.prototype.faxFields = [\n        'businessFax',\n        'otherFax'\n    ];\n    ContactHelper.prototype.addressFields = [\n        'homeAddress',\n        'businessAddress',\n        'otherAddress'\n    ];\n    ContactHelper.prototype.addressSubFields = [\n        'street',\n        'city',\n        'state',\n        'zip'\n    ];\n    ContactHelper.prototype.nameFields = [\n        'firstName',\n        'middleName',\n        'lastName',\n        'nickName'\n    ];\n    ContactHelper.prototype.otherFields = [\n        'company',\n        'jobTitle',\n        'webPage',\n        'notes'\n    ];\n    ContactHelper.prototype.emailFields = [\n        'email',\n        'email2',\n        'email3'\n    ];\n    module.exports = {\n        Class: ContactHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('ContactHelper', function () {\n                return new ContactHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IContactOptions\n     * @property {string} extensionId\n     * @property {string} groupId\n     */\n          /**\n     * @typedef {object} IContactFilterOptions\n     * @property {string} startsWith\n     * @property {boolean} alive\n     */\n          /**\n     * @typedef {object} IContactMatchOptions\n     * @property {function(object, IContactMatchOptions)} transformFn\n     * @property {boolean} strict - if false look for as sub string\n     * @property {boolean} inAddresses - look in addresses as well\n     * @property {string[]} fields - in which fields to look for\n     */\n          /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactAddressInfo\n     * @typedef {Object} IContactAddress\n     * @property {string} country\n     * @property {string} street\n     * @property {string} city\n     * @property {string} state\n     * @property {string} zip\n     */\n          /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ContactInfo\n     * @typedef {Object} IContactBrief\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} email\n     * @property {IContactAddress} businessAddress\n     */\n          /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactInfo\n     * @typedef {Object} IContact\n     *\n     * Shared:\n     * @property {string} id\n     * @property {string} uri\n     *\n     * Names:\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} nickName\n     * @property {string} middleName\n     *\n     * Emails:\n     * @property {string} email\n     * @property {string} email2\n     * @property {string} email3\n     *\n     * Addresses:\n     * @property {IContactAddress} businessAddress\n     * @property {IContactAddress} homeAddress\n     * @property {IContactAddress} otherAddress\n     *\n     * Phones:\n     * @property {string} homePhone\n     * @property {string} homePhone2\n     * @property {string} businessPhone\n     * @property {string} businessPhone2\n     * @property {string} mobilePhone\n     * @property {string} companyPhone\n     * @property {string} assistantPhone\n     * @property {string} carPhone\n     * @property {string} otherPhone\n     * @property {string} callbackPhone\n     *\n     * @property {string} businessFax\n     * @property {string} otherFax\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Call', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Utils',\n    'core/List',\n    'helpers/Presence',\n    'helpers/Contact'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Utils = require('../core/Utils'), List = require('../core/List');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CallHelper(context) {\n        Helper.call(this, context);\n        this.presence = require('./Presence').$get(context);\n        this.contact = require('./Contact').$get(context);\n    }\n    CallHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * @param {ICallOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    CallHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' + (options.personal || options.extensionId ? 'extension/' + (options.extensionId || '~') + '/' : '') + (options.active ? 'active-calls' : 'call-log') + (id ? '/' + id : '');\n    };\n    CallHelper.prototype.getSessionId = function (call) {\n        return call && call.sessionId;\n    };\n    CallHelper.prototype.isInProgress = function (call) {\n        return call && call.result == 'In Progress';\n    };\n    CallHelper.prototype.isAlive = function (call) {\n        return call && call.availability == 'Alive';\n    };\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isInbound = function (call) {\n        return call && call.direction == 'Inbound';\n    };\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isMissed = function (call) {\n        return call && call.result == 'Missed';\n    };\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isFindMe = function (call) {\n        return call && call.action == 'FindMe';\n    };\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo}\n     */\n    CallHelper.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo[]}\n     */\n    CallHelper.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    CallHelper.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return v < 10 ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor(duration % (60 * 60) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    /**\n     * @param {ICallFilterOptions} [options]\n     * @returns {function(ICall)}\n     */\n    CallHelper.prototype.filter = function (options) {\n        options = Utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return List.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            {\n                filterBy: 'direction',\n                condition: options.direction\n            },\n            {\n                filterBy: 'type',\n                condition: options.type\n            }\n        ]);\n    };\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    CallHelper.prototype.comparator = function (options) {\n        return List.comparator(Utils.extend({ sortBy: 'startTime' }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     * @param {IContact[]} contacts\n     * @param {ICall[]} calls\n     * @param {IContactMatchOptions} [options]\n     */\n    CallHelper.prototype.attachContacts = function (contacts, calls, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(self.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} options\n     * @returns {boolean}\n     */\n    CallHelper.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        function getTime(dateString) {\n            return new Date(dateString).getTime();\n        }\n        return (!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) && // Check directions\n        outboundRingOutCall.direction == 'Outbound' && inboundCall.direction == 'Inbound' && // Check that start times are equal or close enough\n        (!inboundCall.startTime && !outboundRingOutCall.startTime || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) && // Check that numbers match\n        inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber && (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name)    //TODO Maybe name check is not required\n;\n    };\n    /**\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} [options]\n     * @returns {Array}\n     */\n    CallHelper.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = outboundRingOutCall.duration > inboundCall.duration ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        } else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime;\n            // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     *\n     * @param {ICall[]} calls\n     * @param {ICallProcessingOptions} options\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     * @param {IPresenceCall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.parsePresenceCalls = function (activeCalls) {\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus\n            };\n        }, this);\n    };\n    /**\n     * @param {ICall} call\n     * @returns {string}\n     */\n    CallHelper.prototype.getSignature = function (call) {\n        function cleanup(phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/gi, '');\n        }\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {IPresence} presence\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this.parsePresenceCalls(presence && presence.activeCalls || []).map(function (call) {\n                // delete property to make sure it is skipped during merge\n                delete call.startTime;\n                return call;\n            });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {ICall[]} calls\n     * @param {ICall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    module.exports = {\n        Class: CallHelper,\n        /**\n         * @param {Context} context\n         * @returns {CallHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('CallHelper', function () {\n                return new CallHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} ICall\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} sessionId\n     * @property {string} startTime\n     * @property {string} duration\n     * @property {string} type\n     * @property {string} direction\n     * @property {string} action\n     * @property {string} result\n     * @property {ICallerInfo} to\n     * @property {ICallerInfo} from\n     */\n          /**\n     * @typedef {object} ICallOptions\n     * @property {string} extensionId\n     * @property {boolean} active\n     * @property {boolean} personal\n     */\n          /**\n     * @typedef {object} ICallProcessingOptions\n     * @property {boolean} strict\n     * @property {boolean} merge\n     * @property {number} maxStartTimeDiscrepancy\n     */\n          /**\n     * @typedef {object} ICallFilterOptions\n     * @property {string} extensionId\n     * @property {string} direction\n     * @property {string} type\n     */\n          /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/CallerInfo.html\n     * @typedef {Object} ICallerInfo\n     * @property {string} phoneNumber\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} location\n     * @property {IContact} [contact] - corresponding contact (added by attachContacts methods)\n     * @property {string} [contactPhone] - contact's phone as written in contact (added by attachContacts methods)\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Conferencing', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ConferencingHelper(context) {\n        Helper.call(this, context);\n    }\n    ConferencingHelper.prototype = Object.create(Helper.prototype);\n    ConferencingHelper.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    module.exports = {\n        Class: ConferencingHelper,\n        /**\n         * @param {Context} context\n         * @returns {ConferencingHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('ConferencingHelper', function () {\n                return new ConferencingHelper(context);\n            });\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/ContactGroup', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Validator'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Validator = require('../core/Validator');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactGroupHelper(context) {\n        Helper.call(this, context);\n    }\n    ContactGroupHelper.prototype = Object.create(Helper.prototype);\n    ContactGroupHelper.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    /**\n     * @param {IContactGroup} item\n     */\n    ContactGroupHelper.prototype.validate = function (item) {\n        return Validator.validate([{\n                field: 'groupName',\n                validator: Validator.required(item && item.groupName)\n            }]);\n    };\n    module.exports = {\n        Class: ContactGroupHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactGroupHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('ContactGroupHelper', function () {\n                return new ContactGroupHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IContactGroup\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} notes\n     * @property {string} groupName\n     * @property {number} contactsCount\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Device', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Validator',\n    'helpers/Extension',\n    'helpers/DeviceModel'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Validator = require('../core/Validator');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n        this.deviceModel = require('./DeviceModel').$get(context);\n    }\n    DeviceHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * @param {IDeviceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    DeviceHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' + (options.extensionId ? '/extension/' + options.extensionId : '') + '/device' + (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    DeviceHelper.prototype.validate = function (item) {\n        return Validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            {\n                field: 'extension',\n                validator: Validator.required(this.extension.getId(item && item.extension))\n            },\n            {\n                field: 'model',\n                validator: Validator.required(this.deviceModel.getId(item && item.model))\n            }\n        ]);\n    };\n    module.exports = {\n        Class: DeviceHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('DeviceHelper', function () {\n                return new DeviceHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {Object} IDevice\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} type\n     * @property {string} name\n     * @property {string} serial\n     * @property {IDeviceModel} model\n     * @property {IExtensionShort} extension TODO IExtension?\n     * @property {IDeviceAddress} emergencyServiceAddress\n     * @property {IDeviceShipping} shipping\n     * @property {IDevicePhoneLine[]} phoneLines\n     */\n          /**\n     * @typedef {Object} IDeviceOrder\n     * @property {IDevice[]} devices\n     */\n          /**\n     * @typedef {Object} IDeviceAddress\n     * @property {string} street\n     * @property {string} street2\n     * @property {string} city\n     * @property {string} state\n     * @property {string} country\n     * @property {string} zip\n     * @property {string} customerName\n     */\n          /**\n     * @typedef {Object} IDeviceShipping\n     * @property {IDeviceAddress} address\n     * @property {IShippingMethod} method\n     * @property {string} status\n     */\n          /**\n     * @typedef {Object} IDevicePhoneLine\n     * @property {string} lineType\n     * @property {IPhoneNumber} phoneInfo\n     */\n          /**\n     * @typedef {Object} IDeviceOptions\n     * @property {string} extensionId\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/ForwardingNumber', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Utils',\n    'core/List'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Utils = require('../core/Utils'), List = require('../core/List');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ForwardingNumberHelper(context) {\n        Helper.call(this, context);\n    }\n    ForwardingNumberHelper.prototype = Object.create(Helper.prototype);\n    ForwardingNumberHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumberHelper.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber.id || forwardingNumber.phoneNumber;\n    };\n    ForwardingNumberHelper.prototype.hasFeature = function (phoneNumber, feature) {\n        return !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1;\n    };\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ForwardingNumberHelper.prototype.comparator = function (options) {\n        return List.comparator(Utils.extend({ sortBy: 'label' }, options));\n    };\n    /**\n     * @param options\n     * @returns {function(IForwardingNumber)}\n     */\n    ForwardingNumberHelper.prototype.filter = function (options) {\n        var self = this;\n        options = Utils.extend({ features: [] }, options);\n        return List.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return self.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    module.exports = {\n        Class: ForwardingNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {ForwardingNumberHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('ForwardingNumberHelper', function () {\n                return new ForwardingNumberHelper(context);\n            });\n        }\n    };    /**\n     *\n     * @typedef {object} IForwardingNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} label\n     * @property {string} phoneNumber\n     * @property {string} flipNumber\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Message', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Validator',\n    'core/Utils',\n    'core/List',\n    'core/Platform',\n    'helpers/Contact',\n    'core/Subscription'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Validator = require('../core/Validator'), Utils = require('../core/Utils'), List = require('../core/List');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function MessageHelper(context) {\n        Helper.call(this, context);\n        this.platform = require('../core/Platform').$get(context);\n        this.contact = require('./Contact').$get(context);\n    }\n    MessageHelper.prototype = Object.create(Helper.prototype);\n    /**\n     *\n     * @param {IMessageOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    MessageHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    MessageHelper.prototype.isInbound = function (message) {\n        return message && message.direction == 'Inbound';\n    };\n    MessageHelper.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    MessageHelper.prototype.isSMS = function (message) {\n        return message && message.type == 'SMS';\n    };\n    MessageHelper.prototype.isPager = function (message) {\n        return message && message.type == 'Pager';\n    };\n    MessageHelper.prototype.isVoiceMail = function (message) {\n        return message && message.type == 'VoiceMail';\n    };\n    MessageHelper.prototype.isFax = function (message) {\n        return message && message.type == 'Fax';\n    };\n    MessageHelper.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return message && message.availability == 'Alive';\n    };\n    MessageHelper.prototype.isRead = function (message) {\n        return message.readStatus == 'Read';\n    };\n    MessageHelper.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = !!isRead ? 'Read' : 'Unread';\n        return message;\n    };\n    MessageHelper.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    MessageHelper.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    /**\n     * @returns {Subscription}\n     */\n    MessageHelper.prototype.getSubscription = function (options) {\n        return require('../core/Subscription').$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    MessageHelper.prototype.comparator = function (options) {\n        return List.comparator(Utils.extend({ sortBy: 'creationTime' }, options));\n    };\n    /**\n     * @param {IMessageFilterOptions} [options]\n     * @returns {function(IMessage)}\n     */\n    MessageHelper.prototype.filter = function (options) {\n        options = Utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return List.filter([\n            {\n                condition: options.alive,\n                filterFn: this.isAlive\n            },\n            {\n                filterBy: 'type',\n                condition: options.type\n            },\n            {\n                filterBy: 'direction',\n                condition: options.direction\n            },\n            {\n                filterBy: 'conversationId',\n                condition: options.conversationId\n            },\n            {\n                filterBy: 'readStatus',\n                condition: options.readStatus\n            },\n            {\n                filterBy: 'subject',\n                condition: options.search,\n                filterFn: List.containsFilter\n            }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     * @param {IContact[]} contacts\n     * @param {IMessage[]} messages\n     * @param {IContactMatchOptions} [options]\n     */\n    MessageHelper.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     *\n     * @param message\n     * @returns {IMessageShort}\n     */\n    MessageHelper.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validateSMS = function (item) {\n        return Validator.validate([\n            {\n                field: 'to',\n                validator: Validator.required(Utils.getProperty(item, 'to[0].phoneNumber'))\n            },\n            {\n                field: 'from',\n                validator: Validator.required(Utils.getProperty(item, 'from.phoneNumber'))\n            },\n            {\n                field: 'subject',\n                validator: Validator.required(Utils.getProperty(item, 'subject'))\n            },\n            {\n                field: 'subject',\n                validator: Validator.length(Utils.getProperty(item, 'subject'), 160)\n            }\n        ]);\n    };\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validatePager = function (item) {\n        return Validator.validate([\n            {\n                field: 'to',\n                validator: Validator.required(Utils.getProperty(item, 'to.extensionNumber'))\n            },\n            {\n                field: 'from',\n                validator: Validator.required(Utils.getProperty(item, 'from.extensionNumber'))\n            },\n            {\n                field: 'subject',\n                validator: Validator.required(Utils.getProperty(item, 'subject'))\n            },\n            {\n                field: 'subject',\n                validator: Validator.length(Utils.getProperty(item, 'subject'), 160)\n            }\n        ]);\n    };\n    module.exports = {\n        Class: MessageHelper,\n        /**\n         * @param {Context} context\n         * @returns {MessageHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('MessageHelper', function () {\n                return new MessageHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IMessage\n     * @property {string} id\n     * @property {string} uri\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} type\n     * @property {string} creationTime\n     * @property {string} readStatus\n     * @property {string} priority\n     * @property {IMessageAttachment} attachments\n     * @property {string} direction\n     * @property {string} availability\n     * @property {string} subject\n     * @property {string} messageStatus\n     * @property {string} conversationId\n     * @property {string} lastModifiedTime\n     */\n          /**\n     * @typedef {object} IMessageShort\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} text\n     */\n          /**\n     * @typedef {object} IMessageOptions\n     * @property {boolean} fax\n     * @property {boolean} sync\n     * @property {boolean} sms\n     * @property {boolean} pager\n     * @property {string} extensionId\n     */\n          /**\n     * @typedef {object} IMessageFilterOptions\n     * @property {boolean} alive\n     * @property {string} conversationId\n     * @property {string} direction\n     * @property {string} readStatus\n     * @property {string} type\n     */\n          /**\n     * @typedef {object} IMessageFaxAttachment\n     * @property {string} contentType\n     * @property {string} content\n     * @property {string} fileName\n     */\n          /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch18s01.html#MessageAttachmentInfo\n     * @typedef {Object} IMessageAttachment\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} contentType\n     * @property {string} vmDuration\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/PhoneNumber', [\n    'require',\n    'exports',\n    'module',\n    'core/List',\n    'core/Utils',\n    'core/Helper',\n    'helpers/Extension'\n], function (require, exports, module) {\n    'use strict';\n    var List = require('../core/List'), Utils = require('../core/Utils'), Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PhoneNumberHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n    PhoneNumberHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * @param {IPhoneNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PhoneNumberHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' + (options.extensionId ? '/extension/' + options.extensionId : '') + '/phone-number' + (id ? '/' + id : '');\n    };\n    PhoneNumberHelper.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumberHelper.prototype.hasFeature = function (phoneNumber, feature) {\n        return !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1;\n    };\n    PhoneNumberHelper.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumberHelper.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(IPhoneNumber, IPhoneNumber)}\n     */\n    PhoneNumberHelper.prototype.comparator = function (options) {\n        return List.comparator(Utils.extend({\n            /**\n             * @param {IPhoneNumber} item\n             * @returns {string}\n             */\n            extractFn: function (item) {\n                return item.usageType + '-' + item.paymentType + '-' + item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     * @param {IPhoneNumberFilterOptions} options\n     * @returns {function(IForwardingNumber)}\n     */\n    PhoneNumberHelper.prototype.filter = function (options) {\n        var self = this;\n        options = Utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return List.filter([\n            {\n                filterBy: 'usageType',\n                condition: options.usageType\n            },\n            {\n                filterBy: 'paymentType',\n                condition: options.paymentType\n            },\n            {\n                filterBy: 'type',\n                condition: options.type\n            },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return self.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    module.exports = {\n        Class: PhoneNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {PhoneNumberHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('PhoneNumberHelper', function () {\n                return new PhoneNumberHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IPhoneNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} phoneNumber\n     * @property {string} paymentType - External, TollFree, Local\n     * @property {string} location\n     * @property {string} type - VoiceFax, FaxOnly, VoiceOnly\n     * @property {string} usageType - CompanyNumber, DirectNumber, CompanyFaxNumber, ForwardedNumber\n     * @property {array} features - CallerId, SmsSender\n     * @property {string} reservedTill - Date\n     * @property {string} error\n     */\n          /**\n     * @typedef {object} IPhoneNumberOptions\n     * @property {string} extensionId\n     * @property {true} lookup\n     * @property {string} countryId\n     * @property {string} paymentType\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {string} line\n     * @property {string} exclude\n     */\n          /**\n     * @typedef {object} IPhoneNumberFilterOptions\n     * @property {string} paymentType\n     * @property {string} usageType\n     * @property {string} type\n     * @property {string[]} features\n     */\n          /**\n     * @typedef {object} IPhoneNumberOrder\n     * @property {IPhoneNumber[]} records\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Ringout', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Validator',\n    'helpers/Extension'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Validator = require('../core/Validator');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function RingoutHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n    RingoutHelper.prototype = Object.create(Helper.prototype);\n    RingoutHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    RingoutHelper.prototype.resetAsNew = function (object) {\n        object = Helper.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    RingoutHelper.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    RingoutHelper.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    RingoutHelper.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    /**\n     * @param {IRingout} item\n     */\n    RingoutHelper.prototype.validate = function (item) {\n        return Validator.validate([\n            {\n                field: 'to',\n                validator: Validator.required(item && item.to && item.to.phoneNumber)\n            },\n            {\n                field: 'from',\n                validator: Validator.required(item && item.from && item.from.phoneNumber)\n            }\n        ]);\n    };\n    module.exports = {\n        Class: RingoutHelper,\n        /**\n         * @param {Context} context\n         * @returns {RingoutHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('RingoutHelper', function () {\n                return new RingoutHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IRingout\n     * @property {ICallerInfo} [from] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [to] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [callerId] (!) ONLY PHONE NUMBER\n     * @property {boolean} [playPrompt]\n     * @property {{callStatus:boolean, callerStatus:boolean, calleeStatus:boolean}} [status]\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Service', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ServiceHelper(context) {\n        Helper.call(this, context);\n    }\n    ServiceHelper.prototype = Object.create(Helper.prototype);\n    ServiceHelper.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    /**\n     * @param {string} feature\n     * @param {IServiceFeature[]} serviceFeatures\n     * @returns {*}\n     */\n    ServiceHelper.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    ServiceHelper.prototype.isSmsEnabled = isServiceFeatureEnabledMethod('SMS');\n    ServiceHelper.prototype.isSmsReceivingEnabled = isServiceFeatureEnabledMethod('SMSReceiving');\n    ServiceHelper.prototype.isPresenceEnabled = isServiceFeatureEnabledMethod('Presence');\n    ServiceHelper.prototype.isRingOutEnabled = isServiceFeatureEnabledMethod('RingOut');\n    ServiceHelper.prototype.isInternationalCallingEnabled = isServiceFeatureEnabledMethod('InternationalCalling');\n    ServiceHelper.prototype.isDndEnabled = isServiceFeatureEnabledMethod('DND');\n    ServiceHelper.prototype.isFaxEnabled = isServiceFeatureEnabledMethod('Fax');\n    ServiceHelper.prototype.isFaxReceivingEnabled = isServiceFeatureEnabledMethod('FaxReceiving');\n    ServiceHelper.prototype.isVoicemailEnabled = isServiceFeatureEnabledMethod('Voicemail');\n    ServiceHelper.prototype.isPagerEnabled = isServiceFeatureEnabledMethod('Pager');\n    ServiceHelper.prototype.isPagerReceivingEnabled = isServiceFeatureEnabledMethod('PagerReceiving');\n    ServiceHelper.prototype.isVoipCallingEnabled = isServiceFeatureEnabledMethod('VoipCalling');\n    ServiceHelper.prototype.isVideoConferencingEnabled = isServiceFeatureEnabledMethod('VideoConferencing');\n    ServiceHelper.prototype.isSalesForceEnabled = isServiceFeatureEnabledMethod('SalesForce');\n    ServiceHelper.prototype.isIntercomEnabled = isServiceFeatureEnabledMethod('Intercom');\n    ServiceHelper.prototype.isPagingEnabled = isServiceFeatureEnabledMethod('Paging');\n    ServiceHelper.prototype.isConferencingEnabled = isServiceFeatureEnabledMethod('Conferencing');\n    ServiceHelper.prototype.isFreeSoftPhoneLinesEnabled = isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n    ServiceHelper.prototype.isHipaaComplianceEnabled = isServiceFeatureEnabledMethod('HipaaCompliance');\n    ServiceHelper.prototype.isCallParkEnabled = isServiceFeatureEnabledMethod('CallPark');\n    ServiceHelper.prototype.isOnDemandCallRecordingEnabled = isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    function isServiceFeatureEnabledMethod(feature) {\n        return function (serviceFeatures) {\n            return this.isEnabled(feature, serviceFeatures);\n        };\n    }\n    module.exports = {\n        Class: ServiceHelper,\n        /**\n         * @param {Context} context\n         * @returns {ServiceHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('serviceHelper', function () {\n                return new ServiceHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IServiceFeature\n     * @property {string} featureName\n     * @property {boolean} enabled\n     */\n          /**\n     * @typedef {object} IService\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} servicePlanName\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('RCSDK', [\n    'require',\n    'exports',\n    'module',\n    'core/Context',\n    'core/Ajax',\n    'core/AjaxObserver',\n    'core/xhr/XhrResponse',\n    'core/Platform',\n    'core/Cache',\n    'core/Subscription',\n    'core/PageVisibility',\n    'core/Helper',\n    'core/Observable',\n    'core/Validator',\n    'core/Log',\n    'core/Utils',\n    'core/List',\n    'helpers/Country',\n    'helpers/DeviceModel',\n    'helpers/Language',\n    'helpers/Location',\n    'helpers/ShippingMethod',\n    'helpers/State',\n    'helpers/Timezone',\n    'helpers/Account',\n    'helpers/BlockedNumber',\n    'helpers/Call',\n    'helpers/Conferencing',\n    'helpers/Contact',\n    'helpers/ContactGroup',\n    'helpers/Device',\n    'helpers/Extension',\n    'helpers/ForwardingNumber',\n    'helpers/Message',\n    'helpers/PhoneNumber',\n    'helpers/Presence',\n    'helpers/Ringout',\n    'helpers/Service'\n], function (require, exports, module) {\n    'use strict';\n    /**\n     * @param {IInjections} injections\n     * @returns {RCSDK}\n     */\n    module.exports = function (injections) {\n        /**\n         * @name RCSDK\n         * @constructor\n         */\n        function RCSDK(options) {\n            /** @private */\n            this._context = require('./core/Context').$get(injections);    //TODO Link Platform events with Subscriptions and the rest\n        }\n        RCSDK.version = '1.1.0';\n        // Internals\n        /**\n         * @returns {Context}\n         */\n        RCSDK.prototype.getContext = function () {\n            return this._context;\n        };\n        // Core\n        /**\n         */\n        RCSDK.prototype.getAjax = function () {\n            return require('./core/Ajax').$get(this.getContext());\n        };\n        /**\n         * @returns {AjaxObserver}\n         */\n        RCSDK.prototype.getAjaxObserver = function () {\n            return require('./core/AjaxObserver').$get(this.getContext());\n        };\n        /**\n         * @returns {XhrResponse}\n         */\n        RCSDK.prototype.getXhrResponse = function () {\n            return require('./core/xhr/XhrResponse').$get(this.getContext());\n        };\n        /**\n         * @returns {Platform}\n         */\n        RCSDK.prototype.getPlatform = function () {\n            return require('./core/Platform').$get(this.getContext());\n        };\n        /**\n         * @returns {Cache}\n         */\n        RCSDK.prototype.getCache = function () {\n            return require('./core/Cache').$get(this.getContext());\n        };\n        /**\n         * @returns {Subscription}\n         */\n        RCSDK.prototype.getSubscription = function () {\n            return require('./core/Subscription').$get(this.getContext());\n        };\n        /**\n         * @returns {PageVisibility}\n         */\n        RCSDK.prototype.getPageVisibility = function () {\n            return require('./core/PageVisibility').$get(this.getContext());\n        };\n        /**\n         * @returns {Helper}\n         */\n        RCSDK.prototype.getHelper = function () {\n            return require('./core/Helper').$get(this.getContext());\n        };\n        /**\n         * @returns {Observable}\n         */\n        RCSDK.prototype.getObservable = function () {\n            return require('./core/Observable').$get(this.getContext());\n        };\n        /**\n         * @returns {Validator}\n         */\n        RCSDK.prototype.getValidator = function () {\n            return require('./core/Validator').$get(this.getContext());\n        };\n        /**\n         * @returns {Log}\n         */\n        RCSDK.prototype.getLog = function () {\n            return require('./core/Log').$get(this.getContext());\n        };\n        /**\n         * @returns {Utils}\n         */\n        RCSDK.prototype.getUtils = function () {\n            return require('./core/Utils').$get(this.getContext());\n        };\n        /**\n         * @returns {List}\n         */\n        RCSDK.prototype.getList = function () {\n            return require('./core/List').$get(this.getContext());\n        };\n        // Helpers\n        /**\n         * @returns {CountryHelper}\n         */\n        RCSDK.prototype.getCountryHelper = function () {\n            return require('./helpers/Country').$get(this.getContext());\n        };\n        /**\n         * @returns {DeviceModelHelper}\n         */\n        RCSDK.prototype.getDeviceModelHelper = function () {\n            return require('./helpers/DeviceModel').$get(this.getContext());\n        };\n        /**\n         * @returns {LanguageHelper}\n         */\n        RCSDK.prototype.getLanguageHelper = function () {\n            return require('./helpers/Language').$get(this.getContext());\n        };\n        /**\n         * @returns {LocationHelper}\n         */\n        RCSDK.prototype.getLocationHelper = function () {\n            return require('./helpers/Location').$get(this.getContext());\n        };\n        /**\n         * @returns {ShippingMethodHelper}\n         */\n        RCSDK.prototype.getShippingMethodHelper = function () {\n            return require('./helpers/ShippingMethod').$get(this.getContext());\n        };\n        /**\n         * @returns {StateHelper}\n         */\n        RCSDK.prototype.getStateHelper = function () {\n            return require('./helpers/State').$get(this.getContext());\n        };\n        /**\n         * @returns {TimezoneHelper}\n         */\n        RCSDK.prototype.getTimezoneHelper = function () {\n            return require('./helpers/Timezone').$get(this.getContext());\n        };\n        /**\n         * @returns {AccountHelper}\n         */\n        RCSDK.prototype.getAccountHelper = function () {\n            return require('./helpers/Account').$get(this.getContext());\n        };\n        /**\n         * @returns {BlockedNumberHelper}\n         */\n        RCSDK.prototype.getBlockedNumberHelper = function () {\n            return require('./helpers/BlockedNumber').$get(this.getContext());\n        };\n        /**\n         * @returns {CallHelper}\n         */\n        RCSDK.prototype.getCallHelper = function () {\n            return require('./helpers/Call').$get(this.getContext());\n        };\n        /**\n         * @returns {ConferencingHelper}\n         */\n        RCSDK.prototype.getConferencingHelper = function () {\n            return require('./helpers/Conferencing').$get(this.getContext());\n        };\n        /**\n         * @returns {ContactHelper}\n         */\n        RCSDK.prototype.getContactHelper = function () {\n            return require('./helpers/Contact').$get(this.getContext());\n        };\n        /**\n         * @returns {ContactGroupHelper}\n         */\n        RCSDK.prototype.getContactGroupHelper = function () {\n            return require('./helpers/ContactGroup').$get(this.getContext());\n        };\n        /**\n         * @returns {DeviceHelper}\n         */\n        RCSDK.prototype.getDeviceHelper = function () {\n            return require('./helpers/Device').$get(this.getContext());\n        };\n        /**\n         * @returns {ExtensionHelper}\n         */\n        RCSDK.prototype.getExtensionHelper = function () {\n            return require('./helpers/Extension').$get(this.getContext());\n        };\n        /**\n         * @returns {ForwardingNumberHelper}\n         */\n        RCSDK.prototype.getForwardingNumberHelper = function () {\n            return require('./helpers/ForwardingNumber').$get(this.getContext());\n        };\n        /**\n         * @returns {MessageHelper}\n         */\n        RCSDK.prototype.getMessageHelper = function () {\n            return require('./helpers/Message').$get(this.getContext());\n        };\n        /**\n         * @returns {PhoneNumberHelper}\n         */\n        RCSDK.prototype.getPhoneNumberHelper = function () {\n            return require('./helpers/PhoneNumber').$get(this.getContext());\n        };\n        /**\n         * @returns {PresenceHelper}\n         */\n        RCSDK.prototype.getPresenceHelper = function () {\n            return require('./helpers/Presence').$get(this.getContext());\n        };\n        /**\n         * @returns {RingoutHelper}\n         */\n        RCSDK.prototype.getRingoutHelper = function () {\n            return require('./helpers/Ringout').$get(this.getContext());\n        };\n        /**\n         * @returns {ServiceHelper}\n         */\n        RCSDK.prototype.getServiceHelper = function () {\n            return require('./helpers/Service').$get(this.getContext());\n        };\n        /** @type {window} */\n        var root = new Function('return this')();\n        function getXHR() {\n            return root.XMLHttpRequest || function () {\n                try {\n                    return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n                } catch (e1) {\n                }\n                try {\n                    return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n                } catch (e2) {\n                }\n                try {\n                    return new ActiveXObject('Msxml2.XMLHTTP');\n                } catch (e3) {\n                }\n                throw new Error('This browser does not support XMLHttpRequest.');\n            };\n        }\n        function getCryptoJS() {\n            return root.CryptoJS || typeof CryptoJS !== 'undefined' && CryptoJS;\n        }\n        function getLocalStorage() {\n            return root.localStorage;\n        }\n        function getPUBNUB() {\n            return root.PUBNUB || typeof PUBNUB !== 'undefined' && PUBNUB;\n        }\n        function getPromise() {\n            return root.Promise;\n        }\n        injections = injections || {};\n        injections.CryptoJS = injections.CryptoJS || getCryptoJS();\n        injections.localStorage = injections.localStorage || getLocalStorage();\n        injections.Promise = injections.Promise || getPromise();\n        injections.PUBNUB = injections.PUBNUB || getPUBNUB();\n        injections.XHR = injections.XHR || getXHR();\n        return RCSDK;\n    };    /**\n     * @typedef {Object} IInjections\n     * @property {PUBNUB} PUBNUB\n     * @property {CryptoJS} CryptoJS\n     * @property {Storage} localStorage\n     * @property {XMLHttpRequest} XHR\n     * @property {Promise} Promise\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\n(function() {\n\n    if (typeof exports !== 'undefined') { // NodeJS\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = RCSDK({\n                CryptoJS: require('crypto-js'),\n                localStorage: new (require('dom-storage'))(),\n                Promise: require('es6-promise').Promise,\n                PUBNUB: require('pubnub'),\n                XHR: require('xhr2')\n            });\n        }\n\n    } else if (typeof define === 'function' && define.amd) { // RequireJS\n\n        define(['crypto-js', 'pubnub', 'es6-promise'], function(CryptoJS, PUBNUB) { // amdclean\n            return RCSDK({\n                CryptoJS: CryptoJS,\n                PUBNUB: PUBNUB\n            });\n        });\n\n    } else { // Standalone in browser\n\n        RCSDK.noConflict = (function(old) {\n            return function() {\n                root.RCSDK = old;\n                RCSDK.noConflict = undefined;\n                return RCSDK;\n            };\n        })(root.RCSDK);\n\n        root.RCSDK = RCSDK({});\n\n    }\n\n})();"],"sourceRoot":"/source/"}