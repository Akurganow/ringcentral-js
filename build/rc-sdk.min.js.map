{"version":3,"sources":["webpack/universalModuleDefinition","rc-sdk.js","webpack/bootstrap 3c360870ef3d8071ad8a","../src/lib/RCSDK.ts","external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}","external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}","external {\"amd\":\"crypto-js/aes\",\"commonjs\":\"crypto-js/aes\",\"commonjs2\":\"crypto-js/aes\",\"root\":[\"CryptoJS\",\"AES\"]}","external {\"amd\":\"crypto-js/mode-ecb\",\"commonjs\":\"crypto-js/mode-ecb\",\"commonjs2\":\"crypto-js/mode-ecb\",\"root\":[\"CryptoJS\",\"mode\",\"ECB\"]}","external {\"amd\":\"crypto-js/core\",\"commonjs\":\"crypto-js/core\",\"commonjs2\":\"crypto-js/core\",\"root\":[\"CryptoJS\"]}","external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}","external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}","../src/lib/core/pubnub/PubnubMock.ts","../src/lib/core/xhr/XhrMock.ts","../src/lib/core/xhr/XhrResponse.ts","../src/lib/core/AjaxObserver.ts","../src/lib/core/Cache.ts","../src/lib/core/Context.ts","../src/lib/core/Helper.ts","../src/lib/core/List.ts","../src/lib/core/Log.ts","../src/lib/core/Observable.ts","../src/lib/core/PageVisibility.ts","../src/lib/core/Platform.ts","../src/lib/core/Subscription.ts","../src/lib/core/Utils.ts","../src/lib/core/Validator.ts","../src/lib/helpers/Account.ts","../src/lib/helpers/BlockedNumber.ts","../src/lib/helpers/Call.ts","../src/lib/helpers/Contact.ts","../src/lib/helpers/ContactGroup.ts","../src/lib/helpers/Conferencing.ts","../src/lib/helpers/Country.ts","../src/lib/helpers/Device.ts","../src/lib/helpers/DeviceModel.ts","../src/lib/helpers/Extension.ts","../src/lib/helpers/ForwardingNumber.ts","../src/lib/helpers/Language.ts","../src/lib/helpers/Location.ts","../src/lib/helpers/Message.ts","../src/lib/helpers/PhoneNumber.ts","../src/lib/helpers/Presence.ts","../src/lib/helpers/Ringout.ts","../src/lib/helpers/Service.ts","../src/lib/helpers/ShippingMethod.ts","../src/lib/helpers/State.ts","../src/lib/helpers/Timezone.ts","../src/lib/core/http/Request.ts","../src/lib/core/http/Headers.ts","../src/lib/core/http/Response.ts"],"names":["root","factory","exports","module","require","e","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","pubnubMock","xhrMock","xhrResponse","ajaxObserver","cache","context","helper","list","log","observable","pageVisibility","platform","subscription","utils","validator","accountHelper","blockedNumberHelper","callHelper","contactHelper","contactGroupHelper","conferencingHelper","countryHelper","deviceHelper","deviceModelHelper","extensionHelper","forwardingNumberHelper","languageHelper","locationHelper","messageHelper","phoneNumberHelper","presenceHelper","ringoutHelper","serviceHelper","shippingMethodHelper","stateHelper","timezoneHelper","promise","pubnub","RCSDK","RCSDK.constructor","RCSDK.getContext","RCSDK.getAjaxObserver","RCSDK.getXhrResponse","RCSDK.getPlatform","RCSDK.getCache","RCSDK.getSubscription","RCSDK.getPageVisibility","RCSDK.getHelper","RCSDK.getObservable","RCSDK.getValidator","RCSDK.getLog","RCSDK.getUtils","RCSDK.getList","RCSDK.getCountryHelper","RCSDK.getDeviceModelHelper","RCSDK.getLanguageHelper","RCSDK.getLocationHelper","RCSDK.getShippingMethodHelper","RCSDK.getStateHelper","RCSDK.getTimezoneHelper","RCSDK.getAccountHelper","RCSDK.getBlockedNumberHelper","RCSDK.getCallHelper","RCSDK.getConferencingHelper","RCSDK.getContactHelper","RCSDK.getContactGroupHelper","RCSDK.getDeviceHelper","RCSDK.getExtensionHelper","RCSDK.getForwardingNumberHelper","RCSDK.getMessageHelper","RCSDK.getPhoneNumberHelper","RCSDK.getPresenceHelper","RCSDK.getRingoutHelper","RCSDK.getServiceHelper","Error","code","$get","PubnubMock","PubnubMock.subscribe","PubnubMock.receiveMessage","PubnubFactory","PubnubFactory.constructor","PubnubFactory.init","XhrMock","XhrMock.constructor","XhrMock.getResponseHeader","XhrMock.setRequestHeader","XhrMock.getAllResponseHeaders","XhrMock.open","XhrMock.send","XhrMock.abort","XhrMock.getRequestHeader","XhrMock.setResponseHeader","XhrMock.setStatus","XhrResponse","XhrResponse.constructor","XhrResponse.add","XhrResponse.clear","XhrResponse.find","__extends","d","b","__","constructor","hasOwnProperty","prototype","AjaxObserver","_super","AjaxObserver.constructor","Observable","Cache","Cache.constructor","Cache.setPrefix","Cache.prefixKey","Cache.setItem","Cache.removeItem","Cache.getItem","Cache.clean","injections","Context","Context.constructor","Context.createSingleton","Context.usePubnubStub","Context.useAjaxStub","Context.getCryptoJS","Context.getPubnub","Context.getLocalStorage","Context.getPromise","Context.getXHR","Helper","Helper.constructor","Helper.getContext","Helper.createUrl","Helper.getId","Helper.isNew","Helper.resetAsNew","Helper.getUri","Helper.parseMultipartResponse","Helper.loadRequest","Helper.saveRequest","Helper.deleteRequest","Helper.syncRequest","Helper.nextPageExists","Helper.index","Helper.merge","List","List.constructor","List.propertyExtractor","List.stringComparator","List.numberComparator","List.comparator","List.equalsFilter","List.containsFilter","List.regexpFilter","List.filter","Log","Log.constructor","Log.disableAll","Log.enableAll","Log.parseArguments","Log.debug","Log.info","Log.warn","Log.error","Observable.constructor","Observable.hasListeners","Observable.registerOneTimeEvent","Observable.on","Observable.emit","Observable.off","Observable.isOneTimeEvent","Observable.isOneTimeEventFired","Observable.setOneTimeEventFired","Observable.setOneTimeEventArgumens","Observable.getOneTimeEventArgumens","Observable.offAll","Observable.destroy","Observable.emitAndCallback","PageVisibility","PageVisibility.constructor","PageVisibility.isVisible","request","Platform","Platform.constructor","Platform.getStorage","Platform.getRequest","Platform.clearStorage","Platform.setCredentials","Platform.setServer","Platform.remember","Platform.authorize","Platform.isPaused","Platform.pause","Platform.resume","Platform.refresh","Platform.logout","Platform.refreshPolling","Platform.getToken","Platform.getTokenType","Platform.getAuthData","Platform.isTokenValid","Platform.isAuthorized","Platform.cancelAccessToken","Platform.setCache","Platform.forceAuthentication","Platform.apiCall","Platform.get","Platform.post","Platform.put","Platform.delete","Platform.authCall","Platform.apiUrl","Platform.destroy","Platform.on","Platform.off","Platform.emitAndCallback","Subscription","Subscription.constructor","Subscription.getPubnub","Subscription.getCrypto","Subscription.getPlatform","Subscription.register","Subscription.addEvents","Subscription.setEvents","Subscription.getFullEventFilters","Subscription.subscribe","Subscription.renew","Subscription.remove","Subscription.destroy","Subscription.isSubscribed","Subscription.setTimeout","Subscription.clearTimeout","Subscription.updateSubscription","Subscription.unsubscribe","Subscription.notify","Subscription.subscribeAtPubnub","Subscription.on","Subscription.off","Subscription.emitAndCallback","hasOwn","Object","toString","rdigit","class2type","split","forEach","name","toLowerCase","Utils","Utils.extend","Utils.forEach","Utils.queryStringify","Utils.parseQueryString","Utils.isEmail","Utils.isPhoneNumber","Utils.argumentsToArray","Utils.isDate","Utils.isFunction","Utils.isArray","Utils.isWindow","Utils.isNaN","Utils.type","Utils.isPlainObject","Utils.getProperty","Utils.poll","Utils.stopPolling","Utils.parseString","Utils.parseNumber","Validator","Validator.constructor","Validator.validate","Validator.email","Validator.phone","Validator.required","Validator.length","Account","Account.constructor","Account.createUrl","BlockedNumber","BlockedNumber.constructor","BlockedNumber.createUrl","BlockedNumber.validate","presence","contact","Call","Call.constructor","Call.createUrl","Call.getSessionId","Call.isInProgress","Call.isAlive","Call.isInbound","Call.isOutbound","Call.isMissed","Call.isFindMe","Call.getCallerInfo","Call.getAllCallerInfos","Call.formatDuration","Call.formatDuration.addZero","Call.filter","Call.comparator","Call.attachContacts","Call.checkMergeability","Call.combineCalls","Call.processCalls","Call.parsePresenceCalls","Call.getSignature","Call.mergePresenceCalls","Call.mergeAll","Contact","Contact.constructor","Contact.createUrl","Contact.getFieldValues","Contact.getFullName","Contact.getEmails","Contact.getPhones","Contact.getFaxes","Contact.getAddresses","Contact.isAlive","Contact.match","Contact.matchAsPhone","Contact.attachToCallerInfos","Contact.comparator","Contact.filter","Contact.validate","ContactGroup","ContactGroup.constructor","ContactGroup.createUrl","ContactGroup.validate","Conferencing","Conferencing.constructor","Conferencing.createUrl","Country","Country.constructor","Country.createUrl","extension","deviceModel","Device","Device.constructor","Device.createUrl","Device.validate","DeviceModel","DeviceModel.constructor","DeviceModel.getId","DeviceModel.cleanForSaving","Extension","Extension.constructor","Extension.createUrl","Extension.isUser","Extension.isDepartment","Extension.isAnnouncement","Extension.isVoicemail","Extension.comparator","Extension.filter","ForwardingNumber","ForwardingNumber.constructor","ForwardingNumber.createUrl","ForwardingNumber.getId","ForwardingNumber.hasFeature","ForwardingNumber.comparator","ForwardingNumber.filter","Language","Language.constructor","state","Location","Location.constructor","Location.createUrl","Location.filter","Location.comparator","Message","Message.constructor","Message.createUrl","Message.isInbound","Message.isOutbound","Message.isSMS","Message.isPager","Message.isVoiceMail","Message.isFax","Message.isAlive","Message.isRead","Message.setIsRead","Message.getAttachmentUrl","Message.getAttachmentContentType","Message.getSubscription","Message.getCallerInfos","Message.getAllCallerInfos","Message.comparator","Message.filter","Message.attachContacts","Message.shorten","Message.validateSMS","Message.validatePager","PhoneNumber","PhoneNumber.constructor","PhoneNumber.createUrl","PhoneNumber.isSMS","PhoneNumber.hasFeature","PhoneNumber.reserve","PhoneNumber.unreserve","PhoneNumber.comparator","PhoneNumber.filter","Presence","Presence.constructor","Presence.createUrl","Presence.getId","Presence.isAvailable","Presence.getSubscription","Presence.updateSubscription","Presence.attachToExtensions","Presence.isCallInProgress","Ringout","Ringout.constructor","Ringout.createUrl","Ringout.resetAsNew","Ringout.isInProgress","Ringout.isSuccess","Ringout.isError","Ringout.validate","Service","Service.constructor","Service.createUrl","Service.isEnabled","Service.isServiceFeatureEnabledMethod","ShippingMethod","ShippingMethod.constructor","country","State","State.constructor","State.createUrl","State.filter","Timezone","Timezone.constructor","Timezone.createUrl","h","r","Request","Request.constructor","Request.isLoaded","Request.setHeader","Request.setHeaders","Request.setOptions","Request.checkOptions","Request.getEncodedBody","Request.send","Request.getXHR","Request.destroy","Headers","Headers.constructor","Headers.setHeader","Headers.getHeader","Headers.hasHeader","Headers.setHeaders","Headers.isContentType","Headers.getContentType","Headers.isMultipart","Headers.isUrlEncoded","Headers.isJson","status","statusText","body","headers","Response","Response.constructor","Response.isUnauthorized","Response.checkStatus","Response.getError"],"mappings":"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","file":"rc-sdk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"crypto-js/aes\"), require(\"crypto-js/mode-ecb\"), require(\"crypto-js/core\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()), require(\"dom-storage\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"pubnub\", \"crypto-js/aes\", \"crypto-js/mode-ecb\", \"crypto-js/core\", \"exports\", \"exports\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"crypto-js/aes\"), require(\"crypto-js/mode-ecb\"), require(\"crypto-js/core\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()), require(\"dom-storage\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"PUBNUB\"], root[\"CryptoJS\"][\"AES\"], root[\"CryptoJS\"][\"mode\"][\"ECB\"], root[\"CryptoJS\"], root[\"XMLHttpRequest\"], root[\"localStorage\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"crypto-js/aes\"), require(\"crypto-js/mode-ecb\"), require(\"crypto-js/core\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()), require(\"dom-storage\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"pubnub\", \"crypto-js/aes\", \"crypto-js/mode-ecb\", \"crypto-js/core\", \"exports\", \"exports\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"crypto-js/aes\"), require(\"crypto-js/mode-ecb\"), require(\"crypto-js/core\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()), require(\"dom-storage\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"PUBNUB\"], root[\"CryptoJS\"][\"AES\"], root[\"CryptoJS\"][\"mode\"][\"ECB\"], root[\"CryptoJS\"], root[\"XMLHttpRequest\"], root[\"localStorage\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = __webpack_require__(8);\nvar xhrMock = __webpack_require__(9);\nvar xhrResponse = __webpack_require__(10);\nvar ajaxObserver = __webpack_require__(11);\nvar cache = __webpack_require__(12);\nvar context = __webpack_require__(13);\nvar helper = __webpack_require__(14);\nvar list = __webpack_require__(15);\nvar log = __webpack_require__(16);\nvar observable = __webpack_require__(17);\nvar pageVisibility = __webpack_require__(18);\nvar platform = __webpack_require__(19);\nvar subscription = __webpack_require__(20);\nvar utils = __webpack_require__(21);\nvar validator = __webpack_require__(22);\nvar accountHelper = __webpack_require__(23);\nvar blockedNumberHelper = __webpack_require__(24);\nvar callHelper = __webpack_require__(25);\nvar contactHelper = __webpack_require__(26);\nvar contactGroupHelper = __webpack_require__(27);\nvar conferencingHelper = __webpack_require__(28);\nvar countryHelper = __webpack_require__(29);\nvar deviceHelper = __webpack_require__(30);\nvar deviceModelHelper = __webpack_require__(31);\nvar extensionHelper = __webpack_require__(32);\nvar forwardingNumberHelper = __webpack_require__(33);\nvar languageHelper = __webpack_require__(34);\nvar locationHelper = __webpack_require__(35);\nvar messageHelper = __webpack_require__(36);\nvar phoneNumberHelper = __webpack_require__(37);\nvar presenceHelper = __webpack_require__(38);\nvar ringoutHelper = __webpack_require__(39);\nvar serviceHelper = __webpack_require__(40);\nvar shippingMethodHelper = __webpack_require__(41);\nvar stateHelper = __webpack_require__(42);\nvar timezoneHelper = __webpack_require__(43);\nvar promise = __webpack_require__(1);\nvar pubnub = __webpack_require__(2);\n__webpack_require__(3);\n__webpack_require__(4);\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache().setPrefix(options.cachePrefix || '');\n        this.getPlatform().setServer(options.server || '').setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () {\n        return this._context;\n    };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () {\n        return ajaxObserver.$get(this.getContext());\n    };\n    RCSDK.prototype.getXhrResponse = function () {\n        return xhrResponse.$get(this.getContext());\n    };\n    RCSDK.prototype.getPlatform = function () {\n        return platform.$get(this.getContext());\n    };\n    RCSDK.prototype.getCache = function () {\n        return cache.$get(this.getContext());\n    };\n    RCSDK.prototype.getSubscription = function () {\n        return subscription.$get(this.getContext());\n    };\n    RCSDK.prototype.getPageVisibility = function () {\n        return pageVisibility.$get(this.getContext());\n    };\n    RCSDK.prototype.getHelper = function () {\n        return helper.$get(this.getContext());\n    };\n    RCSDK.prototype.getObservable = function () {\n        return observable.$get(this.getContext());\n    };\n    RCSDK.prototype.getValidator = function () {\n        return validator.$get(this.getContext());\n    };\n    RCSDK.prototype.getLog = function () {\n        return log.$get(this.getContext());\n    };\n    RCSDK.prototype.getUtils = function () {\n        return utils.$get(this.getContext());\n    };\n    RCSDK.prototype.getList = function () {\n        return list.$get(this.getContext());\n    };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () {\n        return countryHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getDeviceModelHelper = function () {\n        return deviceModelHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getLanguageHelper = function () {\n        return languageHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getLocationHelper = function () {\n        return locationHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getShippingMethodHelper = function () {\n        return shippingMethodHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getStateHelper = function () {\n        return stateHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getTimezoneHelper = function () {\n        return timezoneHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getAccountHelper = function () {\n        return accountHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getBlockedNumberHelper = function () {\n        return blockedNumberHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getCallHelper = function () {\n        return callHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getConferencingHelper = function () {\n        return conferencingHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getContactHelper = function () {\n        return contactHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getContactGroupHelper = function () {\n        return contactGroupHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getDeviceHelper = function () {\n        return deviceHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getExtensionHelper = function () {\n        return extensionHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getForwardingNumberHelper = function () {\n        return forwardingNumberHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getMessageHelper = function () {\n        return messageHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getPhoneNumberHelper = function () {\n        return phoneNumberHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getPresenceHelper = function () {\n        return presenceHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getRingoutHelper = function () {\n        return ringoutHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getServiceHelper = function () {\n        return serviceHelper.$get(this.getContext());\n    };\n    RCSDK.version = '1.3.0';\n    RCSDK.CryptoJS = __webpack_require__(5);\n    RCSDK.XHR = function () {\n        try {\n            return new XMLHttpRequest();\n        }\n        catch (e) {\n        }\n        try {\n            return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n        }\n        catch (e1) {\n        }\n        try {\n            return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n        }\n        catch (e2) {\n        }\n        try {\n            return new ActiveXObject(\"Msxml2.XMLHTTP\");\n        }\n        catch (e3) {\n        }\n        try {\n            return new (__webpack_require__(6))();\n        }\n        catch (e4) {\n        }\n        throw new Error(\"This browser does not support XMLHttpRequest.\");\n    };\n    RCSDK.injections = {\n        CryptoJS: RCSDK.CryptoJS,\n        localStorage: (typeof (localStorage) !== 'undefined' ? localStorage : __webpack_require__(7)),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : promise.Promise,\n        PUBNUB: pubnub,\n        XHR: RCSDK.XHR,\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\nif(typeof __WEBPACK_EXTERNAL_MODULE_6__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar PubnubMock = (function () {\n    function PubnubMock() {\n    }\n    PubnubMock.prototype.ready = function () {\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n    };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.onMessage = options.message;\n    };\n    PubnubMock.prototype.receiveMessage = function (msg) {\n        this.onMessage(msg, 'env', 'channel');\n    };\n    return PubnubMock;\n})();\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock();\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar utils = __webpack_require__(21);\nvar log = __webpack_require__(16);\nvar xhrResponse = __webpack_require__(10); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(17);\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getCryptoJS = function () {\n        return this.injections.CryptoJS;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(21);\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(21);\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(21);\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () {\n                },\n                warn: function () {\n                },\n                info: function () {\n                },\n                error: function () {\n                }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(21);\nvar log = __webpack_require__(16);\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @alias RCSDK.core.Observable\n     */\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        var self = this;\n        if (!callback) {\n            delete this.listeners[event];\n        }\n        else {\n            if (!this.hasListeners(event))\n                return this;\n            this.listeners[event].forEach(function (cb, i) {\n                if (cb === callback)\n                    delete _this.listeners[event][i];\n            });\n        }\n        return this;\n    };\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    Observable.prototype.offAll = function () {\n        this.listeners = {};\n        this.oneTimeEvents = {};\n        this.oneTimeArguments = {};\n        return this;\n    };\n    Observable.prototype.destroy = function () {\n        this.offAll();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(17);\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v,\n                focusin: v,\n                pageshow: v,\n                blur: h,\n                focusout: h,\n                pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(17);\nvar cache = __webpack_require__(12);\nvar request = __webpack_require__(44);\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: {\n                \"grant_type\": \"password\",\n                \"username\": options.username,\n                \"extension\": options.extension || '',\n                \"password\": options.password,\n                \"access_token_ttl\": this.accessTokenTtl,\n                \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n            }\n        }).then(function (response) {\n            _this.setCache(response.data).remember(options.remember).emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage().emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data).resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e]).emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume().clearStorage().emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume().emitAndCallback(_this.events.accessViolation, [e]).emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest().setOptions(options).setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : '')).send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this.refresh().then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest().setOptions(options).setHeader('Content-Type', 'application/x-www-form-urlencoded').setHeader('Accept', 'application/json').setHeader('Authorization', 'Basic ' + this.apiKey).send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '';\n        if (options.addServer && url.indexOf('http://') == -1 && url.indexOf('https://') == -1)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        return this;\n    };\n    Platform.prototype.on = function (events, callback) {\n        _super.prototype.on.call(this, events, callback);\n        return this;\n    };\n    Platform.prototype.off = function (events, callback) {\n        _super.prototype.on.call(this, events, callback);\n        return this;\n    };\n    Platform.prototype.emitAndCallback = function (event, args, callback) {\n        _super.prototype.emitAndCallback.call(this, event, args, callback);\n        return this;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(17);\nvar platform = __webpack_require__(19);\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getCrypto = function () {\n        return this.context.getCryptoJS();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data).subscribeAtPubnub().emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe().emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data).emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe().emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe().emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription && this.subscription.deliveryMode && this.subscription.deliveryMode.subscriberKey && this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            _this.renew({});\n        }, timeToExpiration);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     * @param message\n     * @returns {Subscription}\n     */\n    Subscription.prototype.notify = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var CryptoJS = this.getCrypto();\n            var key = CryptoJS.enc.Base64.parse(this.subscription.deliveryMode.encryptionKey);\n            var data = CryptoJS.enc.Base64.parse(message);\n            var decrypted = CryptoJS.AES.decrypt({ ciphertext: data }, key, {\n                mode: CryptoJS.mode.ECB,\n                padding: CryptoJS.pad.Pkcs7\n            }).toString(CryptoJS.enc.Utf8);\n            message = JSON.parse(decrypted);\n        }\n        this.emit(this.events.notification, message);\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     * @returns {Subscription}\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.prototype.on = function (events, callback) {\n        _super.prototype.on.call(this, events, callback);\n        return this;\n    };\n    Subscription.prototype.off = function (events, callback) {\n        _super.prototype.on.call(this, events, callback);\n        return this;\n    };\n    Subscription.prototype.emitAndCallback = function (event, args, callback) {\n        _super.prototype.emitAndCallback.call(this, event, args, callback);\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null ? String(obj) : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) {\n        }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property.split(/[.[\\]]/).reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(21);\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar validator = __webpack_require__(22);\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId ? options.extensionId : '~') + '/blocked-number' + (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar list = __webpack_require__(15);\nvar presence = __webpack_require__(38);\nvar contact = __webpack_require__(26);\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' + (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') + (options.active ? 'active-calls' : 'call-log') + (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) && outboundRingOutCall.direction == 'Outbound' && inboundCall.direction == 'Inbound' && ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) && inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber && (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name));\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this.parsePresenceCalls(presence && presence.activeCalls || []).map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar validator = __webpack_require__(22);\nvar list = __webpack_require__(15);\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId ? options.extensionId : '~') + '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root + (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') + (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) {\n                return _this.match(item, opts.condition);\n            } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) {\n                return (_this.getPhones(item).length > 0);\n            } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) {\n                return (_this.getFaxes(item).length > 0);\n            } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar validator = __webpack_require__(22);\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar validator = __webpack_require__(22);\nvar extension = __webpack_require__(32);\nvar deviceModel = __webpack_require__(31);\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' + (options.extensionId ? '/extension/' + options.extensionId : '') + '/device' + (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'emergencyServiceAddress-street', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street) },\n            { field: 'emergencyServiceAddress-city', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city) },\n            { field: 'emergencyServiceAddress-state', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state) },\n            { field: 'emergencyServiceAddress-country', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country) },\n            { field: 'emergencyServiceAddress-zip', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip) },\n            { field: 'emergencyServiceAddress-customerName', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName) },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n        /**\n         * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n         */\n        this.devices = [\n            {\n                id: '-1',\n                name: 'Softphone'\n            },\n            {\n                id: '0',\n                name: 'Existing device'\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '23',\n                name: 'Polycom IP 321 Basic IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '30',\n                name: 'Polycom IP 550 HD Manager IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '37',\n                name: 'Polycom IP 6000 Conference Phone',\n                deviceClass: 'Conference Phone'\n            },\n            {\n                id: '40',\n                name: 'Polycom IP 335 HD IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '51',\n                name: 'Cisco SPA-303 Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\tDesk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '3'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '52',\n                name: 'Cisco SPA-122 ATA',\n                deviceClass: 'Analog Adapter'\n            },\n            {\n                id: '53',\n                name: 'Polycom VVX-500 Color Touchscreen',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '54',\n                name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '55',\n                name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n                deviceClass: 'Desk Phone'\n            }\n        ];\n    }\n    DeviceModel.prototype.getId = function (device) {\n        if (!device)\n            return null;\n        return device.id + (device.addons && device.addons[0] ? '-' + device.addons[0].id + '-' + device.addons[0].count : '');\n    };\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     */\n    DeviceModel.prototype.cleanForSaving = function (device) {\n        if (!device)\n            return null;\n        delete device.name;\n        delete device.deviceClass;\n        if (device.addons && device.addons.length > 0) {\n            device.addons.forEach(function (addon, i) {\n                delete device.addons[i].name;\n            });\n        }\n        else {\n            delete device.addons;\n        }\n        return device;\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar list = __webpack_require__(15);\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' + (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') + (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) + (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar list = __webpack_require__(15);\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n            condition: options.features.length,\n            filterFn: function (item) {\n                return options.features.some(function (feature) {\n                    return _this.hasFeature(item, feature);\n                });\n            }\n        }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n        this.languages = [\n            {\n                id: '1033',\n                name: 'English (US)'\n            },\n            {\n                id: '3084',\n                name: 'French (Canada)'\n            }\n        ];\n    }\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar list = __webpack_require__(15);\nvar state = __webpack_require__(42);\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar list = __webpack_require__(15);\nvar validator = __webpack_require__(22);\nvar subscription = __webpack_require__(20);\nvar platform = __webpack_require__(19);\nvar contact = __webpack_require__(26);\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, { addMethod: 'GET', addServer: true, addToken: true }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar list = __webpack_require__(15);\nvar extension = __webpack_require__(32);\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' + (options.extensionId ? '/extension/' + options.extensionId : '') + '/phone-number' + (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' + item.paymentType + '-' + item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar subscription = __webpack_require__(20);\nvar extension = __webpack_require__(32);\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar validator = __webpack_require__(22);\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n        /**\n         * TODO Remove when http://jira.ringcentral.com/browse/SDK-3 id done\n         */\n        this.shippingMethods = [\n            {\n                id: '1',\n                name: 'Ground Shipping (5-7 business days)'\n            },\n            {\n                id: '2',\n                name: '2-days Shipping'\n            },\n            {\n                id: '3',\n                name: 'Overnight Shipping'\n            }\n        ];\n    }\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar list = __webpack_require__(15);\nvar country = __webpack_require__(29);\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(14);\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = __webpack_require__(45);\nvar ajaxObserver = __webpack_require__(11);\nvar r = __webpack_require__(46);\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    //TODO Remove\n    Request.prototype.setHeader = function (name, value) {\n        _super.prototype.setHeader.call(this, name, value);\n        return this;\n    };\n    //TODO Remove\n    Request.prototype.setHeaders = function (headers) {\n        _super.prototype.setHeaders.call(this, headers);\n        return this;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(21);\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = __webpack_require__(45);\nvar log = __webpack_require__(16);\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '').split('\\n').forEach(function (header) {\n                    if (!header)\n                        return;\n                    /** @type {string[]} */\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message || this.data.error_description || this.data.description || 'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=rc-sdk.js.map"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 3c360870ef3d8071ad8a\n **/","/// <reference path=\"../typings/externals.d.ts\" />\n\ndeclare\nvar require:(name:string)=>any;\n\nimport headers = require('./core/http/Headers');\nimport request = require('./core/http/Request');\nimport response = require('./core/http/Response');\nimport pubnubMock = require('./core/pubnub/PubnubMock');\nimport xhrMock = require('./core/xhr/XhrMock');\nimport xhrResponse = require('./core/xhr/XhrResponse');\nimport ajaxObserver = require('./core/AjaxObserver');\nimport cache = require('./core/Cache');\nimport context = require('./core/Context');\nimport helper = require('./core/Helper');\nimport list = require('./core/List');\nimport log = require('./core/Log');\nimport observable = require('./core/Observable');\nimport pageVisibility = require('./core/PageVisibility');\nimport platform = require('./core/Platform');\nimport subscription = require('./core/Subscription');\nimport utils = require('./core/Utils');\nimport validator = require('./core/Validator');\n\nimport accountHelper = require('./helpers/Account');\nimport blockedNumberHelper = require('./helpers/BlockedNumber');\nimport callHelper = require('./helpers/Call');\nimport contactHelper = require('./helpers/Contact');\nimport contactGroupHelper = require('./helpers/ContactGroup');\nimport conferencingHelper = require('./helpers/Conferencing');\nimport countryHelper = require('./helpers/Country');\nimport deviceHelper = require('./helpers/Device');\nimport deviceModelHelper = require('./helpers/DeviceModel');\nimport extensionHelper = require('./helpers/Extension');\nimport forwardingNumberHelper = require('./helpers/ForwardingNumber');\nimport languageHelper = require('./helpers/Language');\nimport locationHelper = require('./helpers/Location');\nimport messageHelper = require('./helpers/Message');\nimport phoneNumberHelper = require('./helpers/PhoneNumber');\nimport presenceHelper = require('./helpers/Presence');\nimport ringoutHelper = require('./helpers/Ringout');\nimport serviceHelper = require('./helpers/Service');\nimport shippingMethodHelper = require('./helpers/ShippingMethod');\nimport stateHelper = require('./helpers/State');\nimport timezoneHelper = require('./helpers/Timezone');\n\nimport promise = require('es6-promise');\nimport pubnub = require('pubnub');\nimport rcsdk = require('./RCSDK');\n\nrequire('crypto-js/aes');\nrequire('crypto-js/mode-ecb');\n\nclass RCSDK {\n\n    public static version = '1.3.0';\n\n    public static CryptoJS = require('crypto-js/core');\n\n    public static XHR = () => {\n        try { return new XMLHttpRequest(); } catch (e) {}\n        try { return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\"); } catch (e1) {}\n        try { return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\"); } catch (e2) {}\n        try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e3) {}\n        try { return new (require('xhr' + '2'))(); } catch (e4) {} // Node only\n        throw new Error(\"This browser does not support XMLHttpRequest.\");\n    };\n\n    public static injections = <context.IInjections>{\n        CryptoJS: RCSDK.CryptoJS,\n        localStorage: (typeof(localStorage) !== 'undefined'\n            ? localStorage\n            : require('dom-' + 'storage')), // Node only\n        Promise: typeof(Promise) !== 'undefined' ? Promise : promise.Promise,\n        PUBNUB: pubnub,\n        XHR: RCSDK.XHR,\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n\n    private _context:context.Context;\n\n    constructor(options?:{\n        server:string;\n        appKey:string;\n        appSecret:string;\n        cachePrefix?:string;\n    }) {\n\n        options = options || <any>{};\n\n        this._context = context.$get(RCSDK.injections);\n\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n\n        //TODO Link Platform events with Subscriptions and the rest\n\n    }\n\n    // Internals\n\n    getContext() { return this._context; }\n\n    // Core\n\n    getAjaxObserver() { return ajaxObserver.$get(this.getContext()); }\n\n    getXhrResponse() { return xhrResponse.$get(this.getContext()); }\n\n    getPlatform() { return platform.$get(this.getContext()); }\n\n    getCache() { return cache.$get(this.getContext()); }\n\n    getSubscription() { return subscription.$get(this.getContext()); }\n\n    getPageVisibility() { return pageVisibility.$get(this.getContext()); }\n\n    getHelper() { return helper.$get(this.getContext()); }\n\n    getObservable() { return observable.$get(this.getContext()); }\n\n    getValidator() { return validator.$get(this.getContext()); }\n\n    getLog() { return log.$get(this.getContext()); }\n\n    getUtils() { return utils.$get(this.getContext()); }\n\n    getList() { return list.$get(this.getContext()); }\n\n    // Helpers\n\n    getCountryHelper() { return countryHelper.$get(this.getContext()); }\n\n    getDeviceModelHelper() { return deviceModelHelper.$get(this.getContext()); }\n\n    getLanguageHelper() { return languageHelper.$get(this.getContext()); }\n\n    getLocationHelper() { return locationHelper.$get(this.getContext()); }\n\n    getShippingMethodHelper() { return shippingMethodHelper.$get(this.getContext()); }\n\n    getStateHelper() { return stateHelper.$get(this.getContext()); }\n\n    getTimezoneHelper() { return timezoneHelper.$get(this.getContext()); }\n\n    getAccountHelper() { return accountHelper.$get(this.getContext()); }\n\n    getBlockedNumberHelper() { return blockedNumberHelper.$get(this.getContext()); }\n\n    getCallHelper() { return callHelper.$get(this.getContext()); }\n\n    getConferencingHelper() { return conferencingHelper.$get(this.getContext()); }\n\n    getContactHelper() { return contactHelper.$get(this.getContext()); }\n\n    getContactGroupHelper() { return contactGroupHelper.$get(this.getContext()); }\n\n    getDeviceHelper() { return deviceHelper.$get(this.getContext()); }\n\n    getExtensionHelper() { return extensionHelper.$get(this.getContext()); }\n\n    getForwardingNumberHelper() { return forwardingNumberHelper.$get(this.getContext()); }\n\n    getMessageHelper() { return messageHelper.$get(this.getContext()); }\n\n    getPhoneNumberHelper() { return phoneNumberHelper.$get(this.getContext()); }\n\n    getPresenceHelper() { return presenceHelper.$get(this.getContext()); }\n\n    getRingoutHelper() { return ringoutHelper.$get(this.getContext()); }\n\n    getServiceHelper() { return serviceHelper.$get(this.getContext()); }\n\n}\n\nexport = RCSDK;\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/RCSDK.ts\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"crypto-js/aes\",\"commonjs\":\"crypto-js/aes\",\"commonjs2\":\"crypto-js/aes\",\"root\":[\"CryptoJS\",\"AES\"]}\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"crypto-js/mode-ecb\",\"commonjs\":\"crypto-js/mode-ecb\",\"commonjs2\":\"crypto-js/mode-ecb\",\"root\":[\"CryptoJS\",\"mode\",\"ECB\"]}\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"crypto-js/core\",\"commonjs\":\"crypto-js/core\",\"commonjs2\":\"crypto-js/core\",\"root\":[\"CryptoJS\"]}\n ** module id = 5\n ** module chunks = 0\n **/","if(typeof __WEBPACK_EXTERNAL_MODULE_6__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}\n ** module id = 7\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\n\nimport context = require('../Context');\n\nexport class PubnubMock implements PUBNUB.PubnubInstance {\n\n    onMessage:(message, env, channel) => void;\n\n    ready() {}\n\n    unsubscribe(options) {}\n\n    subscribe(options:{message:(message, env, channel) => void}) {\n        this.onMessage = options.message;\n    }\n\n    receiveMessage(msg) {\n        this.onMessage(msg, 'env', 'channel');\n    }\n\n}\n\nexport class PubnubFactory implements PUBNUB.PUBNUB {\n\n    context:context.Context;\n\n    constructor(context:context.Context) {\n        this.context = context;\n    }\n\n    init(options) {\n        return new PubnubMock();\n    }\n\n}\n\nexport function $get(context:context.Context):PubnubFactory {\n    return new PubnubFactory(context);\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/pubnub/PubnubMock.ts\n **/","import context = require('../Context');\nimport utils = require('../Utils');\nimport log = require('../Log');\nimport xhrResponse = require('./XhrResponse'); //FIXME Circular\n\nexport class XhrMock {\n\n    // Service\n    private context:context.Context;\n    private log:log.Log;\n    private utils:utils.Utils;\n    private responses:xhrResponse.XhrResponse;\n\n    // Request\n    public async:boolean;\n    public method:string;\n    public url:string;\n    public requestHeaders:any;\n    public withCredentials:boolean;\n    public onload:()=>any;\n    public onerror:(e:Error)=>any;\n\n    // Response\n    public data:any;\n    public readyState:number;\n    public responseHeaders:any;\n    public responseText:string;\n    public status:number;\n\n    constructor(context:context.Context) {\n\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n\n    }\n\n    getResponseHeader(header:string) {\n        return this.responseHeaders[header.toLowerCase()];\n    }\n\n    setRequestHeader(header:string, value:string) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    }\n\n    getAllResponseHeaders() {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, (value:string, name:string) => {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    }\n\n    open(method:string, url:string, async?:boolean) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    }\n\n    send(data:any) {\n\n        var contentType = this.getRequestHeader('Content-Type');\n\n        this.data = data;\n\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json') this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded') this.data = this.utils.parseQueryString(this.data);\n        }\n\n        this.log.debug('API REQUEST', this.method, this.url);\n\n        var currentResponse = this.responses.find(this);\n\n        if (!currentResponse) {\n            setTimeout(() => {\n                if (this.onerror) this.onerror(new Error('Unknown request: ' + this.url));\n            }, 1);\n            return;\n        }\n\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n\n        var res = currentResponse.response(this),\n            Promise = this.context.getPromise(),\n            onLoad = (res) => {\n\n                if (this.getResponseHeader('Content-Type') == 'application/json') res = JSON.stringify(res);\n\n                this.responseText = res;\n\n                setTimeout(() => {\n                    if (this.onload) this.onload();\n                }, 1);\n\n            };\n\n        if (res instanceof Promise) {\n\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n\n        } else onLoad(res);\n\n    }\n\n    abort() {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    }\n\n    getRequestHeader(header:string) {\n        return this.requestHeaders[header.toLowerCase()];\n    }\n\n    setResponseHeader(header:string, value:string) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    }\n\n    setStatus(status) {\n        this.status = status;\n        return this;\n    }\n\n}\n\nexport function $get(context:context.Context):XhrMock {\n    return new XhrMock(context);\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/xhr/XhrMock.ts\n **/","import context = require('../Context');\nimport r = require('../http/Response');\nimport xhrMock = require('./XhrMock'); //FIXME Circular\n\nexport class XhrResponse {\n\n    private responses:IXhrResponse[];\n\n    constructor(context:context.Context) {\n        this.responses = [];\n    }\n\n    add(response:any) {\n        this.responses.push(response);\n    }\n\n    clear() {\n        this.responses = [];\n    }\n\n    find(ajax:xhrMock.XhrMock):IXhrResponse {\n\n        var currentResponse;\n\n        this.responses.forEach((response:IXhrResponse) => {\n\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n\n        });\n\n        return currentResponse;\n\n    }\n}\n\nexport interface IXhrResponse {\n    path?:string;\n    response?:(xhr?:xhrMock.XhrMock)=>Promise<r.Response>;\n    test?:(xhr:xhrMock.XhrMock)=>boolean;\n}\n\nexport function $get(context:context.Context):XhrResponse {\n    return context.createSingleton('XhrResponse', ()=> {\n        return new XhrResponse(context);\n    });\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/xhr/XhrResponse.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport observable = require('./Observable');\nimport context = require('./Context');\n\nexport class AjaxObserver extends observable.Observable {\n\n    public events = {\n        beforeRequest: 'beforeRequest', // parameters: ajax\n        requestSuccess: 'requestSuccess', // means that response was successfully fetched from server\n        requestError: 'requestError' // means that request failed completely\n    };\n\n}\n\nexport function $get(context:context.Context):AjaxObserver {\n\n    return context.createSingleton('AjaxObserver', ()=> {\n        return new AjaxObserver(context);\n    });\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/AjaxObserver.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('./Context');\n\nexport class Cache {\n\n    private context:context.Context;\n    private storage:Storage;\n    private prefix:string;\n\n    constructor(context:context.Context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n\n    setPrefix(prefix?:string) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    }\n\n    prefixKey(key) {\n        return this.prefix + key;\n    }\n\n    setItem(key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    }\n\n    removeItem(key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    }\n\n    getItem(key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item) return null;\n        return JSON.parse(item);\n    }\n\n    clean() {\n\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key)) continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n\n        return this;\n\n    }\n    \n}\n\nexport function $get(context:context.Context):Cache {\n    return context.createSingleton('Cache', ()=> {\n        return new Cache(context);\n    });\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/Cache.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nexport class Context {\n\n    private singletons:ISingletons;\n    private injections:IInjections;\n    private stubPubnub:boolean;\n    private stubAjax:boolean;\n\n    constructor(injections:IInjections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n\n    createSingleton(name:string, factory:()=>any) {\n\n        if (!this.singletons[name]) this.singletons[name] = factory();\n        return this.singletons[name];\n\n    }\n\n    usePubnubStub(flag:boolean) {\n        this.stubPubnub = !!flag;\n        return this;\n    }\n\n    useAjaxStub(flag:boolean) {\n        this.stubAjax = !!flag;\n        return this;\n    }\n\n    getCryptoJS():CryptoJS.CryptoJSStatic {\n        return this.injections.CryptoJS;\n    }\n\n    getPubnub():PUBNUB.PUBNUB {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.injections.PUBNUB;\n    }\n\n    getLocalStorage():Storage {\n\n        return this.createSingleton('localStorage', () => {\n\n            if (typeof this.injections.localStorage !== 'function') {\n                return this.injections.localStorage; // this is window.localStorage\n            }\n\n            return new (<any> this.injections.localStorage)(); // this is NPM dom-storage constructor\n\n        });\n\n    }\n\n    getPromise():typeof Promise {\n        return this.injections.Promise;\n    }\n\n    getXHR():XMLHttpRequest {\n        return <XMLHttpRequest>(this.stubAjax ? this.injections.xhrMock.$get(this) : (<any>this.injections.XHR)());\n    }\n\n}\n\nexport function $get(injections:IInjections) {\n    return new Context(injections);\n}\n\nexport interface ISingletons {\n    [name: string]: any;\n}\n\nexport interface IInjections {\n    pubnubMock:any;\n    xhrMock:any;\n    PUBNUB:any;\n    CryptoJS:any;\n    localStorage:any;\n    XHR:any;\n    Promise:any;\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/Context.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport utils = require('./Utils');\nimport context = require('./Context');\nimport request = require('./http/Request');\nimport response = require('./http/Response');\n\nexport class Helper {\n\n    protected defaultProperty:string = 'id';\n\n    protected context:context.Context;\n    protected utils:utils.Utils;\n\n    constructor(context:context.Context) {\n\n        this.context = context;\n        this.utils = utils.$get(context);\n\n    }\n\n    getContext() {\n        return this.context;\n    }\n\n    createUrl(options?:any, id?:string) {\n        return '';\n    }\n\n    getId(object:IHelperObject) {\n        return object && object[this.defaultProperty];\n    }\n\n    isNew(object:IHelperObject) {\n        return !this.getId(object) || !this.getUri(object);\n    }\n\n    resetAsNew(object:IHelperObject) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    }\n\n    getUri(object:IHelperObject) {\n        return object && object.uri;\n    }\n\n    parseMultipartResponse(ajax:response.Response) {\n\n        if (ajax.isMultipart()) {\n\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter((result) => {\n                return (!result.error);\n            }).map((result) => {\n                return result.data;\n            });\n\n        } else { // Single ID\n\n            return [ajax.data];\n\n        }\n\n    }\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    loadRequest(object?, options?:request.IAjaxOptions):request.IAjaxOptions {\n\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n\n    }\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    saveRequest(object?, options?:request.IAjaxOptions):request.IAjaxOptions {\n\n        if (!object && !(options && (options.post || options.body))) throw new Error('No Object');\n\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n\n    }\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    deleteRequest(object?, options?:request.IAjaxOptions):request.IAjaxOptions {\n\n        options = options || {};\n\n        if (!this.getUri(object) && !(options && options.url)) throw new Error('Object has to be not new or URL must be provided');\n\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n\n    }\n\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    syncRequest(options?:request.IAjaxOptions):request.IAjaxOptions {\n\n        options = options || {};\n\n        options.url = options.url || this.createUrl({sync: true});\n        options.query = options.query || options.get || {};\n\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        } else {\n            options.query.syncType = 'FSync';\n        }\n\n        return options;\n\n    }\n\n    nextPageExists(data):boolean {\n\n        return (data && data.navigation && ('nextPage' in data.navigation));\n\n    }\n\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    index(array:IHelperObject[], getIdFn?:(obj:IHelperObject)=>string, gather?:boolean):any {\n\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n\n        return array.reduce((index, item) => {\n\n            var id = getIdFn(item);\n\n            if (!id || (index[id] && !gather)) return index;\n\n            if (gather) {\n                if (!index[id]) index[id] = [];\n                index[id].push(item);\n            } else {\n                index[id] = item;\n            }\n\n            return index;\n\n        }, {});\n\n    }\n\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    merge(target:IHelperObject[],\n          supplement:IHelperObject[],\n          getIdFn?:(obj:IHelperObject)=>string, mergeItems?:boolean):any {\n\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n\n        var supplementIndex = this.index(supplement, getIdFn),\n            updatedIDs = [],\n            result = target.map((item) => {\n\n                var id = getIdFn(item),\n                    newItem = supplementIndex[id];\n\n                if (newItem) updatedIDs.push(id);\n\n                return newItem ? (mergeItems ? this.utils.extend(item, newItem) : newItem) : item;\n\n            });\n\n        supplement.forEach((item) => {\n\n            if (updatedIDs.indexOf(getIdFn(item)) == -1) result.push(item);\n\n        });\n\n        return result;\n\n    }\n\n\n}\n\nexport function $get(context:context.Context):Helper {\n    return new Helper(context);\n}\n\nexport interface IHelperObject {\n    id?:string;\n    uri?:string;\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/Helper.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport utils = require('./Utils');\nimport context = require('./Context');\n\nexport class List {\n\n    protected context:context.Context;\n    protected utils:utils.Utils;\n\n    constructor(context:context.Context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    propertyExtractor(property) {\n        return (item, options) => {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    }\n\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    stringComparator(a:string, b:string, options?:IListComparatorOptions):number {\n\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n\n    }\n\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    numberComparator(a:any, b:any, options?:IListComparatorOptions):number {\n\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n\n    }\n\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    comparator(options?:IListComparatorOptions):(item1:any, item2:any) => number {\n\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n\n        return (item1:any, item2:any):number => {\n\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n\n        };\n\n    }\n\n    equalsFilter(obj:any, options?:IListFilterOptions):boolean {\n        return (options.condition === obj);\n    }\n\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    containsFilter(obj:any, options?:IListFilterOptions):boolean {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    }\n\n    regexpFilter(obj, options?:IListFilterOptions):boolean {\n        if (!(options.condition instanceof RegExp)) throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    }\n\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    filter(filterConfigs:IListFilterOptions[]):(item:any) => boolean {\n\n        var self = this;\n\n        filterConfigs = (filterConfigs || []).map((opt) => {\n\n            return this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(this),\n                filterFn: self.equalsFilter.bind(this)\n            }, opt);\n\n        });\n\n        return (item):boolean => {\n\n            return <boolean>filterConfigs.reduce((pass, opt) => {\n\n                if (!pass || !opt.condition) return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n\n            }, true);\n\n        };\n\n    }\n\n}\n\nexport function $get(context:context.Context):List {\n    return context.createSingleton('List', ()=> {\n        return new List(context);\n    });\n}\n\nexport interface IListComparatorOptions {\n    sortBy?:string;\n    extractFn?:(object:any, options?:IListComparatorOptions|any)=>any;\n    compareFn?:(a:any, b:any, options?:IListComparatorOptions|any)=>number;\n}\n\nexport interface IListFilterOptions {\n    filterBy?:string;\n    condition?:any|string|RegExp;\n    extractFn?:(object:any, options?:IListFilterOptions|any)=>any;\n    filterFn?:(object:any, options?:IListFilterOptions|any)=>any;\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/List.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport utils = require('./Utils');\nimport context = require('./Context');\n\nexport class Log {\n\n    private context:context.Context;\n    private utils:utils.Utils;\n\n    public console:Console;\n    public logDebug:boolean;\n    public logInfo:boolean;\n    public logWarnings:boolean;\n    public logErrors:boolean;\n    public addTimestamps:boolean;\n\n    constructor(context:context.Context, console?:Console) {\n\n        if (!console) {\n            console = <Console>{ // safety\n                log: () => {},\n                warn: () => {},\n                info: () => {},\n                error: () => {}\n            };\n        }\n\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n\n        this.addTimestamps = false;\n\n    }\n\n    disableAll() {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    }\n\n    enableAll() {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    }\n\n    parseArguments(args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps) args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    }\n\n    debug(...args) {\n        if (this.logDebug) this.console.log.apply(this.console, this.parseArguments(arguments));\n    }\n\n    info(...args) {\n        if (this.logInfo) this.console.info.apply(this.console, this.parseArguments(arguments));\n    }\n\n    warn(...args) {\n        if (this.logWarnings) this.console.warn.apply(this.console, this.parseArguments(arguments));\n    }\n\n    error(...args) {\n        if (this.logErrors) this.console.error.apply(this.console, this.parseArguments(arguments));\n    }\n\n}\n\nexport function $get(context:context.Context):Log {\n\n    return context.createSingleton('Log', ()=> {\n        return new Log(context, console);\n    });\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/Log.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport utils = require('./Utils');\nimport log = require('./Log');\nimport context = require('./Context');\n\nexport class Observable {\n\n    protected context:context.Context;\n    protected utils:utils.Utils;\n    protected log:log.Log;\n\n    private listeners:any;\n    private oneTimeEvents:any;\n    private oneTimeArguments:any;\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.Observable\n     */\n    constructor(context:context.Context) {\n        if (!(this instanceof Observable)) throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', {value: {}, enumerable: false, writable: true});\n        Object.defineProperty(this, 'oneTimeEvents', {value: {}, enumerable: false, writable: true});\n        Object.defineProperty(this, 'oneTimeArguments', {value: {}, enumerable: false, writable: true});\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n\n    hasListeners(event) {\n        return (event in this.listeners);\n    }\n\n    registerOneTimeEvent(event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    }\n\n    on(events, callback) {\n\n        if (typeof events == 'string') events = [events];\n        if (!events) throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function') throw new Error('Callback must be a function');\n\n        var self = this;\n\n        events.forEach((event) => {\n\n            if (!self.hasListeners(event)) self.listeners[event] = [];\n\n            self.listeners[event].push(callback);\n\n            if (self.isOneTimeEventFired(event)) { // Fire listener immediately if is inited already\n                this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n\n        });\n\n        return this;\n\n    }\n\n    emit(event, ...args) {\n\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n\n        var result = null;\n\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n\n        if (!this.hasListeners(event)) return null;\n\n        this.listeners[event].some((callback) => {\n\n            result = callback.apply(this, args);\n            return (result === false);\n\n        });\n\n        return result;\n\n    }\n\n    off(event, callback?) {\n        var self = this;\n        if (!callback) {\n            delete this.listeners[event];\n        } else {\n            if (!this.hasListeners(event)) return this;\n            this.listeners[event].forEach((cb, i) => {\n\n                if (cb === callback) delete this.listeners[event][i];\n\n            });\n        }\n        return this;\n    }\n\n    isOneTimeEvent(event) {\n        return (event in this.oneTimeEvents);\n    }\n\n    isOneTimeEventFired(event) {\n        if (!this.isOneTimeEvent(event)) return false;\n        return (this.oneTimeEvents[event]);\n    }\n\n    setOneTimeEventFired(event) {\n        this.oneTimeEvents[event] = true;\n    }\n\n    setOneTimeEventArgumens(event, args) {\n        this.oneTimeArguments[event] = args;\n    }\n\n    getOneTimeEventArgumens(event) {\n        return this.oneTimeArguments[event];\n    }\n\n    offAll() {\n        this.listeners = {};\n        this.oneTimeEvents = {};\n        this.oneTimeArguments = {};\n        return this;\n    }\n\n    destroy() {\n        this.offAll();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    }\n\n    emitAndCallback(event, args?, callback?) {\n        args = this.utils.argumentsToArray(args);\n        if (event) this.emit.apply(this, [event].concat(args));\n        if (callback) callback.apply(this, args);\n        return this;\n    }\n\n}\n\nexport function $get(context:context.Context):Observable {\n    return new Observable(context);\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/Observable.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('./Context');\nimport observable = require('./Observable');\n\nexport class PageVisibility extends observable.Observable {\n\n    public events = {\n        change: 'change'\n    };\n\n    public visible:boolean;\n\n    constructor(context:context.Context) {\n\n        super(context);\n\n        var hidden = \"hidden\",\n            onchange = (evt) => {\n\n                evt = evt || window.event;\n\n                var v = 'visible',\n                    h = 'hidden',\n                    evtMap = {\n                        focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n                    };\n\n                this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n\n                this.emit(this.events.change, this.visible);\n\n            };\n\n        this.visible = true;\n\n        if (typeof document == 'undefined' || typeof window == 'undefined') return;\n\n        // Standards:\n\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        // IE 9 and lower:\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        // All others:\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n\n    }\n\n    isVisible() {\n        return this.visible;\n    }\n\n}\n\nexport function $get(context:context.Context):PageVisibility {\n    return new PageVisibility(context);\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/PageVisibility.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\ndeclare class Buffer {\n    constructor(str:string);\n    toString(encoding:string):string;\n}\n\nimport context = require('./Context');\nimport utils = require('./Utils');\nimport observable = require('./Observable');\nimport cache = require('./Cache');\nimport log = require('./Log');\nimport request = require('./http/Request');\nimport r = require('./http/Response');\n\nexport class Platform extends observable.Observable {\n\n    public server:string;\n    public apiKey:string;\n    public account:string;\n    public urlPrefix:string;\n    public apiVersion:string;\n    public accountPrefix:string;\n    public accessTokenTtl:number;\n    public refreshTokenTtl:number;\n    public refreshTokenTtlRemember:number;\n    public refreshHandicapMs:number;\n    public refreshDelayMs:number;\n    public clearCacheOnRefreshError:boolean;\n    public refreshPromise:Promise<any>;\n\n    public cacheId:string;\n    public pollInterval:number;\n    public releaseTimeout:number;\n\n    public events = {\n        accessViolation: 'accessViolation',\n        logoutSuccess: 'logoutSuccess',\n        logoutError: 'logoutError',\n        authorizeSuccess: 'authorizeSuccess',\n        authorizeError: 'authorizeError',\n        refreshSuccess: 'refreshSuccess',\n        refreshError: 'refreshError'\n    };\n\n    static forcedTokenType = 'forced';\n\n    constructor(context:context.Context) {\n\n        super(context);\n\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n\n    }\n\n    getStorage():cache.Cache {\n\n        return cache.$get(this.context);\n\n    }\n\n    getRequest():request.Request {\n\n        return request.$get(this.context);\n\n    }\n\n    clearStorage() {\n\n        this.getStorage().clean();\n\n        return this;\n\n    }\n\n    setCredentials(appKey, appSecret) {\n\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n\n        if (apiKey == ':') return this;\n\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n\n        return this;\n\n    }\n\n    setServer(server) {\n\n        this.server = server || '';\n\n        return this;\n\n    }\n\n    remember(remember?:boolean):Platform {\n\n        var key = this.cacheId + '-remember';\n\n        if (remember !== undefined) {\n\n            this.getStorage().setItem(key, remember);\n            return this;\n\n        }\n\n        return this.getStorage().getItem(key) || false;\n\n    }\n\n    authorize(options?:{username:string; password: string; extension?:string; remember?:boolean}) {\n\n        options = options || <any>{};\n\n        options.remember = options.remember || false;\n\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: {\n                \"grant_type\": \"password\",\n                \"username\": options.username,\n                \"extension\": options.extension || '',\n                \"password\": options.password,\n                \"access_token_ttl\": this.accessTokenTtl,\n                \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n            }\n        }).then((response) => {\n\n            this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(this.events.authorizeSuccess, []);\n\n            return response;\n\n        }).catch((e:request.IAjaxError):any => {\n\n            this.clearStorage()\n                .emitAndCallback(this.events.authorizeError, [e]);\n\n            throw e;\n\n        });\n\n    }\n\n    isPaused() {\n        var storage = this.getStorage(),\n            cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    }\n\n    pause() {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    }\n\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    resume() {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    }\n\n    refresh() {\n\n        var refresh = new (this.context.getPromise())((resolve, reject) => {\n\n            if (this.isPaused()) {\n                return resolve(this.refreshPolling(null));\n            } else {\n                this.pause();\n            }\n\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(() => {\n\n                var authData = this.getAuthData();\n\n                this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n\n                if (!authData || !authData.refresh_token) return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime) return reject(new Error('Refresh token has expired'));\n                if (!this.isPaused()) return reject(new Error('Queue was resumed before refresh call'));\n\n                resolve(this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": this.accessTokenTtl,\n                        \"refresh_token_ttl\": this.remember() ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                    }\n                }));\n\n            }, this.refreshDelayMs);\n\n        });\n\n        return refresh.then((response:r.Response) => {\n\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data) return response;\n\n            this.log.info('Platform.refresh(): Token was refreshed');\n\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = <request.IAjaxError>new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n\n            this.setCache(response.data)\n                .resume();\n\n            return response;\n\n        }).then((result) => {\n\n            this.emit(this.events.refreshSuccess, result);\n            return result;\n\n        }).catch((e:request.IAjaxError):any => {\n\n            if (this.clearCacheOnRefreshError) this.clearStorage();\n\n            this.emitAndCallback(this.events.accessViolation, [e])\n                .emitAndCallback(this.events.refreshError, [e]);\n\n            throw e;\n\n        });\n\n    }\n\n    /**\n     * @returns {Promise}\n     */\n    logout():Promise<r.Response> {\n\n        this.pause();\n\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then((response)  => {\n\n            this.resume()\n                .clearStorage()\n                .emit(this.events.logoutSuccess, response);\n\n            return response;\n\n        }).catch((e:request.IAjaxError):any => {\n\n            this.resume()\n                .emitAndCallback(this.events.accessViolation, [e])\n                .emitAndCallback(this.events.logoutError, [e]);\n\n            throw e;\n\n        });\n\n    }\n\n    refreshPolling(result) {\n\n        if (this.refreshPromise) return this.refreshPromise;\n\n        this.refreshPromise = new (this.context.getPromise())((resolve, reject) => {\n\n            this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n\n            this.utils.poll((next) => {\n\n                if (this.isPaused()) return next();\n\n                this.refreshPromise = null;\n                this.resume();\n\n                if (this.isTokenValid()) {\n                    resolve(result);\n                } else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n\n            }, this.pollInterval);\n\n        });\n\n        return this.refreshPromise;\n\n    }\n\n    getToken() {\n\n        return this.getAuthData().access_token;\n\n    }\n\n    getTokenType() {\n\n        return this.getAuthData().token_type;\n\n    }\n\n    getAuthData():IPlatformAuthInfo {\n\n        return this.getStorage().getItem(this.cacheId) || {\n                token_type: '',\n                access_token: '',\n                expires_in: 0,\n                refresh_token: '',\n                refresh_token_expires_in: 0\n            };\n\n    }\n\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    isTokenValid():boolean {\n\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n\n    }\n\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    isAuthorized():Promise<any> {\n\n        if (this.isTokenValid()) return this.context.getPromise().resolve(true);\n        return this.refresh();\n\n    }\n\n    cancelAccessToken() {\n\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n\n    }\n\n    setCache(authData:IPlatformAuthInfo) {\n\n        var oldAuthData = this.getAuthData();\n\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n\n        this.getStorage().setItem(this.cacheId, authData);\n\n        return this;\n\n    }\n\n    forceAuthentication() {\n\n        this.setCache(<IPlatformAuthInfo>{\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n\n        return this;\n\n    }\n\n    apiCall(options?:request.IAjaxOptions):Promise<r.Response> {\n\n        options = options || {};\n        options.url = this.apiUrl(options.url, {addServer: true});\n\n        return this.isAuthorized().then(() => { // Refresh will occur inside\n\n            var token = this.getToken();\n\n            return this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n\n        }).catch((e:request.IAjaxError) => {\n\n            if (!e.response || !e.response.isUnauthorized()) throw e;\n\n            this.cancelAccessToken();\n\n            return this\n                .refresh()\n                .then(() => {\n\n                          // Re-send with same options\n                          return this.apiCall(options);\n\n                      });\n\n        });\n\n    }\n\n    get(url:string, options?:request.IAjaxOptions) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    }\n\n    post(url:string, options:request.IAjaxOptions) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    }\n\n    put(url:string, options:request.IAjaxOptions) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    }\n\n    'delete'(url:string, options?:request.IAjaxOptions) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    }\n\n    authCall(options?:request.IAjaxOptions):Promise<r.Response> {\n\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, {addServer: true});\n\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n\n    }\n\n    apiUrl(url, options?:{addMethod?: string; addToken?: boolean; addServer?: boolean}):string {\n\n        url = url || '';\n        options = options || {};\n\n        var builtUrl = '';\n\n        if (options.addServer && url.indexOf('http://') == -1 && url.indexOf('https://') == -1) builtUrl += this.server;\n\n        if (url.indexOf(this.urlPrefix) == -1) builtUrl += this.urlPrefix + '/' + this.apiVersion;\n\n        if (url.indexOf(this.accountPrefix) > -1) builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n\n        builtUrl += url;\n\n        if (options.addMethod || options.addToken) builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n\n        if (options.addMethod) builtUrl += '_method=' + options.addMethod;\n        if (options.addToken) builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n\n        return builtUrl;\n\n    }\n\n    destroy() {\n        super.destroy();\n        return this;\n    }\n\n    on(events, callback) {\n        super.on(events, callback);\n        return this;\n    }\n\n    off(events, callback?) {\n        super.on(events, callback);\n        return this;\n    }\n    emitAndCallback(event, args?, callback?) {\n        super.emitAndCallback(event, args, callback);\n        return this;\n    }\n\n}\n\nexport interface IPlatformAuthInfo {\n    token_type?:string;\n    access_token?:string;\n    expires_in?:number; // actually it's string\n    expireTime?:number;\n    refresh_token?:string;\n    refresh_token_expires_in?:number; // actually it's string\n    refreshExpireTime?:number;\n    scope?:string;\n}\n\nexport function $get(context:context.Context):Platform {\n    return context.createSingleton('Platform', ()=> {\n        return new Platform(context);\n    });\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/Platform.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport observable = require('./Observable');\nimport utils = require('./Utils');\nimport log = require('./Log');\nimport context = require('./Context');\nimport platform = require('./Platform');\nimport r = require('./http/Response');\n\nexport class Subscription extends observable.Observable {\n\n    static renewHandicapMs = 60 * 1000;\n\n    public subscription;\n    public timeout;\n    public eventFilters:string[];\n    public pubnub:PUBNUB.PubnubInstance;\n\n    public events = {\n        notification: 'notification',\n        removeSuccess: 'removeSuccess',\n        removeError: 'removeError',\n        renewSuccess: 'renewSuccess',\n        renewError: 'renewError',\n        subscribeSuccess: 'subscribeSuccess',\n        subscribeError: 'subscribeError'\n    };\n\n    constructor(context:context.Context) {\n\n        super(context);\n\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '', // 2014-03-12T19:54:35.613Z\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '', // 2014-03-12T19:54:35.613Z\n            status: '', // Active\n            uri: ''\n        };\n\n    }\n\n    getPubnub() {\n\n        return this.context.getPubnub();\n\n    }\n\n    getCrypto() {\n\n        return this.context.getCryptoJS();\n\n    }\n\n    getPlatform() {\n\n        return platform.$get(this.context);\n\n    }\n\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    register(options?:{events?:string[]}):Promise<r.Response> {\n\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        } else {\n            return this.subscribe(options);\n        }\n\n    }\n\n    addEvents(events:string[]) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    }\n\n    setEvents(events:string[]) {\n        this.eventFilters = events;\n        return this;\n    }\n\n    getFullEventFilters() {\n\n        return this.eventFilters.map((event) => {\n            return this.getPlatform().apiUrl(event);\n        });\n\n    }\n\n    subscribe(options?:{events?:string[]}):Promise<r.Response> {\n\n        options = options || {};\n        if (options.events) this.eventFilters = options.events;\n\n        this.clearTimeout();\n\n        return <any>new (this.context.getPromise())((resolve, reject) => {\n\n            if (!this.eventFilters || !this.eventFilters.length) throw new Error('Events are undefined');\n\n            resolve(this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n\n        }).then((ajax:r.Response) => {\n\n                    this.updateSubscription(ajax.data)\n                        .subscribeAtPubnub()\n                        .emit(this.events.subscribeSuccess, ajax.data);\n\n                    return ajax;\n\n                }).catch((e) => {\n\n                             this.unsubscribe()\n                                 .emit(this.events.subscribeError, e);\n\n                             throw e;\n\n                         });\n\n    }\n\n    renew(options?:{events?:string[]}):Promise<r.Response> {\n\n        options = options || {};\n        if (options.events) this.eventFilters = options.events;\n\n        this.clearTimeout();\n\n        return <any>new (this.context.getPromise())((resolve, reject) => {\n\n            if (!this.subscription || !this.subscription.id) throw new Error('Subscription ID is required');\n            if (!this.eventFilters || !this.eventFilters.length) throw new Error('Events are undefined');\n\n            resolve();\n\n        }).then(():Promise<r.Response> => {\n\n                    return this.getPlatform().apiCall({\n                        method: 'PUT',\n                        url: '/restapi/v1.0/subscription/' + this.subscription.id,\n                        post: {\n                            eventFilters: this.getFullEventFilters()\n                        }\n                    });\n\n                })\n            .then((ajax:any) => {\n\n                      this.updateSubscription(ajax.data)\n                          .emit(this.events.renewSuccess, ajax.data);\n\n                      return ajax;\n\n                  })\n            .catch((e):any => {\n\n                       this.unsubscribe()\n                           .emit(this.events.renewError, e);\n\n                       throw e;\n\n                   });\n\n    }\n\n    remove(options?:{async?:boolean}):Promise<r.Response> {\n\n        options = this.utils.extend({\n            async: true\n        }, options);\n\n        return <any>new (this.context.getPromise())((resolve, reject)  => {\n\n            if (!this.subscription || !this.subscription.id) throw new Error('Subscription ID is required');\n\n            resolve(this.getPlatform().apiCall({\n                async: !!options.async, // Warning! This is necessary because this method is used in beforeunload\n                                        // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + this.subscription.id\n            }));\n\n        }).then((ajax:r.Response) => {\n\n                    this.unsubscribe()\n                        .emit(this.events.removeSuccess, ajax);\n\n                    return ajax;\n\n                }).catch((e) => {\n\n                             this.emit(this.events.removeError, e);\n\n                             throw e;\n\n                         });\n\n    }\n\n    destroy() {\n\n        this.unsubscribe();\n\n        this.log.info('RC.core.Subscription: Destroyed');\n\n        return super.destroy();\n\n    }\n\n    isSubscribed() {\n\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n\n    }\n\n    protected setTimeout() {\n\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n\n        this.timeout = setTimeout(() => {\n\n            this.renew({});\n\n        }, timeToExpiration);\n\n    }\n\n    protected clearTimeout() {\n\n        clearTimeout(this.timeout);\n\n    }\n\n    protected updateSubscription(subscription) {\n\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n\n    }\n\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    protected unsubscribe() {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed()) this.pubnub.unsubscribe({channel: this.subscription.deliveryMode.address});\n        this.subscription = null;\n        return this;\n    }\n\n    /**\n     * Do not use this method! Internal use only\n     * @param message\n     * @returns {Subscription}\n     */\n    notify(message) {\n\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n\n            var CryptoJS = this.getCrypto();\n\n            var key = CryptoJS.enc.Base64.parse(this.subscription.deliveryMode.encryptionKey);\n            var data = CryptoJS.enc.Base64.parse(message);\n            var decrypted = CryptoJS.AES.decrypt({ciphertext: data}, key, {\n                mode: CryptoJS.mode.ECB,\n                padding: CryptoJS.pad.Pkcs7\n            }).toString(CryptoJS.enc.Utf8);\n            message = JSON.parse(decrypted);\n\n        }\n\n        this.emit(this.events.notification, message);\n\n        return this;\n\n    }\n\n    /**\n     * Do not use this method! Internal use only\n     * @returns {Subscription}\n     */\n    subscribeAtPubnub() {\n\n        if (!this.isSubscribed()) return this;\n\n        var PUBNUB = this.getPubnub();\n\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n\n        this.pubnub.ready();\n\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: (message, env, channel) => {\n\n                this.log.info('RC.core.Subscription: Incoming message', message);\n                this.notify(message);\n\n            },\n            connect: () => {\n                this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n\n        return this;\n\n    }\n\n    on(events, callback) {\n        super.on(events, callback);\n        return this;\n    }\n\n    off(events, callback?) {\n        super.on(events, callback);\n        return this;\n    }\n    emitAndCallback(event, args?, callback?) {\n        super.emitAndCallback(event, args, callback);\n        return this;\n    }\n\n}\n\nexport function $get(context:context.Context):Subscription {\n    return new Subscription(context);\n}\n\nexport interface ISubscription {\n    eventFilters:string[];\n    expirationTime:string; // 2014-03-12T19:54:35.613Z\n    expiresIn:number;\n    deliveryMode: {\n        transportType:string;\n        encryption:boolean;\n        address:string;\n        subscriberKey:string;\n        secretKey:string;\n    };\n    id:string;\n    creationTime:string; // 2014-03-12T19:54:35.613Z\n    status:string; // Active\n    uri: string;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/Subscription.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('./Context');\n\nvar hasOwn = Object.prototype.hasOwnProperty,\n    toString = Object.prototype.toString,\n    rdigit = /\\d/,\n    class2type = {};\n\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach((name) => {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\n\nexport class Utils {\n\n    constructor() {}\n\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    extend(targetObject:any, sourceObject:any, ...args) {\n\n        var options, name, src, copy, copyIsArray, clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments.length,\n            deep = false;\n\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n\n        for (; i < length; i++) {\n\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n\n                // Extend the base object\n                for (name in options) {\n\n                    src = target[name];\n                    copy = options[name];\n\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        } else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n\n                        // Don't bring in undefined values\n                    } else if (copy !== undefined) {\n\n                        target[name] = copy;\n\n                    }\n                }\n            }\n        }\n\n        // Return the modified object\n        return target;\n\n    }\n\n    forEach(object, cb) {\n\n        for (var i in object) {\n\n            if (!object.hasOwnProperty(i)) continue;\n\n            var res = cb(object[i], i);\n\n            if (res === false) break;\n\n        }\n\n    }\n\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    queryStringify(parameters) {\n\n        var array = [];\n\n        this.forEach(parameters, (v, i) => {\n\n            if (this.isArray(v)) {\n                v.forEach((vv) => {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            } else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n\n        });\n\n        return array.join('&');\n\n    }\n\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    parseQueryString(queryString) {\n\n        var argsParsed = {},\n            self = this;\n\n        queryString.split('&').forEach((arg) => {\n\n            arg = decodeURIComponent(arg);\n\n            if (arg.indexOf('=') == -1) {\n\n                argsParsed[arg.trim()] = true;\n\n            } else {\n\n                var pair = arg.split('='),\n                    key = pair[0].trim(),\n                    value = pair[1].trim();\n\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key])) argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                } else {\n                    argsParsed[key] = value;\n                }\n\n            }\n\n        });\n\n        return argsParsed;\n\n    }\n\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    isEmail(v:string, multiple:boolean):boolean {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        } else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n\n    }\n\n    isPhoneNumber(v:string) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    }\n\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    argumentsToArray(args:any) {\n        return Array.prototype.slice.call(args || [], 0);\n    }\n\n    isDate(obj:any) {\n        return this.type(obj) === \"date\";\n    }\n\n    isFunction(obj:any) {\n        return this.type(obj) === \"function\";\n    }\n\n    isArray(obj:any) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    }\n\n    // A crude way of determining if an object is a window\n    isWindow(obj:any) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    }\n\n    isNaN(obj:any) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    }\n\n    type(obj:any) {\n        return obj === null ?\n               String(obj) :\n               class2type[toString.call(obj)] || \"object\";\n    }\n\n    isPlainObject(obj:any) {\n\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n\n        var key;\n        for (key in obj) {}\n\n        return key === undefined || hasOwn.call(obj, key);\n\n    }\n\n    getProperty(obj, property) {\n\n        return property\n            .split(/[.[\\]]/)\n            .reduce((res, part) => {\n                        if (!res) return undefined;\n                        return part ? res[part] : res;\n                    }, obj);\n\n    }\n\n    poll(fn, interval?:number, timeout?:any):any { //NodeJS.Timer|number\n\n        this.stopPolling(timeout);\n\n        interval = interval || 1000;\n\n        var next = (delay?:number):any => {\n\n            delay = delay || interval;\n\n            interval = delay;\n\n            return setTimeout(() => {\n\n                fn(next, delay);\n\n            }, delay);\n\n        };\n\n        return next();\n\n    }\n\n    stopPolling(timeout) {\n        if (timeout) clearTimeout(timeout);\n    }\n\n    parseString(s) {\n        return s ? s.toString() : '';\n    }\n\n    parseNumber(n) {\n        if (!n) return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    }\n\n}\n\nexport function $get(context:context.Context):Utils {\n    return context.createSingleton('Utils', ()=> {\n        return new Utils();\n    })\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/Utils.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('./Context');\nimport utils = require('./Utils');\n\nexport class Validator {\n\n    private utils:utils.Utils;\n    private context:context.Context;\n\n    constructor(context:context.Context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n\n    validate(validators:IValidator[]):IValidatorResult {\n\n        var result = <IValidatorResult>{\n            errors: {},\n            isValid: true\n        };\n\n        result.errors = <any>validators.reduce((errors, validator) => {\n\n            var res = validator.validator();\n\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n\n            return errors;\n\n        }, {});\n\n        return result;\n\n    }\n\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    email(value:string, multiple?:boolean) {\n        return ():Error[] => {\n            if (!value) return [];\n            return this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    }\n\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    phone(value:string) {\n        return ():Error[] => {\n            if (!value) return [];\n            return this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    }\n\n    required(value:any) {\n        return ():Error[] => {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    }\n\n    length(value:string, max?:number, min?:number) {\n        return ():Error[] => {\n\n            var errors = [];\n\n            if (!value) return errors;\n\n            value = value.toString();\n\n            if (min && value.length < min) errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max) errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n\n            return errors;\n\n        };\n    }\n\n\n}\n\nexport function $get(context:context.Context):Validator {\n    return context.createSingleton('Validator', ()=> {\n        return new Validator(context);\n    });\n}\n\nexport interface IValidator {\n    field:string;\n    validator:(...args)=>Error[];\n}\n\nexport interface IValidatorErrors {\n    [id:string]: Error[];\n}\n\nexport interface IValidatorResult {\n    isValid:boolean;\n    errors:IValidatorErrors;\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/Validator.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\n\nexport class Account extends helper.Helper {\n\n    createUrl() {\n        return '/account/~';\n    }\n\n}\n\nexport function $get(context:context.Context):Account {\n    return context.createSingleton('Account', ()=> {\n        return new Account(context);\n    });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/Account.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\nimport validator = require('../core/Validator');\n\nexport class BlockedNumber extends helper.Helper {\n\n    private validator:validator.Validator;\n\n    constructor(context:context.Context) {\n        super(context);\n        this.validator = validator.$get(context);\n    }\n\n    createUrl(options?:IBlockedNumberOptions, id?:string) {\n\n        options = options || {};\n\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n\n    }\n\n    validate(item:IBlockedNumber) {\n\n        return this.validator.validate([\n            {field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber)},\n            {field: 'phoneNumber', validator: this.validator.required(item.phoneNumber)},\n            {field: 'name', validator: this.validator.required(item.name)}\n        ]);\n\n    }\n\n}\n\nexport function $get(context:context.Context):BlockedNumber {\n    return context.createSingleton('BlockedNumber', ()=> {\n        return new BlockedNumber(context);\n    });\n}\n\nexport interface IBlockedNumber extends helper.IHelperObject {\n    name:string;\n    phoneNumber:string;\n}\n\nexport interface IBlockedNumberOptions {\n    extensionId?:string;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/BlockedNumber.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\nimport validator = require('../core/Validator');\nimport list = require('../core/List');\nimport presence = require('./Presence');\nimport contact = require('./Contact');\n\nexport class Call extends helper.Helper {\n\n    private list:list.List;\n    private presence:presence.Presence;\n    private contact:contact.Contact;\n\n    constructor(context:context.Context) {\n        super(context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n\n    createUrl(options?:ICallOptions, id?:string) {\n\n        options = options || {};\n\n        if (!('personal' in options) && !('extensionId' in options)) options.personal = true;\n\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n\n    }\n\n    getSessionId(call:ICall) {\n        return (call && call.sessionId);\n    }\n\n    isInProgress(call:ICall) {\n        return (call && call.result == 'In Progress');\n    }\n\n    isAlive(call:ICall) {\n        return (call && call.availability == 'Alive');\n    }\n\n    isInbound(call:ICall) {\n        return (call && call.direction == 'Inbound');\n    }\n\n    isOutbound(call:ICall) {\n        return !this.isInbound(call);\n    }\n\n    isMissed(call:ICall) {\n        return (call && call.result == 'Missed');\n    }\n\n    isFindMe(call:ICall) {\n        return (call && call.action == 'FindMe');\n    }\n\n    getCallerInfo(call:ICall):ICallerInfo {\n        return this.isInbound(call) ? call.from : call.to;\n    }\n\n    getAllCallerInfos(call:ICall):ICallerInfo[] {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    }\n\n    formatDuration(call:ICall) {\n\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n\n        var duration = parseInt(<any>call.duration),\n            hours = Math.floor(duration / (60 * 60)),\n            mins = Math.floor((duration % (60 * 60)) / 60),\n            secs = Math.floor(duration % 60);\n\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n\n    }\n\n    filter(options?:ICallFilterOptions):(call:ICall)=>boolean {\n\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'type', condition: options.type}\n        ]);\n\n    }\n\n    comparator(options?:list.IListComparatorOptions) {\n\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n\n    }\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    attachContacts(contacts:contact.IContact[], calls:ICall[], options?:contact.IContactMatchOptions) {\n\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce((callerInfos, call) => {\n\n            return callerInfos.concat(this.getAllCallerInfos(call));\n\n        }, []);\n\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    }\n\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    checkMergeability(outboundRingOutCall:ICall, inboundCall:ICall, options?:ICallProcessingOptions):boolean {\n\n        var getTime = (dateString) => {\n            return (new Date(dateString)).getTime();\n        };\n\n        return (\n        (!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n        outboundRingOutCall.direction == 'Outbound' &&\n        inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n        ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n        inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n        (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n\n    }\n\n    combineCalls(outboundRingOutCall:ICall, inboundCall:ICall, options?:ICallProcessingOptions):ICall[] {\n\n        options = options || <any>{};\n\n        var result = [];\n\n        outboundRingOutCall.hasSubsequent = true;\n\n        if (options.merge) {\n\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n\n        } else {\n\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n\n        }\n\n        return result;\n\n    }\n\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    processCalls(calls:ICall[], options?:ICallProcessingOptions):ICall[] {\n\n        var processedCalls = [],\n            callsToMerge = [],\n            self = this;\n\n        // Iterate through calls\n        calls.forEach((call:ICall) => {\n\n            var merged = false;\n\n            call.subsequent = false;\n            call.hasSubsequent = false;\n\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some((secondCall:ICall) => {\n\n                if (call === secondCall) return false;\n\n                if (self.checkMergeability(call, secondCall, options)) {\n\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n\n                    merged = true;\n\n                }\n\n                return merged;\n\n            });\n\n        });\n\n        // After all calls are merged, add non-merged calls\n        calls.forEach((call:ICall) => {\n\n            if (callsToMerge.indexOf(call) == -1) processedCalls.push(call);\n\n        });\n\n        return processedCalls;\n\n    }\n\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    parsePresenceCalls(activeCalls:presence.IPresenceCall[]):ICall[] {\n\n        return activeCalls.map((activeCall:presence.IPresenceCall):ICall => {\n\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: {phoneNumber: activeCall.from},\n                to: {phoneNumber: activeCall.to},\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n\n        });\n\n    }\n\n    getSignature(call:ICall) {\n\n        var cleanup = (phoneNumber) => {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n\n    }\n\n    mergePresenceCalls(presenceCalls:ICall[], presence:presence.IPresence):ICall[] {\n\n        var currentDate = new Date(),\n\n            activeCalls = this\n                .parsePresenceCalls(presence && presence.activeCalls || [])\n                .map((call:ICall) => {\n                         // delete property to make sure it is skipped during merge\n                         delete call.startTime;\n                         return call;\n                     });\n\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n\n        presenceCalls.forEach((call:ICall) => {\n            if (!call.startTime) call.startTime = currentDate.toISOString();\n        });\n\n        return presenceCalls;\n\n    }\n\n    mergeAll(presenceCalls:ICall[], calls:ICall[], activeCalls:ICall[]):ICall[] {\n\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n\n    }\n\n}\n\nexport function $get(context:context.Context):Call {\n    return context.createSingleton('Call', ()=> {\n        return new Call(context);\n    });\n}\n\nexport interface ICall extends helper.IHelperObject {\n    sessionId?:string;\n    availability?:string;\n    startTime?:string;\n    duration?:number;\n    type?:string;\n    direction?:string;\n    action?:string;\n    result?:string;\n    to?:ICallerInfo;\n    from?:ICallerInfo;\n    subsequent?:boolean; // added during processing\n    hasSubsequent?:boolean; // added during processing\n    telephonyStatus?:string; // added during processing\n}\n\nexport interface ICallOptions {\n    extensionId?:string;\n    active?:boolean;\n    personal?:boolean;\n}\n\nexport interface ICallProcessingOptions {\n    maxStartTimeDiscrepancy?:number;\n    strict?:boolean;\n    merge?:boolean;\n}\n\nexport interface ICallFilterOptions {\n    extensionId?:string;\n    direction?:string;\n    type?:string;\n}\n\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/CallerInfo.html\n */\nexport interface ICallerInfo {\n    phoneNumber?:string;\n    extensionNumber?:string;\n    name?:string;\n    location?:string;\n    contact?:contact.IContact; // corresponding contact (added by attachContacts methods)\n    contactPhone?:string; // contact's phone as written in contact (added by attachContacts methods)\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/Call.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\nimport validator = require('../core/Validator');\nimport list = require('../core/List');\nimport call = require('./Call');\n\nexport class Contact extends helper.Helper {\n    \n    private list:list.List;\n    private validator:validator.Validator;\n    \n    constructor(context:context.Context) {\n        super(context);\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    \n    createUrl(options?:IContactOptions, id?:string) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' +\n                   (options.extensionId ? options.extensionId : '~') +\n                   '/address-book';\n\n        if (options.sync) return root + '-sync';\n\n        return root +\n               (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n               (id ? '/' + id : '');\n\n    }\n\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    protected getFieldValues(where:IContact, fields?:string[], asHash?:boolean):any {\n\n        return fields.reduce((result:string[], field:string) => {\n\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                } else {\n                    result.push(where[field]);\n                }\n            }\n\n            return result;\n\n        }, asHash ? {} : []);\n\n    }\n\n    getFullName(contact:IContact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    }\n\n    getEmails(contact:IContact, asHash?:boolean):string[] {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    }\n\n    getPhones(contact:IContact, asHash?:boolean):string[] {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    }\n\n    getFaxes(contact:IContact, asHash?:boolean):string[] {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    }\n\n    getAddresses(contact:IContact, asHash?:boolean):IContactAddress[] {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    }\n\n    isAlive(contact:IContact) {\n        return (contact.availability == 'Alive');\n    }\n\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    match(contact:IContact, string:string, options?:IContactMatchOptions):any {\n\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: (value, options) => {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n\n        string = options.transformFn(string, options);\n\n        var found = null;\n\n        if (!string) return found;\n\n        var matchWith = (value) => {\n\n            // skip unnecessary cycles if match has been found\n            if (found) return;\n\n            var transformed = options.transformFn(value, options);\n\n            if (!transformed) return;\n\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n\n            if (match) found = value;\n\n        };\n\n        // Search in fields\n        options.fields.forEach((field) => {\n            matchWith(contact[field]);\n        });\n\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found) this.addressFields.forEach((field) => {\n\n            // skip unnecessary cycles if match has been found or no field value\n            if (!contact[field] || found) return;\n\n            this.addressSubFields.forEach((subField) => {\n                matchWith(contact[field][subField]);\n            });\n\n        });\n\n        return found;\n\n    }\n\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    matchAsPhone(contact:IContact, phone:string, options?:IContactMatchOptions) {\n\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: (value, options) => {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n\n    }\n\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    attachToCallerInfos(callerInfos:call.ICallerInfo[], contacts:IContact[], options?:IContactMatchOptions) {\n\n        var self = this,\n            callerInfoIndex = this.index(callerInfos, (callerInfo:call.ICallerInfo) => {\n                return callerInfo.phoneNumber;\n            }, true);\n\n        this.utils.forEach(callerInfoIndex, (indexedCallerInfos, phoneNumber) => {\n\n            var foundContact:IContact = null,\n                foundPhone = null;\n\n            contacts.some((contact:IContact) => {\n\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n\n                if (foundPhone) foundContact = contact;\n\n                return foundPhone;\n\n            });\n\n            if (foundContact) {\n\n                indexedCallerInfos.forEach((callerInfo:call.ICallerInfo) => {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n\n            }\n\n        });\n\n    }\n\n    comparator(options?:list.IListComparatorOptions) {\n\n        return this.list.comparator(this.utils.extend({\n            extractFn: (contact:IContact, options) => {\n                return this.getFullName(contact);\n            }\n        }, options));\n\n    }\n\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    filter(options?:IContactFilterOptions) {\n\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n\n        return this.list.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {condition: options.startsWith, filterFn: (item, opts) => { return this.match(item, opts.condition); }},\n            {condition: options.phonesOnly, filterFn: (item, opts) => { return (this.getPhones(item).length > 0); }},\n            {condition: options.faxesOnly, filterFn: (item, opts) => { return (this.getFaxes(item).length > 0); }}\n        ]);\n\n    }\n\n    validate(item:IContact) {\n\n        return this.validator.validate([\n            {field: 'firstName', validator: this.validator.required(item.firstName)},\n            {field: 'lastName', validator: this.validator.required(item.lastName)},\n            {field: 'email', validator: this.validator.email(item.email)},\n            {field: 'email2', validator: this.validator.email(item.email2)},\n            {field: 'email3', validator: this.validator.email(item.email3)}\n        ]);\n\n    }\n\n    phoneFields = [\n        'homePhone',\n        'homePhone2',\n        'businessPhone',\n        'businessPhone2',\n        'mobilePhone',\n        'companyPhone',\n        'assistantPhone',\n        'carPhone',\n        'otherPhone',\n        'callbackPhone'\n    ];\n\n    faxFields = [\n        'businessFax',\n        'otherFax'\n    ];\n\n    addressFields = [\n        'homeAddress',\n        'businessAddress',\n        'otherAddress'\n    ];\n\n    addressSubFields = [\n        'street',\n        'city',\n        'state',\n        'zip'\n    ];\n\n    nameFields = [\n        'firstName',\n        'middleName',\n        'lastName',\n        'nickName'\n    ];\n\n    otherFields = [\n        'company',\n        'jobTitle',\n        'webPage',\n        'notes'\n    ];\n\n    emailFields = [\n        'email',\n        'email2',\n        'email3'\n    ];\n    \n    \n}\n\nexport function $get(context:context.Context):Contact {\n    return context.createSingleton('Contact', ()=> {\n        return new Contact(context);\n    });\n}\n\nexport interface IContactOptions {\n    extensionId?:string;\n    groupId?:string;\n    sync?:boolean;\n}\n\nexport interface IContactFilterOptions {\n    startsWith?:string;\n    alive?:boolean;\n    phonesOnly?:boolean;\n    faxesOnly?:boolean;\n}\n\nexport interface IContactMatchOptions {\n    transformFn?:(object:IContact, options?:IContactMatchOptions)=>any;\n    strict?:boolean;\n    inAddresses?:boolean;\n    fields?:string[];\n}\n\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactAddressInfo\n */\nexport interface IContactAddress {\n    country?:string;\n    street?:string;\n    city?:string;\n    state?:string;\n    zip?:string;\n}\n\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ContactInfo\n */\nexport interface IContactBrief {\n    firstName?:string;\n    lastName?:string;\n    company?:string;\n    email?:string;\n    businessAddress?:IContactAddress;\n}\n\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactInfo\n */\nexport interface IContact extends helper.IHelperObject {\n    availability?:string;\n\n    // Names:\n    firstName?:string;\n    lastName?:string;\n    company?:string;\n    nickName?:string;\n    middleName?:string;\n\n    // Emails:\n    email?:string;\n    email2?:string;\n    email3?:string;\n\n    // Addresses:\n    businessAddress?:IContactAddress;\n    homeAddress?:IContactAddress;\n    otherAddress?:IContactAddress;\n\n    // Phones:\n    homePhone?:string;\n    homePhone2?:string;\n    businessPhone?:string;\n    businessPhone2?:string;\n    mobilePhone?:string;\n    companyPhone?:string;\n    assistantPhone?:string;\n    carPhone?:string;\n    otherPhone?:string;\n    callbackPhone?:string;\n\n    // Faxes:\n    businessFax?:string;\n    otherFax?:string;\n    \n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/Contact.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\nimport validator = require('../core/Validator');\n\nexport class ContactGroup extends helper.Helper {\n    \n    private validator:validator.Validator;\n    \n    constructor(context:context.Context){\n        super(context);\n        this.validator = validator.$get(context);\n    }\n    \n    createUrl(options?:any, id?:string) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    }\n\n    validate(item:IContactGroup) {\n\n        return this.validator.validate([\n            {field: 'groupName', validator: this.validator.required(item && item.groupName)}\n        ]);\n\n    }\n\n}\n\nexport function $get(context:context.Context):ContactGroup {\n    return context.createSingleton('ContactGroup', ()=> {\n        return new ContactGroup(context);\n    });\n}\n\nexport interface IContactGroup extends helper.IHelperObject {\n    notes?:string;\n    groupName?:string;\n    contactsCount?:number;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/ContactGroup.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\n\nexport class Conferencing extends helper.Helper {\n\n    createUrl() {\n        return '/account/~/extension/~/conferencing';\n    }\n\n}\n\nexport function $get(context:context.Context):Conferencing {\n    return context.createSingleton('Conferencing', ()=> {\n        return new Conferencing(context);\n    });\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/Conferencing.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\n\nexport class Country extends helper.Helper {\n\n    createUrl(options?:any, id?:string) {\n        return '/dictionary/country';\n    }\n\n}\n\nexport function $get(context:context.Context):Country {\n    return context.createSingleton('Country', ()=> {\n        return new Country(context);\n    });\n}\n\nexport interface ICountry extends helper.IHelperObject {\n    name?:string;\n    isoCode?:string;\n    callingCode?:string;\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/Country.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\nimport validator = require('../core/Validator');\nimport extension = require('./Extension');\nimport deviceModel = require('./DeviceModel');\nimport shippingMethod = require('./ShippingMethod');\nimport phoneNumber = require('./PhoneNumber');\n\nexport class Device extends helper.Helper {\n\n    private validator:validator.Validator;\n    private extension:extension.Extension;\n    private deviceModel:deviceModel.DeviceModel;\n\n    constructor(context:context.Context){\n        super(context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n\n    createUrl(options?:IDeviceOptions, id?:string) {\n\n        options = options || {};\n\n        if (options.order) return '/account/~/order';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/device' +\n               (id ? '/' + id : '');\n\n    }\n\n    /**\n     * @param {IDevice} item\n     */\n    validate(item:IDevice) {\n\n        return this.validator.validate([\n            {field: 'emergencyServiceAddress-street', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)},\n            {field: 'emergencyServiceAddress-city', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)},\n            {field: 'emergencyServiceAddress-state', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)},\n            {field: 'emergencyServiceAddress-country', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)},\n            {field: 'emergencyServiceAddress-zip', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)},\n            {field: 'emergencyServiceAddress-customerName', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)},\n            {field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension))},\n            {field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model))}\n        ]);\n\n    }\n\n}\n\nexport function $get(context:context.Context):Device {\n    return context.createSingleton('Device', ()=> {\n        return new Device(context);\n    });\n}\n\nexport interface IContactGroup extends helper.IHelperObject {\n    notes?:string;\n    groupName?:string;\n    contactsCount?:number;\n}\n\nexport interface IDevice extends helper.IHelperObject {\n    type?:string;\n    name?:string;\n    serial?:string;\n    model?:deviceModel.IDeviceModel;\n    extension?:extension.IExtensionShort; //TODO IExtension?\n    emergencyServiceAddress?:IDeviceAddress;\n    shipping?:IDeviceShipping;\n    phoneLines?:IDevicePhoneLine[];\n}\n\nexport interface IDeviceOrder {\n    devices?:IDevice[];\n}\n\nexport interface IDeviceAddress {\n    street?:string;\n    street2?:string;\n    city?:string;\n    state?:string;\n    country?:string;\n    zip?:string;\n    customerName?:string;\n}\n\nexport interface IDeviceShipping {\n    address?:IDeviceAddress;\n    method?:shippingMethod.IShippingMethod;\n    status?:string;\n}\n\nexport interface IDevicePhoneLine {\n    lineType?:string;\n    phoneInfo?:phoneNumber.IPhoneNumber;\n}\n\nexport interface IDeviceOptions {\n    extensionId?:string;\n    order?:boolean;\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/Device.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\n\nexport class DeviceModel extends helper.Helper {\n    \n    getId(device:IDeviceModel) {\n\n        if (!device) return null;\n\n        return device.id + (\n                device.addons && device.addons[0]\n                    ? '-' + device.addons[0].id + '-' + device.addons[0].count\n                    : ''\n            );\n\n    }\n\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     */\n    cleanForSaving(device?:IDeviceModel):IDeviceModel {\n\n        if (!device) return null;\n\n        delete device.name;\n        delete device.deviceClass;\n\n        if (device.addons && device.addons.length > 0) {\n\n            device.addons.forEach((addon, i) => {\n                delete device.addons[i].name;\n            });\n\n        } else {\n\n            delete device.addons;\n\n        }\n\n        return device;\n\n    }\n\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n     */\n    devices:IDeviceModel[] = [\n        {\n            id: '-1',\n            name: 'Softphone'\n        },\n        {\n            id: '0',\n            name: 'Existing device'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '23',\n            name: 'Polycom IP 321 Basic IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '30',\n            name: 'Polycom IP 550 HD Manager IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '37',\n            name: 'Polycom IP 6000 Conference Phone',\n            deviceClass: 'Conference Phone'\n        },\n        {\n            id: '40',\n            name: 'Polycom IP 335 HD IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '51',\n            name: 'Cisco SPA-303 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\tDesk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '3'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '52',\n            name: 'Cisco SPA-122 ATA',\n            deviceClass: 'Analog Adapter'\n        },\n        {\n            id: '53',\n            name: 'Polycom VVX-500 Color Touchscreen',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '54',\n            name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '55',\n            name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        }\n    ];\n    \n}\n\nexport function $get(context:context.Context):DeviceModel {\n    return context.createSingleton('DeviceModel', ()=> {\n        return new DeviceModel(context);\n    });\n}\n\nexport interface IDeviceModel extends helper.IHelperObject {\n    name?:string;\n    deviceClass?:string;\n    addons?:IDeviceModelAddon[];\n}\n\nexport interface IDeviceModelAddon extends helper.IHelperObject {\n    name?:string;\n    count?:string;\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/DeviceModel.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\nimport list = require('../core/List');\nimport contact = require('./Contact');\nimport service = require('./Service');\nimport country = require('./Country');\nimport timezone = require('./Timezone');\nimport language = require('./Language');\nimport presence = require('./Presence');\n\nexport class Extension extends helper.Helper {\n\n    private list:list.List;\n\n    type = {\n        department: 'Department',\n        user: 'User',\n        announcement: 'Announcement',\n        voicemail: 'Voicemail'\n    };\n\n    constructor(context:context.Context) {\n        super(context);\n        this.list = list.$get(context);\n    }\n\n    createUrl(options?:IExtensionOptions, id?:string) {\n\n        options = options || {};\n\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n\n    }\n\n    isUser(extension?:IExtension) {\n        return extension && extension.type == this.type.user;\n    }\n\n    isDepartment(extension?:IExtension) {\n        return extension && extension.type == this.type.department;\n    }\n\n    isAnnouncement(extension?:IExtension) {\n        return extension && extension.type == this.type.announcement;\n    }\n\n    isVoicemail(extension?:IExtension) {\n        return extension && extension.type == this.type.voicemail;\n    }\n\n    comparator(options?:list.IListComparatorOptions) {\n\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n\n    }\n\n    filter(options?:IExtensionFilterOptions) {\n\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n\n        return this.list.filter([\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: (item) => {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n\n    }\n\n}\n\nexport function $get(context:context.Context):Extension {\n    return context.createSingleton('Extension', ()=> {\n        return new Extension(context);\n    });\n}\n\nexport interface IExtensionOptions {\n    departmentId?:string;\n}\n\nexport interface IExtensionFilterOptions {\n    search?:string;\n    type?:string;\n}\n\nexport interface IExtensionRegionalSettings {\n    timezone?:timezone.ITimezone;\n    language?:language.ILanguage;\n    homeCountry?:country.ICountry;\n}\n\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ShortExtensionInfo\n */\nexport interface IExtensionShort extends helper.IHelperObject {\n    extensionNumber?:string;\n}\n\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ExtensionInfo\n */\nexport interface IExtension extends helper.IHelperObject {\n    extensionNumber?:string;\n    name?:string;\n    type?:string;\n    status?:string;\n    setupWizardState?:string;\n    contact?:contact.IContactBrief;\n    regionalSettings?:IExtensionRegionalSettings;\n    serviceFeatures?:service.IServiceFeature[];\n    presence?:presence.IPresence; // added by helper\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/Extension.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\nimport list = require('../core/List');\n\nexport class ForwardingNumber extends helper.Helper {\n\n    private list:list.List;\n\n    constructor(context:context.Context) {\n        super(context);\n        this.list = list.$get(context);\n    }\n\n    createUrl(options?:{extensionId?:string}, id?:string) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n\n    }\n\n    getId(forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    }\n\n    hasFeature(phoneNumber:IForwardingNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    }\n\n    comparator(options?:list.IListComparatorOptions) {\n\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n\n    }\n\n    filter(options?:{features:string[]}) {\n\n        options = this.utils.extend({\n            features: []\n        }, options);\n\n        return this.list.filter([{\n            condition: options.features.length,\n            filterFn: (item) => {\n\n                return options.features.some((feature) => {\n                    return this.hasFeature(item, feature);\n                });\n\n            }\n        }]);\n\n    }\n\n}\n\nexport function $get(context:context.Context):ForwardingNumber {\n    return context.createSingleton('ForwardingNumber', ()=> {\n        return new ForwardingNumber(context);\n    });\n}\n\nexport interface IForwardingNumber extends helper.IHelperObject {\n    label?:string;\n    phoneNumber?:string;\n    flipNumber?:string;\n    features?:string[];\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/ForwardingNumber.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\n\nexport class Language extends helper.Helper {\n\n    languages:ILanguage[] = [\n        {\n            id: '1033',\n            name: 'English (US)'\n        },\n        {\n            id: '3084',\n            name: 'French (Canada)'\n        }\n    ];\n\n}\n\nexport function $get(context:context.Context):Language {\n    return context.createSingleton('Language', ()=> {\n        return new Language(context);\n    });\n}\n\nexport interface ILanguage extends helper.IHelperObject {\n    name?:string;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/Language.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\nimport list = require('../core/List');\nimport state = require('./State');\n\nexport class Location extends helper.Helper {\n\n    private list:list.List;\n    private state:state.State;\n\n    constructor(context:context.Context) {\n        super(context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n\n    createUrl() {\n        return '/dictionary/location';\n    }\n\n    filter(options?:ILocationFilterOptions) {\n\n        var uniqueNPAs = [];\n\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: (item:ILocation, opts) => {\n                    return (this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: (item:ILocation, opts) => {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    } else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n\n    }\n\n    comparator(options?:list.IListComparatorOptions) {\n\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n\n        if (options.sortBy == 'nxx') {\n\n            options.extractFn = (item:ILocation) => {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n\n            options.compareFn = this.list.numberComparator;\n\n        }\n\n        return this.list.comparator(options);\n\n    }\n    \n}\n\nexport function $get(context:context.Context):Location {\n    return context.createSingleton('Location', ()=> {\n        return new Location(context);\n    });\n}\n\nexport interface ILocation extends helper.IHelperObject {\n    name?:string;\n    isoCode?:string;\n    npa?:string;\n    nxx?:string;\n    state?:state.IState;\n}\n\nexport interface ILocationFilterOptions {\n    stateId?:string;\n    onlyUniqueNPA?:boolean;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/Location.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\nimport list = require('../core/List');\nimport validator = require('../core/Validator');\nimport subscription = require('../core/Subscription');\nimport platform = require('../core/Platform');\nimport contact = require('./Contact');\nimport call = require('./Call');\n\nexport class Message extends helper.Helper {\n\n    private list:list.List;\n    private contact:contact.Contact;\n    private platform:platform.Platform;\n    private validator:validator.Validator;\n\n    constructor(context:context.Context) {\n        super(context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    \n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    createUrl(options?:IMessageOptions, id?:string|number) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n\n        if (options.fax) return root + '/fax';\n        if (options.sms) return root + '/sms';\n        if (options.pager) return root + '/company-pager';\n        if (options.sync) return root + '/message-sync';\n\n        return root + '/message-store' + (id ? '/' + id : '');\n\n    }\n\n    isInbound(message):IMessage {\n        return (message && message.direction == 'Inbound');\n    }\n\n    isOutbound(message):IMessage {\n        return !this.isInbound(message);\n    }\n\n    isSMS(message:IMessage) {\n        return (message && message.type == 'SMS');\n    }\n\n    isPager(message:IMessage):IMessage {\n        return (message && message.type == 'Pager');\n    }\n\n    isVoiceMail(message:IMessage) {\n        return (message && message.type == 'VoiceMail');\n    }\n\n    isFax(message:IMessage) {\n        return (message && message.type == 'Fax');\n    }\n\n    isAlive(message:IMessage) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    }\n\n    isRead(message:IMessage) {\n        return (message.readStatus == 'Read');\n    }\n\n    setIsRead(message:IMessage, isRead:boolean):IMessage {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    }\n\n    getAttachmentUrl(message:IMessage, i:number) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {addMethod: 'GET', addServer: true, addToken: true}) : '';\n    }\n\n    getAttachmentContentType(message:IMessage, i:number) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    }\n\n    getSubscription(options?:IMessageOptions):subscription.Subscription {\n\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n\n    }\n\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    getCallerInfos(message:IMessage):call.ICallerInfo[] {\n        return this.isInbound(message) ? [message.from] : message.to;\n    }\n\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    getAllCallerInfos(message:IMessage):call.ICallerInfo[] {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    }\n\n    /**\n     * TODO Compare as dates\n     */\n    comparator(options?:list.IListComparatorOptions) {\n\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n\n    }\n\n    filter(options?:IMessageFilterOptions) {\n\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n\n        return this.list.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'type', condition: options.type},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'conversationId', condition: options.conversationId},\n            {filterBy: 'readStatus', condition: options.readStatus},\n            {filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter}\n        ]);\n\n    }\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    attachContacts(contacts:contact.IContact[], messages:IMessage[], options?:contact.IContactMatchOptions) {\n\n        var self = this;\n\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce((callerInfos, message) => {\n\n            return callerInfos.concat(self.getAllCallerInfos(message));\n\n        }, []);\n\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    }\n\n    shorten(message:IMessage):IMessageShort {\n\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n\n    }\n\n    validateSMS(item:IMessage) {\n\n        return this.validator.validate([\n            {field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber'))},\n            {field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber'))},\n            {field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    }\n\n    validatePager(item:IMessage) {\n\n        return this.validator.validate([\n            {field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber'))},\n            {field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber'))},\n            {field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    }\n\n}\n\nexport function $get(context:context.Context):Message {\n    return context.createSingleton('Message', ()=> {\n        return new Message(context);\n    });\n}\n\nexport interface IMessage extends helper.IHelperObject{\n    to?:call.ICallerInfo[];\n    from?:call.ICallerInfo;\n    type?:string;\n    creationTime?:string;\n    readStatus?:string;\n    priority?:string;\n    attachments?:IMessageAttachment[];\n    direction?:string;\n    availability?:string;\n    subject?:string;\n    messageStatus?:string;\n    conversationId?:string;\n    lastModifiedTime?:string;\n}\n\nexport interface IMessageShort {\n    to?:call.ICallerInfo[];\n    from?:call.ICallerInfo;\n    text?:string;\n}\n\nexport interface IMessageOptions {\n    fax?:boolean;\n    sync?:boolean;\n    sms?:boolean;\n    pager?:boolean;\n    extensionId?:string;\n}\n\nexport interface IMessageFilterOptions {\n    alive?:boolean;\n    conversationId?:string;\n    direction?:string;\n    readStatus?:string;\n    type?:string;\n    search?:string;\n}\n\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch18s01.html#MessageAttachmentInfo\n */\nexport interface IMessageFaxAttachment extends helper.IHelperObject {\n    contentType?:string;\n    content?:string;\n    fileName?:string;\n}\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch18s01.html#MessageAttachmentInfo\n */\nexport interface IMessageAttachment extends helper.IHelperObject {\n    contentType?:string;\n    vmDuration?:string;\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/Message.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\nimport list = require('../core/List');\nimport extension = require('./Extension');\n\nexport class PhoneNumber extends helper.Helper {\n\n    private extension:extension.Extension;\n    private list:list.List;\n\n    constructor(context:context.Context) {\n        super(context);\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n\n    createUrl(options?:IPhoneNumberOptions, id?:string) {\n\n        options = options || {};\n\n        if (options.lookup) return '/number-pool/lookup';\n\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n\n    }\n\n    isSMS(phoneNumber:IPhoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    }\n\n    hasFeature(phoneNumber:IPhoneNumber, feature:string) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    }\n\n    reserve(phoneNumber:IPhoneNumber, date:any) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    }\n\n    unreserve(phoneNumber:IPhoneNumber) {\n        phoneNumber.reservedTill = null;\n    }\n\n    comparator(options?:list.IListComparatorOptions) {\n\n        return this.list.comparator(this.utils.extend({\n            extractFn: (item:IPhoneNumber) => {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n\n    }\n\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    filter(options?:IPhoneNumberFilterOptions) {\n\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n\n        return this.list.filter([\n            {filterBy: 'usageType', condition: options.usageType},\n            {filterBy: 'paymentType', condition: options.paymentType},\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.features.length,\n                filterFn: (item:IPhoneNumber) => {\n\n                    return options.features.some((feature:string) => {\n                        return this.hasFeature(item, feature);\n                    });\n\n                }\n            }\n        ]);\n\n    }\n\n}\n\nexport function $get(context:context.Context):PhoneNumber {\n    return context.createSingleton('PhoneNumber', ()=> {\n        return new PhoneNumber(context);\n    });\n}\n\nexport interface IPhoneNumber extends helper.IHelperObject {\n    phoneNumber?:string;\n    paymentType?:string; // External, TollFree, Local\n    location?:string;\n    type?:string; // VoiceFax, FaxOnly, VoiceOnly\n    usageType?:string; // CompanyNumber, DirectNumber, CompanyFaxNumber, ForwardedNumber\n    features?:string[]; // CallerId, SmsSender\n    reservedTill?:string;\n    error?:string;\n}\n\nexport interface IPhoneNumberOptions {\n    extensionId?:string;\n    lookup?:boolean;\n    countryId?:string;\n    paymentType?:string;\n    npa?:string;\n    nxx?:string;\n    line?:string;\n    exclude?:string;\n}\n\nexport interface IPhoneNumberFilterOptions {\n    paymentType?:string;\n    usageType?:string;\n    type?:string;\n    features?:string[];\n}\n\nexport interface IPhoneNumberOrder {\n    records?:IPhoneNumber[];\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/PhoneNumber.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\nimport subscription = require('../core/Subscription');\nimport extension = require('./Extension');\n\nexport class Presence extends helper.Helper {\n\n    private extension:extension.Extension;\n\n    constructor(context:context.Context) {\n        super(context);\n        this.extension = extension.$get(context);\n    }\n\n    createUrl(options?:IPresenceOptions, id?:string) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n\n    }\n\n    getId(presence:IPresence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    }\n\n    isAvailable(presence:IPresence) {\n        return presence && presence.presenceStatus == 'Available';\n    }\n\n    getSubscription(options?:IPresenceOptions, id?:string):subscription.Subscription {\n\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n\n    }\n\n    updateSubscription(subscription:subscription.Subscription,\n                       presences:IPresence[],\n                       options?:IPresenceOptions):subscription.Subscription {\n\n        var events = presences.map(this.getId, this).map((id) => {\n            return this.createUrl(options, id);\n        }, this);\n\n        subscription.addEvents(events);\n\n        return subscription;\n\n    }\n\n    attachToExtensions(extensions:extension.IExtension[], presences:IPresence[], merge?:boolean) {\n\n        var index = this.index(presences);\n\n        extensions.forEach((ex:extension.IExtension) => {\n\n            var presence = index[this.extension.getId(ex)];\n\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    this.utils.extend(ex.presence, presence);\n                } else {\n                    ex.presence = presence;\n                }\n            }\n\n        }, this);\n\n        return this;\n\n    }\n\n    isCallInProgress(presenceCall:IPresenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    }\n\n\n}\n\nexport function $get(context:context.Context):Presence {\n    return context.createSingleton('Presence', ()=> {\n        return new Presence(context);\n    });\n}\n\nexport interface IPresence extends helper.IHelperObject {\n    extension?:extension.IExtension;\n    activeCalls?:IPresenceCall[];\n    presenceStatus?:string; // Offline, Busy, Available\n    telephonyStatus?:string; // NoCall, CallConnected, Ringing, OnHold\n    userStatus?:string; // Offline, Busy, Available\n    dndStatus?:string; // TakeAllCalls, DoNotAcceptAnyCalls, DoNotAcceptDepartmentCalls, TakeDepartmentCallsOnly\n    allowSeeMyPresence?:boolean;\n    ringOnMonitoredCall?:boolean;\n    pickUpCallsOnHold?:boolean;\n    extensionId?:string;\n    sequence?:number;\n}\n\nexport interface IPresenceCall {\n    direction?:string;\n    from?:string;\n    to?:string;\n    sessionId?:string;\n    id?:string;\n    telephonyStatus?:string;\n}\n\nexport interface IPresenceOptions {\n    detailed?:boolean;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/Presence.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\nimport validator = require('../core/Validator');\nimport call = require('./Call');\n\nexport class Ringout extends helper.Helper {\n\n    private validator:validator.Validator;\n\n    constructor(context:context.Context) {\n        super(context);\n        this.validator = validator.$get(context);\n    }\n\n    createUrl(options?:{extensionId?:string}, id?:string) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n\n    }\n\n    resetAsNew(object:IRingout) {\n        object = super.resetAsNew(object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    }\n\n    isInProgress(ringout:IRingout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    }\n\n    isSuccess(ringout:IRingout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    }\n\n    isError(ringout:IRingout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    }\n\n    validate(item:IRingout) {\n\n        return this.validator.validate([\n            {field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber)},\n            {field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber)}\n        ]);\n\n    }\n    \n}\n\nexport function $get(context:context.Context):Ringout {\n    return context.createSingleton('Ringout', ()=> {\n        return new Ringout(context);\n    });\n}\n\nexport interface IRingout extends helper.IHelperObject {\n    from?:call.ICallerInfo; // (!) ONLY PHONE NUMBER\n    to?:call.ICallerInfo; // (!) ONLY PHONE NUMBER\n    callerId?:call.ICallerInfo; // (!) ONLY PHONE NUMBER\n    playPrompt?:boolean;\n    status?:{\n        callStatus?:string;\n        callerStatus?:string;\n        calleeStatus?:string\n    };\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/Ringout.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\n\nexport class Service extends helper.Helper {\n    \n    createUrl() {\n        return '/account/~/service-info';\n    }\n\n    isEnabled(feature:string, serviceFeatures:IServiceFeature[]) {\n\n        return serviceFeatures.reduce((value, f) => {\n\n            if (f.featureName == feature) value = f.enabled;\n            return value;\n\n        }, false);\n\n    }\n\n    isServiceFeatureEnabledMethod(feature) {\n        return (serviceFeatures) => {\n            return this.isEnabled(feature, serviceFeatures);\n        };\n    }\n\n    isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n    isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n    isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n    isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n    isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n    isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n    isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n    isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n    isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n    isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n    isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n    isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n    isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n    isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n    isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n    isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n    isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n    isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n    isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n    isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n    isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    \n}\n\nexport function $get(context:context.Context):Service {\n    return context.createSingleton('Service', ()=> {\n        return new Service(context);\n    });\n}\n\nexport interface IService extends helper.IHelperObject {\n    serviceFeatures?:IServiceFeature[];\n    servicePlanName?:string;\n}\n\nexport interface IServiceFeature {\n    featureName?:string;\n    enabled?:boolean;\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/Service.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\n\nexport class ShippingMethod extends helper.Helper {\n\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    shippingMethods:IShippingMethod[] = [\n        {\n            id: '1',\n            name: 'Ground Shipping (5-7 business days)'\n        },\n        {\n            id: '2',\n            name: '2-days Shipping'\n        },\n        {\n            id: '3',\n            name: 'Overnight Shipping'\n        }\n    ];\n\n}\n\nexport function $get(context:context.Context):ShippingMethod {\n    return context.createSingleton('ShippingMethod', ()=> {\n        return new ShippingMethod(context);\n    });\n}\n\nexport interface IShippingMethod extends helper.IHelperObject {\n    name?:string;\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/ShippingMethod.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\nimport list = require('../core/List');\nimport country = require('./Country');\n\nexport class State extends helper.Helper {\n    \n    private countryHelper:country.Country;\n    private list:list.List;\n\n    constructor(context:context.Context){\n        super(context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    \n    createUrl() {\n        return '/dictionary/state';\n    }\n\n    filter(options?:IStateOptions) {\n\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: (item:IState, opts) => {\n                    return (this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n\n    }\n    \n}\n\nexport function $get(context:context.Context):State {\n    return context.createSingleton('State', ()=> {\n        return new State(context);\n    });\n}\n\nexport interface IState extends helper.IHelperObject {\n    name?:string;\n    isoCode?:string;\n    country?:country.ICountry;\n}\n\nexport interface IStateOptions {\n    countryId?:string;\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/State.ts\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\n\nimport context = require('../core/Context');\nimport helper = require('../core/Helper');\n\nexport class Timezone extends helper.Helper {\n\n    createUrl() {\n        return '/dictionary/timezone';\n    }\n\n}\n\nexport function $get(context:context.Context):Timezone {\n    return context.createSingleton('Timezone', ()=> {\n        return new Timezone(context);\n    });\n}\n\nexport interface ITimezone extends helper.IHelperObject {\n    name?:string;\n    description?:string;\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/helpers/Timezone.ts\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\n\nimport h = require('./Headers');\nimport utils = require('../Utils');\nimport log = require('../Log');\nimport context = require('../Context');\nimport ajaxObserver = require('../AjaxObserver');\nimport r = require('./Response');\n\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nexport class Request extends h.Headers {\n\n    public async:boolean;\n    public method:string;\n    public url:string;\n    public query:any;\n    public body:any;\n    public xhr:XMLHttpRequest;\n\n    private observer:ajaxObserver.AjaxObserver;\n\n    constructor(context:context.Context) {\n\n        super(context);\n\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n\n        this.observer = ajaxObserver.$get(context);\n\n    }\n\n    isLoaded():boolean {\n        return !!this.xhr;\n    }\n\n    //TODO Remove\n    setHeader(name:string, value:string):Request {\n        super.setHeader(name, value);\n        return this;\n    }\n\n    //TODO Remove\n    setHeaders(headers:h.IHeadersObject):Request {\n        super.setHeaders(headers);\n        return this;\n    }\n\n    setOptions(options?:IAjaxOptions):Request {\n\n        options = options || {};\n\n        // backwards compatibility\n        if (!('body' in options) && options.post) options.body = options.post;\n        if (!('query' in options) && options.get) options.query = options.get;\n\n        if ('method' in options) this.method = options.method;\n        if ('url' in options) this.url = options.url;\n        if ('query' in options) this.query = options.query;\n        if ('body' in options) this.body = options.body;\n        if ('headers' in options) this.setHeaders(options.headers);\n        if ('async' in options) this.async = !!options.async;\n\n        return this;\n\n    }\n\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    checkOptions() {\n\n        if (!this.url) throw new Error('Url is not defined');\n\n        if (!this.hasHeader('Accept')) this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type')) this.setHeader('Content-Type', h.Headers.jsonContentType);\n\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0) throw new Error('Method has wrong value');\n\n        return this;\n\n    }\n\n    getEncodedBody() {\n\n        if (this.method === 'GET') return null;\n\n        if (typeof this.body === 'string') {\n            return this.body;\n        } else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        } else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        } else {\n            return this.body;\n        }\n\n    }\n\n    send():Promise<r.Response> {\n\n        this.observer.emit(this.observer.events.beforeRequest, this);\n\n        var responsePromise = new (this.context.getPromise())((resolve, reject) => {\n\n            this.checkOptions();\n\n            var xhr = this.getXHR(),\n                url = this.url + (!!this.query ? ((this.url.indexOf('?') > -1 ? '&' : '?') + this.utils.queryStringify(this.query)) : '');\n\n            xhr.open(this.method, url, this.async);\n\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n\n            xhr.onload = () => {\n\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n\n                if (response.error) {\n                    var e = <IAjaxError> response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = this;\n                    reject(e);\n                } else {\n                    resolve(response);\n                }\n\n            };\n\n            xhr.onerror = (event) => { // CORS or network issue\n                var e = <IAjaxError> new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n\n            this.utils.forEach(this.headers, (value, header) => {\n                if (!!value) xhr.setRequestHeader(header, value);\n            });\n\n            xhr.send(this.getEncodedBody());\n\n            this.xhr = xhr;\n\n        });\n\n        return responsePromise.then((response:r.Response) => {\n\n            this.observer.emit(this.observer.events.requestSuccess, response, this);\n\n            return response;\n\n        }).catch((e):any => { //TODO Replace any with something\n\n            this.observer.emit(this.observer.events.requestError, e);\n\n            throw e;\n\n        });\n\n    }\n\n    getXHR():XMLHttpRequest {\n        return this.context.getXHR();\n    }\n\n    destroy() {\n        if (this.xhr) this.xhr.abort();\n    }\n\n}\n\nexport function $get(context:context.Context):Request {\n    return new Request(context);\n}\n\nexport interface IAjaxError extends Error {\n    ajax?:r.Response;\n    response?:r.Response;\n    request?:Request;\n}\n\nexport interface IAjaxOptions {\n    url?:string;\n    method?:string;\n    async?:boolean;\n    query?:any;\n    body?:any;\n    headers?:h.IHeadersObject;\n    post?:any; // @deprecated\n    get?:any; // @deprecated\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/http/Request.ts\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\n\nimport utils = require('../Utils');\nimport context = require('../Context');\n\nexport class Headers {\n\n    protected headers:IHeadersObject;\n    protected context:context.Context;\n    protected utils:utils.Utils;\n\n    constructor(context:context.Context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n\n    static contentType = 'Content-Type';\n    static jsonContentType = 'application/json';\n    static multipartContentType = 'multipart/mixed';\n    static urlencodedContentType = 'application/x-www-form-urlencoded';\n\n    setHeader(name:string, value:string) {\n\n        this.headers[name.toLowerCase()] = value;\n\n        return this;\n\n    }\n\n    getHeader(name:string) {\n\n        return this.headers[name.toLowerCase()];\n\n    }\n\n    hasHeader(name:string):boolean {\n\n        return (name.toLowerCase() in this.headers);\n\n    }\n\n    setHeaders(headers:IHeadersObject) {\n\n        this.utils.forEach(headers, (value:string, name:string) => {\n            this.setHeader(name, value);\n        });\n\n        return this;\n\n    }\n\n    isContentType(contentType:string):boolean {\n        return this.getContentType().indexOf(contentType) > -1;\n    }\n\n    getContentType():string {\n        return this.getHeader(Headers.contentType) || '';\n    }\n\n    isMultipart():boolean {\n        return this.isContentType(Headers.multipartContentType);\n    }\n\n    isUrlEncoded():boolean {\n        return this.isContentType(Headers.urlencodedContentType);\n    }\n\n    isJson():boolean {\n        return this.isContentType(Headers.jsonContentType);\n    }\n\n}\n\nexport interface IHeadersObject {\n    [name: string]: string;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/http/Headers.ts\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\n\nimport h = require('./Headers');\nimport utils = require('../Utils');\nimport log = require('../Log');\nimport context = require('../Context');\n\nexport class Response extends h.Headers {\n\n    static boundarySeparator = '--';\n    static headerSeparator = ':';\n    static bodySeparator = '\\n\\n';\n\n    public data:any;\n    public json:any;\n    public responses:Response[];\n    public error:Error;\n    public status:number;\n    public statusText:string;\n    public body:any;\n\n    private log:log.Log;\n\n    constructor(context:context.Context, status:number, statusText:string, body:any, headers?:any) {\n\n        super(context);\n\n        this.log = log.$get(context);\n\n        if (typeof(body) === 'string') {\n\n            body = body.replace(/\\r/g, '');\n\n            if (!headers) {\n\n                var tmp = body.split(Response.bodySeparator);\n\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n\n            }\n\n        }\n\n        /** @type {Response[]|object} */\n        this.data = null;\n\n        /** @type {object} */\n        this.json = null;\n\n        /** @type {Response[]} */\n        this.responses = [];\n\n        /** @type {Error} */\n        this.error = null;\n\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223) status = 204;\n\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n\n        try {\n\n            // Step 1. Parse headers\n\n            if (typeof(headers) === 'string') {\n\n                (headers || '')\n                    .split('\\n')\n                    .forEach((header:string) => {\n\n                                 if (!header) return;\n\n                                 /** @type {string[]} */\n                                 var parts = header.split(Response.headerSeparator),\n                                     name = parts.shift().trim();\n\n                                 this.setHeader(name, parts.join(Response.headerSeparator).trim());\n\n                             });\n\n            } else {\n\n                this.setHeaders(headers);\n\n            }\n\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n\n            if (!this.hasHeader(h.Headers.contentType)) this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n\n            // Step 2. Parse body\n\n            if (this.isJson() && !!this.body && typeof(this.body) === 'string') { // Handle 204 No Content -- response may be empty\n\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n\n                if (!this.checkStatus()) this.error = new Error(this.getError());\n\n            } else if (this.isMultipart()) { // Handle 207 Multi-Status\n\n                // Step 2.1. Split multipart response\n\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1],\n                    parts = this.body.split(Response.boundarySeparator + boundary);\n\n                if (parts[0].trim() === '') parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator) parts.pop();\n\n                // Step 2.2. Parse status info\n\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n\n                // Step 2.3. Parse all other parts\n\n                this.responses = parts.map((part:string, i) => {\n\n                    var status = statusInfo.data.response[i].status;\n\n                    return new Response(this.context, status, '', part);\n\n                });\n\n                this.data = this.responses; // backwards compatibility\n\n            } else { //TODO Add more parsers\n\n                this.data = this.body;\n\n            }\n\n        } catch (e) { // Capture parse errors\n\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n\n            this.error = e;\n\n        }\n\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isUnauthorized() {\n        return (this.status == 401);\n    }\n\n    checkStatus() {\n        return this.status >= 200 && this.status < 300;\n    }\n\n\n    getError() {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    }\n\n}\n\nexport function $get(context:context.Context, status:number, statusText:string, body:any, headers?:any):Response {\n\n    return new Response(context, status, statusText, body, headers);\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ../src/lib/core/http/Response.ts\n **/"],"sourceRoot":"/source/"}