{"version":3,"sources":["/source/rc-sdk.js","/source/core/pubnub/PubnubMock.js","/source/core/Utils.js","/source/core/Log.js","/source/core/xhr/XhrResponse.js","/source/core/xhr/XhrMock.js","/source/core/Context.js","/source/core/Observable.js","/source/core/AjaxObserver.js","/source/core/Ajax.js","/source/core/Cache.js","/source/core/Platform.js","/source/core/Subscription.js","/source/core/PageVisibility.js","/source/core/Helper.js","/source/core/Validator.js","/source/core/List.js","/source/helpers/Country.js","/source/helpers/DeviceModel.js","/source/helpers/Language.js","/source/helpers/State.js","/source/helpers/Location.js","/source/helpers/ShippingMethod.js","/source/helpers/Timezone.js","/source/helpers/Account.js","/source/helpers/BlockedNumber.js","/source/helpers/Extension.js","/source/helpers/Presence.js","/source/helpers/Contact.js","/source/helpers/Call.js","/source/helpers/Conferencing.js","/source/helpers/ContactGroup.js","/source/helpers/Device.js","/source/helpers/ForwardingNumber.js","/source/helpers/Message.js","/source/helpers/PhoneNumber.js","/source/helpers/Ringout.js","/source/helpers/Service.js","/source/RCSDK.js","/source/umd.js"],"names":["core_pubnub_PubnubMock","core_Utils","core_Log","core_xhr_XhrResponse","core_xhr_XhrMock","core_Context","core_Observable","core_AjaxObserver","core_Ajax","core_Cache","core_Platform","core_Subscription","core_PageVisibility","core_Helper","core_Validator","core_List","helpers_Country","helpers_DeviceModel","helpers_Language","helpers_State","helpers_Location","helpers_ShippingMethod","helpers_Timezone","helpers_Account","helpers_BlockedNumber","helpers_Extension","helpers_Presence","helpers_Contact","helpers_Call","helpers_Conferencing","helpers_ContactGroup","helpers_Device","helpers_ForwardingNumber","helpers_Message","helpers_PhoneNumber","helpers_Ringout","helpers_Service","RCSDK","exports","WS","url","pubnub","ready","onmessage","onclose","onerror","onopen","close","code","reason","wasClean","receiveMessage","data","$get","ws","hasOwn","Object","prototype","hasOwnProperty","toString","rdigit","class2type","split","forEach","name","toLowerCase","Utils","extend","options","src","copy","copyIsArray","clone","target","arguments","i","length","deep","isFunction","isPlainObject","isArray","undefined","object","cb","res","queryStringify","parameters","array","self","v","vv","push","encodeURIComponent","join","parseQueryString","queryString","argsParsed","arg","decodeURIComponent","indexOf","trim","pair","key","value","isEmail","multiple","test","isPhoneNumber","argumentsToArray","args","Array","slice","call","isDate","obj","type","isWindow","isNaN","String","nodeType","constructor","getProperty","property","eval","e","poll","fn","interval","timeout","stopPolling","next","delay","setTimeout","clearTimeout","parseString","s","parseNumber","n","parseFloat","Log","logDebug","logInfo","logWarnings","logErrors","addTimestamps","console","log","warn","info","error","disableAll","enableAll","parseArguments","unshift","Date","toLocaleString","debug","apply","XhrResponse","responses","add","response","clear","find","ajax","currentResponse","path","Class","context","createSingleton","XhrMock","async","method","requestHeaders","withCredentials","readyState","responseHeaders","status","getResponseHeader","header","setRequestHeader","open","send","contentType","getRequestHeader","JSON","parse","Error","bind","setStatus","setResponseHeader","stringify","responseText","onload","abort","Context","injections","singletons","stubPubnub","stubAjax","factory","usePubnubStub","flag","useAjaxStub","getCryptoJS","CryptoJS","getXHR","XHR","getPubnub","PUBNUB","getLocalStorage","localStorage","getPromise","Promise","Observable","defineProperty","enumerable","writable","hasListeners","event","listeners","registerOneTimeEvent","oneTimeEvents","oneTimeArguments","on","events","callback","isOneTimeEventFired","getOneTimeEventArgumens","emit","splice","result","isOneTimeEvent","setOneTimeEventFired","setOneTimeEventArgumens","some","off","offAll","destroy","emitAndCallback","concat","AjaxObserver","create","beforeRequest","requestSuccess","requestError","Ajax","headers","observer","xhr","boundarySeparator","headerSeparator","bodySeparator","getOptions","setOptions","getContentType","isMultipart","isUnauthorized","isLoaded","checkOptions","defaultHeaders","toUpperCase","get","post","resolve","then","request","parseResponse","catch","reject","checkStatus","substr","boundary","match","parts","shift","pop","map","part","subParts","replace","ajaxPart","reduce","headerParts","statusInfo","stack","message","error_description","description","Cache","prefix","storage","prefixKey","setItem","removeItem","getItem","item","clean","Platform","server","apiKey","account","urlPrefix","apiVersion","accountPrefix","accessTokenTtl","refreshTokenTtl","refreshTokenTtlRemember","refreshHandicapMs","clearCacheOnRefreshError","refreshPromise","forcedTokenType","cacheId","pollInterval","releaseTimeout","accessViolation","logoutSuccess","logoutError","authorizeSuccess","authorizeError","refreshSuccess","refreshError","getStorage","getAjax","clearStorage","remember","authorize","authCall","username","extension","password","setCache","isPaused","now","parseInt","pause","resume","refresh","refreshPolling","authData","getAuthData","access_token","refresh_token","refreshExpireTime","logout","token","getToken","isTokenValid","getTokenType","token_type","expires_in","refresh_token_expires_in","expireTime","getTime","isAuthorized","cancelAccessToken","oldAuthData","forceAuthentication","apiCall","apiUrl","addServer","Authorization","builtUrl","addMethod","addToken","Subscription","eventFilters","subscription","expirationTime","expiresIn","deliveryMode","transportType","encryption","address","subscriberKey","secretKey","id","creationTime","uri","socket","renewHandicapMs","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","createPubnub","getCrypto","getPlatform","register","isSubscribed","renew","subscribe","addEvents","setEvents","getFullEventFilters","updateSubscription","subscribeAtPubnub","unsubscribe","remove","timeToExpiration","CLOSE_NORMAL","notify","encryptionKey","enc","Base64","decrypted","AES","decrypt","ciphertext","mode","ECB","padding","pad","Pkcs7","Utf8","PageVisibility","onchange","evt","window","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","visible","document","hidden","change","addEventListener","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","isVisible","Helper","defaultProperty","getContext","createUrl","getId","isNew","getUri","resetAsNew","parseMultipartResponse","filter","loadRequest","saveRequest","deleteRequest","syncRequest","sync","syncToken","syncType","nextPageExists","navigation","index","getIdFn","gather","merge","supplement","mergeItems","supplementIndex","updatedIDs","newItem","Validator","validate","validators","errors","isValid","validator","field","email","phone","required","max","min","List","propertyExtractor","stringComparator","a","b","localeCompare","numberComparator","comparator","item1","item2","compareFn","extractFn","sortBy","equalsFilter","condition","containsFilter","regexpFilter","RegExp","filterConfigs","pass","opt","filterFn","filterBy","CountryHelper","DeviceModelHelper","device","addons","count","cleanForSaving","deviceClass","addon","devices","LanguageHelper","languages","StateHelper","countryHelper","countryId","opts","country","LocationHelper","state","uniqueNPAs","stateId","onlyUniqueNPA","npa","nxx","ShippingMethodHelper","shippingMethods","TimezoneHelper","AccountHelper","BlockedNumberHelper","extensionId","phoneNumber","ExtensionHelper","department","user","announcement","voicemail","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","search","toLocaleLowerCase","extensionNumber","PresenceHelper","detailed","presence","isAvailable","presenceStatus","getSubscription","presences","attachToExtensions","extensions","isCallInProgress","presenceCall","telephonyStatus","ContactHelper","root","groupId","getFieldValues","where","fields","asHash","getFullName","contact","nameFields","getEmails","emailFields","getPhones","phoneFields","getFaxes","faxFields","getAddresses","addressFields","isAlive","availability","string","matchWith","found","transformed","transformFn","strict","otherFields","inAddresses","addressSubFields","subField","matchAsPhone","attachToCallerInfos","callerInfos","contacts","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","alive","startsWith","phonesOnly","faxesOnly","firstName","lastName","email2","email3","CallHelper","personal","active","getSessionId","sessionId","isInProgress","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","duration","hours","Math","floor","mins","secs","attachContacts","calls","checkMergeability","outboundRingOutCall","inboundCall","dateString","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","secondCall","parsePresenceCalls","activeCalls","activeCall","getSignature","cleanup","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","ConferencingHelper","ContactGroupHelper","groupName","DeviceHelper","deviceModel","order","emergencyServiceAddress","street","city","zip","customerName","model","ForwardingNumberHelper","forwardingNumber","hasFeature","feature","features","MessageHelper","platform","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentUrl","attachments","getAttachmentContentType","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","validatePager","PhoneNumberHelper","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","RingoutHelper","ringout","callStatus","isSuccess","isError","ServiceHelper","isServiceFeatureEnabledMethod","serviceFeatures","isEnabled","f","featureName","enabled","isSmsEnabled","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","_context","XMLHttpRequest","ActiveXObject","e1","e2","e3","getPUBNUB","version","getAjaxObserver","getXhrResponse","getCache","getPageVisibility","getHelper","getObservable","getValidator","getLog","getUtils","getList","getCountryHelper","getDeviceModelHelper","getLanguageHelper","getLocationHelper","getShippingMethodHelper","getStateHelper","getTimezoneHelper","getAccountHelper","getBlockedNumberHelper","getCallHelper","getConferencingHelper","getContactHelper","getContactGroupHelper","getDeviceHelper","getExtensionHelper","getForwardingNumberHelper","getMessageHelper","getPhoneNumberHelper","getPresenceHelper","getRingoutHelper","getServiceHelper","Function","module","require","define","amd","noConflict","old"],"mappings":"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","file":"rc-sdk.min.js","sourcesContent":[null,"/**\n * istanbul ignore next\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/pubnub/PubnubMock', [\n    'require',\n    'exports',\n    'module'\n], function (require, exports, module) {\n    'use strict';\n    function WS(url) {\n        this.url = url;\n        this.pubnub = {\n            ready: function () {\n            }\n        };\n        this.onmessage = function () {\n        };\n        this.onclose = function () {\n        };\n        this.onerror = function () {\n        };\n        this.onopen = function () {\n        };\n        this.close = function (code, reason) {\n            this.onclose({\n                code: code,\n                reason: reason,\n                wasClean: true\n            });\n        };\n        /**\n         * This stub allows to simulate message arrival\n         * @param data\n         */\n        this.receiveMessage = function (data) {\n            this.onmessage({ data: data });\n        };\n        this.onopen();\n    }\n    /**\n     * @alias RCSDK.core.pubnub.Mock\n     * @type {PUBNUB}\n     */\n    module.exports = {\n        /**\n         * @param {Context} context\n         * @returns {PUBNUB}\n         */\n        $get: function (context) {\n            return { ws: WS };\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Utils', [\n    'require',\n    'exports',\n    'module'\n], function (require, exports, module) {\n    'use strict';\n    var hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n    // Populate the class2type map\n    'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n        class2type['[object ' + name + ']'] = name.toLowerCase();\n    });\n    /**\n     * @alias RCSDK.core.Utils\n     * @name Utils\n     */\n    var Utils = module.exports = {\n        /**\n         * Ported from jQuery.fn.extend\n         * Optional first parameter makes deep copy\n         * @param {object} targetObject\n         * @param {object} sourceObject\n         * @returns {object}\n         */\n        extend: function extend(targetObject, sourceObject) {\n            var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n            // Handle a deep copy situation\n            if (typeof target === 'boolean') {\n                deep = target;\n                // skip the boolean and the target\n                target = arguments[i] || {};\n                i++;\n            }\n            // Handle case when target is a string or something (possible in deep copy)\n            if (typeof target !== 'object' && !this.isFunction(target)) {\n                target = {};\n            }\n            for (; i < length; i++) {\n                // Only deal with non-null/undefined values\n                if ((options = arguments[i]) != null) {\n                    // Extend the base object\n                    for (name in options) {\n                        src = target[name];\n                        copy = options[name];\n                        // Prevent never-ending loop\n                        if (target === copy) {\n                            continue;\n                        }\n                        // Recurse if we're merging plain objects or arrays\n                        if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                            if (copyIsArray) {\n                                copyIsArray = false;\n                                clone = src && this.isArray(src) ? src : [];\n                            } else {\n                                clone = src && this.isPlainObject(src) ? src : {};\n                            }\n                            // Never move original objects, clone them\n                            target[name] = this.extend(deep, clone, copy);    // Don't bring in undefined values\n                        } else if (copy !== undefined) {\n                            target[name] = copy;\n                        }\n                    }\n                }\n            }\n            // Return the modified object\n            return target;\n        },\n        forEach: function (object, cb) {\n            for (var i in object) {\n                if (!object.hasOwnProperty(i))\n                    continue;\n                var res = cb(object[i], i);\n                if (res === false)\n                    break;\n            }\n        },\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n         * @param {object} parameters\n         * @returns {string}\n         */\n        queryStringify: function (parameters) {\n            var array = [], self = this;\n            this.forEach(parameters, function (v, i) {\n                if (self.isArray(v)) {\n                    v.forEach(function (vv) {\n                        array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                    });\n                } else {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n                }\n            });\n            return array.join('&');\n        },\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n         * @param {string} queryString\n         * @returns {object}\n         */\n        parseQueryString: function (queryString) {\n            var argsParsed = {}, self = this;\n            queryString.split('&').forEach(function (arg) {\n                arg = decodeURIComponent(arg);\n                if (arg.indexOf('=') == -1) {\n                    argsParsed[arg.trim()] = true;\n                } else {\n                    var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                    if (key in argsParsed) {\n                        if (key in argsParsed && !self.isArray(argsParsed[key]))\n                            argsParsed[key] = [argsParsed[key]];\n                        argsParsed[key].push(value);\n                    } else {\n                        argsParsed[key] = value;\n                    }\n                }\n            });\n            return argsParsed;\n        },\n        /**\n         * Returns true if the passed value is valid email address.\n         * @param {string} v\n         * @param {boolean} multiple Checks multiple comma separated emails according to RFC 2822\n         * @returns {boolean}\n         */\n        isEmail: function (v, multiple) {\n            if (!!multiple) {\n                //this Regexp is also suitable for multiple emails (comma separated)\n                return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n            } else {\n                return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n            }\n        },\n        isPhoneNumber: function (v) {\n            return /\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join(''));\n        },\n        /**\n         * @param args\n         * @returns {Array}\n         */\n        argumentsToArray: function (args) {\n            return Array.prototype.slice.call(args || [], 0);\n        },\n        isDate: function (obj) {\n            return this.type(obj) === 'date';\n        },\n        isFunction: function (obj) {\n            return this.type(obj) === 'function';\n        },\n        isArray: Array.isArray || function (obj) {\n            return this.type(obj) === 'array';\n        },\n        // A crude way of determining if an object is a window\n        isWindow: function (obj) {\n            return obj && typeof obj === 'object' && 'setInterval' in obj;\n        },\n        isNaN: function (obj) {\n            return obj == null || !rdigit.test(obj) || isNaN(obj);\n        },\n        type: function (obj) {\n            return obj == null ? String(obj) : class2type[toString.call(obj)] || 'object';\n        },\n        isPlainObject: function (obj) {\n            // Must be an Object.\n            // Because of IE, we also have to check the presence of the constructor property.\n            // Make sure that DOM nodes and window objects don't pass through, as well\n            if (!obj || this.type(obj) !== 'object' || obj.nodeType || this.isWindow(obj)) {\n                return false;\n            }\n            // Not own constructor property must be Object\n            if (obj.constructor && !hasOwn.call(obj, 'constructor') && !hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {\n                return false;\n            }\n            // Own properties are enumerated firstly, so to speed up,\n            // if last one is own, then all properties are own.\n            var key;\n            for (key in obj) {\n            }\n            return key === undefined || hasOwn.call(obj, key);\n        },\n        getProperty: function (obj, property) {\n            try {\n                return eval('obj.' + property);    //TODO Refactor\n            } catch (e) {\n                return undefined;\n            }\n        },\n        poll: function (fn, interval, timeout) {\n            this.stopPolling(timeout);\n            interval = interval || 1000;\n            var next = function (delay) {\n                delay = delay || interval;\n                interval = delay;\n                return setTimeout(function () {\n                    fn(next, delay);\n                }, delay);\n            };\n            return next();\n        },\n        stopPolling: function (timeout) {\n            timeout && clearTimeout(timeout);\n        },\n        parseString: function (s) {\n            return s ? s.toString() : '';\n        },\n        parseNumber: function (n) {\n            if (!n)\n                return 0;\n            n = parseFloat(n);\n            return isNaN(n) ? 0 : n;\n        },\n        $get: function (context) {\n            return Utils;\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Log', [\n    'require',\n    'exports',\n    'module',\n    'core/Utils'\n], function (require, exports, module) {\n    'use strict';\n    var Utils = require('./Utils');\n    /**\n     * @alias RCSDK.core.Log\n     * @name Log\n     */\n    var Log = module.exports = {\n        logDebug: false,\n        logInfo: false,\n        logWarnings: false,\n        logErrors: false,\n        addTimestamps: true,\n        /** @type {Console} */\n        console: console || {\n            // safety\n            log: function () {\n            },\n            warn: function () {\n            },\n            info: function () {\n            },\n            error: function () {\n            }\n        },\n        disableAll: function () {\n            this.logDebug = false;\n            this.logInfo = false;\n            this.logWarnings = false;\n            this.logErrors = false;\n        },\n        enableAll: function () {\n            this.logDebug = true;\n            this.logInfo = true;\n            this.logWarnings = true;\n            this.logErrors = true;\n        },\n        parseArguments: function (args) {\n            args = Utils.argumentsToArray(args);\n            if (this.addTimestamps)\n                args.unshift(new Date().toLocaleString(), '-');\n            return args;\n        },\n        debug: function () {\n            if (this.logDebug)\n                this.console.log.apply(this.console, this.parseArguments(arguments));\n        },\n        info: function () {\n            if (this.logInfo)\n                this.console.info.apply(this.console, this.parseArguments(arguments));\n        },\n        warn: function () {\n            if (this.logWarnings)\n                this.console.warn.apply(this.console, this.parseArguments(arguments));\n        },\n        error: function () {\n            if (this.logErrors)\n                this.console.error.apply(this.console, this.parseArguments(arguments));\n        },\n        $get: function (context) {\n            return Log;\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/xhr/XhrResponse', [\n    'require',\n    'exports',\n    'module'\n], function (require, exports, module) {\n    'use strict';\n    /**\n     * Ajax Response Manager\n     * @constructor\n     * @alias RCSDK.core.XhrResponse\n     */\n    function XhrResponse() {\n        /** @type {IXhrResponse[]} */\n        this.responses = [];\n    }\n    /**\n     * @param {IXhrResponse} response\n     */\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    /**\n     * @param {XhrMock} ajax\n     * @returns {IXhrResponse}\n     */\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    module.exports = {\n        Class: XhrResponse,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrResponse}\n         */\n        $get: function (context) {\n            return context.createSingleton('XhrResponse', function () {\n                return new XhrResponse(context);\n            });\n        }\n    };    /**\n     * @typedef {Object} IXhrResponse\n     * @property {string} path\n     * @property {function(Ajax)} response Response mock function\n     * @property {function(Ajax)} test? This will be executed to determine, whether this mock is applicable\n     */\n});","/**\n * istanbul ignore next\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/xhr/XhrMock', [\n    'require',\n    'exports',\n    'module',\n    'core/Log',\n    'core/Utils',\n    'core/xhr/XhrResponse'\n], function (require, exports, module) {\n    'use strict';\n    var Log = require('../Log'), Utils = require('../Utils');\n    /**\n     * @constructor\n     * @alias RCSDK.core.ajax.XhrMock\n     * @extends XMLHttpRequest\n     */\n    function XhrMock(context) {\n        // Service\n        this.responses = require('./XhrResponse').$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header] = value;\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = Utils.parseQueryString(this.data);\n        }\n        Log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                this.onerror && this.onerror(new Error('Unknown request: ' + this.url));\n            }.bind(this), 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this);\n        if (this.getResponseHeader('Content-Type') == 'application/json')\n            res = JSON.stringify(res);\n        this.responseText = res;\n        setTimeout(function () {\n            this.onload && this.onload();\n        }.bind(this), 1);\n    };\n    XhrMock.prototype.abort = function () {\n        Log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    module.exports = {\n        Class: XhrMock,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrMock}\n         */\n        $get: function (context) {\n            return new XhrMock(context);\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Context', [\n    'require',\n    'exports',\n    'module',\n    'core/pubnub/PubnubMock',\n    'core/xhr/XhrMock'\n], function (require, exports, module) {\n    'use strict';\n    /**\n     * @constructor\n     * @param {IInjections} injections\n     */\n    function Context(injections) {\n        /** @private */\n        this.singletons = {};\n        /** @type {IInjections} */\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    /**\n     * @param {string} name\n     * @param {function} factory\n     * @returns {*}\n     */\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    /**\n     * @returns {CryptoJS}\n     */\n    Context.prototype.getCryptoJS = function () {\n        return this.injections.CryptoJS;\n    };\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Context.prototype.getXHR = function () {\n        return this.injections.XHR;\n    };\n    /**\n     * @returns {PUBNUB}\n     */\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? require('./pubnub/PubnubMock').$get(this) : this.injections.PUBNUB;\n    };\n    /**\n     * @returns {Storage}\n     * @abstract\n     */\n    Context.prototype.getLocalStorage = function () {\n        return this.injections.localStorage;\n    };\n    /**\n     * @returns {function(new:Promise)}\n     */\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Context.prototype.getXHR = function () {\n        return this.stubAjax ? require('./xhr/XhrMock').$get(this) : new this.injections.XHR();\n    };\n    module.exports = {\n        Class: Context,\n        /**\n         * @param {IInjections} injections\n         */\n        $get: function (injections) {\n            return new Context(injections);\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Observable', [\n    'require',\n    'exports',\n    'module',\n    'core/Utils',\n    'core/Log'\n], function (require, exports, module) {\n    var Utils = require('./Utils'), Log = require('./Log');\n    /**\n     * @constructor\n     * @alias RCSDK.core.Observable\n     */\n    function Observable() {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', {\n            value: {},\n            enumerable: false,\n            writable: true\n        });\n        Object.defineProperty(this, 'oneTimeEvents', {\n            value: {},\n            enumerable: false,\n            writable: true\n        });\n        Object.defineProperty(this, 'oneTimeArguments', {\n            value: {},\n            enumerable: false,\n            writable: true\n        });\n    }\n    // Object.create({}) is not needed\n    // Do not put Object or Function.prototype instead of {}, otherwise all instances will get non-writable 'name' property\n    // Observable.prototype = {};\n    Object.defineProperty(Observable.prototype, 'constructor', {\n        value: Observable,\n        enumerable: false\n    });\n    Observable.prototype.hasListeners = function (event) {\n        return event in this.listeners;\n    };\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                // Fire listener immediately if is inited already\n                Log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        if (this.isOneTimeEventFired(event)) {\n            Log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var self = this, args = Utils.argumentsToArray(arguments).splice(1), result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(self, args);\n            return result === false;\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var self = this;\n        if (!callback) {\n            delete this.listeners[event];\n        } else {\n            if (!this.hasListeners(event))\n                return this;\n            this.listeners[event].forEach(function (cb, i) {\n                if (cb === callback)\n                    delete self.listeners[event][i];\n            });\n        }\n        return this;\n    };\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return event in this.oneTimeEvents;\n    };\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return this.oneTimeEvents[event];\n    };\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    Observable.prototype.offAll = function () {\n        this.listeners = {};\n        this.oneTimeEvents = {};\n        this.oneTimeArguments = {};\n    };\n    Observable.prototype.destroy = function () {\n        this.offAll();\n        Log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    /**\n     * @param {string} event\n     * @param {Array} args\n     * @param {function} [callback]\n     */\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = Utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    module.exports = {\n        Class: Observable,\n        /**\n         * @param {Context} context\n         * @returns {Observable}\n         */\n        $get: function (context) {\n            return new Observable(context);\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/AjaxObserver', [\n    'require',\n    'exports',\n    'module',\n    'core/Observable'\n], function (require, exports, module) {\n    'use strict';\n    var Observable = require('./Observable').Class;\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.AjaxObserver\n     */\n    function AjaxObserver() {\n        Observable.call(this);\n    }\n    AjaxObserver.prototype = Object.create(Observable.prototype);\n    AjaxObserver.prototype.events = {\n        beforeRequest: 'beforeRequest',\n        // parameters: ajax\n        requestSuccess: 'requestSuccess',\n        // means that response was successfully fetched from server\n        requestError: 'requestError'    // means that request failed completely\n    };\n    module.exports = {\n        Class: AjaxObserver,\n        /**\n         * @param {Context} context\n         * @returns {AjaxObserver}\n         */\n        $get: function (context) {\n            return context.createSingleton('AjaxObserver', function () {\n                return new AjaxObserver();\n            });\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Ajax', [\n    'require',\n    'exports',\n    'module',\n    'core/Observable',\n    'core/Utils',\n    'core/Log',\n    'core/AjaxObserver'\n], function (require, exports, module) {\n    'use strict';\n    var Observable = require('./Observable').Class, Utils = require('./Utils'), Log = require('./Log'), boundarySeparator = '--', headerSeparator = ':', bodySeparator = '\\n\\n';\n    /**\n     * @typedef {Object} IAjaxOptions\n     * @property {string} url\n     * @property {string} method?\n     * @property {boolean} async?\n     * @property {Object} post?\n     * @property {Object} headers?\n     */\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Ajax\n     * @param {Context} [context]\n     */\n    function Ajax(context) {\n        Observable.call(this);\n        /** @type {Ajax[]|object} */\n        this.data = null;\n        /** @type {Error|null} */\n        this.error = null;\n        this.response = '';\n        this.headers = {};\n        this.status = 0;\n        /**\n         * @type {IAjaxOptions}\n         * @protected\n         */\n        this.options = {};\n        this.context = context;\n        this.observer = require('./AjaxObserver').$get(context);\n        /** @type {XMLHttpRequest} */\n        this.xhr = null;\n    }\n    Ajax.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Ajax.prototype, 'constructor', {\n        value: Ajax,\n        enumerable: false\n    });\n    /**\n     * @returns {IAjaxOptions}\n     */\n    Ajax.prototype.getOptions = function () {\n        return this.options;\n    };\n    /**\n     * @param {IAjaxOptions} [options]\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setOptions = function (options) {\n        if (options)\n            this.options = options;\n        return this;\n    };\n    /**\n     * @returns {string}\n     */\n    Ajax.prototype.getContentType = function () {\n        return this.headers['Content-Type'] || '';\n    };\n    Ajax.prototype.isMultipart = function () {\n        return this.getContentType().indexOf('multipart/mixed') > -1;\n    };\n    Ajax.prototype.isUnauthorized = function () {\n        return this.status == 401;\n    };\n    Ajax.prototype.isLoaded = function () {\n        return !!this.status;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     * @returns {Ajax}\n     */\n    Ajax.prototype.checkOptions = function () {\n        if (!this.options.url)\n            throw new Error('Url is not defined');\n        var defaultHeaders = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        };\n        this.options.method = this.options.method ? this.options.method.toUpperCase() : 'GET';\n        this.options.async = this.options.async !== undefined ? this.options.async : true;\n        this.options.get = this.options.get || null;\n        this.options.headers = Utils.extend(defaultHeaders, this.options.headers);\n        this.options.post = this.options.post ? typeof this.options.post !== 'string' && this.options.headers['Content-Type'] === 'application/json' ? JSON.stringify(this.options.post) : this.options.post : '';\n        this.options.url = this.options.url + (this.options.get ? (this.options.url.indexOf('?') > -1 ? '&' : '?') + Utils.queryStringify(this.options.get) : '');\n        if ([\n                'GET',\n                'POST',\n                'PUT',\n                'DELETE',\n                'PATCH',\n                'OPTIONS'\n            ].indexOf(this.options.method) < 0)\n            throw new Error('Method has wrong value');\n        delete this.options.get;\n        return this;\n    };\n    /**\n     * @returns {Promise}\n     */\n    Ajax.prototype.send = function () {\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        return this.context.getPromise().resolve(this).then(this.checkOptions.bind(this)).then(this.request.bind(this)).then(function (ajax) {\n            ajax.parseResponse();\n            if (ajax.error)\n                throw ajax.error;\n            return ajax;\n        }.bind(this)).then(function (ajax) {\n            this.observer.emit(this.observer.events.requestSuccess, ajax);\n            return ajax;\n        }.bind(this)).catch(function (e) {\n            e.ajax = this;\n            this.observer.emit(this.observer.events.requestError, e);\n            throw e;\n        }.bind(this));\n    };\n    Ajax.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    /**\n     * @returns {Promise}\n     */\n    Ajax.prototype.request = function () {\n        return new (this.context.getPromise())(function (resolve, reject) {\n            var options = this.options, xhr = this.getXHR();\n            xhr.open(options.method, options.url, options.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                this.response = xhr.responseText;\n                this.headers = {\n                    //'RoutingKey': xhr.getResponseHeader('RoutingKey'),\n                    //'Date': xhr.getResponseHeader('Date'),\n                    'Content-Type': xhr.getResponseHeader('Content-Type')\n                };\n                this.status = xhr.status;\n                resolve(this);\n            }.bind(this);\n            xhr.onerror = function (event) {\n                reject(new Error('The request cannot be sent'));    // CORS or network issue\n            };\n            Utils.forEach(options.headers, function (value, header) {\n                xhr.setRequestHeader(header, value);\n            });\n            xhr.send(options.method === 'GET' ? null : options.post);\n            this.xhr = xhr;\n        }.bind(this));\n    };\n    Ajax.prototype.checkStatus = function (status) {\n        return status.toString().substr(0, 1) == '2';\n    };\n    Ajax.prototype.parseResponse = function () {\n        if (!this.isMultipart()) {\n            try {\n                if (typeof this.response == 'string' && this.getContentType().indexOf('application/json') != -1) {\n                    this.data = JSON.parse(this.response);\n                } else {\n                    this.data = this.response;    //TODO Add more parsers\n                }\n                if (!this.checkStatus(this.status))\n                    this.error = new Error(this.data.message || this.data.error_description || this.data.description || 'Unknown error');\n            } catch (e) {\n                // Capture parse errors\n                Log.error('Ajax.parseResponse(): Unable to parse data');\n                Log.error(e.stack || e);\n                Log.error(this.response);\n                this.error = e;\n            }\n        } else {\n            try {\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.response.split(boundarySeparator + boundary);\n                if (parts[0].trim() == '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == boundarySeparator)\n                    parts.pop();\n                // Step 1. Parse all parts into Ajax objects\n                parts = parts.map(function (part) {\n                    var subParts = part.trim().replace(/\\r/g, '').split(bodySeparator), ajaxPart = new Ajax(this.context);\n                    ajaxPart.headers = (subParts.length > 1 ? subParts.shift() : '').split('\\n').reduce(function (res, header) {\n                        if (header.length == 0)\n                            return res;\n                        var headerParts = header.split(headerSeparator), name = headerParts.shift().trim();\n                        res[name] = headerParts.join(headerSeparator).trim();\n                        return res;\n                    }, {});\n                    ajaxPart.response = subParts.join(bodySeparator);\n                    return ajaxPart;\n                }, this);\n                // Step 2. Claim first part as statuses, assign status from this and parse the response\n                var statusInfo = parts.shift();\n                statusInfo.status = this.status;\n                statusInfo.parseResponse();\n                // Steo 3. For the rest of parts assign status and parse the response\n                this.data = parts.map(function (part, i) {\n                    part.status = statusInfo.data.response[i].status;\n                    part.parseResponse();\n                    return part;\n                }, this);\n            } catch (e) {\n                Log.error('Ajax.parseResponse(): Unable to parse batch response');\n                Log.error(e.stack || e);\n                Log.error(this.response);\n                this.error = e;\n            }\n        }\n        return this;\n    };\n    Ajax.prototype.destroy = function () {\n        this.xhr && this.xhr.abort();\n        return Observable.prototype.destroy.call(this);\n    };\n    module.exports = {\n        Class: Ajax,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {Ajax}\n         */\n        $get: function (context) {\n            return new Ajax(context);\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Cache', [\n    'require',\n    'exports',\n    'module',\n    'core/Observable',\n    'core/Utils'\n], function (require, exports, module) {\n    'use strict';\n    var Observable = require('./Observable').Class, Utils = require('./Utils');\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Cache\n     * @param {Context} context\n     */\n    function Cache(context) {\n        Observable.call(this);\n        this.prefix = 'rc-';\n        this.storage = context.getLocalStorage();    // storage must be defined from outside\n    }\n    Cache.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Cache.prototype, 'constructor', {\n        value: Cache,\n        enumerable: false\n    });\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    module.exports = {\n        Class: Cache,\n        /**\n         * @param {Context} context\n         * @returns {Cache}\n         */\n        $get: function (context) {\n            return context.createSingleton('Cache', function () {\n                return new Cache(context);\n            });\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Platform', [\n    'require',\n    'exports',\n    'module',\n    'core/Utils',\n    'core/Observable',\n    'core/Log',\n    'core/Cache',\n    'core/Ajax'\n], function (require, exports, module) {\n    'use strict';\n    var Utils = require('./Utils'), Observable = require('./Observable').Class, Log = require('./Log'), forcedTokenType = 'forced';\n    /**\n     * @typedef {Object} PlatformAuthInfo\n     * @property {string} token_type\n     * @property {string} access_token\n     * @property {string} expires_in\n     * @property {int} expireTime\n     * @property {string} refresh_token\n     * @property {string} refresh_token_expires_in\n     * @property {int} refreshExpireTime\n     * @property {string} scope\n     */\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Platform\n     * @param {Context} context\n     */\n    function Platform(context) {\n        Observable.call(this);\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = 10 * 60;\n        // 10 minutes\n        this.refreshTokenTtl = 10 * 60 * 60;\n        // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60;\n        // 1 week\n        this.refreshHandicapMs = 60 * 1000;\n        // 1 minute\n        this.clearCacheOnRefreshError = true;\n        /** @type {Promise} */\n        this.refreshPromise = null;\n        this.context = context;\n    }\n    Platform.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Platform.prototype, 'constructor', {\n        value: Platform,\n        enumerable: false\n    });\n    Platform.prototype.cacheId = 'platform';\n    Platform.prototype.pollInterval = 250;\n    Platform.prototype.releaseTimeout = 5000;\n    // If queue was not released then force it to do so after some timeout\n    Platform.prototype.events = {\n        accessViolation: 'accessViolation',\n        logoutSuccess: 'logoutSuccess',\n        logoutError: 'logoutError',\n        authorizeSuccess: 'authorizeSuccess',\n        authorizeError: 'authorizeError',\n        refreshSuccess: 'refreshSuccess',\n        refreshError: 'refreshError'\n    };\n    /**\n     * @returns {Cache}\n     */\n    Platform.prototype.getStorage = function () {\n        return require('./Cache').$get(this.context);\n    };\n    /**\n     * @returns {Ajax}\n     */\n    Platform.prototype.getAjax = function () {\n        return require('./Ajax').$get(this.context);\n    };\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    /**\n     * @param {boolean} [remember]\n     * @returns {Platform|boolean}\n     */\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember != undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    /**\n     * @param {string} options.username\n     * @param {string} options.password\n     * @param {string} [options.extension]\n     * @param {boolean} [options.remember]\n     * @returns {Promise}\n     */\n    Platform.prototype.authorize = function (options) {\n        options = options || {};\n        options.remember = options.remember || false;\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: {\n                'grant_type': 'password',\n                'username': options.username,\n                'extension': options.extension || '',\n                'password': options.password,\n                'access_token_ttl': this.accessTokenTtl,\n                'refresh_token_ttl': options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n            }\n        }).then(function (ajax) {\n            this.setCache(ajax.data).remember(options.remember).emitAndCallback(this.events.authorizeSuccess, []);\n            return ajax;\n        }.bind(this)).catch(function (e) {\n            this.clearStorage().emitAndCallback(this.events.authorizeError, [e]);\n            throw e;\n        }.bind(this));\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    /**\n     * Gets resolved into Ajax or null if refresh resolved from elsewhere\n     * @returns {Promise}\n     */\n    Platform.prototype.refresh = function () {\n        return this.context.getPromise().resolve(null).then(function (result) {\n            if (this.isPaused())\n                return this.refreshPolling(result);\n            this.pause();\n            var authData = this.getAuthData();\n            Log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n            if (!authData || !authData.refresh_token)\n                throw new Error('Refresh token is missing');\n            if (Date.now() > authData.refreshExpireTime)\n                throw new Error('Refresh token has expired');\n            return this.authCall({\n                url: '/restapi/oauth/token',\n                post: {\n                    'grant_type': 'refresh_token',\n                    'refresh_token': authData.refresh_token,\n                    'access_token_ttl': this.accessTokenTtl,\n                    'refresh_token_ttl': this.remember() ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                }\n            }).then(function (ajax) {\n                Log.info('Platform.refresh(): Token was refreshed');\n                if (!ajax.data || !ajax.data.refresh_token || !ajax.data.access_token) {\n                    var e = new Error('Malformed OAuth response');\n                    e.ajax = ajax;\n                    throw e;\n                }\n                this.setCache(ajax.data).resume();\n                return ajax;\n            }.bind(this));\n        }.bind(this)).then(function (result) {\n            this.emit(this.events.refreshSuccess, result);\n            return result;\n        }.bind(this)).catch(function (e) {\n            if (this.clearCacheOnRefreshError)\n                this.clearStorage();\n            this.emitAndCallback(this.events.accessViolation, [e]).emitAndCallback(this.events.refreshError, [e]);\n            throw e;\n        }.bind(this));\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            get: { token: this.getToken() }\n        }).then(function (ajax) {\n            this.resume().clearStorage().emit(this.events.logoutSuccess, ajax);\n            return ajax;\n        }.bind(this)).catch(function (e) {\n            this.resume().emitAndCallback(this.events.accessViolation, [e]).emitAndCallback(this.events.logoutError, [e]);\n            throw e;\n        }.bind(this));\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            Log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            Utils.poll(function (next) {\n                if (this.isPaused())\n                    return next();\n                this.refreshPromise = null;\n                this.resume();\n                if (this.isTokenValid()) {\n                    resolve(result);\n                } else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }.bind(this), this.pollInterval);\n        }.bind(this));\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    /**\n     * @returns {PlatformAuthInfo}\n     */\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     * @returns {boolean}\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return authData.token_type == forcedTokenType || new Date(authData.expireTime).getTime() - this.refreshHandicapMs > Date.now();\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     * @returns {Promise}\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(Utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    /**\n     * @param {object} authData\n     * @returns {Platform}\n     */\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        Log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + authData.expires_in * 1000;\n        authData.refreshExpireTime = Date.now() + authData.refresh_token_expires_in * 1000;\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.apiCall = function (options) {\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized()    // Refresh will occur inside\n.then(function () {\n            var token = this.getToken();\n            options.headers = options.headers || {};\n            options.headers.Authorization = this.getTokenType() + (token ? ' ' + token : '');\n            return this.getAjax().setOptions(options).send();\n        }.bind(this)).catch(function (e) {\n            if (!e.ajax || !e.ajax.isUnauthorized())\n                throw e;\n            this.cancelAccessToken();\n            return this.refresh().then(function () {\n                // Re-send with same options\n                return this.apiCall(options);\n            }.bind(this));\n        }.bind(this));\n    };\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.headers = Utils.extend({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json',\n            'Authorization': 'Basic ' + this.apiKey\n        }, options.headers || {});\n        options.method = options.method || 'POST';\n        options.post = Utils.queryStringify(options.post);\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getAjax().setOptions(options).send();\n    };\n    /**\n     *\n     * @param url\n     * @param {{addMethod?: string, addToken?: boolean, addServer?: boolean}} [options]\n     * @returns {string}\n     */\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '';\n        if (options.addServer && url.indexOf('http://') == -1 && url.indexOf('https://') == -1)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += url.indexOf('?') > -1 ? '&' : '?';\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    module.exports = {\n        Class: Platform,\n        /**\n         * @param {Context} context\n         * @returns {Platform}\n         */\n        $get: function (context) {\n            return context.createSingleton('Platform', function () {\n                return new Platform(context);\n            });\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Subscription', [\n    'require',\n    'exports',\n    'module',\n    'core/Observable',\n    'core/Log',\n    'core/Utils',\n    'core/Platform'\n], function (require, exports, module) {\n    'use strict';\n    var Observable = require('./Observable').Class, Log = require('./Log'), Utils = require('./Utils'), renewHandicapMs = 60 * 1000;\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Subscription\n     * @param {Context} context\n     */\n    function Subscription(context) {\n        Observable.call(this);\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            // 2014-03-12T19:54:35.613Z\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            // 2014-03-12T19:54:35.613Z\n            status: '',\n            // Active\n            uri: ''\n        };\n        /** @type {PUBNUB.ws} */\n        this.socket = null;\n        this.context = context;\n    }\n    Subscription.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Subscription.prototype, 'constructor', {\n        value: Subscription,\n        enumerable: false\n    });\n    Subscription.prototype.events = {\n        notification: 'notification',\n        removeSuccess: 'removeSuccess',\n        removeError: 'removeError',\n        renewSuccess: 'renewSuccess',\n        renewError: 'renewError',\n        subscribeSuccess: 'subscribeSuccess',\n        subscribeError: 'subscribeError'\n    };\n    /**\n     * @param {string} url\n     * @returns {PUBNUB.ws}\n     */\n    Subscription.prototype.createPubnub = function (url) {\n        return new (this.getPubnub()).ws(url);\n    };\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getCrypto = function () {\n        return this.context.getCryptoJS();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return require('./Platform').$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        } else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        return this.eventFilters.map(function (event) {\n            return this.getPlatform().apiUrl(event);\n        }.bind(this));\n    };\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.subscribe = function (options) {\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!this.eventFilters || !this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }.bind(this)).then(function () {\n            return this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: this.getFullEventFilters(),\n                    deliveryMode: { transportType: 'PubNub' }\n                }\n            });\n        }.bind(this)).then(function (ajax) {\n            this.updateSubscription(ajax.data).subscribeAtPubnub().emit(this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }.bind(this)).catch(function (e) {\n            this.unsubscribe().emit(this.events.subscribeError, e);\n            throw e;\n        }.bind(this));\n    };\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.renew = function (options) {\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!this.subscription || !this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!this.eventFilters || !this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }.bind(this)).then(function () {\n            return this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + this.subscription.id,\n                post: { eventFilters: this.getFullEventFilters() }\n            });\n        }.bind(this)).then(function (ajax) {\n            this.updateSubscription(ajax.data).emit(this.events.renewSuccess, ajax.data);\n            return ajax;\n        }.bind(this)).catch(function (e) {\n            this.unsubscribe().emit(this.events.renewError, e);\n            throw e;\n        }.bind(this));\n    };\n    /**\n     * @param {boolean} [options.async]\n     * @returns {Promise}\n     */\n    Subscription.prototype.remove = function (options) {\n        options = Utils.extend({ async: true }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!this.subscription || !this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve();\n        }.bind(this)).then(function () {\n            return this.getPlatform().apiCall({\n                async: !!options.async,\n                // Warning! This is necessary because this method is used in beforeunload hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + this.subscription.id\n            });\n        }.bind(this)).then(function (ajax) {\n            this.unsubscribe().emit(this.events.removeSuccess, ajax);\n            return ajax;\n        }.bind(this)).catch(function (e) {\n            this.unsubscribe().emit(this.events.removeError, e);\n            throw e;\n        }.bind(this));\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        return Observable.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription && this.subscription.deliveryMode && this.subscription.deliveryMode.subscriberKey && this.subscription.deliveryMode.address;\n    };\n    /**\n     * @protected\n     */\n    Subscription.prototype.setTimeout = function () {\n        var timeToExpiration = this.subscription.expiresIn * 1000 - renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            this.renew({});\n        }.bind(this), timeToExpiration);\n    };\n    /**\n     * @protected\n     */\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    /**\n     * Set new subscription info and re-create timeout\n     * @protected\n     * @param subscription\n     * @returns {Subscription}\n     */\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from socket\n     * @protected\n     * @returns {Subscription}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.socket && this.socket.close(this.socket.CLOSE_NORMAL, 'Connection terminated by client');\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * @abstract\n     * @param {Object} message\n     * @returns {Subscription}\n     */\n    Subscription.prototype.notify = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var CryptoJS = this.getCrypto();\n            var key = CryptoJS.enc.Base64.parse(this.subscription.deliveryMode.encryptionKey);\n            var data = CryptoJS.enc.Base64.parse(message);\n            var decrypted = CryptoJS.AES.decrypt({ ciphertext: data }, key, {\n                mode: CryptoJS.mode.ECB,\n                padding: CryptoJS.pad.Pkcs7\n            }).toString(CryptoJS.enc.Utf8);\n            message = JSON.parse(decrypted);\n        }\n        this.emit(this.events.notification, message);\n        return this;\n    };\n    /**\n     * @returns {Subscription}\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        if (!this.isSubscribed())\n            return this;\n        // ws(s)://ORIGIN/PUBLISH_KEY/SUBSCRIBE_KEY/CHANNEL\n        var url = 'wss://pubsub.pubnub.com//' + this.subscription.deliveryMode.subscriberKey + '/' + this.subscription.deliveryMode.address;\n        this.socket = this.createPubnub(url);\n        this.socket.pubnub && this.socket.pubnub.ready();\n        //TODO This may be unnecessary\n        this.socket.onmessage = function (e) {\n            Log.info('Subscription: Socket received message', e);\n            this.notify(e.data);\n        }.bind(this);\n        this.socket.onclose = function () {\n            Log.info('Subscription: Socket closed');\n        };\n        this.socket.onerror = function (e) {\n            Log.error('Subscription: Socket error');\n            Log.error(e.stack || e);\n        };\n        this.socket.onopen = function () {\n            Log.info('Subscription: Socket open');\n        };\n        return this;\n    };\n    module.exports = {\n        Class: Subscription,\n        /**\n         * @param {Context} context\n         * @returns {Subscription}\n         */\n        $get: function (context) {\n            return new Subscription(context);\n        }\n    };\n});","/**\n * istanbul ignore next\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/PageVisibility', [\n    'require',\n    'exports',\n    'module',\n    'core/Observable'\n], function (require, exports, module) {\n    'use strict';\n    var Observable = require('./Observable').Class;\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.PageVisibility\n     */\n    function PageVisibility() {\n        Observable.call(this);\n        var hidden = 'hidden', self = this;\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener('visibilitychange', onchange);\n        else if ((hidden = 'mozHidden') in document)\n            document.addEventListener('mozvisibilitychange', onchange);\n        else if ((hidden = 'webkitHidden') in document)\n            document.addEventListener('webkitvisibilitychange', onchange);\n        else if ((hidden = 'msHidden') in document)\n            document.addEventListener('msvisibilitychange', onchange);    // IE 9 and lower:\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;    // All others:\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n        function onchange(evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                    focus: v,\n                    focusin: v,\n                    pageshow: v,\n                    blur: h,\n                    focusout: h,\n                    pagehide: h\n                };\n            self.visible = evt.type in evtMap ? evtMap[evt.type] == v : !document[hidden];\n            self.emit(self.events.change, self.visible);\n        }\n    }\n    PageVisibility.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(PageVisibility.prototype, 'constructor', {\n        value: PageVisibility,\n        enumerable: false\n    });\n    PageVisibility.prototype.events = { change: 'change' };\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    module.exports = {\n        Class: PageVisibility,\n        /**\n         * @param {Context} context\n         * @returns {PageVisibility}\n         */\n        $get: function (context) {\n            return new PageVisibility();\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Helper', [\n    'require',\n    'exports',\n    'module',\n    'core/Utils'\n], function (require, exports, module) {\n    'use strict';\n    var Utils = require('./Utils');\n    /**\n     * @alias RCSDK.core.Helper\n     * @constructor\n     * @param {Context} context\n     */\n    function Helper(context) {\n        this.context = context;\n    }\n    Helper.prototype.defaultProperty = 'id';\n    /**\n     * @returns {Context}\n     */\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    /**\n     * @param {object} [options]\n     * @param {string} [id]\n     */\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {boolean}\n     */\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {IHelperObject}\n     */\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    /**\n     * @param {Ajax} ajax\n     * @return {IHelperObject[]}\n     */\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // Response is multipart (multiple IDs)\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return !result.error;\n            }).map(function (result) {\n                return result.data;\n            });\n        } else {\n            // Single ID\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} [object]\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return Utils.extend(options || {}, {\n            url: options && options.url || object && this.getUri(object) || this.createUrl(),\n            method: options && options.method || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && options.post))\n            throw new Error('No Object');\n        return Utils.extend(options || {}, {\n            method: options && options.method || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: options && options.url || this.getUri(object) || this.createUrl(),\n            post: options && options.post || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return Utils.extend(options || {}, {\n            method: options && options.method || 'DELETE',\n            url: options && options.url || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.get = options.get || {};\n        if (!!options.get.syncToken) {\n            options.get = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        } else {\n            options.get.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return data && data.navigation && 'nextPage' in data.navigation;\n    };\n    /**\n     * @param {IHelperObject[]} array - an array to be indexed\n     * @param {function(object)} [getIdFn] - must return an ID for each array item\n     * @param {boolean} [gather] - if true, then each index will have an array of items, that has same ID, otherwise the first indexed item wins\n     * @returns {*}\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || index[id] && !gather)\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            } else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * @param {IHelperObject[]} target\n     * @param {IHelperObject[]} supplement\n     * @param {function(IHelperObject)} [getIdFn]\n     * @param {boolean} [mergeItems] - if true, properties of _supplement_ item will be applied to _target_ item, otherwise _target_ item will be replaced\n     * @returns {*}\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [];\n        var result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? mergeItems ? Utils.extend(item, newItem) : newItem : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    module.exports = {\n        Class: Helper,\n        /**\n         * @param {Context} context\n         * @returns {Helper}\n         */\n        $get: function (context) {\n            return new Helper(context);\n        }\n    };    /**\n     * @typedef {object} IHelperObject\n     * @property {string} id\n     * @property {string} uri\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/Validator', [\n    'require',\n    'exports',\n    'module',\n    'core/Utils'\n], function (require, exports, module) {\n    'use strict';\n    var Utils = require('./Utils');\n    /**\n     * @typedef {object} IValidator\n     * @property {string} field\n     * @property {function} validator\n     */\n    /**\n     * @typedef {object} IValidatorResult\n     * @property {boolean} isValid\n     * @property {Object.<number, Error[]>} errors\n     */\n    /**\n     * @alias RCSDK.core.Validator\n     * @name Validator\n     */\n    var Validator = module.exports = {\n        /**\n         * @param {IValidator[]} validators\n         * @returns {IValidatorResult}\n         */\n        validate: function (validators) {\n            /** @type {IValidatorResult} */\n            var result = {\n                errors: {},\n                isValid: true\n            };\n            result.errors = validators.reduce(function (errors, validator) {\n                var res = validator.validator();\n                if (res.length > 0) {\n                    result.isValid = false;\n                    errors[validator.field] = errors[validator.field] || [];\n                    errors[validator.field] = errors[validator.field].concat(res);\n                }\n                return errors;\n            }, {});\n            return result;\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * @deprecated\n         * @param value\n         * @param multiple\n         * @returns {Function}\n         */\n        email: function (value, multiple) {\n            return function () {\n                if (!value)\n                    return [];\n                return Utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n            };\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * TODO International phone numbers\n         * @deprecated\n         * @param value\n         * @returns {Function}\n         */\n        phone: function (value) {\n            return function () {\n                if (!value)\n                    return [];\n                return Utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n            };\n        },\n        required: function (value) {\n            return function () {\n                return !value ? [new Error('Field is required')] : [];\n            };\n        },\n        length: function (value, max, min) {\n            return function () {\n                var errors = [];\n                if (!value)\n                    return errors;\n                value = value.toString();\n                if (min && value.length < min)\n                    errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n                if (max && value.length > max)\n                    errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n                return errors;\n            };\n        },\n        $get: function (context) {\n            return Validator;\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('core/List', [\n    'require',\n    'exports',\n    'module',\n    'core/Utils'\n], function (require, exports, module) {\n    'use strict';\n    var Utils = require('./Utils');\n    /**\n     * @alias RCSDK.core.List\n     * @name List\n     */\n    var List = module.exports = {\n        /**\n         * @param {string} property\n         * @returns {function(object)}\n         */\n        propertyExtractor: function (property) {\n            return function (item, options) {\n                return property ? item && item[property] || null : item;\n            };\n        },\n        /**\n         * Non-string types are converted to string\n         * Non-string types are extracted as an empty string if they could be converted to false\n         * If no options.sortBy given the item itself is extracted\n         * Compares strings:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {string} a\n         * @param {string} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        stringComparator: function (a, b, options) {\n            return Utils.parseString(a).localeCompare(Utils.parseString(b));\n        },\n        /**\n         * Non-numeric types are extracted as 0 if they could be converted to false\n         * Objects that could not be converted to number are extracted as 0\n         * If no options.sortBy given the item itself is extracted\n         * See parseFloat for more info\n         * Compares numbers:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Function does not check types\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {number} a\n         * @param {number} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        numberComparator: function (a, b, options) {\n            return Utils.parseNumber(a) - Utils.parseNumber(b);\n        },\n        /**\n         * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n         * compare function (_compareFn_ option, by default Helper.stringComparator)\n         * Merged options are provided to _extractFn_ and _compareFn_\n         * TODO Check memory leaks for all that options links\n         * @param {IListComparatorOptions} [options]\n         * @returns {function(object, object)}\n         */\n        comparator: function (options) {\n            options = Utils.extend({\n                extractFn: this.propertyExtractor(options && options.sortBy || null),\n                compareFn: this.stringComparator\n            }, options);\n            /**\n             * @param {object} item1\n             * @param {object} item2\n             * @returns {number}\n             */\n            function comparator(item1, item2) {\n                return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n            }\n            return comparator;\n        },\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        equalsFilter: function (obj, options) {\n            return options.condition === obj;\n        },\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        containsFilter: function (obj, options) {\n            return obj && obj.toString().indexOf(options.condition) > -1;\n        },\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options - `condition` must be an instance of RegExp\n         * @returns {boolean}\n         */\n        regexpFilter: function (obj, options) {\n            if (!(options.condition instanceof RegExp))\n                throw new Error('Condition must be an instance of RegExp');\n            return options.condition.test(obj);\n        },\n        /**\n         * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n         * compare function (`filterFn` option, by default Helper.equalsFilter)\n         * Merged options are provided to `extractFn` and `compareFn`\n         * Set `filterBy` to null to force `propertyExtractor` to return object itself\n         * TODO Check memory leaks for all that options links\n         * @param {IListFilterOptions[]} [filterConfigs]\n         * @returns {function(object)}\n         */\n        filter: function (filterConfigs) {\n            var self = this;\n            filterConfigs = (filterConfigs || []).map(function (opt) {\n                return Utils.extend({\n                    condition: '',\n                    extractFn: self.propertyExtractor(opt && opt.filterBy || null),\n                    filterFn: self.equalsFilter\n                }, opt);\n            });\n            /**\n             * @param {object} item\n             * @returns {boolean}\n             */\n            function filter(item) {\n                return filterConfigs.reduce(function (pass, opt) {\n                    if (!pass || !opt.condition)\n                        return pass;\n                    return opt.filterFn(opt.extractFn(item, opt), opt);\n                }, true);\n            }\n            return filter;\n        },\n        $get: function (context) {\n            return List;\n        }\n    };    /**\n     * @typedef {object} IListComparatorOptions\n     * @property {string} sortBy\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} compareFn\n     */\n          /**\n     * @typedef {object} IListFilterOptions\n     * @property {string} filterBy\n     * @property {object} condition\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} filterFn\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Country', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CountryHelper(context) {\n        Helper.call(this, context);\n    }\n    CountryHelper.prototype = Object.create(Helper.prototype);\n    CountryHelper.prototype.createUrl = function () {\n        return '/dictionary/country';\n    };\n    module.exports = {\n        Class: CountryHelper,\n        /**\n         * @param {Context} context\n         * @returns {CountryHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('CountryHelper', function () {\n                return new CountryHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} ICountry\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} callingCode\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/DeviceModel', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceModelHelper(context) {\n        Helper.call(this, context);\n    }\n    DeviceModelHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * @param {IDeviceModel} device\n     * @returns {string}\n     */\n    DeviceModelHelper.prototype.getId = function (device) {\n        if (!device)\n            return null;\n        return device.id + (device.addons && device.addons[0] ? '-' + device.addons[0].id + '-' + device.addons[0].count : '');\n    };\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     * @param {IDeviceModel} device\n     * @returns {IDeviceModel}\n     */\n    DeviceModelHelper.prototype.cleanForSaving = function (device) {\n        if (!device)\n            return null;\n        delete device.name;\n        delete device.deviceClass;\n        if (device.addons && device.addons.length > 0) {\n            device.addons.forEach(function (addon, i) {\n                delete device.addons[i].name;\n            });\n        } else {\n            delete device.addons;\n        }\n        return device;\n    };\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n     * @type {IDeviceModel[]}\n     */\n    DeviceModelHelper.prototype.devices = [\n        {\n            id: '-1',\n            name: 'Softphone'\n        },\n        {\n            id: '0',\n            name: 'Existing device'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '23',\n            name: 'Polycom IP 321 Basic IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '30',\n            name: 'Polycom IP 550 HD Manager IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '37',\n            name: 'Polycom IP 6000 Conference Phone',\n            deviceClass: 'Conference Phone'\n        },\n        {\n            id: '40',\n            name: 'Polycom IP 335 HD IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '51',\n            name: 'Cisco SPA-303 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [{\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [{\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [{\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }]\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\\tDesk Phone',\n            addons: [{\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [{\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '1'\n                }]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [{\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '2'\n                }]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [{\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '3'\n                }]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '52',\n            name: 'Cisco SPA-122 ATA',\n            deviceClass: 'Analog Adapter'\n        },\n        {\n            id: '53',\n            name: 'Polycom VVX-500 Color Touchscreen',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '54',\n            name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '55',\n            name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        }\n    ];\n    module.exports = {\n        Class: DeviceModelHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceModelHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('DeviceModelHelper', function () {\n                return new DeviceModelHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IDeviceModel\n     * @property {string} id\n     * @property {string} name\n     * @property {string} deviceClass\n     * @property {string} addons\n     */\n          /**\n     * @typedef {Object} IDeviceModelAddon\n     * @property {string} id\n     * @property {string} name\n     * @property {string} count\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Language', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LanguageHelper(context) {\n        Helper.call(this, context);\n    }\n    LanguageHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * @type {ILanguage[]}\n     */\n    LanguageHelper.prototype.languages = [\n        {\n            id: '1033',\n            name: 'English (US)'\n        },\n        {\n            id: '3084',\n            name: 'French (Canada)'\n        }\n    ];\n    module.exports = {\n        Class: LanguageHelper,\n        /**\n         * @param {Context} context\n         * @returns {LanguageHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('LanguageHelper', function () {\n                return new LanguageHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} ILanguage\n     * @property {string} id\n     * @property {string} name\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/State', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/List',\n    'core/Utils',\n    'helpers/Country'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, List = require('../core/List'), Utils = require('../core/Utils');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function StateHelper(context) {\n        Helper.call(this, context);\n        this.countryHelper = require('./Country').$get(context);\n    }\n    StateHelper.prototype = Object.create(Helper.prototype);\n    StateHelper.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    /**\n     * @param {IStateOptions} options\n     * @returns {function(IState)}\n     */\n    StateHelper.prototype.filter = function (options) {\n        options = Utils.extend({ countryId: '' }, options);\n        return List.filter([{\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return this.countryHelper.getId(item.country) == opts.condition;\n                }.bind(this)\n            }]);\n    };\n    module.exports = {\n        Class: StateHelper,\n        /**\n         * @param {Context} context\n         * @returns {StateHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('StateHelper', function () {\n                return new StateHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IState\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {ICountry} country\n     */\n          /**\n     * @typedef {object} IStateOptions\n     * @property {string} countryId\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Location', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/List',\n    'core/Utils',\n    'helpers/State'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, List = require('../core/List'), Utils = require('../core/Utils');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LocationHelper(context) {\n        Helper.call(this, context);\n        this.state = require('./State').$get(context);\n    }\n    LocationHelper.prototype = Object.create(Helper.prototype);\n    LocationHelper.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    /**\n     * @param {ILocationFilterOptions} options\n     * @returns {function(ILocation)}\n     */\n    LocationHelper.prototype.filter = function (options) {\n        var uniqueNPAs = [];\n        options = Utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return List.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return this.state.getId(item.state) == opts.condition;\n                }.bind(this)\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    } else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {comparator}\n     */\n    LocationHelper.prototype.comparator = function (options) {\n        options = Utils.extend({ sortBy: 'npa' }, options);\n        if (options.sortBy == 'nxx') {\n            /**\n             * @param {ILocation} item\n             * @returns {number}\n             */\n            options.extractFn = function (item) {\n                return parseInt(item.npa) * 1000000 + parseInt(item.nxx);\n            };\n            options.compareFn = List.numberComparator;\n        }\n        return List.comparator(options);\n    };\n    module.exports = {\n        Class: LocationHelper,\n        /**\n         * @param {Context} context\n         * @returns {LocationHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('LocationHelper', function () {\n                return new LocationHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} ILocation\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {IState} state\n     */\n          /**\n     * @typedef {object} ILocationFilterOptions\n     * @property {string} stateId\n     * @property {boolean} onlyUniqueNPA\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/ShippingMethod', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ShippingMethodHelper(context) {\n        Helper.call(this, context);\n    }\n    ShippingMethodHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-3 id done\n     * @type {IShippingMethod[]}\n     */\n    ShippingMethodHelper.prototype.shippingMethods = [\n        {\n            id: '1',\n            name: 'Ground Shipping (5-7 business days)'\n        },\n        {\n            id: '2',\n            name: '2-days Shipping'\n        },\n        {\n            id: '3',\n            name: 'Overnight Shipping'\n        }\n    ];\n    module.exports = {\n        Class: ShippingMethodHelper,\n        /**\n         * @param {Context} context\n         * @returns {ShippingMethodHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('ShippingMethodHelper', function () {\n                return new ShippingMethodHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IShippingMethod\n     * @property {string} id\n     * @property {string} name\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Timezone', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function TimezoneHelper(context) {\n        Helper.call(this, context);\n    }\n    TimezoneHelper.prototype = Object.create(Helper.prototype);\n    TimezoneHelper.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    module.exports = {\n        Class: TimezoneHelper,\n        /**\n         * @param {Context} context\n         * @returns {TimezoneHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('TimezoneHelper', function () {\n                return new TimezoneHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} ITimezone\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} description\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Account', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function AccountHelper(context) {\n        Helper.call(this, context);\n    }\n    AccountHelper.prototype = Object.create(Helper.prototype);\n    AccountHelper.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    module.exports = {\n        Class: AccountHelper,\n        /**\n         * @param {Context} context\n         * @returns {AccountHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('AccountHelper', function () {\n                return new AccountHelper(context);\n            });\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/BlockedNumber', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Validator'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Validator = require('../core/Validator');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function BlockedNumberHelper(context) {\n        Helper.call(this, context);\n    }\n    BlockedNumberHelper.prototype = Object.create(Helper.prototype);\n    /**\n     *\n     * @param {IBlockedNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    BlockedNumberHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId ? options.extensionId : '~') + '/blocked-number' + (id ? '/' + id : '');\n    };\n    /**\n     * @param {IBlockedNumber} item\n     */\n    BlockedNumberHelper.prototype.validate = function (item) {\n        return Validator.validate([\n            {\n                field: 'phoneNumber',\n                validator: Validator.phone(item.phoneNumber)\n            },\n            {\n                field: 'phoneNumber',\n                validator: Validator.required(item.phoneNumber)\n            },\n            {\n                field: 'name',\n                validator: Validator.required(item.name)\n            }\n        ]);\n    };\n    module.exports = {\n        Class: BlockedNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {BlockedNumberHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('BlockedNumberHelper', function () {\n                return new BlockedNumberHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IBlockedNumber\n     * @property {string} name\n     * @property {string} phoneNumber\n     */\n          /**\n     * @typedef {object} IBlockedNumberOptions\n     * @property {string} extensionId\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Extension', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/List',\n    'core/Utils'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, List = require('../core/List'), Utils = require('../core/Utils');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ExtensionHelper(context) {\n        Helper.call(this, context);\n    }\n    ExtensionHelper.prototype = Object.create(Helper.prototype);\n    ExtensionHelper.prototype.type = {\n        department: 'Department',\n        user: 'User',\n        announcement: 'Announcement',\n        voicemail: 'Voicemail'\n    };\n    /**\n     *\n     * @param {IExtensionOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ExtensionHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' + (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') + (id ? '/' + id : '');\n    };\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ExtensionHelper.prototype.comparator = function (options) {\n        return List.comparator(Utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: List.numberComparator\n        }, options));\n    };\n    /**\n     * @param {IExtensionFilterOptions} [options]\n     * @returns {function(IExtension)}\n     */\n    ExtensionHelper.prototype.filter = function (options) {\n        options = Utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return List.filter([\n            {\n                filterBy: 'type',\n                condition: options.type\n            },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: List.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && item.name.toLocaleLowerCase() + ' ') + (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    module.exports = {\n        Class: ExtensionHelper,\n        /**\n         * @param {Context} context\n         * @returns {ExtensionHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('ExtensionHelper', function () {\n                return new ExtensionHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IExtensionOptions\n     * @property {string} departmentId\n     */\n          /**\n     * @typedef {object} IExtensionFilterOptions\n     * @property {string} search\n     * @property {string} type\n     */\n          /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ShortExtensionInfo\n     * @typedef {object} IExtensionShort\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     */\n          /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ExtensionInfo\n     * @typedef {object} IExtension\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} type\n     * @property {IContactBrief} contact\n     * @property {IExtensionRegionalSettings} regionalSettings\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} status\n     * @property {string} setupWizardState\n     */\n          /**\n     * @typedef {object} IExtensionRegionalSettings\n     * @property {ITimezone} timezone\n     * @property {ILanguage} language\n     * @property {ICountry} homeCountry\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Presence', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Utils',\n    'helpers/Extension',\n    'core/Subscription'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Utils = require('../core/Utils');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PresenceHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n    PresenceHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PresenceHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    /**\n     * @param {IPresence} presence\n     * @returns {string}\n     */\n    PresenceHelper.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    /**\n     * @param {IPresence} presence\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {Subscription}\n     */\n    PresenceHelper.prototype.getSubscription = function (options, id) {\n        return require('../core/Subscription').$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    /**\n     *\n     * @param {Subscription} subscription\n     * @param {IPresence[]} presences\n     * @param {IPresenceOptions} options\n     * @returns {*}\n     */\n    PresenceHelper.prototype.updateSubscription = function (subscription, presences, options) {\n        var events = presences.map(this.getId, this).map(function (id) {\n            return this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    /**\n     * @param {IExtension[]} extensions\n     * @param {IPresence[]} presences\n     * @param {bool} [merge]\n     * @returns {*}\n     */\n    PresenceHelper.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var index = this.index(presences);\n        extensions.forEach(/** @param {IExtension} extension */\n        function (extension) {\n            var presence = index[this.extension.getId(extension)];\n            if (presence) {\n                if ('presence' in extension && merge) {\n                    Utils.extend(extension.presence, presence);\n                } else {\n                    extension.presence = presence;\n                }\n            }\n        }, this);\n    };\n    /**\n     * @param {IPresenceCall} presenceCall\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isCallInProgress = function (presenceCall) {\n        return presenceCall && presenceCall.telephonyStatus != 'NoCall';\n    };\n    module.exports = {\n        Class: PresenceHelper,\n        /**\n         * @param {Context} context\n         * @returns {PresenceHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('PresenceHelper', function () {\n                return new PresenceHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {Object} IPresence\n     * @property {IExtension} extension\n     * @property {IPresenceCall[]} activeCalls\n     * @property {string} presenceStatus - Offline, Busy, Available\n     * @property {string} telephonyStatus - NoCall, CallConnected, Ringing, OnHold\n     * @property {string} userStatus - Offline, Busy, Available\n     * @property {string} dndStatus - TakeAllCalls, DoNotAcceptAnyCalls, DoNotAcceptDepartmentCalls, TakeDepartmentCallsOnly\n     * @property {boolean} allowSeeMyPresence\n     * @property {boolean} ringOnMonitoredCall\n     * @property {boolean} pickUpCallsOnHold\n     * @property {number} extensionId\n     * @property {number} sequence\n     */\n          /**\n     * @typedef {Object} IPresenceCall\n     * @property {string} direction\n     * @property {string} from\n     * @property {string} to\n     * @property {string} sessionId\n     * @property {string} id\n     * @property {string} telephonyStatus\n     */\n          /**\n     * @typedef {Object} IPresenceOptions\n     * @property {boolean} detailed\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Contact', [\n    'require',\n    'exports',\n    'module',\n    'core/Utils',\n    'core/Validator',\n    'core/Helper',\n    'core/List'\n], function (require, exports, module) {\n    'use strict';\n    var Utils = require('../core/Utils'), Validator = require('../core/Validator'), Helper = require('../core/Helper').Class, List = require('../core/List');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactHelper(context) {\n        Helper.call(this, context);\n    }\n    ContactHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * @param {IContactOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ContactHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId ? options.extensionId : '~') + '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root + (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') + (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     * @param {(IContact|object)} where\n     * @param {Array} fields\n     * @param {boolean} [asHash]\n     * @protected\n     * @returns {Object}\n     */\n    ContactHelper.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                } else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    /**\n     * @param {IContact} contact\n     * @returns {string}\n     */\n    ContactHelper.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    /**\n     * @param {IContact} contact\n     * @returns {boolean}\n     */\n    ContactHelper.prototype.isAlive = function (contact) {\n        return contact.availability == 'Alive';\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} string\n     * @param {IContactMatchOptions} [options]\n     * @returns {(string|null)}\n     */\n    ContactHelper.prototype.match = function (contact, string, options) {\n        options = Utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        function matchWith(value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = options.strict ? transformed == string : transformed.indexOf(string) > -1;\n            if (match)\n                found = value;\n        }\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            }, this);\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} phone\n     * @param {IContactMatchOptions} [options]\n     * @returns {string|null}\n     */\n    ContactHelper.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, Utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/gi, '') : '';    //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     * @param {ICallerInfo[]} callerInfos\n     * @param {IContact[]} contacts\n     * @param {IContactMatchOptions} [options]\n     */\n    ContactHelper.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n                return callerInfo.phoneNumber;\n            }, true);\n        Utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ContactHelper.prototype.comparator = function (options) {\n        var self = this;\n        return List.comparator(Utils.extend({\n            extractFn: function (contact, options) {\n                return self.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     * @param {IContactOptions} [options]\n     * @returns {function(IContact)}\n     */\n    ContactHelper.prototype.filter = function (options) {\n        var self = this;\n        options = Utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return List.filter([\n            {\n                condition: options.alive,\n                filterFn: this.isAlive\n            },\n            {\n                condition: options.startsWith,\n                filterFn: function (item, opts) {\n                    return self.match(item, opts.condition);\n                }\n            },\n            {\n                condition: options.phonesOnly,\n                filterFn: function (item, opts) {\n                    return self.getPhones(item).length > 0;\n                }\n            },\n            {\n                condition: options.faxesOnly,\n                filterFn: function (item, opts) {\n                    return self.getFaxes(item).length > 0;\n                }\n            }\n        ]);\n    };\n    /**\n     * @param {IContact} item\n     */\n    ContactHelper.prototype.validate = function (item) {\n        return Validator.validate([\n            {\n                field: 'firstName',\n                validator: Validator.required(item.firstName)\n            },\n            {\n                field: 'lastName',\n                validator: Validator.required(item.lastName)\n            },\n            {\n                field: 'email',\n                validator: Validator.email(item.email)\n            },\n            {\n                field: 'email2',\n                validator: Validator.email(item.email2)\n            },\n            {\n                field: 'email3',\n                validator: Validator.email(item.email3)\n            }\n        ]);\n    };\n    ContactHelper.prototype.phoneFields = [\n        'homePhone',\n        'homePhone2',\n        'businessPhone',\n        'businessPhone2',\n        'mobilePhone',\n        'companyPhone',\n        'assistantPhone',\n        'carPhone',\n        'otherPhone',\n        'callbackPhone'\n    ];\n    ContactHelper.prototype.faxFields = [\n        'businessFax',\n        'otherFax'\n    ];\n    ContactHelper.prototype.addressFields = [\n        'homeAddress',\n        'businessAddress',\n        'otherAddress'\n    ];\n    ContactHelper.prototype.addressSubFields = [\n        'street',\n        'city',\n        'state',\n        'zip'\n    ];\n    ContactHelper.prototype.nameFields = [\n        'firstName',\n        'middleName',\n        'lastName',\n        'nickName'\n    ];\n    ContactHelper.prototype.otherFields = [\n        'company',\n        'jobTitle',\n        'webPage',\n        'notes'\n    ];\n    ContactHelper.prototype.emailFields = [\n        'email',\n        'email2',\n        'email3'\n    ];\n    module.exports = {\n        Class: ContactHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('ContactHelper', function () {\n                return new ContactHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IContactOptions\n     * @property {string} extensionId\n     * @property {string} groupId\n     */\n          /**\n     * @typedef {object} IContactFilterOptions\n     * @property {string} startsWith\n     * @property {boolean} alive\n     */\n          /**\n     * @typedef {object} IContactMatchOptions\n     * @property {function(object, IContactMatchOptions)} transformFn\n     * @property {boolean} strict - if false look for as sub string\n     * @property {boolean} inAddresses - look in addresses as well\n     * @property {string[]} fields - in which fields to look for\n     */\n          /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactAddressInfo\n     * @typedef {Object} IContactAddress\n     * @property {string} country\n     * @property {string} street\n     * @property {string} city\n     * @property {string} state\n     * @property {string} zip\n     */\n          /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ContactInfo\n     * @typedef {Object} IContactBrief\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} email\n     * @property {IContactAddress} businessAddress\n     */\n          /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactInfo\n     * @typedef {Object} IContact\n     *\n     * Shared:\n     * @property {string} id\n     * @property {string} uri\n     *\n     * Names:\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} nickName\n     * @property {string} middleName\n     *\n     * Emails:\n     * @property {string} email\n     * @property {string} email2\n     * @property {string} email3\n     *\n     * Addresses:\n     * @property {IContactAddress} businessAddress\n     * @property {IContactAddress} homeAddress\n     * @property {IContactAddress} otherAddress\n     *\n     * Phones:\n     * @property {string} homePhone\n     * @property {string} homePhone2\n     * @property {string} businessPhone\n     * @property {string} businessPhone2\n     * @property {string} mobilePhone\n     * @property {string} companyPhone\n     * @property {string} assistantPhone\n     * @property {string} carPhone\n     * @property {string} otherPhone\n     * @property {string} callbackPhone\n     *\n     * @property {string} businessFax\n     * @property {string} otherFax\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Call', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Utils',\n    'core/List',\n    'helpers/Presence',\n    'helpers/Contact'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Utils = require('../core/Utils'), List = require('../core/List');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CallHelper(context) {\n        Helper.call(this, context);\n        this.presence = require('./Presence').$get(context);\n        this.contact = require('./Contact').$get(context);\n    }\n    CallHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * @param {ICallOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    CallHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' + (options.personal || options.extensionId ? 'extension/' + (options.extensionId || '~') + '/' : '') + (options.active ? 'active-calls' : 'call-log') + (id ? '/' + id : '');\n    };\n    CallHelper.prototype.getSessionId = function (call) {\n        return call && call.sessionId;\n    };\n    CallHelper.prototype.isInProgress = function (call) {\n        return call && call.result == 'In Progress';\n    };\n    CallHelper.prototype.isAlive = function (call) {\n        return call && call.availability == 'Alive';\n    };\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isInbound = function (call) {\n        return call && call.direction == 'Inbound';\n    };\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isMissed = function (call) {\n        return call && call.result == 'Missed';\n    };\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isFindMe = function (call) {\n        return call && call.action == 'FindMe';\n    };\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo}\n     */\n    CallHelper.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo[]}\n     */\n    CallHelper.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    CallHelper.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return v < 10 ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor(duration % (60 * 60) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    /**\n     * @param {ICallFilterOptions} [options]\n     * @returns {function(ICall)}\n     */\n    CallHelper.prototype.filter = function (options) {\n        options = Utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return List.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            {\n                filterBy: 'direction',\n                condition: options.direction\n            },\n            {\n                filterBy: 'type',\n                condition: options.type\n            }\n        ]);\n    };\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    CallHelper.prototype.comparator = function (options) {\n        return List.comparator(Utils.extend({ sortBy: 'startTime' }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     * @param {IContact[]} contacts\n     * @param {ICall[]} calls\n     * @param {IContactMatchOptions} [options]\n     */\n    CallHelper.prototype.attachContacts = function (contacts, calls, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(self.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} options\n     * @returns {boolean}\n     */\n    CallHelper.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        function getTime(dateString) {\n            return new Date(dateString).getTime();\n        }\n        return (!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) && // Check directions\n        outboundRingOutCall.direction == 'Outbound' && inboundCall.direction == 'Inbound' && // Check that start times are equal or close enough\n        (!inboundCall.startTime && !outboundRingOutCall.startTime || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) && // Check that numbers match\n        inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber && (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name)    //TODO Maybe name check is not required\n;\n    };\n    /**\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} [options]\n     * @returns {Array}\n     */\n    CallHelper.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = outboundRingOutCall.duration > inboundCall.duration ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        } else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime;\n            // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     *\n     * @param {ICall[]} calls\n     * @param {ICallProcessingOptions} options\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     * @param {IPresenceCall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.parsePresenceCalls = function (activeCalls) {\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus\n            };\n        }, this);\n    };\n    /**\n     * @param {ICall} call\n     * @returns {string}\n     */\n    CallHelper.prototype.getSignature = function (call) {\n        function cleanup(phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/gi, '');\n        }\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {IPresence} presence\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this.parsePresenceCalls(presence && presence.activeCalls || []).map(function (call) {\n                // delete property to make sure it is skipped during merge\n                delete call.startTime;\n                return call;\n            });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {ICall[]} calls\n     * @param {ICall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    module.exports = {\n        Class: CallHelper,\n        /**\n         * @param {Context} context\n         * @returns {CallHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('CallHelper', function () {\n                return new CallHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} ICall\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} sessionId\n     * @property {string} startTime\n     * @property {string} duration\n     * @property {string} type\n     * @property {string} direction\n     * @property {string} action\n     * @property {string} result\n     * @property {ICallerInfo} to\n     * @property {ICallerInfo} from\n     */\n          /**\n     * @typedef {object} ICallOptions\n     * @property {string} extensionId\n     * @property {boolean} active\n     * @property {boolean} personal\n     */\n          /**\n     * @typedef {object} ICallProcessingOptions\n     * @property {boolean} strict\n     * @property {boolean} merge\n     * @property {number} maxStartTimeDiscrepancy\n     */\n          /**\n     * @typedef {object} ICallFilterOptions\n     * @property {string} extensionId\n     * @property {string} direction\n     * @property {string} type\n     */\n          /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/CallerInfo.html\n     * @typedef {Object} ICallerInfo\n     * @property {string} phoneNumber\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} location\n     * @property {IContact} [contact] - corresponding contact (added by attachContacts methods)\n     * @property {string} [contactPhone] - contact's phone as written in contact (added by attachContacts methods)\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Conferencing', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ConferencingHelper(context) {\n        Helper.call(this, context);\n    }\n    ConferencingHelper.prototype = Object.create(Helper.prototype);\n    ConferencingHelper.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    module.exports = {\n        Class: ConferencingHelper,\n        /**\n         * @param {Context} context\n         * @returns {ConferencingHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('ConferencingHelper', function () {\n                return new ConferencingHelper(context);\n            });\n        }\n    };\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/ContactGroup', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Validator'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Validator = require('../core/Validator');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactGroupHelper(context) {\n        Helper.call(this, context);\n    }\n    ContactGroupHelper.prototype = Object.create(Helper.prototype);\n    ContactGroupHelper.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    /**\n     * @param {IContactGroup} item\n     */\n    ContactGroupHelper.prototype.validate = function (item) {\n        return Validator.validate([{\n                field: 'groupName',\n                validator: Validator.required(item && item.groupName)\n            }]);\n    };\n    module.exports = {\n        Class: ContactGroupHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactGroupHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('ContactGroupHelper', function () {\n                return new ContactGroupHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IContactGroup\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} notes\n     * @property {string} groupName\n     * @property {number} contactsCount\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Device', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Validator',\n    'helpers/Extension',\n    'helpers/DeviceModel'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Validator = require('../core/Validator');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n        this.deviceModel = require('./DeviceModel').$get(context);\n    }\n    DeviceHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * @param {IDeviceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    DeviceHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' + (options.extensionId ? '/extension/' + options.extensionId : '') + '/device' + (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    DeviceHelper.prototype.validate = function (item) {\n        return Validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            {\n                field: 'extension',\n                validator: Validator.required(this.extension.getId(item && item.extension))\n            },\n            {\n                field: 'model',\n                validator: Validator.required(this.deviceModel.getId(item && item.model))\n            }\n        ]);\n    };\n    module.exports = {\n        Class: DeviceHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('DeviceHelper', function () {\n                return new DeviceHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {Object} IDevice\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} type\n     * @property {string} name\n     * @property {string} serial\n     * @property {IDeviceModel} model\n     * @property {IExtensionShort} extension TODO IExtension?\n     * @property {IDeviceAddress} emergencyServiceAddress\n     * @property {IDeviceShipping} shipping\n     * @property {IDevicePhoneLine[]} phoneLines\n     */\n          /**\n     * @typedef {Object} IDeviceOrder\n     * @property {IDevice[]} devices\n     */\n          /**\n     * @typedef {Object} IDeviceAddress\n     * @property {string} street\n     * @property {string} street2\n     * @property {string} city\n     * @property {string} state\n     * @property {string} country\n     * @property {string} zip\n     * @property {string} customerName\n     */\n          /**\n     * @typedef {Object} IDeviceShipping\n     * @property {IDeviceAddress} address\n     * @property {IShippingMethod} method\n     * @property {string} status\n     */\n          /**\n     * @typedef {Object} IDevicePhoneLine\n     * @property {string} lineType\n     * @property {IPhoneNumber} phoneInfo\n     */\n          /**\n     * @typedef {Object} IDeviceOptions\n     * @property {string} extensionId\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/ForwardingNumber', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Utils',\n    'core/List'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Utils = require('../core/Utils'), List = require('../core/List');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ForwardingNumberHelper(context) {\n        Helper.call(this, context);\n    }\n    ForwardingNumberHelper.prototype = Object.create(Helper.prototype);\n    ForwardingNumberHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumberHelper.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber.id || forwardingNumber.phoneNumber;\n    };\n    ForwardingNumberHelper.prototype.hasFeature = function (phoneNumber, feature) {\n        return !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1;\n    };\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ForwardingNumberHelper.prototype.comparator = function (options) {\n        return List.comparator(Utils.extend({ sortBy: 'label' }, options));\n    };\n    /**\n     * @param options\n     * @returns {function(IForwardingNumber)}\n     */\n    ForwardingNumberHelper.prototype.filter = function (options) {\n        var self = this;\n        options = Utils.extend({ features: [] }, options);\n        return List.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return self.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    module.exports = {\n        Class: ForwardingNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {ForwardingNumberHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('ForwardingNumberHelper', function () {\n                return new ForwardingNumberHelper(context);\n            });\n        }\n    };    /**\n     *\n     * @typedef {object} IForwardingNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} label\n     * @property {string} phoneNumber\n     * @property {string} flipNumber\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Message', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Validator',\n    'core/Utils',\n    'core/List',\n    'core/Platform',\n    'helpers/Contact',\n    'core/Subscription'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Validator = require('../core/Validator'), Utils = require('../core/Utils'), List = require('../core/List');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function MessageHelper(context) {\n        Helper.call(this, context);\n        this.platform = require('../core/Platform').$get(context);\n        this.contact = require('./Contact').$get(context);\n    }\n    MessageHelper.prototype = Object.create(Helper.prototype);\n    /**\n     *\n     * @param {IMessageOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    MessageHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    MessageHelper.prototype.isInbound = function (message) {\n        return message && message.direction == 'Inbound';\n    };\n    MessageHelper.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    MessageHelper.prototype.isSMS = function (message) {\n        return message && message.type == 'SMS';\n    };\n    MessageHelper.prototype.isPager = function (message) {\n        return message && message.type == 'Pager';\n    };\n    MessageHelper.prototype.isVoiceMail = function (message) {\n        return message && message.type == 'VoiceMail';\n    };\n    MessageHelper.prototype.isFax = function (message) {\n        return message && message.type == 'Fax';\n    };\n    MessageHelper.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return message && message.availability == 'Alive';\n    };\n    MessageHelper.prototype.isRead = function (message) {\n        return message.readStatus == 'Read';\n    };\n    MessageHelper.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = !!isRead ? 'Read' : 'Unread';\n        return message;\n    };\n    MessageHelper.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    MessageHelper.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    /**\n     * @returns {Subscription}\n     */\n    MessageHelper.prototype.getSubscription = function (options) {\n        return require('../core/Subscription').$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    MessageHelper.prototype.comparator = function (options) {\n        return List.comparator(Utils.extend({ sortBy: 'creationTime' }, options));\n    };\n    /**\n     * @param {IMessageFilterOptions} [options]\n     * @returns {function(IMessage)}\n     */\n    MessageHelper.prototype.filter = function (options) {\n        options = Utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return List.filter([\n            {\n                condition: options.alive,\n                filterFn: this.isAlive\n            },\n            {\n                filterBy: 'type',\n                condition: options.type\n            },\n            {\n                filterBy: 'direction',\n                condition: options.direction\n            },\n            {\n                filterBy: 'conversationId',\n                condition: options.conversationId\n            },\n            {\n                filterBy: 'readStatus',\n                condition: options.readStatus\n            },\n            {\n                filterBy: 'subject',\n                condition: options.search,\n                filterFn: List.containsFilter\n            }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     * @param {IContact[]} contacts\n     * @param {IMessage[]} messages\n     * @param {IContactMatchOptions} [options]\n     */\n    MessageHelper.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     *\n     * @param message\n     * @returns {IMessageShort}\n     */\n    MessageHelper.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validateSMS = function (item) {\n        return Validator.validate([\n            {\n                field: 'to',\n                validator: Validator.required(Utils.getProperty(item, 'to[0].phoneNumber'))\n            },\n            {\n                field: 'from',\n                validator: Validator.required(Utils.getProperty(item, 'from.phoneNumber'))\n            },\n            {\n                field: 'subject',\n                validator: Validator.required(Utils.getProperty(item, 'subject'))\n            },\n            {\n                field: 'subject',\n                validator: Validator.length(Utils.getProperty(item, 'subject'), 160)\n            }\n        ]);\n    };\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validatePager = function (item) {\n        return Validator.validate([\n            {\n                field: 'to',\n                validator: Validator.required(Utils.getProperty(item, 'to.extensionNumber'))\n            },\n            {\n                field: 'from',\n                validator: Validator.required(Utils.getProperty(item, 'from.extensionNumber'))\n            },\n            {\n                field: 'subject',\n                validator: Validator.required(Utils.getProperty(item, 'subject'))\n            },\n            {\n                field: 'subject',\n                validator: Validator.length(Utils.getProperty(item, 'subject'), 160)\n            }\n        ]);\n    };\n    module.exports = {\n        Class: MessageHelper,\n        /**\n         * @param {Context} context\n         * @returns {MessageHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('MessageHelper', function () {\n                return new MessageHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IMessage\n     * @property {string} id\n     * @property {string} uri\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} type\n     * @property {string} creationTime\n     * @property {string} readStatus\n     * @property {string} priority\n     * @property {IMessageAttachment} attachments\n     * @property {string} direction\n     * @property {string} availability\n     * @property {string} subject\n     * @property {string} messageStatus\n     * @property {string} conversationId\n     * @property {string} lastModifiedTime\n     */\n          /**\n     * @typedef {object} IMessageShort\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} text\n     */\n          /**\n     * @typedef {object} IMessageOptions\n     * @property {boolean} fax\n     * @property {boolean} sync\n     * @property {boolean} sms\n     * @property {boolean} pager\n     * @property {string} extensionId\n     */\n          /**\n     * @typedef {object} IMessageFilterOptions\n     * @property {boolean} alive\n     * @property {string} conversationId\n     * @property {string} direction\n     * @property {string} readStatus\n     * @property {string} type\n     */\n          /**\n     * @typedef {object} IMessageFaxAttachment\n     * @property {string} contentType\n     * @property {string} content\n     * @property {string} fileName\n     */\n          /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch18s01.html#MessageAttachmentInfo\n     * @typedef {Object} IMessageAttachment\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} contentType\n     * @property {string} vmDuration\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/PhoneNumber', [\n    'require',\n    'exports',\n    'module',\n    'core/List',\n    'core/Utils',\n    'core/Helper',\n    'helpers/Extension'\n], function (require, exports, module) {\n    'use strict';\n    var List = require('../core/List'), Utils = require('../core/Utils'), Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PhoneNumberHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n    PhoneNumberHelper.prototype = Object.create(Helper.prototype);\n    /**\n     * @param {IPhoneNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PhoneNumberHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' + (options.extensionId ? '/extension/' + options.extensionId : '') + '/phone-number' + (id ? '/' + id : '');\n    };\n    PhoneNumberHelper.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumberHelper.prototype.hasFeature = function (phoneNumber, feature) {\n        return !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1;\n    };\n    PhoneNumberHelper.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumberHelper.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(IPhoneNumber, IPhoneNumber)}\n     */\n    PhoneNumberHelper.prototype.comparator = function (options) {\n        return List.comparator(Utils.extend({\n            /**\n             * @param {IPhoneNumber} item\n             * @returns {string}\n             */\n            extractFn: function (item) {\n                return item.usageType + '-' + item.paymentType + '-' + item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     * @param {IPhoneNumberFilterOptions} options\n     * @returns {function(IForwardingNumber)}\n     */\n    PhoneNumberHelper.prototype.filter = function (options) {\n        var self = this;\n        options = Utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return List.filter([\n            {\n                filterBy: 'usageType',\n                condition: options.usageType\n            },\n            {\n                filterBy: 'paymentType',\n                condition: options.paymentType\n            },\n            {\n                filterBy: 'type',\n                condition: options.type\n            },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return self.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    module.exports = {\n        Class: PhoneNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {PhoneNumberHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('PhoneNumberHelper', function () {\n                return new PhoneNumberHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IPhoneNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} phoneNumber\n     * @property {string} paymentType - External, TollFree, Local\n     * @property {string} location\n     * @property {string} type - VoiceFax, FaxOnly, VoiceOnly\n     * @property {string} usageType - CompanyNumber, DirectNumber, CompanyFaxNumber, ForwardedNumber\n     * @property {array} features - CallerId, SmsSender\n     * @property {string} reservedTill - Date\n     * @property {string} error\n     */\n          /**\n     * @typedef {object} IPhoneNumberOptions\n     * @property {string} extensionId\n     * @property {true} lookup\n     * @property {string} countryId\n     * @property {string} paymentType\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {string} line\n     * @property {string} exclude\n     */\n          /**\n     * @typedef {object} IPhoneNumberFilterOptions\n     * @property {string} paymentType\n     * @property {string} usageType\n     * @property {string} type\n     * @property {string[]} features\n     */\n          /**\n     * @typedef {object} IPhoneNumberOrder\n     * @property {IPhoneNumber[]} records\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Ringout', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper',\n    'core/Validator',\n    'helpers/Extension'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class, Validator = require('../core/Validator');\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function RingoutHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n    RingoutHelper.prototype = Object.create(Helper.prototype);\n    RingoutHelper.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    RingoutHelper.prototype.resetAsNew = function (object) {\n        object = Helper.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    RingoutHelper.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    RingoutHelper.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    RingoutHelper.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    /**\n     * @param {IRingout} item\n     */\n    RingoutHelper.prototype.validate = function (item) {\n        return Validator.validate([\n            {\n                field: 'to',\n                validator: Validator.required(item && item.to && item.to.phoneNumber)\n            },\n            {\n                field: 'from',\n                validator: Validator.required(item && item.from && item.from.phoneNumber)\n            }\n        ]);\n    };\n    module.exports = {\n        Class: RingoutHelper,\n        /**\n         * @param {Context} context\n         * @returns {RingoutHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('RingoutHelper', function () {\n                return new RingoutHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IRingout\n     * @property {ICallerInfo} [from] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [to] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [callerId] (!) ONLY PHONE NUMBER\n     * @property {boolean} [playPrompt]\n     * @property {{callStatus:boolean, callerStatus:boolean, calleeStatus:boolean}} [status]\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('helpers/Service', [\n    'require',\n    'exports',\n    'module',\n    'core/Helper'\n], function (require, exports, module) {\n    'use strict';\n    var Helper = require('../core/Helper').Class;\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ServiceHelper(context) {\n        Helper.call(this, context);\n    }\n    ServiceHelper.prototype = Object.create(Helper.prototype);\n    ServiceHelper.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    /**\n     * @param {string} feature\n     * @param {IServiceFeature[]} serviceFeatures\n     * @returns {*}\n     */\n    ServiceHelper.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    ServiceHelper.prototype.isSmsEnabled = isServiceFeatureEnabledMethod('SMS');\n    ServiceHelper.prototype.isSmsReceivingEnabled = isServiceFeatureEnabledMethod('SMSReceiving');\n    ServiceHelper.prototype.isPresenceEnabled = isServiceFeatureEnabledMethod('Presence');\n    ServiceHelper.prototype.isRingOutEnabled = isServiceFeatureEnabledMethod('RingOut');\n    ServiceHelper.prototype.isInternationalCallingEnabled = isServiceFeatureEnabledMethod('InternationalCalling');\n    ServiceHelper.prototype.isDndEnabled = isServiceFeatureEnabledMethod('DND');\n    ServiceHelper.prototype.isFaxEnabled = isServiceFeatureEnabledMethod('Fax');\n    ServiceHelper.prototype.isFaxReceivingEnabled = isServiceFeatureEnabledMethod('FaxReceiving');\n    ServiceHelper.prototype.isVoicemailEnabled = isServiceFeatureEnabledMethod('Voicemail');\n    ServiceHelper.prototype.isPagerEnabled = isServiceFeatureEnabledMethod('Pager');\n    ServiceHelper.prototype.isPagerReceivingEnabled = isServiceFeatureEnabledMethod('PagerReceiving');\n    ServiceHelper.prototype.isVoipCallingEnabled = isServiceFeatureEnabledMethod('VoipCalling');\n    ServiceHelper.prototype.isVideoConferencingEnabled = isServiceFeatureEnabledMethod('VideoConferencing');\n    ServiceHelper.prototype.isSalesForceEnabled = isServiceFeatureEnabledMethod('SalesForce');\n    ServiceHelper.prototype.isIntercomEnabled = isServiceFeatureEnabledMethod('Intercom');\n    ServiceHelper.prototype.isPagingEnabled = isServiceFeatureEnabledMethod('Paging');\n    ServiceHelper.prototype.isConferencingEnabled = isServiceFeatureEnabledMethod('Conferencing');\n    ServiceHelper.prototype.isFreeSoftPhoneLinesEnabled = isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n    ServiceHelper.prototype.isHipaaComplianceEnabled = isServiceFeatureEnabledMethod('HipaaCompliance');\n    ServiceHelper.prototype.isCallParkEnabled = isServiceFeatureEnabledMethod('CallPark');\n    ServiceHelper.prototype.isOnDemandCallRecordingEnabled = isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    function isServiceFeatureEnabledMethod(feature) {\n        return function (serviceFeatures) {\n            return this.isEnabled(feature, serviceFeatures);\n        };\n    }\n    module.exports = {\n        Class: ServiceHelper,\n        /**\n         * @param {Context} context\n         * @returns {ServiceHelper}\n         */\n        $get: function (context) {\n            return context.createSingleton('serviceHelper', function () {\n                return new ServiceHelper(context);\n            });\n        }\n    };    /**\n     * @typedef {object} IServiceFeature\n     * @property {string} featureName\n     * @property {boolean} enabled\n     */\n          /**\n     * @typedef {object} IService\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} servicePlanName\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\ndefine('RCSDK', [\n    'require',\n    'exports',\n    'module',\n    'core/Context',\n    'core/Ajax',\n    'core/AjaxObserver',\n    'core/xhr/XhrResponse',\n    'core/Platform',\n    'core/Cache',\n    'core/Subscription',\n    'core/PageVisibility',\n    'core/Helper',\n    'core/Observable',\n    'core/Validator',\n    'core/Log',\n    'core/Utils',\n    'core/List',\n    'helpers/Country',\n    'helpers/DeviceModel',\n    'helpers/Language',\n    'helpers/Location',\n    'helpers/ShippingMethod',\n    'helpers/State',\n    'helpers/Timezone',\n    'helpers/Account',\n    'helpers/BlockedNumber',\n    'helpers/Call',\n    'helpers/Conferencing',\n    'helpers/Contact',\n    'helpers/ContactGroup',\n    'helpers/Device',\n    'helpers/Extension',\n    'helpers/ForwardingNumber',\n    'helpers/Message',\n    'helpers/PhoneNumber',\n    'helpers/Presence',\n    'helpers/Ringout',\n    'helpers/Service'\n], function (require, exports, module) {\n    'use strict';\n    /**\n     * @param {IInjections} injections\n     * @returns {RCSDK}\n     */\n    module.exports = function (injections) {\n        /**\n         * @name RCSDK\n         * @constructor\n         */\n        function RCSDK(options) {\n            /** @private */\n            this._context = require('./core/Context').$get(injections);    //TODO Link Platform events with Subscriptions and the rest\n        }\n        RCSDK.version = '1.0.0';\n        // Internals\n        /**\n         * @returns {Context}\n         */\n        RCSDK.prototype.getContext = function () {\n            return this._context;\n        };\n        // Core\n        /**\n         */\n        RCSDK.prototype.getAjax = function () {\n            return require('./core/Ajax').$get(this.getContext());\n        };\n        /**\n         * @returns {AjaxObserver}\n         */\n        RCSDK.prototype.getAjaxObserver = function () {\n            return require('./core/AjaxObserver').$get(this.getContext());\n        };\n        /**\n         * @returns {XhrResponse}\n         */\n        RCSDK.prototype.getXhrResponse = function () {\n            return require('./core/xhr/XhrResponse').$get(this.getContext());\n        };\n        /**\n         * @returns {Platform}\n         */\n        RCSDK.prototype.getPlatform = function () {\n            return require('./core/Platform').$get(this.getContext());\n        };\n        /**\n         * @returns {Cache}\n         */\n        RCSDK.prototype.getCache = function () {\n            return require('./core/Cache').$get(this.getContext());\n        };\n        /**\n         * @returns {Subscription}\n         */\n        RCSDK.prototype.getSubscription = function () {\n            return require('./core/Subscription').$get(this.getContext());\n        };\n        /**\n         * @returns {PageVisibility}\n         */\n        RCSDK.prototype.getPageVisibility = function () {\n            return require('./core/PageVisibility').$get(this.getContext());\n        };\n        /**\n         * @returns {Helper}\n         */\n        RCSDK.prototype.getHelper = function () {\n            return require('./core/Helper').$get(this.getContext());\n        };\n        /**\n         * @returns {Observable}\n         */\n        RCSDK.prototype.getObservable = function () {\n            return require('./core/Observable').$get(this.getContext());\n        };\n        /**\n         * @returns {Validator}\n         */\n        RCSDK.prototype.getValidator = function () {\n            return require('./core/Validator').$get(this.getContext());\n        };\n        /**\n         * @returns {Log}\n         */\n        RCSDK.prototype.getLog = function () {\n            return require('./core/Log').$get(this.getContext());\n        };\n        /**\n         * @returns {Utils}\n         */\n        RCSDK.prototype.getUtils = function () {\n            return require('./core/Utils').$get(this.getContext());\n        };\n        /**\n         * @returns {List}\n         */\n        RCSDK.prototype.getList = function () {\n            return require('./core/List').$get(this.getContext());\n        };\n        // Helpers\n        /**\n         * @returns {CountryHelper}\n         */\n        RCSDK.prototype.getCountryHelper = function () {\n            return require('./helpers/Country').$get(this.getContext());\n        };\n        /**\n         * @returns {DeviceModelHelper}\n         */\n        RCSDK.prototype.getDeviceModelHelper = function () {\n            return require('./helpers/DeviceModel').$get(this.getContext());\n        };\n        /**\n         * @returns {LanguageHelper}\n         */\n        RCSDK.prototype.getLanguageHelper = function () {\n            return require('./helpers/Language').$get(this.getContext());\n        };\n        /**\n         * @returns {LocationHelper}\n         */\n        RCSDK.prototype.getLocationHelper = function () {\n            return require('./helpers/Location').$get(this.getContext());\n        };\n        /**\n         * @returns {ShippingMethodHelper}\n         */\n        RCSDK.prototype.getShippingMethodHelper = function () {\n            return require('./helpers/ShippingMethod').$get(this.getContext());\n        };\n        /**\n         * @returns {StateHelper}\n         */\n        RCSDK.prototype.getStateHelper = function () {\n            return require('./helpers/State').$get(this.getContext());\n        };\n        /**\n         * @returns {TimezoneHelper}\n         */\n        RCSDK.prototype.getTimezoneHelper = function () {\n            return require('./helpers/Timezone').$get(this.getContext());\n        };\n        /**\n         * @returns {AccountHelper}\n         */\n        RCSDK.prototype.getAccountHelper = function () {\n            return require('./helpers/Account').$get(this.getContext());\n        };\n        /**\n         * @returns {BlockedNumberHelper}\n         */\n        RCSDK.prototype.getBlockedNumberHelper = function () {\n            return require('./helpers/BlockedNumber').$get(this.getContext());\n        };\n        /**\n         * @returns {CallHelper}\n         */\n        RCSDK.prototype.getCallHelper = function () {\n            return require('./helpers/Call').$get(this.getContext());\n        };\n        /**\n         * @returns {ConferencingHelper}\n         */\n        RCSDK.prototype.getConferencingHelper = function () {\n            return require('./helpers/Conferencing').$get(this.getContext());\n        };\n        /**\n         * @returns {ContactHelper}\n         */\n        RCSDK.prototype.getContactHelper = function () {\n            return require('./helpers/Contact').$get(this.getContext());\n        };\n        /**\n         * @returns {ContactGroupHelper}\n         */\n        RCSDK.prototype.getContactGroupHelper = function () {\n            return require('./helpers/ContactGroup').$get(this.getContext());\n        };\n        /**\n         * @returns {DeviceHelper}\n         */\n        RCSDK.prototype.getDeviceHelper = function () {\n            return require('./helpers/Device').$get(this.getContext());\n        };\n        /**\n         * @returns {ExtensionHelper}\n         */\n        RCSDK.prototype.getExtensionHelper = function () {\n            return require('./helpers/Extension').$get(this.getContext());\n        };\n        /**\n         * @returns {ForwardingNumberHelper}\n         */\n        RCSDK.prototype.getForwardingNumberHelper = function () {\n            return require('./helpers/ForwardingNumber').$get(this.getContext());\n        };\n        /**\n         * @returns {MessageHelper}\n         */\n        RCSDK.prototype.getMessageHelper = function () {\n            return require('./helpers/Message').$get(this.getContext());\n        };\n        /**\n         * @returns {PhoneNumberHelper}\n         */\n        RCSDK.prototype.getPhoneNumberHelper = function () {\n            return require('./helpers/PhoneNumber').$get(this.getContext());\n        };\n        /**\n         * @returns {PresenceHelper}\n         */\n        RCSDK.prototype.getPresenceHelper = function () {\n            return require('./helpers/Presence').$get(this.getContext());\n        };\n        /**\n         * @returns {RingoutHelper}\n         */\n        RCSDK.prototype.getRingoutHelper = function () {\n            return require('./helpers/Ringout').$get(this.getContext());\n        };\n        /**\n         * @returns {ServiceHelper}\n         */\n        RCSDK.prototype.getServiceHelper = function () {\n            return require('./helpers/Service').$get(this.getContext());\n        };\n        /** @type {window} */\n        var root = new Function('return this')();\n        function getXHR() {\n            return root.XMLHttpRequest || function () {\n                try {\n                    return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n                } catch (e1) {\n                }\n                try {\n                    return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n                } catch (e2) {\n                }\n                try {\n                    return new ActiveXObject('Msxml2.XMLHTTP');\n                } catch (e3) {\n                }\n                throw new Error('This browser does not support XMLHttpRequest.');\n            };\n        }\n        function getCryptoJS() {\n            return root.CryptoJS || typeof CryptoJS !== 'undefined' && CryptoJS;\n        }\n        function getLocalStorage() {\n            return root.localStorage;\n        }\n        function getPUBNUB() {\n            return root.PUBNUB || typeof PUBNUB !== 'undefined' && PUBNUB;\n        }\n        function getPromise() {\n            return root.Promise;\n        }\n        injections = injections || {};\n        injections.CryptoJS = injections.CryptoJS || getCryptoJS();\n        injections.localStorage = injections.localStorage || getLocalStorage();\n        injections.Promise = injections.Promise || getPromise();\n        injections.PUBNUB = injections.PUBNUB || getPUBNUB();\n        injections.XHR = injections.XHR || getXHR();\n        return RCSDK;\n    };    /**\n     * @typedef {Object} IInjections\n     * @property {PUBNUB} PUBNUB\n     * @property {CryptoJS} CryptoJS\n     * @property {Storage} localStorage\n     * @property {XMLHttpRequest} XHR\n     * @property {Promise} Promise\n     */\n});","/**\n * @description RingPlatform JS SDK\n * @copyright © 2014-2015 RingCentral, Inc. All rights reserved.\n */\n(function() {\n\n    if (typeof exports !== 'undefined') { // NodeJS\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = RCSDK({\n                CryptoJS: require('crypto-js'),\n                localStorage: new (require('dom-storage'))(),\n                Promise: require('es6-promise').Promise,\n                PUBNUB: require('pubnub'),\n                XHR: require('xhr2')\n            });\n        }\n\n    } else if (typeof define === 'function' && define.amd) { // RequireJS\n\n        define(['crypto-js', 'pubnub', 'es6-promise'], function(CryptoJS, PUBNUB) { // amdclean\n            return RCSDK({\n                CryptoJS: CryptoJS,\n                PUBNUB: PUBNUB\n            });\n        });\n\n    } else { // Standalone in browser\n\n        RCSDK.noConflict = (function(old) {\n            return function() {\n                root.RCSDK = old;\n                RCSDK.noConflict = undefined;\n                return RCSDK;\n            };\n        })(root.RCSDK);\n\n        root.RCSDK = RCSDK({});\n\n    }\n\n})();"],"sourceRoot":"/source/"}