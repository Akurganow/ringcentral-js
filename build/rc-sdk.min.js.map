{"version":3,"sources":["webpack/universalModuleDefinition","rc-sdk.js","webpack/bootstrap 950c8756d7097b6bcce9","../lib/browser.js","external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}","external {\"amd\":\"crypto-js\",\"commonjs\":\"crypto-js\",\"commonjs2\":\"crypto-js\",\"root\":\"CryptoJS\"}","external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}","../lib/RCSDK.js","../lib/core/Context.js","../lib/core/Ajax.js","../lib/core/AjaxObserver.js","../lib/core/xhr/XhrResponse.js","../lib/core/Platform.js","../lib/core/Cache.js","../lib/core/Subscription.js","../lib/core/PageVisibility.js","../lib/core/Helper.js","../lib/core/Observable.js","../lib/core/Validator.js","../lib/core/Log.js","../lib/core/Utils.js","../lib/core/List.js","../lib/helpers/Country.js","../lib/helpers/DeviceModel.js","../lib/helpers/Language.js","../lib/helpers/Location.js","../lib/helpers/ShippingMethod.js","../lib/helpers/State.js","../lib/helpers/Timezone.js","../lib/helpers/Account.js","../lib/helpers/BlockedNumber.js","../lib/helpers/Call.js","../lib/helpers/Conferencing.js","../lib/helpers/Contact.js","../lib/helpers/ContactGroup.js","../lib/helpers/Device.js","../lib/helpers/Extension.js","../lib/helpers/ForwardingNumber.js","../lib/helpers/Message.js","../lib/helpers/PhoneNumber.js","../lib/helpers/Presence.js","../lib/helpers/Ringout.js","../lib/helpers/Service.js","../lib/core/pubnub/PubnubMock.js","../lib/core/xhr/XhrMock.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","CryptoJS","localStorage","window","Promise","PUBNUB","XHR","XMLHttpRequest","undefined","injections","RCSDK","options","_context","$get","getCache","setPrefix","cachePrefix","getPlatform","setServer","server","setCredentials","appKey","appSecret","version","prototype","getContext","getAjax","getAjaxObserver","getXhrResponse","getSubscription","getPageVisibility","getHelper","getObservable","getValidator","getLog","getUtils","getList","getCountryHelper","getDeviceModelHelper","getLanguageHelper","getLocationHelper","getShippingMethodHelper","getStateHelper","getTimezoneHelper","getAccountHelper","getBlockedNumberHelper","getCallHelper","getConferencingHelper","getContactHelper","getContactGroupHelper","getDeviceHelper","getExtensionHelper","getForwardingNumberHelper","getMessageHelper","getPhoneNumberHelper","getPresenceHelper","getRingoutHelper","getServiceHelper","Error","ActiveXObject","e1","e2","e3","Context","singletons","stubPubnub","stubAjax","createSingleton","name","usePubnubStub","flag","useAjaxStub","getCryptoJS","getPubnub","getLocalStorage","bind","getPromise","getXHR","Class","Ajax","context","Observable","data","error","response","headers","status","observer","xhr","Utils","Log","jsonContentType","multipartContentType","boundarySeparator","headerSeparator","bodySeparator","Object","create","defineProperty","value","enumerable","getOptions","setOptions","setRequestHeader","toLowerCase","setResponseHeader","getRequestHeader","getResponseHeader","isResponseContentType","type","getResponseContentType","indexOf","isResponseMultipart","isResponseUnauthorized","getContentType","isMultipart","isUnauthorized","isLoaded","checkOptions","url","defaultHeaders","Accept","Content-Type","keys","forEach","key","method","toUpperCase","async","get","post","JSON","stringify","queryStringify","send","emit","events","beforeRequest","request","then","ajax","parseResponse","requestSuccess","e","requestError","resolve","reject","open","withCredentials","onload","responseText","onerror","header","checkStatus","toString","substr","boundary","match","parts","split","trim","shift","length","pop","map","part","subParts","replace","ajaxPart","res","headerParts","join","statusInfo","i","parse","message","error_description","description","stack","destroy","abort","AjaxObserver","XhrResponse","responses","add","push","clear","find","currentResponse","path","test","Platform","apiKey","account","urlPrefix","apiVersion","accountPrefix","accessTokenTtl","refreshTokenTtl","refreshTokenTtlRemember","refreshHandicapMs","refreshDelayMs","clearCacheOnRefreshError","refreshPromise","forcedTokenType","cacheId","pollInterval","releaseTimeout","accessViolation","logoutSuccess","logoutError","authorizeSuccess","authorizeError","refreshSuccess","refreshError","getStorage","clearStorage","clean","btoa","Buffer","remember","setItem","getItem","authorize","authCall","grant_type","username","extension","password","access_token_ttl","refresh_token_ttl","setCache","emitAndCallback","isPaused","storage","Date","now","parseInt","pause","resume","removeItem","refresh","refreshPolling","setTimeout","authData","getAuthData","debug","access_token","refresh_token","refreshExpireTime","info","result","logout","token","getToken","warn","poll","next","isTokenValid","getTokenType","token_type","expires_in","refresh_token_expires_in","expireTime","getTime","isAuthorized","cancelAccessToken","extend","oldAuthData","forceAuthentication","apiCall","apiUrl","addServer","builtUrl","addMethod","addToken","Cache","prefix","prefixKey","item","hasOwnProperty","Subscription","eventFilters","timeout","subscription","expirationTime","expiresIn","deliveryMode","transportType","encryption","address","subscriberKey","secretKey","creationTime","uri","pubnub","renewHandicapMs","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","getCrypto","register","isSubscribed","renew","subscribe","addEvents","concat","setEvents","getFullEventFilters","event","clearTimeout","updateSubscription","subscribeAtPubnub","unsubscribe","remove","timeToExpiration","channel","notify","encryptionKey","enc","Base64","decrypted","AES","decrypt","ciphertext","mode","ECB","padding","pad","Pkcs7","Utf8","init","subscribe_key","ready","connect","PageVisibility","hidden","onchange","evt","v","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","visible","document","change","addEventListener","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","isVisible","Helper","defaultProperty","createUrl","getId","object","isNew","getUri","resetAsNew","parseMultipartResponse","filter","loadRequest","saveRequest","deleteRequest","syncRequest","sync","syncToken","syncType","nextPageExists","navigation","index","array","getIdFn","gather","reduce","merge","target","supplement","mergeItems","supplementIndex","updatedIDs","newItem","writable","hasListeners","listeners","registerOneTimeEvent","oneTimeEvents","oneTimeArguments","on","callback","self","isOneTimeEventFired","apply","getOneTimeEventArgumens","args","argumentsToArray","arguments","splice","isOneTimeEvent","setOneTimeEventFired","setOneTimeEventArgumens","some","off","cb","offAll","Validator","validate","validators","errors","isValid","validator","field","email","multiple","isEmail","phone","isPhoneNumber","required","max","min","logDebug","logInfo","logWarnings","logErrors","addTimestamps","console","log","disableAll","enableAll","parseArguments","unshift","toLocaleString","hasOwn","rdigit","class2type","src","copy","copyIsArray","clone","deep","isFunction","isPlainObject","isArray","parameters","vv","encodeURIComponent","parseQueryString","queryString","argsParsed","arg","decodeURIComponent","pair","Array","slice","isDate","obj","isWindow","isNaN","String","nodeType","constructor","getProperty","property","fn","interval","stopPolling","delay","parseString","s","parseNumber","n","parseFloat","List","propertyExtractor","stringComparator","a","b","localeCompare","numberComparator","comparator","item1","item2","compareFn","extractFn","sortBy","equalsFilter","condition","containsFilter","regexpFilter","RegExp","filterConfigs","pass","opt","filterFn","filterBy","CountryHelper","DeviceModelHelper","device","addons","count","cleanForSaving","deviceClass","addon","devices","LanguageHelper","languages","LocationHelper","state","uniqueNPAs","stateId","onlyUniqueNPA","opts","npa","nxx","ShippingMethodHelper","shippingMethods","StateHelper","countryHelper","countryId","country","TimezoneHelper","AccountHelper","BlockedNumberHelper","extensionId","phoneNumber","CallHelper","presence","contact","personal","active","getSessionId","sessionId","isInProgress","isAlive","availability","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","duration","hours","Math","floor","mins","secs","alive","attachContacts","contacts","calls","callerInfos","attachToCallerInfos","checkMergeability","outboundRingOutCall","inboundCall","dateString","strict","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","secondCall","parsePresenceCalls","activeCalls","activeCall","isCallInProgress","telephonyStatus","getSignature","cleanup","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","ConferencingHelper","ContactHelper","groupId","getFieldValues","where","fields","asHash","getFullName","nameFields","getEmails","emailFields","getPhones","phoneFields","getFaxes","faxFields","getAddresses","addressFields","string","matchWith","found","transformed","transformFn","otherFields","inAddresses","toLocaleLowerCase","addressSubFields","subField","matchAsPhone","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","startsWith","phonesOnly","faxesOnly","firstName","lastName","email2","email3","ContactGroupHelper","groupName","DeviceHelper","deviceModel","order","emergencyServiceAddress","street","city","zip","customerName","model","ExtensionHelper","department","user","announcement","voicemail","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","search","extensionNumber","ForwardingNumberHelper","forwardingNumber","hasFeature","feature","features","MessageHelper","platform","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentUrl","attachments","getAttachmentContentType","contentType","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","validatePager","PhoneNumberHelper","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","PresenceHelper","detailed","isAvailable","presenceStatus","presences","attachToExtensions","extensions","presenceCall","RingoutHelper","ringout","callStatus","isSuccess","isError","ServiceHelper","isServiceFeatureEnabledMethod","serviceFeatures","isEnabled","f","featureName","enabled","isSmsEnabled","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","PubnubMock","onMessage","receiveMessage","msg","XhrMock","requestHeaders","readyState","responseHeaders","setStatus","onLoad"],"mappings":"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","file":"rc-sdk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"crypto-js\"), require(\"pubnub\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"crypto-js\", \"pubnub\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"crypto-js\"), require(\"pubnub\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"CryptoJS\"], root[\"PUBNUB\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"crypto-js\"), require(\"pubnub\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"crypto-js\", \"pubnub\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"crypto-js\"), require(\"pubnub\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"CryptoJS\"], root[\"PUBNUB\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Browser-compatible version\n */\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    // ES6 Promise Polyfill only needs to be required since it modifies window object\n    __webpack_require__(2);\n\n    module.exports = __webpack_require__(5)({\n        CryptoJS: __webpack_require__(3),\n        localStorage: window.localStorage,\n        Promise: window.Promise,\n        PUBNUB: __webpack_require__(4),\n        XHR: window.XMLHttpRequest\n    });\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * @param {IInjections} injections\n     * @returns {RCSDK}\n     */\n    module.exports = function(injections) {\n\n        /**\n         * @name RCSDK\n         * @param {IOptions} [options]\n         * @constructor\n         */\n        function RCSDK(options) {\n\n            options = options || {};\n\n            /** @private */\n            this._context = __webpack_require__(6).$get(injections);\n\n            this.getCache()\n                .setPrefix(options.cachePrefix || '');\n\n            this.getPlatform()\n                .setServer(options.server)\n                .setCredentials(options.appKey, options.appSecret);\n\n            //TODO Link Platform events with Subscriptions and the rest\n\n        }\n\n        RCSDK.version = '1.1.7';\n\n        // Internals\n\n        /** @returns {Context} */\n        RCSDK.prototype.getContext = function() { return this._context; };\n\n        // Core\n\n        /** @returns {Ajax} */\n        RCSDK.prototype.getAjax = function() { return __webpack_require__(7).$get(this.getContext()); };\n\n        /**\n         * @returns {AjaxObserver}\n         */\n        RCSDK.prototype.getAjaxObserver = function() { return __webpack_require__(8).$get(this.getContext()); };\n\n        /**\n         * @returns {XhrResponse}\n         */\n        RCSDK.prototype.getXhrResponse = function() { return __webpack_require__(9).$get(this.getContext()); };\n\n        /**\n         * @returns {Platform}\n         */\n        RCSDK.prototype.getPlatform = function() { return __webpack_require__(10).$get(this.getContext()); };\n\n        /**\n         * @returns {Cache}\n         */\n        RCSDK.prototype.getCache = function() { return __webpack_require__(11).$get(this.getContext()); };\n\n        /**\n         * @returns {Subscription}\n         */\n        RCSDK.prototype.getSubscription = function() { return __webpack_require__(12).$get(this.getContext()); };\n\n        /**\n         * @returns {PageVisibility}\n         */\n        RCSDK.prototype.getPageVisibility = function() { return __webpack_require__(13).$get(this.getContext()); };\n\n        /**\n         * @returns {Helper}\n         */\n        RCSDK.prototype.getHelper = function() { return __webpack_require__(14).$get(this.getContext()); };\n\n        /**\n         * @returns {Observable}\n         */\n        RCSDK.prototype.getObservable = function() { return __webpack_require__(15).$get(this.getContext()); };\n\n        /**\n         * @returns {Validator}\n         */\n        RCSDK.prototype.getValidator = function() { return __webpack_require__(16).$get(this.getContext()); };\n\n        /**\n         * @returns {Log}\n         */\n        RCSDK.prototype.getLog = function() { return __webpack_require__(17).$get(this.getContext()); };\n\n        /**\n         * @returns {Utils}\n         */\n        RCSDK.prototype.getUtils = function() { return __webpack_require__(18).$get(this.getContext()); };\n\n        /**\n         * @returns {List}\n         */\n        RCSDK.prototype.getList = function() { return __webpack_require__(19).$get(this.getContext()); };\n\n        // Helpers\n\n        /**\n         * @returns {CountryHelper}\n         */\n        RCSDK.prototype.getCountryHelper = function() { return __webpack_require__(20).$get(this.getContext()); };\n\n        /**\n         * @returns {DeviceModelHelper}\n         */\n        RCSDK.prototype.getDeviceModelHelper = function() { return __webpack_require__(21).$get(this.getContext()); };\n\n        /**\n         * @returns {LanguageHelper}\n         */\n        RCSDK.prototype.getLanguageHelper = function() { return __webpack_require__(22).$get(this.getContext()); };\n\n        /**\n         * @returns {LocationHelper}\n         */\n        RCSDK.prototype.getLocationHelper = function() { return __webpack_require__(23).$get(this.getContext()); };\n\n        /**\n         * @returns {ShippingMethodHelper}\n         */\n        RCSDK.prototype.getShippingMethodHelper = function() { return __webpack_require__(24).$get(this.getContext()); };\n\n        /**\n         * @returns {StateHelper}\n         */\n        RCSDK.prototype.getStateHelper = function() { return __webpack_require__(25).$get(this.getContext()); };\n\n        /**\n         * @returns {TimezoneHelper}\n         */\n        RCSDK.prototype.getTimezoneHelper = function() { return __webpack_require__(26).$get(this.getContext()); };\n\n        /**\n         * @returns {AccountHelper}\n         */\n        RCSDK.prototype.getAccountHelper = function() { return __webpack_require__(27).$get(this.getContext()); };\n\n        /**\n         * @returns {BlockedNumberHelper}\n         */\n        RCSDK.prototype.getBlockedNumberHelper = function() { return __webpack_require__(28).$get(this.getContext()); };\n\n        /**\n         * @returns {CallHelper}\n         */\n        RCSDK.prototype.getCallHelper = function() { return __webpack_require__(29).$get(this.getContext()); };\n\n        /**\n         * @returns {ConferencingHelper}\n         */\n        RCSDK.prototype.getConferencingHelper = function() { return __webpack_require__(30).$get(this.getContext()); };\n\n        /**\n         * @returns {ContactHelper}\n         */\n        RCSDK.prototype.getContactHelper = function() { return __webpack_require__(31).$get(this.getContext()); };\n\n        /**\n         * @returns {ContactGroupHelper}\n         */\n        RCSDK.prototype.getContactGroupHelper = function() { return __webpack_require__(32).$get(this.getContext()); };\n\n        /**\n         * @returns {DeviceHelper}\n         */\n        RCSDK.prototype.getDeviceHelper = function() { return __webpack_require__(33).$get(this.getContext()); };\n\n        /**\n         * @returns {ExtensionHelper}\n         */\n        RCSDK.prototype.getExtensionHelper = function() { return __webpack_require__(34).$get(this.getContext()); };\n\n        /**\n         * @returns {ForwardingNumberHelper}\n         */\n        RCSDK.prototype.getForwardingNumberHelper = function() { return __webpack_require__(35).$get(this.getContext()); };\n\n        /**\n         * @returns {MessageHelper}\n         */\n        RCSDK.prototype.getMessageHelper = function() { return __webpack_require__(36).$get(this.getContext()); };\n\n        /**\n         * @returns {PhoneNumberHelper}\n         */\n        RCSDK.prototype.getPhoneNumberHelper = function() { return __webpack_require__(37).$get(this.getContext()); };\n\n        /**\n         * @returns {PresenceHelper}\n         */\n        RCSDK.prototype.getPresenceHelper = function() { return __webpack_require__(38).$get(this.getContext()); };\n\n        /**\n         * @returns {RingoutHelper}\n         */\n        RCSDK.prototype.getRingoutHelper = function() { return __webpack_require__(39).$get(this.getContext()); };\n\n        /**\n         * @returns {ServiceHelper}\n         */\n        RCSDK.prototype.getServiceHelper = function() { return __webpack_require__(40).$get(this.getContext()); };\n\n        if (!injections\n            || !('CryptoJS' in injections)\n            || !('localStorage' in injections)\n            || !('Promise' in injections)\n            || !('PUBNUB' in injections)\n            || !('XHR' in injections)) throw new Error('Injections object is not complete');\n\n        injections.XHR = (injections.XHR || function() {\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\"); } catch (e1) {}\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\"); } catch (e2) {}\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e3) {}\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        });\n\n        return RCSDK;\n\n    };\n\n    /**\n     * @typedef {Object} IInjections\n     * @property {PUBNUB} PUBNUB\n     * @property {CryptoJS} CryptoJS\n     * @property {Storage} localStorage\n     * @property {XMLHttpRequest} XHR\n     * @property {Promise} Promise\n     */\n\n    /**\n     * @typedef {Object} IOptions\n     * @property {string} server\n     * @property {string} appKey\n     * @property {string} appSecret\n     * @property {string} [cachePrefix]\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * @constructor\n     * @param {IInjections} injections\n     */\n    function Context(injections) {\n        /** @private */\n        this.singletons = {};\n        /** @type {IInjections} */\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n\n    /**\n     * @param {string} name\n     * @param {function} factory\n     * @returns {*}\n     */\n    Context.prototype.createSingleton = function(name, factory) {\n\n        if (!this.singletons[name]) this.singletons[name] = factory();\n        return this.singletons[name];\n\n    };\n\n    Context.prototype.usePubnubStub = function(flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n\n    Context.prototype.useAjaxStub = function(flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n\n    /**\n     * @returns {CryptoJS}\n     */\n    Context.prototype.getCryptoJS = function() {\n        return this.injections.CryptoJS;\n    };\n\n    /**\n     * @returns {PUBNUB}\n     */\n    Context.prototype.getPubnub = function() {\n        return this.stubPubnub ? __webpack_require__(41).$get(this) : this.injections.PUBNUB;\n    };\n\n    /**\n     * @returns {Storage}\n     * @abstract\n     */\n    Context.prototype.getLocalStorage = function() {\n        return this.createSingleton('localStorage', function() {\n            return (typeof this.injections.localStorage == 'function')\n                ? new this.injections.localStorage() // this is NPM dom-storage constructor\n                : this.injections.localStorage; // this is window.localStorage\n        }.bind(this));\n    };\n\n    /**\n     * @returns {function(new:Promise)}\n     */\n    Context.prototype.getPromise = function() {\n        return this.injections.Promise;\n    };\n\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Context.prototype.getXHR = function() {\n        return this.stubAjax ? __webpack_require__(42).$get(this) : new this.injections.XHR();\n    };\n\n    module.exports = {\n        Class: Context,\n        /**\n         * @param {IInjections} injections\n         */\n        $get: function(injections) {\n            return new Context(injections);\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = __webpack_require__(15).Class,\n        Utils = __webpack_require__(18),\n        Log = __webpack_require__(17),\n        jsonContentType = 'application/json',\n        multipartContentType = 'multipart/mixed',\n        boundarySeparator = '--',\n        headerSeparator = ':',\n        bodySeparator = '\\n\\n';\n\n    /**\n     * @typedef {Object} IAjaxOptions\n     * @property {string} url\n     * @property {string} method?\n     * @property {boolean} async?\n     * @property {Object} post?\n     * @property {Object} get?\n     * @property {Object} headers?\n     */\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Ajax\n     * @param {Context} [context]\n     */\n    function Ajax(context) {\n        Observable.call(this);\n        /** @type {Ajax[]|object} */\n        this.data = null;\n        /** @type {Error|null} */\n        this.error = null;\n        this.response = '';\n        this.headers = {};\n        this.status = 0;\n        /**\n         * @type {IAjaxOptions}\n         * @protected\n         */\n        this.options = {};\n        this.context = context;\n        /** @type {AjaxObserver} */\n        this.observer = __webpack_require__(8).$get(context);\n        /** @type {XMLHttpRequest} */\n        this.xhr = null;\n    }\n\n    Ajax.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Ajax.prototype, 'constructor', {value: Ajax, enumerable: false});\n\n    /**\n     * @returns {IAjaxOptions}\n     */\n    Ajax.prototype.getOptions = function() {\n        return this.options;\n    };\n\n    /**\n     * @param {IAjaxOptions} [options]\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setOptions = function(options) {\n        if (options) this.options = options;\n        return this;\n    };\n\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setRequestHeader = function(name, value) {\n        name = name.toLowerCase();\n        this.options.headers = this.options.headers || {};\n        if (value) {\n            this.options.headers[name] = value;\n        } else {\n            delete this.options.headers[name];\n        }\n        return this;\n    };\n\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setResponseHeader = function(name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n\n    /**\n     * @param {string} name\n     * @returns {string}\n     */\n    Ajax.prototype.getRequestHeader = function(name) {\n        this.options.headers = this.options.headers || {};\n        return this.options.headers[name.toLowerCase()];\n    };\n\n    /**\n     * @param {string} name\n     * @returns {string}\n     */\n    Ajax.prototype.getResponseHeader = function(name) {\n        return this.headers[name.toLowerCase()];\n    };\n\n    /**\n     * @param {string} type\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseContentType = function(type) {\n        return this.getResponseContentType().indexOf(type) > -1;\n    };\n\n    /**\n     * @returns {string}\n     */\n    Ajax.prototype.getResponseContentType = function() {\n        return this.getResponseHeader('Content-Type') || '';\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseMultipart = function() {\n        return this.isResponseContentType(multipartContentType);\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseUnauthorized = function() {\n        return (this.status == 401);\n    };\n\n    /**\n     * @deprecated\n     * @returns {string}\n     */\n    Ajax.prototype.getContentType = function() {\n        return this.getResponseContentType();\n    };\n\n    /**\n     * @deprecated\n     * @returns {boolean}\n     */\n    Ajax.prototype.isMultipart = function() {\n        return this.isResponseMultipart();\n    };\n\n    /**\n     * @deprecated\n     * @returns {boolean}\n     */\n    Ajax.prototype.isUnauthorized = function() {\n        return this.isResponseUnauthorized();\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isLoaded = function() {\n        return !!this.status;\n    };\n\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     * @returns {Ajax}\n     */\n    Ajax.prototype.checkOptions = function() {\n\n        if (!this.options.url) throw new Error('Url is not defined');\n\n        var defaultHeaders = {\n                'Accept': jsonContentType,\n                'Content-Type': jsonContentType\n            },\n            headers = this.options.headers || {};\n\n        this.options.headers = {};\n\n        Object.keys(defaultHeaders).forEach(function(key) {\n            this.setRequestHeader(key, defaultHeaders[key]);\n        }, this);\n\n        Object.keys(headers).forEach(function(key) {\n            this.setRequestHeader(key, headers[key]);\n        }, this);\n\n        // Delete all headers that don't have value\n        Object.keys(this.options.headers).forEach(function(key) {\n            if (!this.options.headers[key]) delete this.options.headers[key];\n        }, this);\n\n        this.options.method = this.options.method ? this.options.method.toUpperCase() : 'GET';\n        this.options.async = (this.options.async !== undefined) ? this.options.async : true;\n        this.options.get = this.options.get || null;\n        this.options.post = this.options.post ? (\n            (typeof this.options.post !== 'string' && this.getRequestHeader('Content-Type') === jsonContentType)\n                ? JSON.stringify(this.options.post)\n                : this.options.post\n        ) : '';\n        this.options.url = this.options.url + (this.options.get ? ((this.options.url.indexOf('?') > -1 ? '&' : '?') + Utils.queryStringify(this.options.get)) : '');\n\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'].indexOf(this.options.method) < 0) throw new Error('Method has wrong value');\n\n        delete this.options.get;\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Ajax.prototype.send = function() {\n\n        this.observer.emit(this.observer.events.beforeRequest, this);\n\n        return this.request()\n            .then(function(ajax) {\n\n                ajax.parseResponse();\n                if (ajax.error) throw ajax.error;\n                return ajax;\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.observer.emit(this.observer.events.requestSuccess, ajax);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                e.ajax = this;\n\n                this.observer.emit(this.observer.events.requestError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Ajax.prototype.getXHR = function() {\n        return this.context.getXHR();\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Ajax.prototype.request = function() {\n\n        return new (this.context.getPromise())(function(resolve, reject) {\n\n            this.checkOptions();\n\n            var options = this.options,\n                xhr = this.getXHR();\n\n            xhr.open(options.method, options.url, options.async);\n\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n\n            xhr.onload = function() {\n\n                this.status = xhr.status;\n                this.response = xhr.responseText;\n                this.setResponseHeader('Content-Type', xhr.getResponseHeader('Content-Type') || jsonContentType); // if no header, set default\n\n                resolve(this);\n\n            }.bind(this);\n\n            xhr.onerror = function(event) {\n                reject(new Error('The request cannot be sent')); // CORS or network issue\n            };\n\n            Utils.forEach(options.headers, function(value, header) {\n                xhr.setRequestHeader(header, value);\n            });\n\n            xhr.send(options.method === 'GET' ? null : options.post);\n\n            this.xhr = xhr;\n\n        }.bind(this));\n\n    };\n\n    Ajax.prototype.checkStatus = function(status) {\n        return status.toString().substr(0, 1) == '2';\n    };\n\n    Ajax.prototype.parseResponse = function() {\n\n        try {\n\n            if (!this.isResponseMultipart()) {\n\n                if (typeof(this.response) == 'string' && !!this.response && this.isResponseContentType(jsonContentType)) { // Handle 204 No Content -- response may be empty\n\n                    this.data = JSON.parse(this.response);\n\n                } else {\n\n                    this.data = this.response; //TODO Add more parsers\n\n                }\n\n                if (!this.checkStatus(this.status)) this.error = new Error(this.data.message || this.data.error_description || this.data.description || 'Unknown error');\n\n            } else {\n\n                var boundary = this.getResponseContentType().match(/boundary=([^;]+)/i)[1],\n                    parts = this.response.split(boundarySeparator + boundary);\n\n                if (parts[0].trim() === '') parts.shift();\n                if (parts[parts.length - 1].trim() == boundarySeparator) parts.pop();\n\n                // Step 1. Parse all parts into Ajax objects\n                parts = parts.map(function(part) {\n\n                    var subParts = part.trim().replace(/\\r/g, '').split(bodySeparator),\n                        ajaxPart = new Ajax(this.context);\n\n                    (subParts.length > 1 ? subParts.shift() : '')\n                        .split('\\n')\n                        .forEach(function(header) {\n\n                            if (header.length === 0) return res;\n\n                            var headerParts = header.split(headerSeparator),\n                                name = headerParts.shift().trim();\n\n                            ajaxPart.setResponseHeader(name, headerParts.join(headerSeparator).trim());\n\n                        }, this);\n\n                    ajaxPart.response = subParts.join(bodySeparator);\n\n                    return ajaxPart;\n\n                }, this);\n\n                // Step 2. Claim first part as statuses, assign status from this and parse the response\n                var statusInfo = parts.shift();\n                statusInfo.status = this.status;\n                statusInfo.parseResponse();\n\n                // Steo 3. For the rest of parts assign status and parse the response\n                this.data = parts.map(function(part, i) {\n\n                    part.status = statusInfo.data.response[i].status;\n                    part.parseResponse();\n\n                    return part;\n\n                }, this);\n\n            }\n\n        } catch (e) { // Capture parse errors\n\n            Log.error('Ajax.parseResponse(): Unable to parse data');\n            Log.error(e.stack || e);\n            Log.error(this.response);\n\n            this.error = e;\n\n        }\n\n        return this;\n\n    };\n\n    Ajax.prototype.destroy = function() {\n        if (this.xhr) this.xhr.abort();\n        return Observable.prototype.destroy.call(this);\n    };\n\n    module.exports = {\n        Class: Ajax,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {Ajax}\n         */\n        $get: function(context) {\n            return new Ajax(context);\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = __webpack_require__(15).Class;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.AjaxObserver\n     */\n    function AjaxObserver() {\n\n        Observable.call(this);\n\n    }\n\n    AjaxObserver.prototype = Object.create(Observable.prototype);\n\n    AjaxObserver.prototype.events = {\n        beforeRequest: 'beforeRequest', // parameters: ajax\n        requestSuccess: 'requestSuccess', // means that response was successfully fetched from server\n        requestError: 'requestError' // means that request failed completely\n    };\n\n    module.exports = {\n        Class: AjaxObserver,\n        /**\n         * @param {Context} context\n         * @returns {AjaxObserver}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('AjaxObserver', function() {\n                return new AjaxObserver();\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * Ajax Response Manager\n     * @constructor\n     * @alias RCSDK.core.XhrResponse\n     */\n    function XhrResponse() {\n        /** @type {IXhrResponse[]} */\n        this.responses = [];\n    }\n\n    /**\n     * @param {IXhrResponse} response\n     */\n    XhrResponse.prototype.add = function(response) {\n        this.responses.push(response);\n    };\n\n    XhrResponse.prototype.clear = function() {\n        this.responses = [];\n    };\n\n    /**\n     * @param {XhrMock} ajax\n     * @returns {IXhrResponse}\n     */\n    XhrResponse.prototype.find = function(ajax) {\n\n        var currentResponse = null;\n\n        this.responses.forEach(function(response) {\n\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n\n        });\n\n        return currentResponse;\n\n    };\n\n    module.exports = {\n        Class: XhrResponse,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrResponse}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('XhrResponse', function() {\n                return new XhrResponse(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IXhrResponse\n     * @property {string} path\n     * @property {function(Ajax)} response Response mock function\n     * @property {function(Ajax)} test? This will be executed to determine, whether this mock is applicable\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(18),\n        Observable = __webpack_require__(15).Class,\n        Log = __webpack_require__(17),\n        forcedTokenType = 'forced';\n\n    /**\n     * @typedef {Object} PlatformAuthInfo\n     * @property {string} token_type\n     * @property {string} access_token\n     * @property {string} expires_in\n     * @property {int} expireTime\n     * @property {string} refresh_token\n     * @property {string} refresh_token_expires_in\n     * @property {int} refreshExpireTime\n     * @property {string} scope\n     */\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Platform\n     * @param {Context} context\n     */\n    function Platform(context) {\n        Observable.call(this);\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        /** @type {Promise} */\n        this.refreshPromise = null;\n        this.context = context;\n    }\n\n    Platform.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Platform.prototype, 'constructor', {value: Platform, enumerable: false});\n\n    Platform.prototype.cacheId = 'platform';\n\n    Platform.prototype.pollInterval = 250;\n\n    Platform.prototype.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n\n    Platform.prototype.events = {\n        accessViolation: 'accessViolation',\n        logoutSuccess: 'logoutSuccess',\n        logoutError: 'logoutError',\n        authorizeSuccess: 'authorizeSuccess',\n        authorizeError: 'authorizeError',\n        refreshSuccess: 'refreshSuccess',\n        refreshError: 'refreshError'\n    };\n\n    /**\n     * @returns {Cache}\n     */\n    Platform.prototype.getStorage = function() {\n\n        return __webpack_require__(11).$get(this.context);\n\n    };\n\n    /**\n     * @returns {Ajax}\n     */\n    Platform.prototype.getAjax = function() {\n\n        return __webpack_require__(7).$get(this.context);\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.clearStorage = function() {\n\n        this.getStorage().clean();\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.setCredentials = function(appKey, appSecret) {\n\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n\n        if (apiKey == ':') return this;\n\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.setServer = function(server) {\n\n        this.server = server || '';\n\n        return this;\n\n    };\n\n    /**\n     * @param {boolean} [remember]\n     * @returns {Platform|boolean}\n     */\n    Platform.prototype.remember = function(remember) {\n\n        var key = this.cacheId + '-remember';\n\n        if (remember !== undefined) {\n\n            this.getStorage().setItem(key, remember);\n            return this;\n\n        }\n\n        return this.getStorage().getItem(key) || false;\n\n    };\n\n    /**\n     * @param {string} options.username\n     * @param {string} options.password\n     * @param {string} [options.extension]\n     * @param {boolean} [options.remember]\n     * @returns {Promise}\n     */\n    Platform.prototype.authorize = function(options) {\n\n        options = options || {};\n\n        options.remember = options.remember || false;\n\n        return this\n            .authCall({\n                url: '/restapi/oauth/token',\n                post: {\n                    \"grant_type\": \"password\",\n                    \"username\": options.username,\n                    \"extension\": options.extension || '',\n                    \"password\": options.password,\n                    \"access_token_ttl\": this.accessTokenTtl,\n                    \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                }\n            })\n            .then(function(ajax) {\n\n                this.setCache(ajax.data)\n                    .remember(options.remember)\n                    .emitAndCallback(this.events.authorizeSuccess, []);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.clearStorage()\n                    .emitAndCallback(this.events.authorizeError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Platform.prototype.isPaused = function() {\n        var storage = this.getStorage(),\n            cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n\n    Platform.prototype.pause = function() {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function() {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n\n    /**\n     * Gets resolved into Ajax or null if refresh resolved from elsewhere\n     * @returns {Promise}\n     */\n    Platform.prototype.refresh = function() {\n\n        var refresh = new (this.context.getPromise())(function(resolve, reject) {\n\n            if (this.isPaused()) {\n                return resolve(this.refreshPolling(null));\n            } else {\n                this.pause();\n            }\n\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function() {\n\n                var authData = this.getAuthData();\n\n                Log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n\n                if (!authData || !authData.refresh_token) return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime) return reject(new Error('Refresh token has expired'));\n                if (!this.isPaused()) return reject(new Error('Queue was resumed before refresh call'));\n\n                resolve(this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": this.accessTokenTtl,\n                        \"refresh_token_ttl\": this.remember() ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                    }\n                }));\n\n            }.bind(this), this.refreshDelayMs);\n\n        }.bind(this));\n\n        return refresh\n            .then(function(ajax) {\n\n                // This means refresh has happened elsewhere and we are here because of timeout\n                if (!ajax || !ajax.data) return ajax;\n\n                Log.info('Platform.refresh(): Token was refreshed');\n\n                if (!ajax.data.refresh_token || !ajax.data.access_token) {\n                    var e = new Error('Malformed OAuth response');\n                    e.ajax = ajax;\n                    throw e;\n                }\n\n                this.setCache(ajax.data)\n                    .resume();\n\n                return ajax;\n\n            }.bind(this))\n            .then(function(result) {\n\n                this.emit(this.events.refreshSuccess, result);\n                return result;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                if (this.clearCacheOnRefreshError) this.clearStorage();\n\n                this.emitAndCallback(this.events.accessViolation, [e])\n                    .emitAndCallback(this.events.refreshError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function() {\n\n        this.pause();\n\n        return this\n            .authCall({\n                url: '/restapi/oauth/revoke',\n                get: {\n                    token: this.getToken()\n                }\n            })\n            .then(function(ajax) {\n\n                this.resume()\n                    .clearStorage()\n                    .emit(this.events.logoutSuccess, ajax);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.resume()\n                    .emitAndCallback(this.events.accessViolation, [e])\n                    .emitAndCallback(this.events.logoutError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Platform.prototype.refreshPolling = function(result) {\n\n        if (this.refreshPromise) return this.refreshPromise;\n\n        this.refreshPromise = new (this.context.getPromise())(function(resolve, reject) {\n\n            Log.warn('Platform.refresh(): Refresh is already in progress polling started');\n\n            Utils.poll(function(next) {\n\n                if (this.isPaused()) return next();\n\n                this.refreshPromise = null;\n                this.resume();\n\n                if (this.isTokenValid()) {\n                    resolve(result);\n                } else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n\n            }.bind(this), this.pollInterval);\n\n        }.bind(this));\n\n        return this.refreshPromise;\n\n    };\n\n    Platform.prototype.getToken = function() {\n\n        return this.getAuthData().access_token;\n\n    };\n\n    Platform.prototype.getTokenType = function() {\n\n        return this.getAuthData().token_type;\n\n    };\n\n    /**\n     * @returns {PlatformAuthInfo}\n     */\n    Platform.prototype.getAuthData = function() {\n\n        return this.getStorage().getItem(this.cacheId) || {\n                token_type: '',\n                access_token: '',\n                expires_in: 0,\n                refresh_token: '',\n                refresh_token_expires_in: 0\n            };\n\n    };\n\n    /**\n     * Check if there is a valid (not expired) access token\n     * @returns {boolean}\n     */\n    Platform.prototype.isTokenValid = function() {\n\n        var authData = this.getAuthData();\n        return (authData.token_type == forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n\n    };\n\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     * @returns {Promise}\n     */\n    Platform.prototype.isAuthorized = function() {\n\n        if (this.isTokenValid()) return this.context.getPromise().resolve(true);\n        return this.refresh();\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.cancelAccessToken = function() {\n\n        return this.setCache(Utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n\n    };\n\n    /**\n     * @param {object} authData\n     * @returns {Platform}\n     */\n    Platform.prototype.setCache = function(authData) {\n\n        var oldAuthData = this.getAuthData();\n\n        Log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n\n        this.getStorage().setItem(this.cacheId, authData);\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.forceAuthentication = function() {\n\n        this.setCache({\n            token_type: forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n\n        return this;\n\n    };\n\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.apiCall = function(options) {\n\n        options = options || {};\n        options.url = this.apiUrl(options.url, {addServer: true});\n\n        return this\n            .isAuthorized() // Refresh will occur inside\n            .then(function() {\n\n                var token = this.getToken();\n\n                return this.getAjax()\n                    .setOptions(options)\n                    .setRequestHeader('Authorization', this.getTokenType() + (token ? ' ' + token : ''))\n                    .send();\n\n            }.bind(this))\n            .catch(function(e) {\n\n                if (!e.ajax || !e.ajax.isResponseUnauthorized()) throw e;\n\n                this.cancelAccessToken();\n\n                return this\n                    .refresh()\n                    .then(function() {\n\n                        // Re-send with same options\n                        return this.apiCall(options);\n\n                    }.bind(this));\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.authCall = function(options) {\n\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.post = Utils.queryStringify(options.post);\n        options.url = this.apiUrl(options.url, {addServer: true});\n\n        return this.getAjax()\n            .setOptions(options)\n            .setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setRequestHeader('Accept', 'application/json')\n            .setRequestHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n\n    };\n\n    /**\n     *\n     * @param url\n     * @param {{addMethod?: string, addToken?: boolean, addServer?: boolean}} [options]\n     * @returns {string}\n     */\n    Platform.prototype.apiUrl = function(url, options) {\n\n        url = url || '';\n        options = options || {};\n\n        var builtUrl = '';\n\n        if (options.addServer && url.indexOf('http://') == -1 && url.indexOf('https://') == -1) builtUrl += this.server;\n\n        if (url.indexOf(this.urlPrefix) == -1) builtUrl += this.urlPrefix + '/' + this.apiVersion;\n\n        if (url.indexOf(this.accountPrefix) > -1) builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n\n        builtUrl += url;\n\n        if (options.addMethod || options.addToken) builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n\n        if (options.addMethod) builtUrl += '_method=' + options.addMethod;\n        if (options.addToken) builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n\n        return builtUrl;\n\n    };\n\n    module.exports = {\n        Class: Platform,\n        /**\n         * @param {Context} context\n         * @returns {Platform}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('Platform', function() {\n                return new Platform(context);\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = __webpack_require__(15).Class,\n        Utils = __webpack_require__(18);\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Cache\n     * @param {Context} context\n     */\n    function Cache(context) {\n        Observable.call(this);\n        this.setPrefix();\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n\n    Cache.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Cache.prototype, 'constructor', {value: Cache, enumerable: false});\n\n    Cache.prototype.setPrefix = function(prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n\n    Cache.prototype.prefixKey = function(key) {\n        return this.prefix + key;\n    };\n\n    Cache.prototype.setItem = function(key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n\n    Cache.prototype.removeItem = function(key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n\n    Cache.prototype.getItem = function(key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item) return null;\n        return JSON.parse(item);\n    };\n\n    Cache.prototype.clean = function() {\n\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key)) continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n\n        return this;\n\n    };\n\n    module.exports = {\n        Class: Cache,\n        /**\n         * @param {Context} context\n         * @returns {Cache}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('Cache', function() {\n                return new Cache(context);\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = __webpack_require__(15).Class,\n        Log = __webpack_require__(17),\n        Utils = __webpack_require__(18),\n        renewHandicapMs = 60 * 1000;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Subscription\n     * @param {Context} context\n     */\n    function Subscription(context) {\n        Observable.call(this);\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '', // 2014-03-12T19:54:35.613Z\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '', // 2014-03-12T19:54:35.613Z\n            status: '', // Active\n            uri: ''\n        };\n        /** @type {PUBNUB} */\n        this.pubnub = null;\n        this.context = context;\n    }\n\n    Subscription.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Subscription.prototype, 'constructor', {value: Subscription, enumerable: false});\n\n    Subscription.prototype.events = {\n        notification: 'notification',\n        removeSuccess: 'removeSuccess',\n        removeError: 'removeError',\n        renewSuccess: 'renewSuccess',\n        renewError: 'renewError',\n        subscribeSuccess: 'subscribeSuccess',\n        subscribeError: 'subscribeError'\n    };\n\n    /**\n     * @returns {PUBNUB}\n     */\n    Subscription.prototype.getPubnub = function() {\n\n        return this.context.getPubnub();\n\n    };\n\n    Subscription.prototype.getCrypto = function() {\n\n        return this.context.getCryptoJS();\n\n    };\n\n    Subscription.prototype.getPlatform = function() {\n\n        return __webpack_require__(10).$get(this.context);\n\n    };\n\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function(options) {\n\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        } else {\n            return this.subscribe(options);\n        }\n\n    };\n\n    Subscription.prototype.addEvents = function(events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n\n    Subscription.prototype.setEvents = function(events) {\n        this.eventFilters = events;\n        return this;\n    };\n\n    Subscription.prototype.getFullEventFilters = function() {\n\n        return this.eventFilters.map(function(event) {\n            return this.getPlatform().apiUrl(event);\n        }.bind(this));\n\n    };\n\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.subscribe = function(options) {\n\n        options = options || {};\n        if (options.events) this.eventFilters = options.events;\n\n        this.clearTimeout();\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.eventFilters || !this.eventFilters.length) throw new Error('Events are undefined');\n\n                resolve(this.getPlatform().apiCall({\n                    method: 'POST',\n                    url: '/restapi/v1.0/subscription',\n                    post: {\n                        eventFilters: this.getFullEventFilters(),\n                        deliveryMode: {\n                            transportType: 'PubNub'\n                        }\n                    }\n                }));\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.updateSubscription(ajax.data)\n                    .subscribeAtPubnub()\n                    .emit(this.events.subscribeSuccess, ajax.data);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.unsubscribe()\n                    .emit(this.events.subscribeError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.renew = function(options) {\n\n        options = options || {};\n        if (options.events) this.eventFilters = options.events;\n\n        this.clearTimeout();\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.subscription || !this.subscription.id) throw new Error('Subscription ID is required');\n                if (!this.eventFilters || !this.eventFilters.length) throw new Error('Events are undefined');\n\n                resolve();\n\n            }.bind(this))\n            .then(function() {\n\n                return this.getPlatform().apiCall({\n                    method: 'PUT',\n                    url: '/restapi/v1.0/subscription/' + this.subscription.id,\n                    post: {\n                        eventFilters: this.getFullEventFilters()\n                    }\n                });\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.updateSubscription(ajax.data)\n                    .emit(this.events.renewSuccess, ajax.data);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.unsubscribe()\n                    .emit(this.events.renewError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @param {boolean} [options.async]\n     * @returns {Promise}\n     */\n    Subscription.prototype.remove = function(options) {\n\n        options = Utils.extend({\n            async: true\n        }, options);\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.subscription || !this.subscription.id) throw new Error('Subscription ID is required');\n\n                resolve(this.getPlatform().apiCall({\n                    async: !!options.async, // Warning! This is necessary because this method is used in beforeunload hook and has to be synchronous\n                    method: 'DELETE',\n                    url: '/restapi/v1.0/subscription/' + this.subscription.id\n                }));\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.unsubscribe()\n                    .emit(this.events.removeSuccess, ajax);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.emit(this.events.removeError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Subscription.prototype.destroy = function() {\n\n        this.unsubscribe();\n\n        Log.info('RC.core.Subscription: Destroyed');\n\n        return Observable.prototype.destroy.call(this);\n\n    };\n\n    Subscription.prototype.isSubscribed = function() {\n\n        return this.subscription &&\n               this.subscription.deliveryMode &&\n               this.subscription.deliveryMode.subscriberKey &&\n               this.subscription.deliveryMode.address;\n\n    };\n\n    /**\n     * @protected\n     */\n    Subscription.prototype.setTimeout = function() {\n\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - renewHandicapMs;\n\n        this.timeout = setTimeout(function() {\n\n            this.renew({});\n\n        }.bind(this), timeToExpiration);\n\n    };\n\n    /**\n     * @protected\n     */\n    Subscription.prototype.clearTimeout = function() {\n\n        clearTimeout(this.timeout);\n\n    };\n\n    /**\n     * Set new subscription info and re-create timeout\n     * @protected\n     * @param subscription\n     * @returns {Subscription}\n     */\n    Subscription.prototype.updateSubscription = function(subscription) {\n\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n\n    };\n\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     * @protected\n     * @returns {Subscription}\n     */\n    Subscription.prototype.unsubscribe = function() {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed()) this.pubnub.unsubscribe({channel: this.subscription.deliveryMode.address});\n        this.subscription = null;\n        return this;\n    };\n\n    /**\n     * @abstract\n     * @param {Object} message\n     * @returns {Subscription}\n     */\n    Subscription.prototype.notify = function(message) {\n\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n\n            var CryptoJS = this.getCrypto();\n\n            var key = CryptoJS.enc.Base64.parse(this.subscription.deliveryMode.encryptionKey);\n            var data = CryptoJS.enc.Base64.parse(message);\n            var decrypted = CryptoJS.AES.decrypt({ciphertext: data}, key, {mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7}).toString(CryptoJS.enc.Utf8);\n            message = JSON.parse(decrypted);\n\n        }\n\n        this.emit(this.events.notification, message);\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Subscription}\n     */\n    Subscription.prototype.subscribeAtPubnub = function() {\n\n        if (!this.isSubscribed()) return this;\n\n        var PUBNUB = this.getPubnub();\n\n        this.pubnub = PUBNUB.init({\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n\n        this.pubnub.ready();\n\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function(message, env, channel) {\n\n                Log.info('RC.core.Subscription: Incoming message', message);\n                this.notify(message);\n\n            }.bind(this),\n            connect: function() {\n                Log.info('RC.core.Subscription: PUBNUB connected');\n            }.bind(this)\n        });\n\n        return this;\n\n    };\n\n    module.exports = {\n        Class: Subscription,\n        /**\n         * @param {Context} context\n         * @returns {Subscription}\n         */\n        $get: function(context) {\n            return new Subscription(context);\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n * istanbul ignore next\n */\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n    'use strict';\n\n    var Observable = __webpack_require__(15).Class;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.PageVisibility\n     */\n    function PageVisibility() {\n\n        Observable.call(this);\n\n        var hidden = \"hidden\",\n            onchange = function(evt) {\n\n                evt = evt || window.event;\n\n                var v = 'visible',\n                    h = 'hidden',\n                    evtMap = {\n                        focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n                    };\n\n                this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n\n                this.emit(this.events.change, this.visible);\n\n            }.bind(this);\n\n        this.visible = true;\n\n        if (typeof document == 'undefined' || typeof window == 'undefined') return;\n\n        // Standards:\n\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        // IE 9 and lower:\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        // All others:\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n\n    }\n\n    PageVisibility.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(PageVisibility.prototype, 'constructor', {value: PageVisibility, enumerable: false});\n\n    PageVisibility.prototype.events = {\n        change: 'change'\n    };\n\n    PageVisibility.prototype.isVisible = function() {\n        return this.visible;\n    };\n\n    module.exports = {\n        Class: PageVisibility,\n        /**\n         * @param {Context} context\n         * @returns {PageVisibility}\n         */\n        $get: function(context) {\n            return new PageVisibility();\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(18);\n\n    /**\n     * @alias RCSDK.core.Helper\n     * @constructor\n     * @param {Context} context\n     */\n    function Helper(context) {\n        this.context = context;\n    }\n\n    Helper.prototype.defaultProperty = 'id';\n\n    /**\n     * @returns {Context}\n     */\n    Helper.prototype.getContext = function() {\n        return this.context;\n    };\n\n    /**\n     * @param {object} [options]\n     * @param {string} [id]\n     */\n    Helper.prototype.createUrl = function(options, id) {\n        return '';\n    };\n\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getId = function(object) {\n        return object && object[this.defaultProperty];\n    };\n\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {boolean}\n     */\n    Helper.prototype.isNew = function(object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {IHelperObject}\n     */\n    Helper.prototype.resetAsNew = function(object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getUri = function(object) {\n        return object && object.uri;\n    };\n\n    /**\n     * @param {Ajax} ajax\n     * @return {IHelperObject[]}\n     */\n    Helper.prototype.parseMultipartResponse = function(ajax) {\n\n        if (ajax.isResponseMultipart()) {\n\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function(result) {\n                return (!result.error);\n            }).map(function(result) {\n                return result.data;\n            });\n\n        } else { // Single ID\n\n            return [ajax.data];\n\n        }\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} [object]\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.loadRequest = function(object, options) {\n\n        return Utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.saveRequest = function(object, options) {\n\n        if (!object && !(options && options.post)) throw new Error('No Object');\n\n        return Utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            post: (options && options.post) || object\n        });\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.deleteRequest = function(object, options) {\n\n        options = options || {};\n\n        if (!this.getUri(object) && !(options && options.url)) throw new Error('Object has to be not new or URL must be provided');\n\n        return Utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n\n    };\n\n    /**\n     * If no url was provided, default SYNC url will be returned\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.syncRequest = function(options) {\n\n        options = options || {};\n\n        options.url = options.url || this.createUrl({sync: true});\n        options.get = options.get || {};\n\n        if (!!options.get.syncToken) {\n            options.get = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        } else {\n            options.get.syncType = 'FSync';\n        }\n\n        return options;\n\n    };\n\n    Helper.prototype.nextPageExists = function(data) {\n\n        return (data && data.navigation && ('nextPage' in data.navigation));\n\n    };\n\n    /**\n     * @param {IHelperObject[]} array - an array to be indexed\n     * @param {function(object)} [getIdFn] - must return an ID for each array item\n     * @param {boolean} [gather] - if true, then each index will have an array of items, that has same ID, otherwise the first indexed item wins\n     * @returns {*}\n     */\n    Helper.prototype.index = function(array, getIdFn, gather) {\n\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n\n        return array.reduce(function(index, item) {\n\n            var id = getIdFn(item);\n\n            if (!id || (index[id] && !gather)) return index;\n\n            if (gather) {\n                if (!index[id]) index[id] = [];\n                index[id].push(item);\n            } else {\n                index[id] = item;\n            }\n\n            return index;\n\n        }, {});\n\n    };\n\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * @param {IHelperObject[]} target\n     * @param {IHelperObject[]} supplement\n     * @param {function(IHelperObject)} [getIdFn]\n     * @param {boolean} [mergeItems] - if true, properties of _supplement_ item will be applied to _target_ item, otherwise _target_ item will be replaced\n     * @returns {*}\n     */\n    Helper.prototype.merge = function(target, supplement, getIdFn, mergeItems) {\n\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n\n        var supplementIndex = this.index(supplement, getIdFn),\n            updatedIDs = [];\n\n        var result = target.map(function(item) {\n\n            var id = getIdFn(item),\n                newItem = supplementIndex[id];\n\n            if (newItem) updatedIDs.push(id);\n\n            return newItem ? (mergeItems ? Utils.extend(item, newItem) : newItem) : item;\n\n        });\n\n        supplement.forEach(function(item) {\n\n            if (updatedIDs.indexOf(getIdFn(item)) == -1) result.push(item);\n\n        });\n\n        return result;\n\n    };\n\n    module.exports = {\n        Class: Helper,\n        /**\n         * @param {Context} context\n         * @returns {Helper}\n         */\n        $get: function(context) {\n            return new Helper(context);\n        }\n    };\n\n    /**\n     * @typedef {object} IHelperObject\n     * @property {string} id\n     * @property {string} uri\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    var Utils = __webpack_require__(18),\n        Log = __webpack_require__(17);\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.Observable\n     */\n    function Observable() {\n        if (!(this instanceof Observable)) throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', {value: {}, enumerable: false, writable: true});\n        Object.defineProperty(this, 'oneTimeEvents', {value: {}, enumerable: false, writable: true});\n        Object.defineProperty(this, 'oneTimeArguments', {value: {}, enumerable: false, writable: true});\n    }\n\n    // Object.create({}) is not needed\n    // Do not put Object or Function.prototype instead of {}, otherwise all instances will get non-writable 'name' property\n    // Observable.prototype = {};\n    Object.defineProperty(Observable.prototype, 'constructor', {value: Observable, enumerable: false});\n\n    Observable.prototype.hasListeners = function(event) {\n        return (event in this.listeners);\n    };\n\n    Observable.prototype.registerOneTimeEvent = function(event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n\n    Observable.prototype.on = function(events, callback) {\n\n        if (typeof events == 'string') events = [events];\n        if (!events) throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function') throw new Error('Callback must be a function');\n\n        var self = this;\n\n        events.forEach(function(event) {\n\n            if (!self.hasListeners(event)) self.listeners[event] = [];\n\n            self.listeners[event].push(callback);\n\n            if (self.isOneTimeEventFired(event)) { // Fire listener immediately if is inited already\n                Log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n\n        });\n\n        return this;\n\n    };\n\n    Observable.prototype.emit = function(event) {\n\n        if (this.isOneTimeEventFired(event)) {\n            Log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n\n        var self = this,\n            args = Utils.argumentsToArray(arguments).splice(1),\n            result = null;\n\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n\n        if (!this.hasListeners(event)) return null;\n\n        this.listeners[event].some(function(callback) {\n\n            result = callback.apply(self, args);\n            return (result === false);\n\n        });\n\n        return result;\n\n    };\n\n    Observable.prototype.off = function(event, callback) {\n        var self = this;\n        if (!callback) {\n            delete this.listeners[event];\n        } else {\n            if (!this.hasListeners(event)) return this;\n            this.listeners[event].forEach(function(cb, i) {\n\n                if (cb === callback) delete self.listeners[event][i];\n\n            });\n        }\n        return this;\n    };\n\n    Observable.prototype.isOneTimeEvent = function(event) {\n        return (event in this.oneTimeEvents);\n    };\n\n    Observable.prototype.isOneTimeEventFired = function(event) {\n        if (!this.isOneTimeEvent(event)) return false;\n        return (this.oneTimeEvents[event]);\n    };\n\n    Observable.prototype.setOneTimeEventFired = function(event) {\n        this.oneTimeEvents[event] = true;\n    };\n\n    Observable.prototype.setOneTimeEventArgumens = function(event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n\n    Observable.prototype.getOneTimeEventArgumens = function(event) {\n        return this.oneTimeArguments[event];\n    };\n\n    Observable.prototype.offAll = function() {\n        this.listeners = {};\n        this.oneTimeEvents = {};\n        this.oneTimeArguments = {};\n    };\n\n    Observable.prototype.destroy = function() {\n        this.offAll();\n        Log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n\n    /**\n     * @param {string} event\n     * @param {Array} args\n     * @param {function} [callback]\n     */\n    Observable.prototype.emitAndCallback = function(event, args, callback) {\n        args = Utils.argumentsToArray(args);\n        if (event) this.emit.apply(this, [event].concat(args));\n        if (callback) callback.apply(this, args);\n        return this;\n    };\n\n    module.exports = {\n        Class: Observable,\n        /**\n         * @param {Context} context\n         * @returns {Observable}\n         */\n        $get: function(context) {\n            return new Observable(context);\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(18);\n\n    /**\n     * @typedef {object} IValidator\n     * @property {string} field\n     * @property {function} validator\n     */\n\n    /**\n     * @typedef {object} IValidatorResult\n     * @property {boolean} isValid\n     * @property {Object.<number, Error[]>} errors\n     */\n\n    /**\n     * @alias RCSDK.core.Validator\n     * @name Validator\n     */\n    var Validator = module.exports = {\n        /**\n         * @param {IValidator[]} validators\n         * @returns {IValidatorResult}\n         */\n        validate: function(validators) {\n\n            /** @type {IValidatorResult} */\n            var result = {\n                errors: {},\n                isValid: true\n            };\n\n            result.errors = validators.reduce(function(errors, validator) {\n\n                var res = validator.validator();\n\n                if (res.length > 0) {\n                    result.isValid = false;\n                    errors[validator.field] = errors[validator.field] || [];\n                    errors[validator.field] = errors[validator.field].concat(res);\n                }\n\n                return errors;\n\n            }, {});\n\n            return result;\n\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * @deprecated\n         * @param value\n         * @param multiple\n         * @returns {Function}\n         */\n        email: function(value, multiple) {\n            return function() {\n                if (!value) return [];\n                return Utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n            };\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * TODO International phone numbers\n         * @deprecated\n         * @param value\n         * @returns {Function}\n         */\n        phone: function(value) {\n            return function() {\n                if (!value) return [];\n                return Utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n            };\n        },\n        required: function(value) {\n            return function() {\n                return !value ? [new Error('Field is required')] : [];\n            };\n        },\n        length: function(value, max, min) {\n            return function() {\n\n                var errors = [];\n\n                if (!value) return errors;\n\n                value = value.toString();\n\n                if (min && value.length < min) errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n                if (max && value.length > max) errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n\n                return errors;\n\n            };\n        },\n        $get: function(context) {\n            return Validator;\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(18);\n\n    /**\n     * @alias RCSDK.core.Log\n     * @name Log\n     */\n    var Log = module.exports = {\n        logDebug: false,\n        logInfo: false,\n        logWarnings: false,\n        logErrors: false,\n        addTimestamps: true,\n        /** @type {Console} */\n        console: console || { // safety\n            log: function() {},\n            warn: function() {},\n            info: function() {},\n            error: function() {}\n        },\n        disableAll: function() {\n            this.logDebug = false;\n            this.logInfo = false;\n            this.logWarnings = false;\n            this.logErrors = false;\n        },\n        enableAll: function() {\n            this.logDebug = true;\n            this.logInfo = true;\n            this.logWarnings = true;\n            this.logErrors = true;\n        },\n        parseArguments: function(args) {\n            args = Utils.argumentsToArray(args);\n            if (this.addTimestamps) args.unshift(new Date().toLocaleString(), '-');\n            return args;\n        },\n        debug: function() {\n            if (this.logDebug) this.console.log.apply(this.console, this.parseArguments(arguments));\n        },\n        info: function() {\n            if (this.logInfo) this.console.info.apply(this.console, this.parseArguments(arguments));\n        },\n        warn: function() {\n            if (this.logWarnings) this.console.warn.apply(this.console, this.parseArguments(arguments));\n        },\n        error: function() {\n            if (this.logErrors) this.console.error.apply(this.console, this.parseArguments(arguments));\n        },\n        $get: function(context) {\n            return Log;\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var hasOwn = Object.prototype.hasOwnProperty,\n        toString = Object.prototype.toString,\n        rdigit = /\\d/,\n        class2type = {};\n\n    // Populate the class2type map\n    'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function(name) {\n        class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n    });\n\n    /**\n     * @alias RCSDK.core.Utils\n     * @name Utils\n     */\n    var Utils = module.exports = {\n\n        /**\n         * Ported from jQuery.fn.extend\n         * Optional first parameter makes deep copy\n         * @param {object} targetObject\n         * @param {object} sourceObject\n         * @returns {object}\n         */\n        extend: function extend(targetObject, sourceObject) {\n\n            var options, name, src, copy, copyIsArray, clone,\n                target = arguments[0] || {},\n                i = 1,\n                length = arguments.length,\n                deep = false;\n\n            // Handle a deep copy situation\n            if (typeof target === \"boolean\") {\n                deep = target;\n\n                // skip the boolean and the target\n                target = arguments[i] || {};\n                i++;\n            }\n\n            // Handle case when target is a string or something (possible in deep copy)\n            if (typeof target !== \"object\" && !this.isFunction(target)) {\n                target = {};\n            }\n\n            for (; i < length; i++) {\n\n                // Only deal with non-null/undefined values\n                if ((options = arguments[i]) !== null) {\n\n                    // Extend the base object\n                    for (name in options) {\n\n                        src = target[name];\n                        copy = options[name];\n\n                        // Prevent never-ending loop\n                        if (target === copy) {\n                            continue;\n                        }\n\n                        // Recurse if we're merging plain objects or arrays\n                        if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n\n                            if (copyIsArray) {\n                                copyIsArray = false;\n                                clone = src && this.isArray(src) ? src : [];\n                            } else {\n                                clone = src && this.isPlainObject(src) ? src : {};\n                            }\n\n                            // Never move original objects, clone them\n                            target[name] = this.extend(deep, clone, copy);\n\n                            // Don't bring in undefined values\n                        } else if (copy !== undefined) {\n\n                            target[name] = copy;\n\n                        }\n                    }\n                }\n            }\n\n            // Return the modified object\n            return target;\n\n        },\n\n        forEach: function(object, cb) {\n\n            for (var i in object) {\n\n                if (!object.hasOwnProperty(i)) continue;\n\n                var res = cb(object[i], i);\n\n                if (res === false) break;\n\n            }\n\n        },\n\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n         * @param {object} parameters\n         * @returns {string}\n         */\n        queryStringify: function(parameters) {\n\n            var array = [],\n                self = this;\n\n            this.forEach(parameters, function(v, i) {\n\n                if (self.isArray(v)) {\n                    v.forEach(function(vv) {\n                        array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                    });\n                } else {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n                }\n\n            });\n\n            return array.join('&');\n\n        },\n\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n         * @param {string} queryString\n         * @returns {object}\n         */\n        parseQueryString: function(queryString) {\n\n            var argsParsed = {},\n                self = this;\n\n            queryString.split('&').forEach(function(arg) {\n\n                arg = decodeURIComponent(arg);\n\n                if (arg.indexOf('=') == -1) {\n\n                    argsParsed[arg.trim()] = true;\n\n                } else {\n\n                    var pair = arg.split('='),\n                        key = pair[0].trim(),\n                        value = pair[1].trim();\n\n                    if (key in argsParsed) {\n                        if (key in argsParsed && !self.isArray(argsParsed[key])) argsParsed[key] = [argsParsed[key]];\n                        argsParsed[key].push(value);\n                    } else {\n                        argsParsed[key] = value;\n                    }\n\n                }\n\n            });\n\n            return argsParsed;\n\n        },\n\n        /**\n         * Returns true if the passed value is valid email address.\n         * @param {string} v\n         * @param {boolean} multiple Checks multiple comma separated emails according to RFC 2822\n         * @returns {boolean}\n         */\n        isEmail: function(v, multiple) {\n            if (!!multiple) {\n                //this Regexp is also suitable for multiple emails (comma separated)\n                return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n            } else {\n                return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n            }\n\n        },\n\n        isPhoneNumber: function(v) {\n            return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n        },\n\n        /**\n         * @param args\n         * @returns {Array}\n         */\n        argumentsToArray: function(args) {\n            return Array.prototype.slice.call(args || [], 0);\n        },\n\n        isDate: function(obj) {\n            return this.type(obj) === \"date\";\n        },\n\n        isFunction: function(obj) {\n            return this.type(obj) === \"function\";\n        },\n\n        isArray: Array.isArray || function(obj) {\n            return this.type(obj) === \"array\";\n        },\n\n        // A crude way of determining if an object is a window\n        isWindow: function(obj) {\n            return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n        },\n\n        isNaN: function(obj) {\n            return obj === null || !rdigit.test(obj) || isNaN(obj);\n        },\n\n        type: function(obj) {\n            return obj === null ?\n                   String(obj) :\n                   class2type[toString.call(obj)] || \"object\";\n        },\n\n        isPlainObject: function(obj) {\n            // Must be an Object.\n            // Because of IE, we also have to check the presence of the constructor property.\n            // Make sure that DOM nodes and window objects don't pass through, as well\n            if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n                return false;\n            }\n\n            // Not own constructor property must be Object\n            if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n                return false;\n            }\n\n            // Own properties are enumerated firstly, so to speed up,\n            // if last one is own, then all properties are own.\n\n            var key;\n            for (key in obj) {}\n\n            return key === undefined || hasOwn.call(obj, key);\n        },\n\n        getProperty: function(obj, property) {\n\n            return property\n                .split(/[.[\\]]/)\n                .reduce(function(res, part) {\n                    if (!res) return undefined;\n                    return part ? res[part] : res;\n                }, obj);\n\n        },\n\n        poll: function(fn, interval, timeout) {\n\n            this.stopPolling(timeout);\n\n            interval = interval || 1000;\n\n            var next = function(delay) {\n\n                delay = delay || interval;\n\n                interval = delay;\n\n                return setTimeout(function() {\n\n                    fn(next, delay);\n\n                }, delay);\n\n            };\n\n            return next();\n\n        },\n\n        stopPolling: function(timeout) {\n            if (timeout) clearTimeout(timeout);\n        },\n\n        parseString: function(s) {\n            return s ? s.toString() : '';\n        },\n\n        parseNumber: function(n) {\n            if (!n) return 0;\n            n = parseFloat(n);\n            return isNaN(n) ? 0 : n;\n        },\n\n        $get: function(context) {\n            return Utils;\n        }\n\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(18);\n\n    /**\n     * @alias RCSDK.core.List\n     * @name List\n     */\n    var List = module.exports = {\n\n        /**\n         * @param {string} property\n         * @returns {function(object)}\n         */\n        propertyExtractor: function(property) {\n            return function(item, options) {\n                return property ? ((item && item[property]) || null) : item;\n            };\n        },\n\n        /**\n         * Non-string types are converted to string\n         * Non-string types are extracted as an empty string if they could be converted to false\n         * If no options.sortBy given the item itself is extracted\n         * Compares strings:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {string} a\n         * @param {string} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        stringComparator: function(a, b, options) {\n\n            return Utils.parseString(a).localeCompare(Utils.parseString(b));\n\n        },\n\n        /**\n         * Non-numeric types are extracted as 0 if they could be converted to false\n         * Objects that could not be converted to number are extracted as 0\n         * If no options.sortBy given the item itself is extracted\n         * See parseFloat for more info\n         * Compares numbers:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Function does not check types\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {number} a\n         * @param {number} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        numberComparator: function(a, b, options) {\n\n            return (Utils.parseNumber(a) - Utils.parseNumber(b));\n\n        },\n\n        /**\n         * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n         * compare function (_compareFn_ option, by default Helper.stringComparator)\n         * Merged options are provided to _extractFn_ and _compareFn_\n         * TODO Check memory leaks for all that options links\n         * @param {IListComparatorOptions} [options]\n         * @returns {function(object, object)}\n         */\n        comparator: function(options) {\n\n            options = Utils.extend({\n                extractFn: this.propertyExtractor((options && options.sortBy) || null),\n                compareFn: this.stringComparator\n            }, options);\n\n            /**\n             * @param {object} item1\n             * @param {object} item2\n             * @returns {number}\n             */\n            function comparator(item1, item2) {\n\n                return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n\n            }\n\n            return comparator;\n\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        equalsFilter: function(obj, options) {\n            return (options.condition === obj);\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        containsFilter: function(obj, options) {\n            return (obj && obj.toString().indexOf(options.condition) > -1);\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options - `condition` must be an instance of RegExp\n         * @returns {boolean}\n         */\n        regexpFilter: function(obj, options) {\n            if (!(options.condition instanceof RegExp)) throw new Error('Condition must be an instance of RegExp');\n            return (options.condition.test(obj));\n        },\n\n        /**\n         * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n         * compare function (`filterFn` option, by default Helper.equalsFilter)\n         * Merged options are provided to `extractFn` and `compareFn`\n         * Set `filterBy` to null to force `propertyExtractor` to return object itself\n         * TODO Check memory leaks for all that options links\n         * @param {IListFilterOptions[]} [filterConfigs]\n         * @returns {function(object)}\n         */\n        filter: function(filterConfigs) {\n\n            var self = this;\n\n            filterConfigs = (filterConfigs || []).map(function(opt) {\n\n                return Utils.extend({\n                    condition: '',\n                    extractFn: self.propertyExtractor((opt && opt.filterBy) || null),\n                    filterFn: self.equalsFilter\n                }, opt);\n\n            });\n\n            /**\n             * @param {object} item\n             * @returns {boolean}\n             */\n            function filter(item) {\n\n                return filterConfigs.reduce(function(pass, opt) {\n\n                    if (!pass || !opt.condition) return pass;\n                    return opt.filterFn(opt.extractFn(item, opt), opt);\n\n                }, true);\n\n            }\n\n            return filter;\n\n        },\n\n        $get: function(context) {\n            return List;\n        }\n\n    };\n\n    /**\n     * @typedef {object} IListComparatorOptions\n     * @property {string} sortBy\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} compareFn\n     */\n\n    /**\n     * @typedef {object} IListFilterOptions\n     * @property {string} filterBy\n     * @property {object} condition\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} filterFn\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CountryHelper(context) {\n        Helper.call(this, context);\n    }\n\n    CountryHelper.prototype = Object.create(Helper.prototype);\n\n    CountryHelper.prototype.createUrl = function() {\n        return '/dictionary/country';\n    };\n\n    module.exports = {\n        Class: CountryHelper,\n        /**\n         * @param {Context} context\n         * @returns {CountryHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('CountryHelper', function() {\n                return new CountryHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ICountry\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} callingCode\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceModelHelper(context) {\n        Helper.call(this, context);\n    }\n\n    DeviceModelHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IDeviceModel} device\n     * @returns {string}\n     */\n    DeviceModelHelper.prototype.getId = function(device) {\n\n        if (!device) return null;\n\n        return device.id + (\n                device.addons && device.addons[0]\n                    ? '-' + device.addons[0].id + '-' + device.addons[0].count\n                    : ''\n            );\n\n    };\n\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     * @param {IDeviceModel} device\n     * @returns {IDeviceModel}\n     */\n    DeviceModelHelper.prototype.cleanForSaving = function(device) {\n\n        if (!device) return null;\n\n        delete device.name;\n        delete device.deviceClass;\n\n        if (device.addons && device.addons.length > 0) {\n\n            device.addons.forEach(function(addon, i) {\n                delete device.addons[i].name;\n            });\n\n        } else {\n\n            delete device.addons;\n\n        }\n\n        return device;\n\n    };\n\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n     * @type {IDeviceModel[]}\n     */\n    DeviceModelHelper.prototype.devices = [\n        {\n            id: '-1',\n            name: 'Softphone'\n        },\n        {\n            id: '0',\n            name: 'Existing device'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '23',\n            name: 'Polycom IP 321 Basic IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '30',\n            name: 'Polycom IP 550 HD Manager IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '37',\n            name: 'Polycom IP 6000 Conference Phone',\n            deviceClass: 'Conference Phone'\n        },\n        {\n            id: '40',\n            name: 'Polycom IP 335 HD IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '51',\n            name: 'Cisco SPA-303 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\tDesk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '3'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '52',\n            name: 'Cisco SPA-122 ATA',\n            deviceClass: 'Analog Adapter'\n        },\n        {\n            id: '53',\n            name: 'Polycom VVX-500 Color Touchscreen',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '54',\n            name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '55',\n            name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        }\n    ];\n\n    module.exports = {\n        Class: DeviceModelHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceModelHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('DeviceModelHelper', function() {\n                return new DeviceModelHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IDeviceModel\n     * @property {string} id\n     * @property {string} name\n     * @property {string} deviceClass\n     * @property {string} addons\n     */\n\n    /**\n     * @typedef {Object} IDeviceModelAddon\n     * @property {string} id\n     * @property {string} name\n     * @property {string} count\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LanguageHelper(context) {\n        Helper.call(this, context);\n    }\n\n    LanguageHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @type {ILanguage[]}\n     */\n    LanguageHelper.prototype.languages = [\n        {\n            id: '1033',\n            name: 'English (US)'\n        },\n        {\n            id: '3084',\n            name: 'French (Canada)'\n        }\n    ];\n\n    module.exports = {\n        Class: LanguageHelper,\n        /**\n         * @param {Context} context\n         * @returns {LanguageHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('LanguageHelper', function() {\n                return new LanguageHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ILanguage\n     * @property {string} id\n     * @property {string} name\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        List = __webpack_require__(19),\n        Utils = __webpack_require__(18);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LocationHelper(context) {\n        Helper.call(this, context);\n        this.state = __webpack_require__(25).$get(context);\n    }\n\n    LocationHelper.prototype = Object.create(Helper.prototype);\n\n    LocationHelper.prototype.createUrl = function() {\n        return '/dictionary/location';\n    };\n\n    /**\n     * @param {ILocationFilterOptions} options\n     * @returns {function(ILocation)}\n     */\n    LocationHelper.prototype.filter = function(options) {\n\n        var uniqueNPAs = [];\n\n        options = Utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.stateId,\n                filterFn: function(item, opts) {\n                    return (this.state.getId(item.state) == opts.condition);\n                }.bind(this)\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function(item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    } else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {comparator}\n     */\n    LocationHelper.prototype.comparator = function(options) {\n\n        options = Utils.extend({\n            sortBy: 'npa'\n        }, options);\n\n        if (options.sortBy == 'nxx') {\n\n            /**\n             * @param {ILocation} item\n             * @returns {number}\n             */\n            options.extractFn = function(item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n\n            options.compareFn = List.numberComparator;\n\n        }\n\n        return List.comparator(options);\n\n    };\n\n    module.exports = {\n        Class: LocationHelper,\n        /**\n         * @param {Context} context\n         * @returns {LocationHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('LocationHelper', function() {\n                return new LocationHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ILocation\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {IState} state\n     */\n\n    /**\n     * @typedef {object} ILocationFilterOptions\n     * @property {string} stateId\n     * @property {boolean} onlyUniqueNPA\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ShippingMethodHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ShippingMethodHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-3 id done\n     * @type {IShippingMethod[]}\n     */\n    ShippingMethodHelper.prototype.shippingMethods = [\n        {\n            id: '1',\n            name: 'Ground Shipping (5-7 business days)'\n        },\n        {\n            id: '2',\n            name: '2-days Shipping'\n        },\n        {\n            id: '3',\n            name: 'Overnight Shipping'\n        }\n    ];\n\n    module.exports = {\n        Class: ShippingMethodHelper,\n        /**\n         * @param {Context} context\n         * @returns {ShippingMethodHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ShippingMethodHelper', function() {\n                return new ShippingMethodHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IShippingMethod\n     * @property {string} id\n     * @property {string} name\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        List = __webpack_require__(19),\n        Utils = __webpack_require__(18);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function StateHelper(context) {\n        Helper.call(this, context);\n        this.countryHelper = __webpack_require__(20).$get(context);\n    }\n\n    StateHelper.prototype = Object.create(Helper.prototype);\n\n    StateHelper.prototype.createUrl = function() {\n        return '/dictionary/state';\n    };\n\n    /**\n     * @param {IStateOptions} options\n     * @returns {function(IState)}\n     */\n    StateHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            countryId: ''\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.countryId,\n                filterFn: function(item, opts) {\n                    return (this.countryHelper.getId(item.country) == opts.condition);\n                }.bind(this)\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: StateHelper,\n        /**\n         * @param {Context} context\n         * @returns {StateHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('StateHelper', function() {\n                return new StateHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IState\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {ICountry} country\n     */\n\n    /**\n     * @typedef {object} IStateOptions\n     * @property {string} countryId\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function TimezoneHelper(context) {\n        Helper.call(this, context);\n    }\n\n    TimezoneHelper.prototype = Object.create(Helper.prototype);\n\n    TimezoneHelper.prototype.createUrl = function() {\n        return '/dictionary/timezone';\n    };\n\n    module.exports = {\n        Class: TimezoneHelper,\n        /**\n         * @param {Context} context\n         * @returns {TimezoneHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('TimezoneHelper', function() {\n                return new TimezoneHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ITimezone\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} description\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function AccountHelper(context) {\n        Helper.call(this, context);\n    }\n\n    AccountHelper.prototype = Object.create(Helper.prototype);\n\n    AccountHelper.prototype.createUrl = function() {\n        return '/account/~';\n    };\n\n    module.exports = {\n        Class: AccountHelper,\n        /**\n         * @param {Context} context\n         * @returns {AccountHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('AccountHelper', function() {\n                return new AccountHelper(context);\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Validator = __webpack_require__(16);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function BlockedNumberHelper(context) {\n        Helper.call(this, context);\n    }\n\n    BlockedNumberHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     *\n     * @param {IBlockedNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    BlockedNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' +\n               (options.extensionId ? options.extensionId : '~') +\n               '/blocked-number' +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IBlockedNumber} item\n     */\n    BlockedNumberHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'phoneNumber', validator: Validator.phone(item.phoneNumber)},\n            {field: 'phoneNumber', validator: Validator.required(item.phoneNumber)},\n            {field: 'name', validator: Validator.required(item.name)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: BlockedNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {BlockedNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('BlockedNumberHelper', function() {\n                return new BlockedNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IBlockedNumber\n     * @property {string} name\n     * @property {string} phoneNumber\n     */\n\n    /**\n     * @typedef {object} IBlockedNumberOptions\n     * @property {string} extensionId\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Utils = __webpack_require__(18),\n        List = __webpack_require__(19);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CallHelper(context) {\n        Helper.call(this, context);\n        this.presence = __webpack_require__(38).$get(context);\n        this.contact = __webpack_require__(31).$get(context);\n    }\n\n    CallHelper.prototype = Object.create(Helper.prototype);\n\n\n    /**\n     * @param {ICallOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    CallHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (!('personal' in options) && !('extensionId' in options)) options.personal = true;\n\n        return '/account/~/' +\n               (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n               (options.active ? 'active-calls' : 'call-log') +\n               (id ? '/' + id : '');\n\n    };\n\n    CallHelper.prototype.getSessionId = function(call) {\n        return (call && call.sessionId);\n    };\n\n    CallHelper.prototype.isInProgress = function(call) {\n        return (call && call.result == 'In Progress');\n    };\n\n    CallHelper.prototype.isAlive = function(call) {\n        return (call && call.availability == 'Alive');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isInbound = function(call) {\n        return (call && call.direction == 'Inbound');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isOutbound = function(call) {\n        return !this.isInbound(call);\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isMissed = function(call) {\n        return (call && call.result == 'Missed');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isFindMe = function(call) {\n        return (call && call.action == 'FindMe');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo}\n     */\n    CallHelper.prototype.getCallerInfo = function(call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo[]}\n     */\n    CallHelper.prototype.getAllCallerInfos = function(call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n\n    CallHelper.prototype.formatDuration = function(call) {\n\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n\n        var duration = parseInt(call.duration),\n            hours = Math.floor(duration / (60 * 60)),\n            mins = Math.floor((duration % (60 * 60)) / 60),\n            secs = Math.floor(duration % 60);\n\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n\n    };\n\n    /**\n     * @param {ICallFilterOptions} [options]\n     * @returns {function(ICall)}\n     */\n    CallHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n\n        return List.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'type', condition: options.type}\n        ]);\n\n    };\n\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    CallHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'startTime'\n        }, options));\n\n    };\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     * @param {IContact[]} contacts\n     * @param {ICall[]} calls\n     * @param {IContactMatchOptions} [options]\n     */\n    CallHelper.prototype.attachContacts = function(contacts, calls, options) {\n\n        var self = this;\n\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function(callerInfos, call) {\n\n            return callerInfos.concat(self.getAllCallerInfos(call));\n\n        }, []);\n\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    };\n\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} options\n     * @returns {boolean}\n     */\n    CallHelper.prototype.checkMergeability = function(outboundRingOutCall, inboundCall, options) {\n\n        function getTime(dateString) {\n            return (new Date(dateString)).getTime();\n        }\n\n        return (\n        (!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n        // Check directions\n        outboundRingOutCall.direction == 'Outbound' &&\n        inboundCall.direction == 'Inbound' &&\n        // Check that start times are equal or close enough\n        ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n        // Check that numbers match\n        inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n        (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n\n    };\n\n    /**\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} [options]\n     * @returns {Array}\n     */\n    CallHelper.prototype.combineCalls = function(outboundRingOutCall, inboundCall, options) {\n\n        options = options || {};\n\n        var result = [];\n\n        outboundRingOutCall.hasSubsequent = true;\n\n        if (options.merge) {\n\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n\n        } else {\n\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n\n        }\n\n        return result;\n\n    };\n\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     *\n     * @param {ICall[]} calls\n     * @param {ICallProcessingOptions} options\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.processCalls = function(calls, options) {\n\n        var processedCalls = [],\n            callsToMerge = [],\n            self = this;\n\n        // Iterate through calls\n        calls.forEach(function(call) {\n\n            var merged = false;\n\n            call.subsequent = false;\n            call.hasSubsequent = false;\n\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function(secondCall) {\n\n                if (call === secondCall) return false;\n\n                if (self.checkMergeability(call, secondCall, options)) {\n\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n\n                    merged = true;\n\n                }\n\n                return merged;\n\n            });\n\n        });\n\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function(call) {\n\n            if (callsToMerge.indexOf(call) == -1) processedCalls.push(call);\n\n        });\n\n        return processedCalls;\n\n    };\n\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     * @param {IPresenceCall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.parsePresenceCalls = function(activeCalls) {\n\n        return activeCalls.map(function(activeCall) {\n\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: {phoneNumber: activeCall.from},\n                to: {phoneNumber: activeCall.to},\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n\n        }, this);\n\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {string}\n     */\n    CallHelper.prototype.getSignature = function(call) {\n\n        function cleanup(phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        }\n\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n\n    };\n\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {IPresence} presence\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergePresenceCalls = function(presenceCalls, presence) {\n\n        var currentDate = new Date(),\n\n            activeCalls = this\n                .parsePresenceCalls(presence && presence.activeCalls || [])\n                .map(function(call) {\n                    // delete property to make sure it is skipped during merge\n                    delete call.startTime;\n                    return call;\n                });\n\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n\n        presenceCalls.forEach(function(call) {\n            if (!call.startTime) call.startTime = currentDate.toISOString();\n        });\n\n        return presenceCalls;\n\n    };\n\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {ICall[]} calls\n     * @param {ICall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergeAll = function(presenceCalls, calls, activeCalls) {\n\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n\n    };\n\n    module.exports = {\n        Class: CallHelper,\n        /**\n         * @param {Context} context\n         * @returns {CallHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('CallHelper', function() {\n                return new CallHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ICall\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} sessionId\n     * @property {string} startTime\n     * @property {string} duration\n     * @property {string} type\n     * @property {string} direction\n     * @property {string} action\n     * @property {string} result\n     * @property {ICallerInfo} to\n     * @property {ICallerInfo} from\n     */\n\n    /**\n     * @typedef {object} ICallOptions\n     * @property {string} extensionId\n     * @property {boolean} active\n     * @property {boolean} personal\n     */\n\n    /**\n     * @typedef {object} ICallProcessingOptions\n     * @property {boolean} strict\n     * @property {boolean} merge\n     * @property {number} maxStartTimeDiscrepancy\n     */\n\n    /**\n     * @typedef {object} ICallFilterOptions\n     * @property {string} extensionId\n     * @property {string} direction\n     * @property {string} type\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/CallerInfo.html\n     * @typedef {Object} ICallerInfo\n     * @property {string} phoneNumber\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} location\n     * @property {IContact} [contact] - corresponding contact (added by attachContacts methods)\n     * @property {string} [contactPhone] - contact's phone as written in contact (added by attachContacts methods)\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ConferencingHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ConferencingHelper.prototype = Object.create(Helper.prototype);\n\n    ConferencingHelper.prototype.createUrl = function() {\n        return '/account/~/extension/~/conferencing';\n    };\n\n    module.exports = {\n        Class: ConferencingHelper,\n        /**\n         * @param {Context} context\n         * @returns {ConferencingHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ConferencingHelper', function() {\n                return new ConferencingHelper(context);\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(18),\n        Validator = __webpack_require__(16),\n        Helper = __webpack_require__(14).Class,\n        List = __webpack_require__(19);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ContactHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IContactOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ContactHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' +\n                   (options.extensionId ? options.extensionId : '~') +\n                   '/address-book';\n\n        if (options.sync) return root + '-sync';\n\n        return root +\n               (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * Returns all values of the given fields if value exists\n     * @param {(IContact|object)} where\n     * @param {Array} fields\n     * @param {boolean} [asHash]\n     * @protected\n     * @returns {Object}\n     */\n    ContactHelper.prototype.getFieldValues = function(where, fields, asHash) {\n\n        return fields.reduce(function(result, field) {\n\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                } else {\n                    result.push(where[field]);\n                }\n            }\n\n            return result;\n\n        }, asHash ? {} : []);\n\n    };\n\n    /**\n     * @param {IContact} contact\n     * @returns {string}\n     */\n    ContactHelper.prototype.getFullName = function(contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getEmails = function(contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getPhones = function(contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getFaxes = function(contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getAddresses = function(contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @returns {boolean}\n     */\n    ContactHelper.prototype.isAlive = function(contact) {\n        return (contact.availability == 'Alive');\n    };\n\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} string\n     * @param {IContactMatchOptions} [options]\n     * @returns {(string|null)}\n     */\n    ContactHelper.prototype.match = function(contact, string, options) {\n\n        options = Utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function(value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n\n        string = options.transformFn(string, options);\n\n        var found = null;\n\n        if (!string) return found;\n\n        function matchWith(value) {\n\n            // skip unnecessary cycles if match has been found\n            if (found) return;\n\n            var transformed = options.transformFn(value, options);\n\n            if (!transformed) return;\n\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n\n            if (match) found = value;\n\n        }\n\n        // Search in fields\n        options.fields.forEach(function(field) {\n            matchWith(contact[field]);\n        });\n\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found) this.addressFields.forEach(function(field) {\n\n            // skip unnecessary cycles if match has been found or no field value\n            if (!contact[field] || found) return;\n\n            this.addressSubFields.forEach(function(subField) {\n                matchWith(contact[field][subField]);\n            });\n\n        }, this);\n\n        return found;\n\n    };\n\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} phone\n     * @param {IContactMatchOptions} [options]\n     * @returns {string|null}\n     */\n    ContactHelper.prototype.matchAsPhone = function(contact, phone, options) {\n\n        return this.match(contact, phone, Utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function(value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n\n    };\n\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     * @param {ICallerInfo[]} callerInfos\n     * @param {IContact[]} contacts\n     * @param {IContactMatchOptions} [options]\n     */\n    ContactHelper.prototype.attachToCallerInfos = function(callerInfos, contacts, options) {\n\n        var self = this,\n            callerInfoIndex = this.index(callerInfos, function(callerInfo) { return callerInfo.phoneNumber; }, true);\n\n        Utils.forEach(callerInfoIndex, function(indexedCallerInfos, phoneNumber) {\n\n            var foundContact = null,\n                foundPhone = null;\n\n            contacts.some(function(contact) {\n\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n\n                if (foundPhone) foundContact = contact;\n\n                return foundPhone;\n\n            });\n\n            if (foundContact) {\n\n                indexedCallerInfos.forEach(function(callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n\n            }\n\n        });\n\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ContactHelper.prototype.comparator = function(options) {\n\n        var self = this;\n\n        return List.comparator(Utils.extend({\n            extractFn: function(contact, options) {\n                return self.getFullName(contact);\n            }\n        }, options));\n\n    };\n\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     * @param {IContactOptions} [options]\n     * @returns {function(IContact)}\n     */\n    ContactHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n\n        return List.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {condition: options.startsWith, filterFn: function(item, opts) { return self.match(item, opts.condition); }},\n            {condition: options.phonesOnly, filterFn: function(item, opts) { return (self.getPhones(item).length > 0); }},\n            {condition: options.faxesOnly, filterFn: function(item, opts) { return (self.getFaxes(item).length > 0); }}\n        ]);\n\n    };\n\n    /**\n     * @param {IContact} item\n     */\n    ContactHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'firstName', validator: Validator.required(item.firstName)},\n            {field: 'lastName', validator: Validator.required(item.lastName)},\n            {field: 'email', validator: Validator.email(item.email)},\n            {field: 'email2', validator: Validator.email(item.email2)},\n            {field: 'email3', validator: Validator.email(item.email3)}\n        ]);\n\n    };\n\n    ContactHelper.prototype.phoneFields = [\n        'homePhone',\n        'homePhone2',\n        'businessPhone',\n        'businessPhone2',\n        'mobilePhone',\n        'companyPhone',\n        'assistantPhone',\n        'carPhone',\n        'otherPhone',\n        'callbackPhone'\n    ];\n\n    ContactHelper.prototype.faxFields = [\n        'businessFax',\n        'otherFax'\n    ];\n\n    ContactHelper.prototype.addressFields = [\n        'homeAddress',\n        'businessAddress',\n        'otherAddress'\n    ];\n\n    ContactHelper.prototype.addressSubFields = [\n        'street',\n        'city',\n        'state',\n        'zip'\n    ];\n\n    ContactHelper.prototype.nameFields = [\n        'firstName',\n        'middleName',\n        'lastName',\n        'nickName'\n    ];\n\n    ContactHelper.prototype.otherFields = [\n        'company',\n        'jobTitle',\n        'webPage',\n        'notes'\n    ];\n\n    ContactHelper.prototype.emailFields = [\n        'email',\n        'email2',\n        'email3'\n    ];\n\n    module.exports = {\n        Class: ContactHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ContactHelper', function() {\n                return new ContactHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IContactOptions\n     * @property {string} extensionId\n     * @property {string} groupId\n     */\n\n    /**\n     * @typedef {object} IContactFilterOptions\n     * @property {string} startsWith\n     * @property {boolean} alive\n     */\n\n    /**\n     * @typedef {object} IContactMatchOptions\n     * @property {function(object, IContactMatchOptions)} transformFn\n     * @property {boolean} strict - if false look for as sub string\n     * @property {boolean} inAddresses - look in addresses as well\n     * @property {string[]} fields - in which fields to look for\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactAddressInfo\n     * @typedef {Object} IContactAddress\n     * @property {string} country\n     * @property {string} street\n     * @property {string} city\n     * @property {string} state\n     * @property {string} zip\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ContactInfo\n     * @typedef {Object} IContactBrief\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} email\n     * @property {IContactAddress} businessAddress\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactInfo\n     * @typedef {Object} IContact\n     *\n     * Shared:\n     * @property {string} id\n     * @property {string} uri\n     *\n     * Names:\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} nickName\n     * @property {string} middleName\n     *\n     * Emails:\n     * @property {string} email\n     * @property {string} email2\n     * @property {string} email3\n     *\n     * Addresses:\n     * @property {IContactAddress} businessAddress\n     * @property {IContactAddress} homeAddress\n     * @property {IContactAddress} otherAddress\n     *\n     * Phones:\n     * @property {string} homePhone\n     * @property {string} homePhone2\n     * @property {string} businessPhone\n     * @property {string} businessPhone2\n     * @property {string} mobilePhone\n     * @property {string} companyPhone\n     * @property {string} assistantPhone\n     * @property {string} carPhone\n     * @property {string} otherPhone\n     * @property {string} callbackPhone\n     *\n     * @property {string} businessFax\n     * @property {string} otherFax\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Validator = __webpack_require__(16);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactGroupHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ContactGroupHelper.prototype = Object.create(Helper.prototype);\n    ContactGroupHelper.prototype.createUrl = function(options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n\n    /**\n     * @param {IContactGroup} item\n     */\n    ContactGroupHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'groupName', validator: Validator.required(item && item.groupName)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: ContactGroupHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactGroupHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ContactGroupHelper', function() {\n                return new ContactGroupHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IContactGroup\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} notes\n     * @property {string} groupName\n     * @property {number} contactsCount\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Validator = __webpack_require__(16);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceHelper(context) {\n        Helper.call(this, context);\n        this.extension = __webpack_require__(34).$get(context);\n        this.deviceModel = __webpack_require__(21).$get(context);\n    }\n\n    DeviceHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IDeviceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    DeviceHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (options.order) return '/account/~/order';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/device' +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IDevice} item\n     */\n    DeviceHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'emergencyServiceAddress-street', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)},\n            {field: 'emergencyServiceAddress-city', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)},\n            {field: 'emergencyServiceAddress-state', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)},\n            {field: 'emergencyServiceAddress-country', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)},\n            {field: 'emergencyServiceAddress-zip', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)},\n            {field: 'emergencyServiceAddress-customerName', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)},\n            {field: 'extension', validator: Validator.required(this.extension.getId(item && item.extension))},\n            {field: 'model', validator: Validator.required(this.deviceModel.getId(item && item.model))}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: DeviceHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('DeviceHelper', function() {\n                return new DeviceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IDevice\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} type\n     * @property {string} name\n     * @property {string} serial\n     * @property {IDeviceModel} model\n     * @property {IExtensionShort} extension TODO IExtension?\n     * @property {IDeviceAddress} emergencyServiceAddress\n     * @property {IDeviceShipping} shipping\n     * @property {IDevicePhoneLine[]} phoneLines\n     */\n\n    /**\n     * @typedef {Object} IDeviceOrder\n     * @property {IDevice[]} devices\n     */\n\n    /**\n     * @typedef {Object} IDeviceAddress\n     * @property {string} street\n     * @property {string} street2\n     * @property {string} city\n     * @property {string} state\n     * @property {string} country\n     * @property {string} zip\n     * @property {string} customerName\n     */\n\n    /**\n     * @typedef {Object} IDeviceShipping\n     * @property {IDeviceAddress} address\n     * @property {IShippingMethod} method\n     * @property {string} status\n     */\n\n    /**\n     * @typedef {Object} IDevicePhoneLine\n     * @property {string} lineType\n     * @property {IPhoneNumber} phoneInfo\n     */\n\n    /**\n     * @typedef {Object} IDeviceOptions\n     * @property {string} extensionId\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        List = __webpack_require__(19),\n        Utils = __webpack_require__(18);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ExtensionHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ExtensionHelper.prototype = Object.create(Helper.prototype);\n\n    ExtensionHelper.prototype.type = {\n        department: 'Department',\n        user: 'User',\n        announcement: 'Announcement',\n        voicemail: 'Voicemail'\n    };\n\n    /**\n     *\n     * @param {IExtensionOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ExtensionHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~' +\n               (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isUser = function(extension) {\n        return extension && extension.type == this.type.user;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isDepartment = function(extension) {\n        return extension && extension.type == this.type.department;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isAnnouncement = function(extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isVoicemail = function(extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ExtensionHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: List.numberComparator\n        }, options));\n\n    };\n\n    /**\n     * @param {IExtensionFilterOptions} [options]\n     * @returns {function(IExtension)}\n     */\n    ExtensionHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            search: '',\n            type: ''\n        }, options);\n\n        return List.filter([\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: List.containsFilter,\n                extractFn: function(item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                           (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: ExtensionHelper,\n        /**\n         * @param {Context} context\n         * @returns {ExtensionHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ExtensionHelper', function() {\n                return new ExtensionHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IExtensionOptions\n     * @property {string} departmentId\n     */\n\n    /**\n     * @typedef {object} IExtensionFilterOptions\n     * @property {string} search\n     * @property {string} type\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ShortExtensionInfo\n     * @typedef {object} IExtensionShort\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ExtensionInfo\n     * @typedef {object} IExtension\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} type\n     * @property {IContactBrief} contact\n     * @property {IExtensionRegionalSettings} regionalSettings\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} status\n     * @property {string} setupWizardState\n     */\n\n    /**\n     * @typedef {object} IExtensionRegionalSettings\n     * @property {ITimezone} timezone\n     * @property {ILanguage} language\n     * @property {ICountry} homeCountry\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Utils = __webpack_require__(18),\n        List = __webpack_require__(19);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ForwardingNumberHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ForwardingNumberHelper.prototype = Object.create(Helper.prototype);\n\n\n    ForwardingNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n\n    };\n\n    ForwardingNumberHelper.prototype.getId = function(forwardingNumber) {\n        return forwardingNumber.id || (forwardingNumber.phoneNumber);\n    };\n\n    ForwardingNumberHelper.prototype.hasFeature = function(phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ForwardingNumberHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'label'\n        }, options));\n\n    };\n\n    /**\n     * @param options\n     * @returns {function(IForwardingNumber)}\n     */\n    ForwardingNumberHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            features: []\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.features.length, filterFn: function(item) {\n\n                return options.features.some(function(feature) {\n                    return self.hasFeature(item, feature);\n                });\n\n            }\n            }\n        ]);\n\n    };\n\n\n    module.exports = {\n        Class: ForwardingNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {ForwardingNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ForwardingNumberHelper', function() {\n                return new ForwardingNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     *\n     * @typedef {object} IForwardingNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} label\n     * @property {string} phoneNumber\n     * @property {string} flipNumber\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Validator = __webpack_require__(16),\n        Utils = __webpack_require__(18),\n        List = __webpack_require__(19);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function MessageHelper(context) {\n        Helper.call(this, context);\n        this.platform = __webpack_require__(10).$get(context);\n        this.contact = __webpack_require__(31).$get(context);\n    }\n\n    MessageHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     *\n     * @param {IMessageOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    MessageHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n\n        if (options.fax) return root + '/fax';\n        if (options.sms) return root + '/sms';\n        if (options.pager) return root + '/company-pager';\n        if (options.sync) return root + '/message-sync';\n\n        return root + '/message-store' + (id ? '/' + id : '');\n\n    };\n\n    MessageHelper.prototype.isInbound = function(message) {\n        return (message && message.direction == 'Inbound');\n    };\n\n    MessageHelper.prototype.isOutbound = function(message) {\n        return !this.isInbound(message);\n    };\n\n    MessageHelper.prototype.isSMS = function(message) {\n        return (message && message.type == 'SMS');\n    };\n\n    MessageHelper.prototype.isPager = function(message) {\n        return (message && message.type == 'Pager');\n    };\n\n    MessageHelper.prototype.isVoiceMail = function(message) {\n        return (message && message.type == 'VoiceMail');\n    };\n\n    MessageHelper.prototype.isFax = function(message) {\n        return (message && message.type == 'Fax');\n    };\n\n    MessageHelper.prototype.isAlive = function(message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n\n    MessageHelper.prototype.isRead = function(message) {\n        return (message.readStatus == 'Read');\n    };\n\n    MessageHelper.prototype.setIsRead = function(message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n\n    MessageHelper.prototype.getAttachmentUrl = function(message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {addMethod: 'GET', addServer: true, addToken: true}) : '';\n    };\n\n    MessageHelper.prototype.getAttachmentContentType = function(message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n\n    /**\n     * @returns {Subscription}\n     */\n    MessageHelper.prototype.getSubscription = function(options) {\n\n        return (__webpack_require__(12).$get(this.context)).setEvents([this.createUrl(options)]);\n\n    };\n\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getCallerInfos = function(message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getAllCallerInfos = function(message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    MessageHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n\n    };\n\n    /**\n     * @param {IMessageFilterOptions} [options]\n     * @returns {function(IMessage)}\n     */\n    MessageHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n\n        return List.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'type', condition: options.type},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'conversationId', condition: options.conversationId},\n            {filterBy: 'readStatus', condition: options.readStatus},\n            {filterBy: 'subject', condition: options.search, filterFn: List.containsFilter}\n        ]);\n\n    };\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     * @param {IContact[]} contacts\n     * @param {IMessage[]} messages\n     * @param {IContactMatchOptions} [options]\n     */\n    MessageHelper.prototype.attachContacts = function(contacts, messages, options) {\n\n        var self = this;\n\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function(callerInfos, message) {\n\n            return callerInfos.concat(self.getAllCallerInfos(message));\n\n        }, []);\n\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    };\n\n    /**\n     *\n     * @param message\n     * @returns {IMessageShort}\n     */\n    MessageHelper.prototype.shorten = function(message) {\n\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n\n    };\n\n\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validateSMS = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(Utils.getProperty(item, 'to[0].phoneNumber'))},\n            {field: 'from', validator: Validator.required(Utils.getProperty(item, 'from.phoneNumber'))},\n            {field: 'subject', validator: Validator.required(Utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: Validator.length(Utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    };\n\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validatePager = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(Utils.getProperty(item, 'to.extensionNumber'))},\n            {field: 'from', validator: Validator.required(Utils.getProperty(item, 'from.extensionNumber'))},\n            {field: 'subject', validator: Validator.required(Utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: Validator.length(Utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: MessageHelper,\n        /**\n         * @param {Context} context\n         * @returns {MessageHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('MessageHelper', function() {\n                return new MessageHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IMessage\n     * @property {string} id\n     * @property {string} uri\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} type\n     * @property {string} creationTime\n     * @property {string} readStatus\n     * @property {string} priority\n     * @property {IMessageAttachment} attachments\n     * @property {string} direction\n     * @property {string} availability\n     * @property {string} subject\n     * @property {string} messageStatus\n     * @property {string} conversationId\n     * @property {string} lastModifiedTime\n     */\n\n    /**\n     * @typedef {object} IMessageShort\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} text\n     */\n\n    /**\n     * @typedef {object} IMessageOptions\n     * @property {boolean} fax\n     * @property {boolean} sync\n     * @property {boolean} sms\n     * @property {boolean} pager\n     * @property {string} extensionId\n     */\n\n    /**\n     * @typedef {object} IMessageFilterOptions\n     * @property {boolean} alive\n     * @property {string} conversationId\n     * @property {string} direction\n     * @property {string} readStatus\n     * @property {string} type\n     */\n\n    /**\n     * @typedef {object} IMessageFaxAttachment\n     * @property {string} contentType\n     * @property {string} content\n     * @property {string} fileName\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch18s01.html#MessageAttachmentInfo\n     * @typedef {Object} IMessageAttachment\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} contentType\n     * @property {string} vmDuration\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var List = __webpack_require__(19),\n        Utils = __webpack_require__(18),\n        Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PhoneNumberHelper(context) {\n        Helper.call(this, context);\n        this.extension = __webpack_require__(34).$get(context);\n    }\n\n    PhoneNumberHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IPhoneNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PhoneNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (options.lookup) return '/number-pool/lookup';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/phone-number' +\n               (id ? '/' + id : '');\n\n    };\n\n    PhoneNumberHelper.prototype.isSMS = function(phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n\n    PhoneNumberHelper.prototype.hasFeature = function(phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n\n    PhoneNumberHelper.prototype.reserve = function(phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n\n    PhoneNumberHelper.prototype.unreserve = function(phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(IPhoneNumber, IPhoneNumber)}\n     */\n    PhoneNumberHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            /**\n             * @param {IPhoneNumber} item\n             * @returns {string}\n             */\n            extractFn: function(item) {\n                return item.usageType + '-' +\n                       item.paymentType + '-' +\n                       item.type;\n            }\n        }, options));\n\n    };\n\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     * @param {IPhoneNumberFilterOptions} options\n     * @returns {function(IForwardingNumber)}\n     */\n    PhoneNumberHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n\n        return List.filter([\n            {filterBy: 'usageType', condition: options.usageType},\n            {filterBy: 'paymentType', condition: options.paymentType},\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.features.length, filterFn: function(item) {\n\n                return options.features.some(function(feature) {\n                    return self.hasFeature(item, feature);\n                });\n\n            }\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: PhoneNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {PhoneNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('PhoneNumberHelper', function() {\n                return new PhoneNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IPhoneNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} phoneNumber\n     * @property {string} paymentType - External, TollFree, Local\n     * @property {string} location\n     * @property {string} type - VoiceFax, FaxOnly, VoiceOnly\n     * @property {string} usageType - CompanyNumber, DirectNumber, CompanyFaxNumber, ForwardedNumber\n     * @property {array} features - CallerId, SmsSender\n     * @property {string} reservedTill - Date\n     * @property {string} error\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberOptions\n     * @property {string} extensionId\n     * @property {true} lookup\n     * @property {string} countryId\n     * @property {string} paymentType\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {string} line\n     * @property {string} exclude\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberFilterOptions\n     * @property {string} paymentType\n     * @property {string} usageType\n     * @property {string} type\n     * @property {string[]} features\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberOrder\n     * @property {IPhoneNumber[]} records\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Utils = __webpack_require__(18);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PresenceHelper(context) {\n        Helper.call(this, context);\n        this.extension = __webpack_require__(34).$get(context);\n    }\n\n    PresenceHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PresenceHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n\n    };\n\n    /**\n     * @param {IPresence} presence\n     * @returns {string}\n     */\n    PresenceHelper.prototype.getId = function(presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n\n    /**\n     * @param {IPresence} presence\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isAvailable = function(presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {Subscription}\n     */\n    PresenceHelper.prototype.getSubscription = function(options, id) {\n\n        return __webpack_require__(12).$get(this.context).setEvents([this.createUrl(options, id)]);\n\n    };\n\n    /**\n     *\n     * @param {Subscription} subscription\n     * @param {IPresence[]} presences\n     * @param {IPresenceOptions} options\n     * @returns {*}\n     */\n    PresenceHelper.prototype.updateSubscription = function(subscription, presences, options) {\n\n        var events = presences.map(this.getId, this).map(function(id) {\n            return this.createUrl(options, id);\n        }, this);\n\n        subscription.addEvents(events);\n\n        return subscription;\n\n    };\n\n    /**\n     * @param {IExtension[]} extensions\n     * @param {IPresence[]} presences\n     * @param {bool} [merge]\n     * @returns {*}\n     */\n    PresenceHelper.prototype.attachToExtensions = function(extensions, presences, merge) {\n\n        var index = this.index(presences);\n\n        extensions.forEach(/** @param {IExtension} extension */ function(extension) {\n\n            var presence = index[this.extension.getId(extension)];\n\n            if (presence) {\n                if ('presence' in extension && merge) {\n                    Utils.extend(extension.presence, presence);\n                } else {\n                    extension.presence = presence;\n                }\n            }\n\n        }, this);\n\n    };\n\n    /**\n     * @param {IPresenceCall} presenceCall\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isCallInProgress = function(presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n\n    module.exports = {\n        Class: PresenceHelper,\n        /**\n         * @param {Context} context\n         * @returns {PresenceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('PresenceHelper', function() {\n                return new PresenceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IPresence\n     * @property {IExtension} extension\n     * @property {IPresenceCall[]} activeCalls\n     * @property {string} presenceStatus - Offline, Busy, Available\n     * @property {string} telephonyStatus - NoCall, CallConnected, Ringing, OnHold\n     * @property {string} userStatus - Offline, Busy, Available\n     * @property {string} dndStatus - TakeAllCalls, DoNotAcceptAnyCalls, DoNotAcceptDepartmentCalls, TakeDepartmentCallsOnly\n     * @property {boolean} allowSeeMyPresence\n     * @property {boolean} ringOnMonitoredCall\n     * @property {boolean} pickUpCallsOnHold\n     * @property {number} extensionId\n     * @property {number} sequence\n     */\n\n    /**\n     * @typedef {Object} IPresenceCall\n     * @property {string} direction\n     * @property {string} from\n     * @property {string} to\n     * @property {string} sessionId\n     * @property {string} id\n     * @property {string} telephonyStatus\n     */\n\n    /**\n     * @typedef {Object} IPresenceOptions\n     * @property {boolean} detailed\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Validator = __webpack_require__(16);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function RingoutHelper(context) {\n        Helper.call(this, context);\n        this.extension = __webpack_require__(34).$get(context);\n    }\n\n    RingoutHelper.prototype = Object.create(Helper.prototype);\n\n    RingoutHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n\n    };\n\n    RingoutHelper.prototype.resetAsNew = function(object) {\n        object = Helper.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n\n    RingoutHelper.prototype.isInProgress = function(ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n\n    RingoutHelper.prototype.isSuccess = function(ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n\n    RingoutHelper.prototype.isError = function(ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n\n    /**\n     * @param {IRingout} item\n     */\n    RingoutHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(item && item.to && item.to.phoneNumber)},\n            {field: 'from', validator: Validator.required(item && item.from && item.from.phoneNumber)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: RingoutHelper,\n        /**\n         * @param {Context} context\n         * @returns {RingoutHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('RingoutHelper', function() {\n                return new RingoutHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IRingout\n     * @property {ICallerInfo} [from] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [to] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [callerId] (!) ONLY PHONE NUMBER\n     * @property {boolean} [playPrompt]\n     * @property {{callStatus:boolean, callerStatus:boolean, calleeStatus:boolean}} [status]\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ServiceHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ServiceHelper.prototype = Object.create(Helper.prototype);\n\n    ServiceHelper.prototype.createUrl = function() {\n        return '/account/~/service-info';\n    };\n\n    /**\n     * @param {string} feature\n     * @param {IServiceFeature[]} serviceFeatures\n     * @returns {*}\n     */\n    ServiceHelper.prototype.isEnabled = function(feature, serviceFeatures) {\n\n        return serviceFeatures.reduce(function(value, f) {\n\n            if (f.featureName == feature) value = f.enabled;\n            return value;\n\n        }, false);\n\n    };\n\n    function isServiceFeatureEnabledMethod(feature) {\n        return function(serviceFeatures) {\n            return this.isEnabled(feature, serviceFeatures);\n        };\n    }\n\n    ServiceHelper.prototype.isSmsEnabled = isServiceFeatureEnabledMethod('SMS');\n    ServiceHelper.prototype.isSmsReceivingEnabled = isServiceFeatureEnabledMethod('SMSReceiving');\n    ServiceHelper.prototype.isPresenceEnabled = isServiceFeatureEnabledMethod('Presence');\n    ServiceHelper.prototype.isRingOutEnabled = isServiceFeatureEnabledMethod('RingOut');\n    ServiceHelper.prototype.isInternationalCallingEnabled = isServiceFeatureEnabledMethod('InternationalCalling');\n    ServiceHelper.prototype.isDndEnabled = isServiceFeatureEnabledMethod('DND');\n    ServiceHelper.prototype.isFaxEnabled = isServiceFeatureEnabledMethod('Fax');\n    ServiceHelper.prototype.isFaxReceivingEnabled = isServiceFeatureEnabledMethod('FaxReceiving');\n    ServiceHelper.prototype.isVoicemailEnabled = isServiceFeatureEnabledMethod('Voicemail');\n    ServiceHelper.prototype.isPagerEnabled = isServiceFeatureEnabledMethod('Pager');\n    ServiceHelper.prototype.isPagerReceivingEnabled = isServiceFeatureEnabledMethod('PagerReceiving');\n    ServiceHelper.prototype.isVoipCallingEnabled = isServiceFeatureEnabledMethod('VoipCalling');\n    ServiceHelper.prototype.isVideoConferencingEnabled = isServiceFeatureEnabledMethod('VideoConferencing');\n    ServiceHelper.prototype.isSalesForceEnabled = isServiceFeatureEnabledMethod('SalesForce');\n    ServiceHelper.prototype.isIntercomEnabled = isServiceFeatureEnabledMethod('Intercom');\n    ServiceHelper.prototype.isPagingEnabled = isServiceFeatureEnabledMethod('Paging');\n    ServiceHelper.prototype.isConferencingEnabled = isServiceFeatureEnabledMethod('Conferencing');\n    ServiceHelper.prototype.isFreeSoftPhoneLinesEnabled = isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n    ServiceHelper.prototype.isHipaaComplianceEnabled = isServiceFeatureEnabledMethod('HipaaCompliance');\n    ServiceHelper.prototype.isCallParkEnabled = isServiceFeatureEnabledMethod('CallPark');\n    ServiceHelper.prototype.isOnDemandCallRecordingEnabled = isServiceFeatureEnabledMethod('OnDemandCallRecording');\n\n    module.exports = {\n        Class: ServiceHelper,\n        /**\n         * @param {Context} context\n         * @returns {ServiceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('serviceHelper', function() {\n                return new ServiceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IServiceFeature\n     * @property {string} featureName\n     * @property {boolean} enabled\n     */\n\n    /**\n     * @typedef {object} IService\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} servicePlanName\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    function PubnubMock(options) {}\n\n    PubnubMock.prototype.ready = function() {};\n\n    PubnubMock.prototype.unsubscribe = function(options) {};\n\n    PubnubMock.prototype.subscribe = function(options) {\n        this.onMessage = options.message;\n    };\n\n    PubnubMock.prototype.receiveMessage = function(msg) {\n        this.onMessage(msg, 'env', 'channel');\n    };\n\n    /**\n     * @alias RCSDK.core.pubnub.Mock\n     * @type {PUBNUB}\n     */\n    module.exports = {\n        /**\n         * @param {Context} context\n         * @returns {PUBNUB}\n         */\n        $get: function(context) {\n\n            return {\n                init: function(options) {\n                    return new PubnubMock(options);\n                }\n            };\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n * istanbul ignore next\n */\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Log = __webpack_require__(17),\n        Utils = __webpack_require__(18);\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.ajax.XhrMock\n     * @extends XMLHttpRequest\n     */\n    function XhrMock(context) {\n        // Service\n        this.responses = __webpack_require__(9).$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n        this.context = context;\n    }\n\n    XhrMock.prototype.getResponseHeader = function(header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n\n    XhrMock.prototype.setRequestHeader = function(header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n\n    XhrMock.prototype.open = function(method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n\n    XhrMock.prototype.send = function(data) {\n\n        var contentType = this.getRequestHeader('Content-Type');\n\n        this.data = data;\n\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json') this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded') this.data = Utils.parseQueryString(this.data);\n        }\n\n        Log.debug('API REQUEST', this.method, this.url);\n\n        var currentResponse = this.responses.find(this);\n\n        if (!currentResponse) {\n            setTimeout(function() {\n                if (this.onerror) this.onerror(new Error('Unknown request: ' + this.url));\n            }.bind(this), 1);\n            return;\n        }\n\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n\n        var res = currentResponse.response(this),\n            Promise = this.context.getPromise(),\n            onLoad = function(res) {\n\n                if (this.getResponseHeader('Content-Type') == 'application/json') res = JSON.stringify(res);\n\n                this.responseText = res;\n\n                setTimeout(function() {\n                    if (this.onload) this.onload();\n                }.bind(this), 1);\n\n            }.bind(this);\n\n        if (res instanceof Promise) {\n\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n\n        } else onLoad(res);\n\n    };\n\n    XhrMock.prototype.abort = function() {\n        Log.debug('XhrMock.destroy(): Aborted');\n    };\n\n    XhrMock.prototype.getRequestHeader = function(header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n\n    XhrMock.prototype.setResponseHeader = function(header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n\n    XhrMock.prototype.setStatus = function(status) {\n        this.status = status;\n        return this;\n    };\n\n    module.exports = {\n        Class: XhrMock,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrMock}\n         */\n        $get: function(context) {\n\n            return new XhrMock(context);\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }\n/******/ ])\n});\n\n//# sourceMappingURL=rc-sdk.js.map"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 950c8756d7097b6bcce9\n **/","/**\n * Browser-compatible version\n */\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    // ES6 Promise Polyfill only needs to be required since it modifies window object\n    require('es6-promise');\n\n    module.exports = require('./RCSDK')({\n        CryptoJS: require('crypto-js'),\n        localStorage: window.localStorage,\n        Promise: window.Promise,\n        PUBNUB: require('pubnub'),\n        XHR: window.XMLHttpRequest\n    });\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/browser.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"crypto-js\",\"commonjs\":\"crypto-js\",\"commonjs2\":\"crypto-js\",\"root\":\"CryptoJS\"}\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}\n ** module id = 4\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * @param {IInjections} injections\n     * @returns {RCSDK}\n     */\n    module.exports = function(injections) {\n\n        /**\n         * @name RCSDK\n         * @param {IOptions} [options]\n         * @constructor\n         */\n        function RCSDK(options) {\n\n            options = options || {};\n\n            /** @private */\n            this._context = require('./core/Context').$get(injections);\n\n            this.getCache()\n                .setPrefix(options.cachePrefix || '');\n\n            this.getPlatform()\n                .setServer(options.server)\n                .setCredentials(options.appKey, options.appSecret);\n\n            //TODO Link Platform events with Subscriptions and the rest\n\n        }\n\n        RCSDK.version = '1.1.7';\n\n        // Internals\n\n        /** @returns {Context} */\n        RCSDK.prototype.getContext = function() { return this._context; };\n\n        // Core\n\n        /** @returns {Ajax} */\n        RCSDK.prototype.getAjax = function() { return require('./core/Ajax').$get(this.getContext()); };\n\n        /**\n         * @returns {AjaxObserver}\n         */\n        RCSDK.prototype.getAjaxObserver = function() { return require('./core/AjaxObserver').$get(this.getContext()); };\n\n        /**\n         * @returns {XhrResponse}\n         */\n        RCSDK.prototype.getXhrResponse = function() { return require('./core/xhr/XhrResponse').$get(this.getContext()); };\n\n        /**\n         * @returns {Platform}\n         */\n        RCSDK.prototype.getPlatform = function() { return require('./core/Platform').$get(this.getContext()); };\n\n        /**\n         * @returns {Cache}\n         */\n        RCSDK.prototype.getCache = function() { return require('./core/Cache').$get(this.getContext()); };\n\n        /**\n         * @returns {Subscription}\n         */\n        RCSDK.prototype.getSubscription = function() { return require('./core/Subscription').$get(this.getContext()); };\n\n        /**\n         * @returns {PageVisibility}\n         */\n        RCSDK.prototype.getPageVisibility = function() { return require('./core/PageVisibility').$get(this.getContext()); };\n\n        /**\n         * @returns {Helper}\n         */\n        RCSDK.prototype.getHelper = function() { return require('./core/Helper').$get(this.getContext()); };\n\n        /**\n         * @returns {Observable}\n         */\n        RCSDK.prototype.getObservable = function() { return require('./core/Observable').$get(this.getContext()); };\n\n        /**\n         * @returns {Validator}\n         */\n        RCSDK.prototype.getValidator = function() { return require('./core/Validator').$get(this.getContext()); };\n\n        /**\n         * @returns {Log}\n         */\n        RCSDK.prototype.getLog = function() { return require('./core/Log').$get(this.getContext()); };\n\n        /**\n         * @returns {Utils}\n         */\n        RCSDK.prototype.getUtils = function() { return require('./core/Utils').$get(this.getContext()); };\n\n        /**\n         * @returns {List}\n         */\n        RCSDK.prototype.getList = function() { return require('./core/List').$get(this.getContext()); };\n\n        // Helpers\n\n        /**\n         * @returns {CountryHelper}\n         */\n        RCSDK.prototype.getCountryHelper = function() { return require('./helpers/Country').$get(this.getContext()); };\n\n        /**\n         * @returns {DeviceModelHelper}\n         */\n        RCSDK.prototype.getDeviceModelHelper = function() { return require('./helpers/DeviceModel').$get(this.getContext()); };\n\n        /**\n         * @returns {LanguageHelper}\n         */\n        RCSDK.prototype.getLanguageHelper = function() { return require('./helpers/Language').$get(this.getContext()); };\n\n        /**\n         * @returns {LocationHelper}\n         */\n        RCSDK.prototype.getLocationHelper = function() { return require('./helpers/Location').$get(this.getContext()); };\n\n        /**\n         * @returns {ShippingMethodHelper}\n         */\n        RCSDK.prototype.getShippingMethodHelper = function() { return require('./helpers/ShippingMethod').$get(this.getContext()); };\n\n        /**\n         * @returns {StateHelper}\n         */\n        RCSDK.prototype.getStateHelper = function() { return require('./helpers/State').$get(this.getContext()); };\n\n        /**\n         * @returns {TimezoneHelper}\n         */\n        RCSDK.prototype.getTimezoneHelper = function() { return require('./helpers/Timezone').$get(this.getContext()); };\n\n        /**\n         * @returns {AccountHelper}\n         */\n        RCSDK.prototype.getAccountHelper = function() { return require('./helpers/Account').$get(this.getContext()); };\n\n        /**\n         * @returns {BlockedNumberHelper}\n         */\n        RCSDK.prototype.getBlockedNumberHelper = function() { return require('./helpers/BlockedNumber').$get(this.getContext()); };\n\n        /**\n         * @returns {CallHelper}\n         */\n        RCSDK.prototype.getCallHelper = function() { return require('./helpers/Call').$get(this.getContext()); };\n\n        /**\n         * @returns {ConferencingHelper}\n         */\n        RCSDK.prototype.getConferencingHelper = function() { return require('./helpers/Conferencing').$get(this.getContext()); };\n\n        /**\n         * @returns {ContactHelper}\n         */\n        RCSDK.prototype.getContactHelper = function() { return require('./helpers/Contact').$get(this.getContext()); };\n\n        /**\n         * @returns {ContactGroupHelper}\n         */\n        RCSDK.prototype.getContactGroupHelper = function() { return require('./helpers/ContactGroup').$get(this.getContext()); };\n\n        /**\n         * @returns {DeviceHelper}\n         */\n        RCSDK.prototype.getDeviceHelper = function() { return require('./helpers/Device').$get(this.getContext()); };\n\n        /**\n         * @returns {ExtensionHelper}\n         */\n        RCSDK.prototype.getExtensionHelper = function() { return require('./helpers/Extension').$get(this.getContext()); };\n\n        /**\n         * @returns {ForwardingNumberHelper}\n         */\n        RCSDK.prototype.getForwardingNumberHelper = function() { return require('./helpers/ForwardingNumber').$get(this.getContext()); };\n\n        /**\n         * @returns {MessageHelper}\n         */\n        RCSDK.prototype.getMessageHelper = function() { return require('./helpers/Message').$get(this.getContext()); };\n\n        /**\n         * @returns {PhoneNumberHelper}\n         */\n        RCSDK.prototype.getPhoneNumberHelper = function() { return require('./helpers/PhoneNumber').$get(this.getContext()); };\n\n        /**\n         * @returns {PresenceHelper}\n         */\n        RCSDK.prototype.getPresenceHelper = function() { return require('./helpers/Presence').$get(this.getContext()); };\n\n        /**\n         * @returns {RingoutHelper}\n         */\n        RCSDK.prototype.getRingoutHelper = function() { return require('./helpers/Ringout').$get(this.getContext()); };\n\n        /**\n         * @returns {ServiceHelper}\n         */\n        RCSDK.prototype.getServiceHelper = function() { return require('./helpers/Service').$get(this.getContext()); };\n\n        if (!injections\n            || !('CryptoJS' in injections)\n            || !('localStorage' in injections)\n            || !('Promise' in injections)\n            || !('PUBNUB' in injections)\n            || !('XHR' in injections)) throw new Error('Injections object is not complete');\n\n        injections.XHR = (injections.XHR || function() {\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\"); } catch (e1) {}\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\"); } catch (e2) {}\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e3) {}\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        });\n\n        return RCSDK;\n\n    };\n\n    /**\n     * @typedef {Object} IInjections\n     * @property {PUBNUB} PUBNUB\n     * @property {CryptoJS} CryptoJS\n     * @property {Storage} localStorage\n     * @property {XMLHttpRequest} XHR\n     * @property {Promise} Promise\n     */\n\n    /**\n     * @typedef {Object} IOptions\n     * @property {string} server\n     * @property {string} appKey\n     * @property {string} appSecret\n     * @property {string} [cachePrefix]\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/RCSDK.js\n ** module id = 5\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * @constructor\n     * @param {IInjections} injections\n     */\n    function Context(injections) {\n        /** @private */\n        this.singletons = {};\n        /** @type {IInjections} */\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n\n    /**\n     * @param {string} name\n     * @param {function} factory\n     * @returns {*}\n     */\n    Context.prototype.createSingleton = function(name, factory) {\n\n        if (!this.singletons[name]) this.singletons[name] = factory();\n        return this.singletons[name];\n\n    };\n\n    Context.prototype.usePubnubStub = function(flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n\n    Context.prototype.useAjaxStub = function(flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n\n    /**\n     * @returns {CryptoJS}\n     */\n    Context.prototype.getCryptoJS = function() {\n        return this.injections.CryptoJS;\n    };\n\n    /**\n     * @returns {PUBNUB}\n     */\n    Context.prototype.getPubnub = function() {\n        return this.stubPubnub ? require('./pubnub/PubnubMock').$get(this) : this.injections.PUBNUB;\n    };\n\n    /**\n     * @returns {Storage}\n     * @abstract\n     */\n    Context.prototype.getLocalStorage = function() {\n        return this.createSingleton('localStorage', function() {\n            return (typeof this.injections.localStorage == 'function')\n                ? new this.injections.localStorage() // this is NPM dom-storage constructor\n                : this.injections.localStorage; // this is window.localStorage\n        }.bind(this));\n    };\n\n    /**\n     * @returns {function(new:Promise)}\n     */\n    Context.prototype.getPromise = function() {\n        return this.injections.Promise;\n    };\n\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Context.prototype.getXHR = function() {\n        return this.stubAjax ? require('./xhr/XhrMock').$get(this) : new this.injections.XHR();\n    };\n\n    module.exports = {\n        Class: Context,\n        /**\n         * @param {IInjections} injections\n         */\n        $get: function(injections) {\n            return new Context(injections);\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Context.js\n ** module id = 6\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = require('./Observable').Class,\n        Utils = require('./Utils'),\n        Log = require('./Log'),\n        jsonContentType = 'application/json',\n        multipartContentType = 'multipart/mixed',\n        boundarySeparator = '--',\n        headerSeparator = ':',\n        bodySeparator = '\\n\\n';\n\n    /**\n     * @typedef {Object} IAjaxOptions\n     * @property {string} url\n     * @property {string} method?\n     * @property {boolean} async?\n     * @property {Object} post?\n     * @property {Object} get?\n     * @property {Object} headers?\n     */\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Ajax\n     * @param {Context} [context]\n     */\n    function Ajax(context) {\n        Observable.call(this);\n        /** @type {Ajax[]|object} */\n        this.data = null;\n        /** @type {Error|null} */\n        this.error = null;\n        this.response = '';\n        this.headers = {};\n        this.status = 0;\n        /**\n         * @type {IAjaxOptions}\n         * @protected\n         */\n        this.options = {};\n        this.context = context;\n        /** @type {AjaxObserver} */\n        this.observer = require('./AjaxObserver').$get(context);\n        /** @type {XMLHttpRequest} */\n        this.xhr = null;\n    }\n\n    Ajax.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Ajax.prototype, 'constructor', {value: Ajax, enumerable: false});\n\n    /**\n     * @returns {IAjaxOptions}\n     */\n    Ajax.prototype.getOptions = function() {\n        return this.options;\n    };\n\n    /**\n     * @param {IAjaxOptions} [options]\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setOptions = function(options) {\n        if (options) this.options = options;\n        return this;\n    };\n\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setRequestHeader = function(name, value) {\n        name = name.toLowerCase();\n        this.options.headers = this.options.headers || {};\n        if (value) {\n            this.options.headers[name] = value;\n        } else {\n            delete this.options.headers[name];\n        }\n        return this;\n    };\n\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setResponseHeader = function(name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n\n    /**\n     * @param {string} name\n     * @returns {string}\n     */\n    Ajax.prototype.getRequestHeader = function(name) {\n        this.options.headers = this.options.headers || {};\n        return this.options.headers[name.toLowerCase()];\n    };\n\n    /**\n     * @param {string} name\n     * @returns {string}\n     */\n    Ajax.prototype.getResponseHeader = function(name) {\n        return this.headers[name.toLowerCase()];\n    };\n\n    /**\n     * @param {string} type\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseContentType = function(type) {\n        return this.getResponseContentType().indexOf(type) > -1;\n    };\n\n    /**\n     * @returns {string}\n     */\n    Ajax.prototype.getResponseContentType = function() {\n        return this.getResponseHeader('Content-Type') || '';\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseMultipart = function() {\n        return this.isResponseContentType(multipartContentType);\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseUnauthorized = function() {\n        return (this.status == 401);\n    };\n\n    /**\n     * @deprecated\n     * @returns {string}\n     */\n    Ajax.prototype.getContentType = function() {\n        return this.getResponseContentType();\n    };\n\n    /**\n     * @deprecated\n     * @returns {boolean}\n     */\n    Ajax.prototype.isMultipart = function() {\n        return this.isResponseMultipart();\n    };\n\n    /**\n     * @deprecated\n     * @returns {boolean}\n     */\n    Ajax.prototype.isUnauthorized = function() {\n        return this.isResponseUnauthorized();\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isLoaded = function() {\n        return !!this.status;\n    };\n\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     * @returns {Ajax}\n     */\n    Ajax.prototype.checkOptions = function() {\n\n        if (!this.options.url) throw new Error('Url is not defined');\n\n        var defaultHeaders = {\n                'Accept': jsonContentType,\n                'Content-Type': jsonContentType\n            },\n            headers = this.options.headers || {};\n\n        this.options.headers = {};\n\n        Object.keys(defaultHeaders).forEach(function(key) {\n            this.setRequestHeader(key, defaultHeaders[key]);\n        }, this);\n\n        Object.keys(headers).forEach(function(key) {\n            this.setRequestHeader(key, headers[key]);\n        }, this);\n\n        // Delete all headers that don't have value\n        Object.keys(this.options.headers).forEach(function(key) {\n            if (!this.options.headers[key]) delete this.options.headers[key];\n        }, this);\n\n        this.options.method = this.options.method ? this.options.method.toUpperCase() : 'GET';\n        this.options.async = (this.options.async !== undefined) ? this.options.async : true;\n        this.options.get = this.options.get || null;\n        this.options.post = this.options.post ? (\n            (typeof this.options.post !== 'string' && this.getRequestHeader('Content-Type') === jsonContentType)\n                ? JSON.stringify(this.options.post)\n                : this.options.post\n        ) : '';\n        this.options.url = this.options.url + (this.options.get ? ((this.options.url.indexOf('?') > -1 ? '&' : '?') + Utils.queryStringify(this.options.get)) : '');\n\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'].indexOf(this.options.method) < 0) throw new Error('Method has wrong value');\n\n        delete this.options.get;\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Ajax.prototype.send = function() {\n\n        this.observer.emit(this.observer.events.beforeRequest, this);\n\n        return this.request()\n            .then(function(ajax) {\n\n                ajax.parseResponse();\n                if (ajax.error) throw ajax.error;\n                return ajax;\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.observer.emit(this.observer.events.requestSuccess, ajax);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                e.ajax = this;\n\n                this.observer.emit(this.observer.events.requestError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Ajax.prototype.getXHR = function() {\n        return this.context.getXHR();\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Ajax.prototype.request = function() {\n\n        return new (this.context.getPromise())(function(resolve, reject) {\n\n            this.checkOptions();\n\n            var options = this.options,\n                xhr = this.getXHR();\n\n            xhr.open(options.method, options.url, options.async);\n\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n\n            xhr.onload = function() {\n\n                this.status = xhr.status;\n                this.response = xhr.responseText;\n                this.setResponseHeader('Content-Type', xhr.getResponseHeader('Content-Type') || jsonContentType); // if no header, set default\n\n                resolve(this);\n\n            }.bind(this);\n\n            xhr.onerror = function(event) {\n                reject(new Error('The request cannot be sent')); // CORS or network issue\n            };\n\n            Utils.forEach(options.headers, function(value, header) {\n                xhr.setRequestHeader(header, value);\n            });\n\n            xhr.send(options.method === 'GET' ? null : options.post);\n\n            this.xhr = xhr;\n\n        }.bind(this));\n\n    };\n\n    Ajax.prototype.checkStatus = function(status) {\n        return status.toString().substr(0, 1) == '2';\n    };\n\n    Ajax.prototype.parseResponse = function() {\n\n        try {\n\n            if (!this.isResponseMultipart()) {\n\n                if (typeof(this.response) == 'string' && !!this.response && this.isResponseContentType(jsonContentType)) { // Handle 204 No Content -- response may be empty\n\n                    this.data = JSON.parse(this.response);\n\n                } else {\n\n                    this.data = this.response; //TODO Add more parsers\n\n                }\n\n                if (!this.checkStatus(this.status)) this.error = new Error(this.data.message || this.data.error_description || this.data.description || 'Unknown error');\n\n            } else {\n\n                var boundary = this.getResponseContentType().match(/boundary=([^;]+)/i)[1],\n                    parts = this.response.split(boundarySeparator + boundary);\n\n                if (parts[0].trim() === '') parts.shift();\n                if (parts[parts.length - 1].trim() == boundarySeparator) parts.pop();\n\n                // Step 1. Parse all parts into Ajax objects\n                parts = parts.map(function(part) {\n\n                    var subParts = part.trim().replace(/\\r/g, '').split(bodySeparator),\n                        ajaxPart = new Ajax(this.context);\n\n                    (subParts.length > 1 ? subParts.shift() : '')\n                        .split('\\n')\n                        .forEach(function(header) {\n\n                            if (header.length === 0) return res;\n\n                            var headerParts = header.split(headerSeparator),\n                                name = headerParts.shift().trim();\n\n                            ajaxPart.setResponseHeader(name, headerParts.join(headerSeparator).trim());\n\n                        }, this);\n\n                    ajaxPart.response = subParts.join(bodySeparator);\n\n                    return ajaxPart;\n\n                }, this);\n\n                // Step 2. Claim first part as statuses, assign status from this and parse the response\n                var statusInfo = parts.shift();\n                statusInfo.status = this.status;\n                statusInfo.parseResponse();\n\n                // Steo 3. For the rest of parts assign status and parse the response\n                this.data = parts.map(function(part, i) {\n\n                    part.status = statusInfo.data.response[i].status;\n                    part.parseResponse();\n\n                    return part;\n\n                }, this);\n\n            }\n\n        } catch (e) { // Capture parse errors\n\n            Log.error('Ajax.parseResponse(): Unable to parse data');\n            Log.error(e.stack || e);\n            Log.error(this.response);\n\n            this.error = e;\n\n        }\n\n        return this;\n\n    };\n\n    Ajax.prototype.destroy = function() {\n        if (this.xhr) this.xhr.abort();\n        return Observable.prototype.destroy.call(this);\n    };\n\n    module.exports = {\n        Class: Ajax,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {Ajax}\n         */\n        $get: function(context) {\n            return new Ajax(context);\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Ajax.js\n ** module id = 7\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = require('./Observable').Class;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.AjaxObserver\n     */\n    function AjaxObserver() {\n\n        Observable.call(this);\n\n    }\n\n    AjaxObserver.prototype = Object.create(Observable.prototype);\n\n    AjaxObserver.prototype.events = {\n        beforeRequest: 'beforeRequest', // parameters: ajax\n        requestSuccess: 'requestSuccess', // means that response was successfully fetched from server\n        requestError: 'requestError' // means that request failed completely\n    };\n\n    module.exports = {\n        Class: AjaxObserver,\n        /**\n         * @param {Context} context\n         * @returns {AjaxObserver}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('AjaxObserver', function() {\n                return new AjaxObserver();\n            });\n\n        }\n    };\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/AjaxObserver.js\n ** module id = 8\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * Ajax Response Manager\n     * @constructor\n     * @alias RCSDK.core.XhrResponse\n     */\n    function XhrResponse() {\n        /** @type {IXhrResponse[]} */\n        this.responses = [];\n    }\n\n    /**\n     * @param {IXhrResponse} response\n     */\n    XhrResponse.prototype.add = function(response) {\n        this.responses.push(response);\n    };\n\n    XhrResponse.prototype.clear = function() {\n        this.responses = [];\n    };\n\n    /**\n     * @param {XhrMock} ajax\n     * @returns {IXhrResponse}\n     */\n    XhrResponse.prototype.find = function(ajax) {\n\n        var currentResponse = null;\n\n        this.responses.forEach(function(response) {\n\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n\n        });\n\n        return currentResponse;\n\n    };\n\n    module.exports = {\n        Class: XhrResponse,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrResponse}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('XhrResponse', function() {\n                return new XhrResponse(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IXhrResponse\n     * @property {string} path\n     * @property {function(Ajax)} response Response mock function\n     * @property {function(Ajax)} test? This will be executed to determine, whether this mock is applicable\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/xhr/XhrResponse.js\n ** module id = 9\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils'),\n        Observable = require('./Observable').Class,\n        Log = require('./Log'),\n        forcedTokenType = 'forced';\n\n    /**\n     * @typedef {Object} PlatformAuthInfo\n     * @property {string} token_type\n     * @property {string} access_token\n     * @property {string} expires_in\n     * @property {int} expireTime\n     * @property {string} refresh_token\n     * @property {string} refresh_token_expires_in\n     * @property {int} refreshExpireTime\n     * @property {string} scope\n     */\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Platform\n     * @param {Context} context\n     */\n    function Platform(context) {\n        Observable.call(this);\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        /** @type {Promise} */\n        this.refreshPromise = null;\n        this.context = context;\n    }\n\n    Platform.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Platform.prototype, 'constructor', {value: Platform, enumerable: false});\n\n    Platform.prototype.cacheId = 'platform';\n\n    Platform.prototype.pollInterval = 250;\n\n    Platform.prototype.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n\n    Platform.prototype.events = {\n        accessViolation: 'accessViolation',\n        logoutSuccess: 'logoutSuccess',\n        logoutError: 'logoutError',\n        authorizeSuccess: 'authorizeSuccess',\n        authorizeError: 'authorizeError',\n        refreshSuccess: 'refreshSuccess',\n        refreshError: 'refreshError'\n    };\n\n    /**\n     * @returns {Cache}\n     */\n    Platform.prototype.getStorage = function() {\n\n        return require('./Cache').$get(this.context);\n\n    };\n\n    /**\n     * @returns {Ajax}\n     */\n    Platform.prototype.getAjax = function() {\n\n        return require('./Ajax').$get(this.context);\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.clearStorage = function() {\n\n        this.getStorage().clean();\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.setCredentials = function(appKey, appSecret) {\n\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n\n        if (apiKey == ':') return this;\n\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.setServer = function(server) {\n\n        this.server = server || '';\n\n        return this;\n\n    };\n\n    /**\n     * @param {boolean} [remember]\n     * @returns {Platform|boolean}\n     */\n    Platform.prototype.remember = function(remember) {\n\n        var key = this.cacheId + '-remember';\n\n        if (remember !== undefined) {\n\n            this.getStorage().setItem(key, remember);\n            return this;\n\n        }\n\n        return this.getStorage().getItem(key) || false;\n\n    };\n\n    /**\n     * @param {string} options.username\n     * @param {string} options.password\n     * @param {string} [options.extension]\n     * @param {boolean} [options.remember]\n     * @returns {Promise}\n     */\n    Platform.prototype.authorize = function(options) {\n\n        options = options || {};\n\n        options.remember = options.remember || false;\n\n        return this\n            .authCall({\n                url: '/restapi/oauth/token',\n                post: {\n                    \"grant_type\": \"password\",\n                    \"username\": options.username,\n                    \"extension\": options.extension || '',\n                    \"password\": options.password,\n                    \"access_token_ttl\": this.accessTokenTtl,\n                    \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                }\n            })\n            .then(function(ajax) {\n\n                this.setCache(ajax.data)\n                    .remember(options.remember)\n                    .emitAndCallback(this.events.authorizeSuccess, []);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.clearStorage()\n                    .emitAndCallback(this.events.authorizeError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Platform.prototype.isPaused = function() {\n        var storage = this.getStorage(),\n            cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n\n    Platform.prototype.pause = function() {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function() {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n\n    /**\n     * Gets resolved into Ajax or null if refresh resolved from elsewhere\n     * @returns {Promise}\n     */\n    Platform.prototype.refresh = function() {\n\n        var refresh = new (this.context.getPromise())(function(resolve, reject) {\n\n            if (this.isPaused()) {\n                return resolve(this.refreshPolling(null));\n            } else {\n                this.pause();\n            }\n\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function() {\n\n                var authData = this.getAuthData();\n\n                Log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n\n                if (!authData || !authData.refresh_token) return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime) return reject(new Error('Refresh token has expired'));\n                if (!this.isPaused()) return reject(new Error('Queue was resumed before refresh call'));\n\n                resolve(this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": this.accessTokenTtl,\n                        \"refresh_token_ttl\": this.remember() ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                    }\n                }));\n\n            }.bind(this), this.refreshDelayMs);\n\n        }.bind(this));\n\n        return refresh\n            .then(function(ajax) {\n\n                // This means refresh has happened elsewhere and we are here because of timeout\n                if (!ajax || !ajax.data) return ajax;\n\n                Log.info('Platform.refresh(): Token was refreshed');\n\n                if (!ajax.data.refresh_token || !ajax.data.access_token) {\n                    var e = new Error('Malformed OAuth response');\n                    e.ajax = ajax;\n                    throw e;\n                }\n\n                this.setCache(ajax.data)\n                    .resume();\n\n                return ajax;\n\n            }.bind(this))\n            .then(function(result) {\n\n                this.emit(this.events.refreshSuccess, result);\n                return result;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                if (this.clearCacheOnRefreshError) this.clearStorage();\n\n                this.emitAndCallback(this.events.accessViolation, [e])\n                    .emitAndCallback(this.events.refreshError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function() {\n\n        this.pause();\n\n        return this\n            .authCall({\n                url: '/restapi/oauth/revoke',\n                get: {\n                    token: this.getToken()\n                }\n            })\n            .then(function(ajax) {\n\n                this.resume()\n                    .clearStorage()\n                    .emit(this.events.logoutSuccess, ajax);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.resume()\n                    .emitAndCallback(this.events.accessViolation, [e])\n                    .emitAndCallback(this.events.logoutError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Platform.prototype.refreshPolling = function(result) {\n\n        if (this.refreshPromise) return this.refreshPromise;\n\n        this.refreshPromise = new (this.context.getPromise())(function(resolve, reject) {\n\n            Log.warn('Platform.refresh(): Refresh is already in progress polling started');\n\n            Utils.poll(function(next) {\n\n                if (this.isPaused()) return next();\n\n                this.refreshPromise = null;\n                this.resume();\n\n                if (this.isTokenValid()) {\n                    resolve(result);\n                } else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n\n            }.bind(this), this.pollInterval);\n\n        }.bind(this));\n\n        return this.refreshPromise;\n\n    };\n\n    Platform.prototype.getToken = function() {\n\n        return this.getAuthData().access_token;\n\n    };\n\n    Platform.prototype.getTokenType = function() {\n\n        return this.getAuthData().token_type;\n\n    };\n\n    /**\n     * @returns {PlatformAuthInfo}\n     */\n    Platform.prototype.getAuthData = function() {\n\n        return this.getStorage().getItem(this.cacheId) || {\n                token_type: '',\n                access_token: '',\n                expires_in: 0,\n                refresh_token: '',\n                refresh_token_expires_in: 0\n            };\n\n    };\n\n    /**\n     * Check if there is a valid (not expired) access token\n     * @returns {boolean}\n     */\n    Platform.prototype.isTokenValid = function() {\n\n        var authData = this.getAuthData();\n        return (authData.token_type == forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n\n    };\n\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     * @returns {Promise}\n     */\n    Platform.prototype.isAuthorized = function() {\n\n        if (this.isTokenValid()) return this.context.getPromise().resolve(true);\n        return this.refresh();\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.cancelAccessToken = function() {\n\n        return this.setCache(Utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n\n    };\n\n    /**\n     * @param {object} authData\n     * @returns {Platform}\n     */\n    Platform.prototype.setCache = function(authData) {\n\n        var oldAuthData = this.getAuthData();\n\n        Log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n\n        this.getStorage().setItem(this.cacheId, authData);\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.forceAuthentication = function() {\n\n        this.setCache({\n            token_type: forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n\n        return this;\n\n    };\n\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.apiCall = function(options) {\n\n        options = options || {};\n        options.url = this.apiUrl(options.url, {addServer: true});\n\n        return this\n            .isAuthorized() // Refresh will occur inside\n            .then(function() {\n\n                var token = this.getToken();\n\n                return this.getAjax()\n                    .setOptions(options)\n                    .setRequestHeader('Authorization', this.getTokenType() + (token ? ' ' + token : ''))\n                    .send();\n\n            }.bind(this))\n            .catch(function(e) {\n\n                if (!e.ajax || !e.ajax.isResponseUnauthorized()) throw e;\n\n                this.cancelAccessToken();\n\n                return this\n                    .refresh()\n                    .then(function() {\n\n                        // Re-send with same options\n                        return this.apiCall(options);\n\n                    }.bind(this));\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.authCall = function(options) {\n\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.post = Utils.queryStringify(options.post);\n        options.url = this.apiUrl(options.url, {addServer: true});\n\n        return this.getAjax()\n            .setOptions(options)\n            .setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setRequestHeader('Accept', 'application/json')\n            .setRequestHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n\n    };\n\n    /**\n     *\n     * @param url\n     * @param {{addMethod?: string, addToken?: boolean, addServer?: boolean}} [options]\n     * @returns {string}\n     */\n    Platform.prototype.apiUrl = function(url, options) {\n\n        url = url || '';\n        options = options || {};\n\n        var builtUrl = '';\n\n        if (options.addServer && url.indexOf('http://') == -1 && url.indexOf('https://') == -1) builtUrl += this.server;\n\n        if (url.indexOf(this.urlPrefix) == -1) builtUrl += this.urlPrefix + '/' + this.apiVersion;\n\n        if (url.indexOf(this.accountPrefix) > -1) builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n\n        builtUrl += url;\n\n        if (options.addMethod || options.addToken) builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n\n        if (options.addMethod) builtUrl += '_method=' + options.addMethod;\n        if (options.addToken) builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n\n        return builtUrl;\n\n    };\n\n    module.exports = {\n        Class: Platform,\n        /**\n         * @param {Context} context\n         * @returns {Platform}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('Platform', function() {\n                return new Platform(context);\n            });\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Platform.js\n ** module id = 10\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = require('./Observable').Class,\n        Utils = require('./Utils');\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Cache\n     * @param {Context} context\n     */\n    function Cache(context) {\n        Observable.call(this);\n        this.setPrefix();\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n\n    Cache.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Cache.prototype, 'constructor', {value: Cache, enumerable: false});\n\n    Cache.prototype.setPrefix = function(prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n\n    Cache.prototype.prefixKey = function(key) {\n        return this.prefix + key;\n    };\n\n    Cache.prototype.setItem = function(key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n\n    Cache.prototype.removeItem = function(key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n\n    Cache.prototype.getItem = function(key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item) return null;\n        return JSON.parse(item);\n    };\n\n    Cache.prototype.clean = function() {\n\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key)) continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n\n        return this;\n\n    };\n\n    module.exports = {\n        Class: Cache,\n        /**\n         * @param {Context} context\n         * @returns {Cache}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('Cache', function() {\n                return new Cache(context);\n            });\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Cache.js\n ** module id = 11\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = require('./Observable').Class,\n        Log = require('./Log'),\n        Utils = require('./Utils'),\n        renewHandicapMs = 60 * 1000;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Subscription\n     * @param {Context} context\n     */\n    function Subscription(context) {\n        Observable.call(this);\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '', // 2014-03-12T19:54:35.613Z\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '', // 2014-03-12T19:54:35.613Z\n            status: '', // Active\n            uri: ''\n        };\n        /** @type {PUBNUB} */\n        this.pubnub = null;\n        this.context = context;\n    }\n\n    Subscription.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Subscription.prototype, 'constructor', {value: Subscription, enumerable: false});\n\n    Subscription.prototype.events = {\n        notification: 'notification',\n        removeSuccess: 'removeSuccess',\n        removeError: 'removeError',\n        renewSuccess: 'renewSuccess',\n        renewError: 'renewError',\n        subscribeSuccess: 'subscribeSuccess',\n        subscribeError: 'subscribeError'\n    };\n\n    /**\n     * @returns {PUBNUB}\n     */\n    Subscription.prototype.getPubnub = function() {\n\n        return this.context.getPubnub();\n\n    };\n\n    Subscription.prototype.getCrypto = function() {\n\n        return this.context.getCryptoJS();\n\n    };\n\n    Subscription.prototype.getPlatform = function() {\n\n        return require('./Platform').$get(this.context);\n\n    };\n\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function(options) {\n\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        } else {\n            return this.subscribe(options);\n        }\n\n    };\n\n    Subscription.prototype.addEvents = function(events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n\n    Subscription.prototype.setEvents = function(events) {\n        this.eventFilters = events;\n        return this;\n    };\n\n    Subscription.prototype.getFullEventFilters = function() {\n\n        return this.eventFilters.map(function(event) {\n            return this.getPlatform().apiUrl(event);\n        }.bind(this));\n\n    };\n\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.subscribe = function(options) {\n\n        options = options || {};\n        if (options.events) this.eventFilters = options.events;\n\n        this.clearTimeout();\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.eventFilters || !this.eventFilters.length) throw new Error('Events are undefined');\n\n                resolve(this.getPlatform().apiCall({\n                    method: 'POST',\n                    url: '/restapi/v1.0/subscription',\n                    post: {\n                        eventFilters: this.getFullEventFilters(),\n                        deliveryMode: {\n                            transportType: 'PubNub'\n                        }\n                    }\n                }));\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.updateSubscription(ajax.data)\n                    .subscribeAtPubnub()\n                    .emit(this.events.subscribeSuccess, ajax.data);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.unsubscribe()\n                    .emit(this.events.subscribeError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.renew = function(options) {\n\n        options = options || {};\n        if (options.events) this.eventFilters = options.events;\n\n        this.clearTimeout();\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.subscription || !this.subscription.id) throw new Error('Subscription ID is required');\n                if (!this.eventFilters || !this.eventFilters.length) throw new Error('Events are undefined');\n\n                resolve();\n\n            }.bind(this))\n            .then(function() {\n\n                return this.getPlatform().apiCall({\n                    method: 'PUT',\n                    url: '/restapi/v1.0/subscription/' + this.subscription.id,\n                    post: {\n                        eventFilters: this.getFullEventFilters()\n                    }\n                });\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.updateSubscription(ajax.data)\n                    .emit(this.events.renewSuccess, ajax.data);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.unsubscribe()\n                    .emit(this.events.renewError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @param {boolean} [options.async]\n     * @returns {Promise}\n     */\n    Subscription.prototype.remove = function(options) {\n\n        options = Utils.extend({\n            async: true\n        }, options);\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.subscription || !this.subscription.id) throw new Error('Subscription ID is required');\n\n                resolve(this.getPlatform().apiCall({\n                    async: !!options.async, // Warning! This is necessary because this method is used in beforeunload hook and has to be synchronous\n                    method: 'DELETE',\n                    url: '/restapi/v1.0/subscription/' + this.subscription.id\n                }));\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.unsubscribe()\n                    .emit(this.events.removeSuccess, ajax);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.emit(this.events.removeError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Subscription.prototype.destroy = function() {\n\n        this.unsubscribe();\n\n        Log.info('RC.core.Subscription: Destroyed');\n\n        return Observable.prototype.destroy.call(this);\n\n    };\n\n    Subscription.prototype.isSubscribed = function() {\n\n        return this.subscription &&\n               this.subscription.deliveryMode &&\n               this.subscription.deliveryMode.subscriberKey &&\n               this.subscription.deliveryMode.address;\n\n    };\n\n    /**\n     * @protected\n     */\n    Subscription.prototype.setTimeout = function() {\n\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - renewHandicapMs;\n\n        this.timeout = setTimeout(function() {\n\n            this.renew({});\n\n        }.bind(this), timeToExpiration);\n\n    };\n\n    /**\n     * @protected\n     */\n    Subscription.prototype.clearTimeout = function() {\n\n        clearTimeout(this.timeout);\n\n    };\n\n    /**\n     * Set new subscription info and re-create timeout\n     * @protected\n     * @param subscription\n     * @returns {Subscription}\n     */\n    Subscription.prototype.updateSubscription = function(subscription) {\n\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n\n    };\n\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     * @protected\n     * @returns {Subscription}\n     */\n    Subscription.prototype.unsubscribe = function() {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed()) this.pubnub.unsubscribe({channel: this.subscription.deliveryMode.address});\n        this.subscription = null;\n        return this;\n    };\n\n    /**\n     * @abstract\n     * @param {Object} message\n     * @returns {Subscription}\n     */\n    Subscription.prototype.notify = function(message) {\n\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n\n            var CryptoJS = this.getCrypto();\n\n            var key = CryptoJS.enc.Base64.parse(this.subscription.deliveryMode.encryptionKey);\n            var data = CryptoJS.enc.Base64.parse(message);\n            var decrypted = CryptoJS.AES.decrypt({ciphertext: data}, key, {mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7}).toString(CryptoJS.enc.Utf8);\n            message = JSON.parse(decrypted);\n\n        }\n\n        this.emit(this.events.notification, message);\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Subscription}\n     */\n    Subscription.prototype.subscribeAtPubnub = function() {\n\n        if (!this.isSubscribed()) return this;\n\n        var PUBNUB = this.getPubnub();\n\n        this.pubnub = PUBNUB.init({\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n\n        this.pubnub.ready();\n\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function(message, env, channel) {\n\n                Log.info('RC.core.Subscription: Incoming message', message);\n                this.notify(message);\n\n            }.bind(this),\n            connect: function() {\n                Log.info('RC.core.Subscription: PUBNUB connected');\n            }.bind(this)\n        });\n\n        return this;\n\n    };\n\n    module.exports = {\n        Class: Subscription,\n        /**\n         * @param {Context} context\n         * @returns {Subscription}\n         */\n        $get: function(context) {\n            return new Subscription(context);\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Subscription.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * istanbul ignore next\n */\ndefine(function(require, exports, module) {\n    'use strict';\n\n    var Observable = require('./Observable').Class;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.PageVisibility\n     */\n    function PageVisibility() {\n\n        Observable.call(this);\n\n        var hidden = \"hidden\",\n            onchange = function(evt) {\n\n                evt = evt || window.event;\n\n                var v = 'visible',\n                    h = 'hidden',\n                    evtMap = {\n                        focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n                    };\n\n                this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n\n                this.emit(this.events.change, this.visible);\n\n            }.bind(this);\n\n        this.visible = true;\n\n        if (typeof document == 'undefined' || typeof window == 'undefined') return;\n\n        // Standards:\n\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        // IE 9 and lower:\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        // All others:\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n\n    }\n\n    PageVisibility.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(PageVisibility.prototype, 'constructor', {value: PageVisibility, enumerable: false});\n\n    PageVisibility.prototype.events = {\n        change: 'change'\n    };\n\n    PageVisibility.prototype.isVisible = function() {\n        return this.visible;\n    };\n\n    module.exports = {\n        Class: PageVisibility,\n        /**\n         * @param {Context} context\n         * @returns {PageVisibility}\n         */\n        $get: function(context) {\n            return new PageVisibility();\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/PageVisibility.js\n ** module id = 13\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils');\n\n    /**\n     * @alias RCSDK.core.Helper\n     * @constructor\n     * @param {Context} context\n     */\n    function Helper(context) {\n        this.context = context;\n    }\n\n    Helper.prototype.defaultProperty = 'id';\n\n    /**\n     * @returns {Context}\n     */\n    Helper.prototype.getContext = function() {\n        return this.context;\n    };\n\n    /**\n     * @param {object} [options]\n     * @param {string} [id]\n     */\n    Helper.prototype.createUrl = function(options, id) {\n        return '';\n    };\n\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getId = function(object) {\n        return object && object[this.defaultProperty];\n    };\n\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {boolean}\n     */\n    Helper.prototype.isNew = function(object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {IHelperObject}\n     */\n    Helper.prototype.resetAsNew = function(object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getUri = function(object) {\n        return object && object.uri;\n    };\n\n    /**\n     * @param {Ajax} ajax\n     * @return {IHelperObject[]}\n     */\n    Helper.prototype.parseMultipartResponse = function(ajax) {\n\n        if (ajax.isResponseMultipart()) {\n\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function(result) {\n                return (!result.error);\n            }).map(function(result) {\n                return result.data;\n            });\n\n        } else { // Single ID\n\n            return [ajax.data];\n\n        }\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} [object]\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.loadRequest = function(object, options) {\n\n        return Utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.saveRequest = function(object, options) {\n\n        if (!object && !(options && options.post)) throw new Error('No Object');\n\n        return Utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            post: (options && options.post) || object\n        });\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.deleteRequest = function(object, options) {\n\n        options = options || {};\n\n        if (!this.getUri(object) && !(options && options.url)) throw new Error('Object has to be not new or URL must be provided');\n\n        return Utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n\n    };\n\n    /**\n     * If no url was provided, default SYNC url will be returned\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.syncRequest = function(options) {\n\n        options = options || {};\n\n        options.url = options.url || this.createUrl({sync: true});\n        options.get = options.get || {};\n\n        if (!!options.get.syncToken) {\n            options.get = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        } else {\n            options.get.syncType = 'FSync';\n        }\n\n        return options;\n\n    };\n\n    Helper.prototype.nextPageExists = function(data) {\n\n        return (data && data.navigation && ('nextPage' in data.navigation));\n\n    };\n\n    /**\n     * @param {IHelperObject[]} array - an array to be indexed\n     * @param {function(object)} [getIdFn] - must return an ID for each array item\n     * @param {boolean} [gather] - if true, then each index will have an array of items, that has same ID, otherwise the first indexed item wins\n     * @returns {*}\n     */\n    Helper.prototype.index = function(array, getIdFn, gather) {\n\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n\n        return array.reduce(function(index, item) {\n\n            var id = getIdFn(item);\n\n            if (!id || (index[id] && !gather)) return index;\n\n            if (gather) {\n                if (!index[id]) index[id] = [];\n                index[id].push(item);\n            } else {\n                index[id] = item;\n            }\n\n            return index;\n\n        }, {});\n\n    };\n\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * @param {IHelperObject[]} target\n     * @param {IHelperObject[]} supplement\n     * @param {function(IHelperObject)} [getIdFn]\n     * @param {boolean} [mergeItems] - if true, properties of _supplement_ item will be applied to _target_ item, otherwise _target_ item will be replaced\n     * @returns {*}\n     */\n    Helper.prototype.merge = function(target, supplement, getIdFn, mergeItems) {\n\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n\n        var supplementIndex = this.index(supplement, getIdFn),\n            updatedIDs = [];\n\n        var result = target.map(function(item) {\n\n            var id = getIdFn(item),\n                newItem = supplementIndex[id];\n\n            if (newItem) updatedIDs.push(id);\n\n            return newItem ? (mergeItems ? Utils.extend(item, newItem) : newItem) : item;\n\n        });\n\n        supplement.forEach(function(item) {\n\n            if (updatedIDs.indexOf(getIdFn(item)) == -1) result.push(item);\n\n        });\n\n        return result;\n\n    };\n\n    module.exports = {\n        Class: Helper,\n        /**\n         * @param {Context} context\n         * @returns {Helper}\n         */\n        $get: function(context) {\n            return new Helper(context);\n        }\n    };\n\n    /**\n     * @typedef {object} IHelperObject\n     * @property {string} id\n     * @property {string} uri\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Helper.js\n ** module id = 14\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    var Utils = require('./Utils'),\n        Log = require('./Log');\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.Observable\n     */\n    function Observable() {\n        if (!(this instanceof Observable)) throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', {value: {}, enumerable: false, writable: true});\n        Object.defineProperty(this, 'oneTimeEvents', {value: {}, enumerable: false, writable: true});\n        Object.defineProperty(this, 'oneTimeArguments', {value: {}, enumerable: false, writable: true});\n    }\n\n    // Object.create({}) is not needed\n    // Do not put Object or Function.prototype instead of {}, otherwise all instances will get non-writable 'name' property\n    // Observable.prototype = {};\n    Object.defineProperty(Observable.prototype, 'constructor', {value: Observable, enumerable: false});\n\n    Observable.prototype.hasListeners = function(event) {\n        return (event in this.listeners);\n    };\n\n    Observable.prototype.registerOneTimeEvent = function(event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n\n    Observable.prototype.on = function(events, callback) {\n\n        if (typeof events == 'string') events = [events];\n        if (!events) throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function') throw new Error('Callback must be a function');\n\n        var self = this;\n\n        events.forEach(function(event) {\n\n            if (!self.hasListeners(event)) self.listeners[event] = [];\n\n            self.listeners[event].push(callback);\n\n            if (self.isOneTimeEventFired(event)) { // Fire listener immediately if is inited already\n                Log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n\n        });\n\n        return this;\n\n    };\n\n    Observable.prototype.emit = function(event) {\n\n        if (this.isOneTimeEventFired(event)) {\n            Log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n\n        var self = this,\n            args = Utils.argumentsToArray(arguments).splice(1),\n            result = null;\n\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n\n        if (!this.hasListeners(event)) return null;\n\n        this.listeners[event].some(function(callback) {\n\n            result = callback.apply(self, args);\n            return (result === false);\n\n        });\n\n        return result;\n\n    };\n\n    Observable.prototype.off = function(event, callback) {\n        var self = this;\n        if (!callback) {\n            delete this.listeners[event];\n        } else {\n            if (!this.hasListeners(event)) return this;\n            this.listeners[event].forEach(function(cb, i) {\n\n                if (cb === callback) delete self.listeners[event][i];\n\n            });\n        }\n        return this;\n    };\n\n    Observable.prototype.isOneTimeEvent = function(event) {\n        return (event in this.oneTimeEvents);\n    };\n\n    Observable.prototype.isOneTimeEventFired = function(event) {\n        if (!this.isOneTimeEvent(event)) return false;\n        return (this.oneTimeEvents[event]);\n    };\n\n    Observable.prototype.setOneTimeEventFired = function(event) {\n        this.oneTimeEvents[event] = true;\n    };\n\n    Observable.prototype.setOneTimeEventArgumens = function(event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n\n    Observable.prototype.getOneTimeEventArgumens = function(event) {\n        return this.oneTimeArguments[event];\n    };\n\n    Observable.prototype.offAll = function() {\n        this.listeners = {};\n        this.oneTimeEvents = {};\n        this.oneTimeArguments = {};\n    };\n\n    Observable.prototype.destroy = function() {\n        this.offAll();\n        Log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n\n    /**\n     * @param {string} event\n     * @param {Array} args\n     * @param {function} [callback]\n     */\n    Observable.prototype.emitAndCallback = function(event, args, callback) {\n        args = Utils.argumentsToArray(args);\n        if (event) this.emit.apply(this, [event].concat(args));\n        if (callback) callback.apply(this, args);\n        return this;\n    };\n\n    module.exports = {\n        Class: Observable,\n        /**\n         * @param {Context} context\n         * @returns {Observable}\n         */\n        $get: function(context) {\n            return new Observable(context);\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Observable.js\n ** module id = 15\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils');\n\n    /**\n     * @typedef {object} IValidator\n     * @property {string} field\n     * @property {function} validator\n     */\n\n    /**\n     * @typedef {object} IValidatorResult\n     * @property {boolean} isValid\n     * @property {Object.<number, Error[]>} errors\n     */\n\n    /**\n     * @alias RCSDK.core.Validator\n     * @name Validator\n     */\n    var Validator = module.exports = {\n        /**\n         * @param {IValidator[]} validators\n         * @returns {IValidatorResult}\n         */\n        validate: function(validators) {\n\n            /** @type {IValidatorResult} */\n            var result = {\n                errors: {},\n                isValid: true\n            };\n\n            result.errors = validators.reduce(function(errors, validator) {\n\n                var res = validator.validator();\n\n                if (res.length > 0) {\n                    result.isValid = false;\n                    errors[validator.field] = errors[validator.field] || [];\n                    errors[validator.field] = errors[validator.field].concat(res);\n                }\n\n                return errors;\n\n            }, {});\n\n            return result;\n\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * @deprecated\n         * @param value\n         * @param multiple\n         * @returns {Function}\n         */\n        email: function(value, multiple) {\n            return function() {\n                if (!value) return [];\n                return Utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n            };\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * TODO International phone numbers\n         * @deprecated\n         * @param value\n         * @returns {Function}\n         */\n        phone: function(value) {\n            return function() {\n                if (!value) return [];\n                return Utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n            };\n        },\n        required: function(value) {\n            return function() {\n                return !value ? [new Error('Field is required')] : [];\n            };\n        },\n        length: function(value, max, min) {\n            return function() {\n\n                var errors = [];\n\n                if (!value) return errors;\n\n                value = value.toString();\n\n                if (min && value.length < min) errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n                if (max && value.length > max) errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n\n                return errors;\n\n            };\n        },\n        $get: function(context) {\n            return Validator;\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Validator.js\n ** module id = 16\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils');\n\n    /**\n     * @alias RCSDK.core.Log\n     * @name Log\n     */\n    var Log = module.exports = {\n        logDebug: false,\n        logInfo: false,\n        logWarnings: false,\n        logErrors: false,\n        addTimestamps: true,\n        /** @type {Console} */\n        console: console || { // safety\n            log: function() {},\n            warn: function() {},\n            info: function() {},\n            error: function() {}\n        },\n        disableAll: function() {\n            this.logDebug = false;\n            this.logInfo = false;\n            this.logWarnings = false;\n            this.logErrors = false;\n        },\n        enableAll: function() {\n            this.logDebug = true;\n            this.logInfo = true;\n            this.logWarnings = true;\n            this.logErrors = true;\n        },\n        parseArguments: function(args) {\n            args = Utils.argumentsToArray(args);\n            if (this.addTimestamps) args.unshift(new Date().toLocaleString(), '-');\n            return args;\n        },\n        debug: function() {\n            if (this.logDebug) this.console.log.apply(this.console, this.parseArguments(arguments));\n        },\n        info: function() {\n            if (this.logInfo) this.console.info.apply(this.console, this.parseArguments(arguments));\n        },\n        warn: function() {\n            if (this.logWarnings) this.console.warn.apply(this.console, this.parseArguments(arguments));\n        },\n        error: function() {\n            if (this.logErrors) this.console.error.apply(this.console, this.parseArguments(arguments));\n        },\n        $get: function(context) {\n            return Log;\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Log.js\n ** module id = 17\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var hasOwn = Object.prototype.hasOwnProperty,\n        toString = Object.prototype.toString,\n        rdigit = /\\d/,\n        class2type = {};\n\n    // Populate the class2type map\n    'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function(name) {\n        class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n    });\n\n    /**\n     * @alias RCSDK.core.Utils\n     * @name Utils\n     */\n    var Utils = module.exports = {\n\n        /**\n         * Ported from jQuery.fn.extend\n         * Optional first parameter makes deep copy\n         * @param {object} targetObject\n         * @param {object} sourceObject\n         * @returns {object}\n         */\n        extend: function extend(targetObject, sourceObject) {\n\n            var options, name, src, copy, copyIsArray, clone,\n                target = arguments[0] || {},\n                i = 1,\n                length = arguments.length,\n                deep = false;\n\n            // Handle a deep copy situation\n            if (typeof target === \"boolean\") {\n                deep = target;\n\n                // skip the boolean and the target\n                target = arguments[i] || {};\n                i++;\n            }\n\n            // Handle case when target is a string or something (possible in deep copy)\n            if (typeof target !== \"object\" && !this.isFunction(target)) {\n                target = {};\n            }\n\n            for (; i < length; i++) {\n\n                // Only deal with non-null/undefined values\n                if ((options = arguments[i]) !== null) {\n\n                    // Extend the base object\n                    for (name in options) {\n\n                        src = target[name];\n                        copy = options[name];\n\n                        // Prevent never-ending loop\n                        if (target === copy) {\n                            continue;\n                        }\n\n                        // Recurse if we're merging plain objects or arrays\n                        if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n\n                            if (copyIsArray) {\n                                copyIsArray = false;\n                                clone = src && this.isArray(src) ? src : [];\n                            } else {\n                                clone = src && this.isPlainObject(src) ? src : {};\n                            }\n\n                            // Never move original objects, clone them\n                            target[name] = this.extend(deep, clone, copy);\n\n                            // Don't bring in undefined values\n                        } else if (copy !== undefined) {\n\n                            target[name] = copy;\n\n                        }\n                    }\n                }\n            }\n\n            // Return the modified object\n            return target;\n\n        },\n\n        forEach: function(object, cb) {\n\n            for (var i in object) {\n\n                if (!object.hasOwnProperty(i)) continue;\n\n                var res = cb(object[i], i);\n\n                if (res === false) break;\n\n            }\n\n        },\n\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/maste.r/lib/querystring.js\n         * @param {object} parameters\n         * @returns {string}\n         */\n        queryStringify: function(parameters) {\n\n            var array = [],\n                self = this;\n\n            this.forEach(parameters, function(v, i) {\n\n                if (self.isArray(v)) {\n                    v.forEach(function(vv) {\n                        array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                    });\n                } else {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n                }\n\n            });\n\n            return array.join('&');\n\n        },\n\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/maste.r/lib/querystring.js\n         * @param {string} queryString\n         * @returns {object}\n         */\n        parseQueryString: function(queryString) {\n\n            var argsParsed = {},\n                self = this;\n\n            queryString.split('&').forEach(function(arg) {\n\n                arg = decodeURIComponent(arg);\n\n                if (arg.indexOf('=') == -1) {\n\n                    argsParsed[arg.trim()] = true;\n\n                } else {\n\n                    var pair = arg.split('='),\n                        key = pair[0].trim(),\n                        value = pair[1].trim();\n\n                    if (key in argsParsed) {\n                        if (key in argsParsed && !self.isArray(argsParsed[key])) argsParsed[key] = [argsParsed[key]];\n                        argsParsed[key].push(value);\n                    } else {\n                        argsParsed[key] = value;\n                    }\n\n                }\n\n            });\n\n            return argsParsed;\n\n        },\n\n        /**\n         * Returns true if the passed value is valid email address.\n         * @param {string} v\n         * @param {boolean} multiple Checks multiple comma separated emails according to RFC 2822\n         * @returns {boolean}\n         */\n        isEmail: function(v, multiple) {\n            if (!!multiple) {\n                //this Regexp is also suitable for multiple emails (comma separated)\n                return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n            } else {\n                return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n            }\n\n        },\n\n        isPhoneNumber: function(v) {\n            return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n        },\n\n        /**\n         * @param args\n         * @returns {Array}\n         */\n        argumentsToArray: function(args) {\n            return Array.prototype.slice.call(args || [], 0);\n        },\n\n        isDate: function(obj) {\n            return this.type(obj) === \"date\";\n        },\n\n        isFunction: function(obj) {\n            return this.type(obj) === \"function\";\n        },\n\n        isArray: Array.isArray || function(obj) {\n            return this.type(obj) === \"array\";\n        },\n\n        // A crude way of determining if an object is a window\n        isWindow: function(obj) {\n            return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n        },\n\n        isNaN: function(obj) {\n            return obj === null || !rdigit.test(obj) || isNaN(obj);\n        },\n\n        type: function(obj) {\n            return obj === null ?\n                   String(obj) :\n                   class2type[toString.call(obj)] || \"object\";\n        },\n\n        isPlainObject: function(obj) {\n            // Must be an Object.\n            // Because of IE, we also have to check the presence of the constructor property.\n            // Make sure that DOM nodes and window objects don't pass through, as well\n            if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n                return false;\n            }\n\n            // Not own constructor property must be Object\n            if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n                return false;\n            }\n\n            // Own properties are enumerated firstly, so to speed up,\n            // if last one is own, then all properties are own.\n\n            var key;\n            for (key in obj) {}\n\n            return key === undefined || hasOwn.call(obj, key);\n        },\n\n        getProperty: function(obj, property) {\n\n            return property\n                .split(/[.[\\]]/)\n                .reduce(function(res, part) {\n                    if (!res) return undefined;\n                    return part ? res[part] : res;\n                }, obj);\n\n        },\n\n        poll: function(fn, interval, timeout) {\n\n            this.stopPolling(timeout);\n\n            interval = interval || 1000;\n\n            var next = function(delay) {\n\n                delay = delay || interval;\n\n                interval = delay;\n\n                return setTimeout(function() {\n\n                    fn(next, delay);\n\n                }, delay);\n\n            };\n\n            return next();\n\n        },\n\n        stopPolling: function(timeout) {\n            if (timeout) clearTimeout(timeout);\n        },\n\n        parseString: function(s) {\n            return s ? s.toString() : '';\n        },\n\n        parseNumber: function(n) {\n            if (!n) return 0;\n            n = parseFloat(n);\n            return isNaN(n) ? 0 : n;\n        },\n\n        $get: function(context) {\n            return Utils;\n        }\n\n    };\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Utils.js\n ** module id = 18\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils');\n\n    /**\n     * @alias RCSDK.core.List\n     * @name List\n     */\n    var List = module.exports = {\n\n        /**\n         * @param {string} property\n         * @returns {function(object)}\n         */\n        propertyExtractor: function(property) {\n            return function(item, options) {\n                return property ? ((item && item[property]) || null) : item;\n            };\n        },\n\n        /**\n         * Non-string types are converted to string\n         * Non-string types are extracted as an empty string if they could be converted to false\n         * If no options.sortBy given the item itself is extracted\n         * Compares strings:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {string} a\n         * @param {string} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        stringComparator: function(a, b, options) {\n\n            return Utils.parseString(a).localeCompare(Utils.parseString(b));\n\n        },\n\n        /**\n         * Non-numeric types are extracted as 0 if they could be converted to false\n         * Objects that could not be converted to number are extracted as 0\n         * If no options.sortBy given the item itself is extracted\n         * See parseFloat for more info\n         * Compares numbers:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Function does not check types\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {number} a\n         * @param {number} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        numberComparator: function(a, b, options) {\n\n            return (Utils.parseNumber(a) - Utils.parseNumber(b));\n\n        },\n\n        /**\n         * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n         * compare function (_compareFn_ option, by default Helper.stringComparator)\n         * Merged options are provided to _extractFn_ and _compareFn_\n         * TODO Check memory leaks for all that options links\n         * @param {IListComparatorOptions} [options]\n         * @returns {function(object, object)}\n         */\n        comparator: function(options) {\n\n            options = Utils.extend({\n                extractFn: this.propertyExtractor((options && options.sortBy) || null),\n                compareFn: this.stringComparator\n            }, options);\n\n            /**\n             * @param {object} item1\n             * @param {object} item2\n             * @returns {number}\n             */\n            function comparator(item1, item2) {\n\n                return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n\n            }\n\n            return comparator;\n\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        equalsFilter: function(obj, options) {\n            return (options.condition === obj);\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        containsFilter: function(obj, options) {\n            return (obj && obj.toString().indexOf(options.condition) > -1);\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options - `condition` must be an instance of RegExp\n         * @returns {boolean}\n         */\n        regexpFilter: function(obj, options) {\n            if (!(options.condition instanceof RegExp)) throw new Error('Condition must be an instance of RegExp');\n            return (options.condition.test(obj));\n        },\n\n        /**\n         * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n         * compare function (`filterFn` option, by default Helper.equalsFilter)\n         * Merged options are provided to `extractFn` and `compareFn`\n         * Set `filterBy` to null to force `propertyExtractor` to return object itself\n         * TODO Check memory leaks for all that options links\n         * @param {IListFilterOptions[]} [filterConfigs]\n         * @returns {function(object)}\n         */\n        filter: function(filterConfigs) {\n\n            var self = this;\n\n            filterConfigs = (filterConfigs || []).map(function(opt) {\n\n                return Utils.extend({\n                    condition: '',\n                    extractFn: self.propertyExtractor((opt && opt.filterBy) || null),\n                    filterFn: self.equalsFilter\n                }, opt);\n\n            });\n\n            /**\n             * @param {object} item\n             * @returns {boolean}\n             */\n            function filter(item) {\n\n                return filterConfigs.reduce(function(pass, opt) {\n\n                    if (!pass || !opt.condition) return pass;\n                    return opt.filterFn(opt.extractFn(item, opt), opt);\n\n                }, true);\n\n            }\n\n            return filter;\n\n        },\n\n        $get: function(context) {\n            return List;\n        }\n\n    };\n\n    /**\n     * @typedef {object} IListComparatorOptions\n     * @property {string} sortBy\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} compareFn\n     */\n\n    /**\n     * @typedef {object} IListFilterOptions\n     * @property {string} filterBy\n     * @property {object} condition\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} filterFn\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/List.js\n ** module id = 19\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CountryHelper(context) {\n        Helper.call(this, context);\n    }\n\n    CountryHelper.prototype = Object.create(Helper.prototype);\n\n    CountryHelper.prototype.createUrl = function() {\n        return '/dictionary/country';\n    };\n\n    module.exports = {\n        Class: CountryHelper,\n        /**\n         * @param {Context} context\n         * @returns {CountryHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('CountryHelper', function() {\n                return new CountryHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ICountry\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} callingCode\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Country.js\n ** module id = 20\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceModelHelper(context) {\n        Helper.call(this, context);\n    }\n\n    DeviceModelHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IDeviceModel} device\n     * @returns {string}\n     */\n    DeviceModelHelper.prototype.getId = function(device) {\n\n        if (!device) return null;\n\n        return device.id + (\n                device.addons && device.addons[0]\n                    ? '-' + device.addons[0].id + '-' + device.addons[0].count\n                    : ''\n            );\n\n    };\n\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     * @param {IDeviceModel} device\n     * @returns {IDeviceModel}\n     */\n    DeviceModelHelper.prototype.cleanForSaving = function(device) {\n\n        if (!device) return null;\n\n        delete device.name;\n        delete device.deviceClass;\n\n        if (device.addons && device.addons.length > 0) {\n\n            device.addons.forEach(function(addon, i) {\n                delete device.addons[i].name;\n            });\n\n        } else {\n\n            delete device.addons;\n\n        }\n\n        return device;\n\n    };\n\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n     * @type {IDeviceModel[]}\n     */\n    DeviceModelHelper.prototype.devices = [\n        {\n            id: '-1',\n            name: 'Softphone'\n        },\n        {\n            id: '0',\n            name: 'Existing device'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '23',\n            name: 'Polycom IP 321 Basic IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '30',\n            name: 'Polycom IP 550 HD Manager IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '37',\n            name: 'Polycom IP 6000 Conference Phone',\n            deviceClass: 'Conference Phone'\n        },\n        {\n            id: '40',\n            name: 'Polycom IP 335 HD IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '51',\n            name: 'Cisco SPA-303 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\tDesk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '3'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '52',\n            name: 'Cisco SPA-122 ATA',\n            deviceClass: 'Analog Adapter'\n        },\n        {\n            id: '53',\n            name: 'Polycom VVX-500 Color Touchscreen',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '54',\n            name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '55',\n            name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        }\n    ];\n\n    module.exports = {\n        Class: DeviceModelHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceModelHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('DeviceModelHelper', function() {\n                return new DeviceModelHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IDeviceModel\n     * @property {string} id\n     * @property {string} name\n     * @property {string} deviceClass\n     * @property {string} addons\n     */\n\n    /**\n     * @typedef {Object} IDeviceModelAddon\n     * @property {string} id\n     * @property {string} name\n     * @property {string} count\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/DeviceModel.js\n ** module id = 21\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LanguageHelper(context) {\n        Helper.call(this, context);\n    }\n\n    LanguageHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @type {ILanguage[]}\n     */\n    LanguageHelper.prototype.languages = [\n        {\n            id: '1033',\n            name: 'English (US)'\n        },\n        {\n            id: '3084',\n            name: 'French (Canada)'\n        }\n    ];\n\n    module.exports = {\n        Class: LanguageHelper,\n        /**\n         * @param {Context} context\n         * @returns {LanguageHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('LanguageHelper', function() {\n                return new LanguageHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ILanguage\n     * @property {string} id\n     * @property {string} name\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Language.js\n ** module id = 22\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        List = require('../core/List'),\n        Utils = require('../core/Utils');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LocationHelper(context) {\n        Helper.call(this, context);\n        this.state = require('./State').$get(context);\n    }\n\n    LocationHelper.prototype = Object.create(Helper.prototype);\n\n    LocationHelper.prototype.createUrl = function() {\n        return '/dictionary/location';\n    };\n\n    /**\n     * @param {ILocationFilterOptions} options\n     * @returns {function(ILocation)}\n     */\n    LocationHelper.prototype.filter = function(options) {\n\n        var uniqueNPAs = [];\n\n        options = Utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.stateId,\n                filterFn: function(item, opts) {\n                    return (this.state.getId(item.state) == opts.condition);\n                }.bind(this)\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function(item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    } else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {comparator}\n     */\n    LocationHelper.prototype.comparator = function(options) {\n\n        options = Utils.extend({\n            sortBy: 'npa'\n        }, options);\n\n        if (options.sortBy == 'nxx') {\n\n            /**\n             * @param {ILocation} item\n             * @returns {number}\n             */\n            options.extractFn = function(item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n\n            options.compareFn = List.numberComparator;\n\n        }\n\n        return List.comparator(options);\n\n    };\n\n    module.exports = {\n        Class: LocationHelper,\n        /**\n         * @param {Context} context\n         * @returns {LocationHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('LocationHelper', function() {\n                return new LocationHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ILocation\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {IState} state\n     */\n\n    /**\n     * @typedef {object} ILocationFilterOptions\n     * @property {string} stateId\n     * @property {boolean} onlyUniqueNPA\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Location.js\n ** module id = 23\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ShippingMethodHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ShippingMethodHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-3 id done\n     * @type {IShippingMethod[]}\n     */\n    ShippingMethodHelper.prototype.shippingMethods = [\n        {\n            id: '1',\n            name: 'Ground Shipping (5-7 business days)'\n        },\n        {\n            id: '2',\n            name: '2-days Shipping'\n        },\n        {\n            id: '3',\n            name: 'Overnight Shipping'\n        }\n    ];\n\n    module.exports = {\n        Class: ShippingMethodHelper,\n        /**\n         * @param {Context} context\n         * @returns {ShippingMethodHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ShippingMethodHelper', function() {\n                return new ShippingMethodHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IShippingMethod\n     * @property {string} id\n     * @property {string} name\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/ShippingMethod.js\n ** module id = 24\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        List = require('../core/List'),\n        Utils = require('../core/Utils');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function StateHelper(context) {\n        Helper.call(this, context);\n        this.countryHelper = require('./Country').$get(context);\n    }\n\n    StateHelper.prototype = Object.create(Helper.prototype);\n\n    StateHelper.prototype.createUrl = function() {\n        return '/dictionary/state';\n    };\n\n    /**\n     * @param {IStateOptions} options\n     * @returns {function(IState)}\n     */\n    StateHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            countryId: ''\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.countryId,\n                filterFn: function(item, opts) {\n                    return (this.countryHelper.getId(item.country) == opts.condition);\n                }.bind(this)\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: StateHelper,\n        /**\n         * @param {Context} context\n         * @returns {StateHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('StateHelper', function() {\n                return new StateHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IState\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {ICountry} country\n     */\n\n    /**\n     * @typedef {object} IStateOptions\n     * @property {string} countryId\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/State.js\n ** module id = 25\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function TimezoneHelper(context) {\n        Helper.call(this, context);\n    }\n\n    TimezoneHelper.prototype = Object.create(Helper.prototype);\n\n    TimezoneHelper.prototype.createUrl = function() {\n        return '/dictionary/timezone';\n    };\n\n    module.exports = {\n        Class: TimezoneHelper,\n        /**\n         * @param {Context} context\n         * @returns {TimezoneHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('TimezoneHelper', function() {\n                return new TimezoneHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ITimezone\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} description\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Timezone.js\n ** module id = 26\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function AccountHelper(context) {\n        Helper.call(this, context);\n    }\n\n    AccountHelper.prototype = Object.create(Helper.prototype);\n\n    AccountHelper.prototype.createUrl = function() {\n        return '/account/~';\n    };\n\n    module.exports = {\n        Class: AccountHelper,\n        /**\n         * @param {Context} context\n         * @returns {AccountHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('AccountHelper', function() {\n                return new AccountHelper(context);\n            });\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Account.js\n ** module id = 27\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function BlockedNumberHelper(context) {\n        Helper.call(this, context);\n    }\n\n    BlockedNumberHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     *\n     * @param {IBlockedNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    BlockedNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' +\n               (options.extensionId ? options.extensionId : '~') +\n               '/blocked-number' +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IBlockedNumber} item\n     */\n    BlockedNumberHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'phoneNumber', validator: Validator.phone(item.phoneNumber)},\n            {field: 'phoneNumber', validator: Validator.required(item.phoneNumber)},\n            {field: 'name', validator: Validator.required(item.name)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: BlockedNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {BlockedNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('BlockedNumberHelper', function() {\n                return new BlockedNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IBlockedNumber\n     * @property {string} name\n     * @property {string} phoneNumber\n     */\n\n    /**\n     * @typedef {object} IBlockedNumberOptions\n     * @property {string} extensionId\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/BlockedNumber.js\n ** module id = 28\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Utils = require('../core/Utils'),\n        List = require('../core/List');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CallHelper(context) {\n        Helper.call(this, context);\n        this.presence = require('./Presence').$get(context);\n        this.contact = require('./Contact').$get(context);\n    }\n\n    CallHelper.prototype = Object.create(Helper.prototype);\n\n\n    /**\n     * @param {ICallOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    CallHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (!('personal' in options) && !('extensionId' in options)) options.personal = true;\n\n        return '/account/~/' +\n               (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n               (options.active ? 'active-calls' : 'call-log') +\n               (id ? '/' + id : '');\n\n    };\n\n    CallHelper.prototype.getSessionId = function(call) {\n        return (call && call.sessionId);\n    };\n\n    CallHelper.prototype.isInProgress = function(call) {\n        return (call && call.result == 'In Progress');\n    };\n\n    CallHelper.prototype.isAlive = function(call) {\n        return (call && call.availability == 'Alive');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isInbound = function(call) {\n        return (call && call.direction == 'Inbound');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isOutbound = function(call) {\n        return !this.isInbound(call);\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isMissed = function(call) {\n        return (call && call.result == 'Missed');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isFindMe = function(call) {\n        return (call && call.action == 'FindMe');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo}\n     */\n    CallHelper.prototype.getCallerInfo = function(call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo[]}\n     */\n    CallHelper.prototype.getAllCallerInfos = function(call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n\n    CallHelper.prototype.formatDuration = function(call) {\n\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n\n        var duration = parseInt(call.duration),\n            hours = Math.floor(duration / (60 * 60)),\n            mins = Math.floor((duration % (60 * 60)) / 60),\n            secs = Math.floor(duration % 60);\n\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n\n    };\n\n    /**\n     * @param {ICallFilterOptions} [options]\n     * @returns {function(ICall)}\n     */\n    CallHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n\n        return List.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'type', condition: options.type}\n        ]);\n\n    };\n\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    CallHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'startTime'\n        }, options));\n\n    };\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     * @param {IContact[]} contacts\n     * @param {ICall[]} calls\n     * @param {IContactMatchOptions} [options]\n     */\n    CallHelper.prototype.attachContacts = function(contacts, calls, options) {\n\n        var self = this;\n\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function(callerInfos, call) {\n\n            return callerInfos.concat(self.getAllCallerInfos(call));\n\n        }, []);\n\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    };\n\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} options\n     * @returns {boolean}\n     */\n    CallHelper.prototype.checkMergeability = function(outboundRingOutCall, inboundCall, options) {\n\n        function getTime(dateString) {\n            return (new Date(dateString)).getTime();\n        }\n\n        return (\n        (!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n        // Check directions\n        outboundRingOutCall.direction == 'Outbound' &&\n        inboundCall.direction == 'Inbound' &&\n        // Check that start times are equal or close enough\n        ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n        // Check that numbers match\n        inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n        (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n\n    };\n\n    /**\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} [options]\n     * @returns {Array}\n     */\n    CallHelper.prototype.combineCalls = function(outboundRingOutCall, inboundCall, options) {\n\n        options = options || {};\n\n        var result = [];\n\n        outboundRingOutCall.hasSubsequent = true;\n\n        if (options.merge) {\n\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n\n        } else {\n\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n\n        }\n\n        return result;\n\n    };\n\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     *\n     * @param {ICall[]} calls\n     * @param {ICallProcessingOptions} options\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.processCalls = function(calls, options) {\n\n        var processedCalls = [],\n            callsToMerge = [],\n            self = this;\n\n        // Iterate through calls\n        calls.forEach(function(call) {\n\n            var merged = false;\n\n            call.subsequent = false;\n            call.hasSubsequent = false;\n\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function(secondCall) {\n\n                if (call === secondCall) return false;\n\n                if (self.checkMergeability(call, secondCall, options)) {\n\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n\n                    merged = true;\n\n                }\n\n                return merged;\n\n            });\n\n        });\n\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function(call) {\n\n            if (callsToMerge.indexOf(call) == -1) processedCalls.push(call);\n\n        });\n\n        return processedCalls;\n\n    };\n\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     * @param {IPresenceCall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.parsePresenceCalls = function(activeCalls) {\n\n        return activeCalls.map(function(activeCall) {\n\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: {phoneNumber: activeCall.from},\n                to: {phoneNumber: activeCall.to},\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n\n        }, this);\n\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {string}\n     */\n    CallHelper.prototype.getSignature = function(call) {\n\n        function cleanup(phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        }\n\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n\n    };\n\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {IPresence} presence\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergePresenceCalls = function(presenceCalls, presence) {\n\n        var currentDate = new Date(),\n\n            activeCalls = this\n                .parsePresenceCalls(presence && presence.activeCalls || [])\n                .map(function(call) {\n                    // delete property to make sure it is skipped during merge\n                    delete call.startTime;\n                    return call;\n                });\n\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n\n        presenceCalls.forEach(function(call) {\n            if (!call.startTime) call.startTime = currentDate.toISOString();\n        });\n\n        return presenceCalls;\n\n    };\n\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {ICall[]} calls\n     * @param {ICall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergeAll = function(presenceCalls, calls, activeCalls) {\n\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n\n    };\n\n    module.exports = {\n        Class: CallHelper,\n        /**\n         * @param {Context} context\n         * @returns {CallHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('CallHelper', function() {\n                return new CallHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ICall\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} sessionId\n     * @property {string} startTime\n     * @property {string} duration\n     * @property {string} type\n     * @property {string} direction\n     * @property {string} action\n     * @property {string} result\n     * @property {ICallerInfo} to\n     * @property {ICallerInfo} from\n     */\n\n    /**\n     * @typedef {object} ICallOptions\n     * @property {string} extensionId\n     * @property {boolean} active\n     * @property {boolean} personal\n     */\n\n    /**\n     * @typedef {object} ICallProcessingOptions\n     * @property {boolean} strict\n     * @property {boolean} merge\n     * @property {number} maxStartTimeDiscrepancy\n     */\n\n    /**\n     * @typedef {object} ICallFilterOptions\n     * @property {string} extensionId\n     * @property {string} direction\n     * @property {string} type\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/CallerInfo.html\n     * @typedef {Object} ICallerInfo\n     * @property {string} phoneNumber\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} location\n     * @property {IContact} [contact] - corresponding contact (added by attachContacts methods)\n     * @property {string} [contactPhone] - contact's phone as written in contact (added by attachContacts methods)\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Call.js\n ** module id = 29\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ConferencingHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ConferencingHelper.prototype = Object.create(Helper.prototype);\n\n    ConferencingHelper.prototype.createUrl = function() {\n        return '/account/~/extension/~/conferencing';\n    };\n\n    module.exports = {\n        Class: ConferencingHelper,\n        /**\n         * @param {Context} context\n         * @returns {ConferencingHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ConferencingHelper', function() {\n                return new ConferencingHelper(context);\n            });\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Conferencing.js\n ** module id = 30\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('../core/Utils'),\n        Validator = require('../core/Validator'),\n        Helper = require('../core/Helper').Class,\n        List = require('../core/List');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ContactHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IContactOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ContactHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' +\n                   (options.extensionId ? options.extensionId : '~') +\n                   '/address-book';\n\n        if (options.sync) return root + '-sync';\n\n        return root +\n               (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * Returns all values of the given fields if value exists\n     * @param {(IContact|object)} where\n     * @param {Array} fields\n     * @param {boolean} [asHash]\n     * @protected\n     * @returns {Object}\n     */\n    ContactHelper.prototype.getFieldValues = function(where, fields, asHash) {\n\n        return fields.reduce(function(result, field) {\n\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                } else {\n                    result.push(where[field]);\n                }\n            }\n\n            return result;\n\n        }, asHash ? {} : []);\n\n    };\n\n    /**\n     * @param {IContact} contact\n     * @returns {string}\n     */\n    ContactHelper.prototype.getFullName = function(contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getEmails = function(contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getPhones = function(contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getFaxes = function(contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getAddresses = function(contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @returns {boolean}\n     */\n    ContactHelper.prototype.isAlive = function(contact) {\n        return (contact.availability == 'Alive');\n    };\n\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} string\n     * @param {IContactMatchOptions} [options]\n     * @returns {(string|null)}\n     */\n    ContactHelper.prototype.match = function(contact, string, options) {\n\n        options = Utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function(value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n\n        string = options.transformFn(string, options);\n\n        var found = null;\n\n        if (!string) return found;\n\n        function matchWith(value) {\n\n            // skip unnecessary cycles if match has been found\n            if (found) return;\n\n            var transformed = options.transformFn(value, options);\n\n            if (!transformed) return;\n\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n\n            if (match) found = value;\n\n        }\n\n        // Search in fields\n        options.fields.forEach(function(field) {\n            matchWith(contact[field]);\n        });\n\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found) this.addressFields.forEach(function(field) {\n\n            // skip unnecessary cycles if match has been found or no field value\n            if (!contact[field] || found) return;\n\n            this.addressSubFields.forEach(function(subField) {\n                matchWith(contact[field][subField]);\n            });\n\n        }, this);\n\n        return found;\n\n    };\n\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} phone\n     * @param {IContactMatchOptions} [options]\n     * @returns {string|null}\n     */\n    ContactHelper.prototype.matchAsPhone = function(contact, phone, options) {\n\n        return this.match(contact, phone, Utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function(value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n\n    };\n\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     * @param {ICallerInfo[]} callerInfos\n     * @param {IContact[]} contacts\n     * @param {IContactMatchOptions} [options]\n     */\n    ContactHelper.prototype.attachToCallerInfos = function(callerInfos, contacts, options) {\n\n        var self = this,\n            callerInfoIndex = this.index(callerInfos, function(callerInfo) { return callerInfo.phoneNumber; }, true);\n\n        Utils.forEach(callerInfoIndex, function(indexedCallerInfos, phoneNumber) {\n\n            var foundContact = null,\n                foundPhone = null;\n\n            contacts.some(function(contact) {\n\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n\n                if (foundPhone) foundContact = contact;\n\n                return foundPhone;\n\n            });\n\n            if (foundContact) {\n\n                indexedCallerInfos.forEach(function(callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n\n            }\n\n        });\n\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ContactHelper.prototype.comparator = function(options) {\n\n        var self = this;\n\n        return List.comparator(Utils.extend({\n            extractFn: function(contact, options) {\n                return self.getFullName(contact);\n            }\n        }, options));\n\n    };\n\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     * @param {IContactOptions} [options]\n     * @returns {function(IContact)}\n     */\n    ContactHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n\n        return List.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {condition: options.startsWith, filterFn: function(item, opts) { return self.match(item, opts.condition); }},\n            {condition: options.phonesOnly, filterFn: function(item, opts) { return (self.getPhones(item).length > 0); }},\n            {condition: options.faxesOnly, filterFn: function(item, opts) { return (self.getFaxes(item).length > 0); }}\n        ]);\n\n    };\n\n    /**\n     * @param {IContact} item\n     */\n    ContactHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'firstName', validator: Validator.required(item.firstName)},\n            {field: 'lastName', validator: Validator.required(item.lastName)},\n            {field: 'email', validator: Validator.email(item.email)},\n            {field: 'email2', validator: Validator.email(item.email2)},\n            {field: 'email3', validator: Validator.email(item.email3)}\n        ]);\n\n    };\n\n    ContactHelper.prototype.phoneFields = [\n        'homePhone',\n        'homePhone2',\n        'businessPhone',\n        'businessPhone2',\n        'mobilePhone',\n        'companyPhone',\n        'assistantPhone',\n        'carPhone',\n        'otherPhone',\n        'callbackPhone'\n    ];\n\n    ContactHelper.prototype.faxFields = [\n        'businessFax',\n        'otherFax'\n    ];\n\n    ContactHelper.prototype.addressFields = [\n        'homeAddress',\n        'businessAddress',\n        'otherAddress'\n    ];\n\n    ContactHelper.prototype.addressSubFields = [\n        'street',\n        'city',\n        'state',\n        'zip'\n    ];\n\n    ContactHelper.prototype.nameFields = [\n        'firstName',\n        'middleName',\n        'lastName',\n        'nickName'\n    ];\n\n    ContactHelper.prototype.otherFields = [\n        'company',\n        'jobTitle',\n        'webPage',\n        'notes'\n    ];\n\n    ContactHelper.prototype.emailFields = [\n        'email',\n        'email2',\n        'email3'\n    ];\n\n    module.exports = {\n        Class: ContactHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ContactHelper', function() {\n                return new ContactHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IContactOptions\n     * @property {string} extensionId\n     * @property {string} groupId\n     */\n\n    /**\n     * @typedef {object} IContactFilterOptions\n     * @property {string} startsWith\n     * @property {boolean} alive\n     */\n\n    /**\n     * @typedef {object} IContactMatchOptions\n     * @property {function(object, IContactMatchOptions)} transformFn\n     * @property {boolean} strict - if false look for as sub string\n     * @property {boolean} inAddresses - look in addresses as well\n     * @property {string[]} fields - in which fields to look for\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactAddressInfo\n     * @typedef {Object} IContactAddress\n     * @property {string} country\n     * @property {string} street\n     * @property {string} city\n     * @property {string} state\n     * @property {string} zip\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ContactInfo\n     * @typedef {Object} IContactBrief\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} email\n     * @property {IContactAddress} businessAddress\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactInfo\n     * @typedef {Object} IContact\n     *\n     * Shared:\n     * @property {string} id\n     * @property {string} uri\n     *\n     * Names:\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} nickName\n     * @property {string} middleName\n     *\n     * Emails:\n     * @property {string} email\n     * @property {string} email2\n     * @property {string} email3\n     *\n     * Addresses:\n     * @property {IContactAddress} businessAddress\n     * @property {IContactAddress} homeAddress\n     * @property {IContactAddress} otherAddress\n     *\n     * Phones:\n     * @property {string} homePhone\n     * @property {string} homePhone2\n     * @property {string} businessPhone\n     * @property {string} businessPhone2\n     * @property {string} mobilePhone\n     * @property {string} companyPhone\n     * @property {string} assistantPhone\n     * @property {string} carPhone\n     * @property {string} otherPhone\n     * @property {string} callbackPhone\n     *\n     * @property {string} businessFax\n     * @property {string} otherFax\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Contact.js\n ** module id = 31\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactGroupHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ContactGroupHelper.prototype = Object.create(Helper.prototype);\n    ContactGroupHelper.prototype.createUrl = function(options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n\n    /**\n     * @param {IContactGroup} item\n     */\n    ContactGroupHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'groupName', validator: Validator.required(item && item.groupName)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: ContactGroupHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactGroupHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ContactGroupHelper', function() {\n                return new ContactGroupHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IContactGroup\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} notes\n     * @property {string} groupName\n     * @property {number} contactsCount\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/ContactGroup.js\n ** module id = 32\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n        this.deviceModel = require('./DeviceModel').$get(context);\n    }\n\n    DeviceHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IDeviceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    DeviceHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (options.order) return '/account/~/order';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/device' +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IDevice} item\n     */\n    DeviceHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'emergencyServiceAddress-street', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)},\n            {field: 'emergencyServiceAddress-city', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)},\n            {field: 'emergencyServiceAddress-state', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)},\n            {field: 'emergencyServiceAddress-country', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)},\n            {field: 'emergencyServiceAddress-zip', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)},\n            {field: 'emergencyServiceAddress-customerName', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)},\n            {field: 'extension', validator: Validator.required(this.extension.getId(item && item.extension))},\n            {field: 'model', validator: Validator.required(this.deviceModel.getId(item && item.model))}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: DeviceHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('DeviceHelper', function() {\n                return new DeviceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IDevice\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} type\n     * @property {string} name\n     * @property {string} serial\n     * @property {IDeviceModel} model\n     * @property {IExtensionShort} extension TODO IExtension?\n     * @property {IDeviceAddress} emergencyServiceAddress\n     * @property {IDeviceShipping} shipping\n     * @property {IDevicePhoneLine[]} phoneLines\n     */\n\n    /**\n     * @typedef {Object} IDeviceOrder\n     * @property {IDevice[]} devices\n     */\n\n    /**\n     * @typedef {Object} IDeviceAddress\n     * @property {string} street\n     * @property {string} street2\n     * @property {string} city\n     * @property {string} state\n     * @property {string} country\n     * @property {string} zip\n     * @property {string} customerName\n     */\n\n    /**\n     * @typedef {Object} IDeviceShipping\n     * @property {IDeviceAddress} address\n     * @property {IShippingMethod} method\n     * @property {string} status\n     */\n\n    /**\n     * @typedef {Object} IDevicePhoneLine\n     * @property {string} lineType\n     * @property {IPhoneNumber} phoneInfo\n     */\n\n    /**\n     * @typedef {Object} IDeviceOptions\n     * @property {string} extensionId\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Device.js\n ** module id = 33\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        List = require('../core/List'),\n        Utils = require('../core/Utils');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ExtensionHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ExtensionHelper.prototype = Object.create(Helper.prototype);\n\n    ExtensionHelper.prototype.type = {\n        department: 'Department',\n        user: 'User',\n        announcement: 'Announcement',\n        voicemail: 'Voicemail'\n    };\n\n    /**\n     *\n     * @param {IExtensionOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ExtensionHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~' +\n               (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isUser = function(extension) {\n        return extension && extension.type == this.type.user;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isDepartment = function(extension) {\n        return extension && extension.type == this.type.department;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isAnnouncement = function(extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isVoicemail = function(extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ExtensionHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: List.numberComparator\n        }, options));\n\n    };\n\n    /**\n     * @param {IExtensionFilterOptions} [options]\n     * @returns {function(IExtension)}\n     */\n    ExtensionHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            search: '',\n            type: ''\n        }, options);\n\n        return List.filter([\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: List.containsFilter,\n                extractFn: function(item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                           (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: ExtensionHelper,\n        /**\n         * @param {Context} context\n         * @returns {ExtensionHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ExtensionHelper', function() {\n                return new ExtensionHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IExtensionOptions\n     * @property {string} departmentId\n     */\n\n    /**\n     * @typedef {object} IExtensionFilterOptions\n     * @property {string} search\n     * @property {string} type\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ShortExtensionInfo\n     * @typedef {object} IExtensionShort\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ExtensionInfo\n     * @typedef {object} IExtension\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} type\n     * @property {IContactBrief} contact\n     * @property {IExtensionRegionalSettings} regionalSettings\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} status\n     * @property {string} setupWizardState\n     */\n\n    /**\n     * @typedef {object} IExtensionRegionalSettings\n     * @property {ITimezone} timezone\n     * @property {ILanguage} language\n     * @property {ICountry} homeCountry\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Extension.js\n ** module id = 34\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Utils = require('../core/Utils'),\n        List = require('../core/List');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ForwardingNumberHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ForwardingNumberHelper.prototype = Object.create(Helper.prototype);\n\n\n    ForwardingNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n\n    };\n\n    ForwardingNumberHelper.prototype.getId = function(forwardingNumber) {\n        return forwardingNumber.id || (forwardingNumber.phoneNumber);\n    };\n\n    ForwardingNumberHelper.prototype.hasFeature = function(phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ForwardingNumberHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'label'\n        }, options));\n\n    };\n\n    /**\n     * @param options\n     * @returns {function(IForwardingNumber)}\n     */\n    ForwardingNumberHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            features: []\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.features.length, filterFn: function(item) {\n\n                return options.features.some(function(feature) {\n                    return self.hasFeature(item, feature);\n                });\n\n            }\n            }\n        ]);\n\n    };\n\n\n    module.exports = {\n        Class: ForwardingNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {ForwardingNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ForwardingNumberHelper', function() {\n                return new ForwardingNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     *\n     * @typedef {object} IForwardingNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} label\n     * @property {string} phoneNumber\n     * @property {string} flipNumber\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/ForwardingNumber.js\n ** module id = 35\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator'),\n        Utils = require('../core/Utils'),\n        List = require('../core/List');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function MessageHelper(context) {\n        Helper.call(this, context);\n        this.platform = require('../core/Platform').$get(context);\n        this.contact = require('./Contact').$get(context);\n    }\n\n    MessageHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     *\n     * @param {IMessageOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    MessageHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n\n        if (options.fax) return root + '/fax';\n        if (options.sms) return root + '/sms';\n        if (options.pager) return root + '/company-pager';\n        if (options.sync) return root + '/message-sync';\n\n        return root + '/message-store' + (id ? '/' + id : '');\n\n    };\n\n    MessageHelper.prototype.isInbound = function(message) {\n        return (message && message.direction == 'Inbound');\n    };\n\n    MessageHelper.prototype.isOutbound = function(message) {\n        return !this.isInbound(message);\n    };\n\n    MessageHelper.prototype.isSMS = function(message) {\n        return (message && message.type == 'SMS');\n    };\n\n    MessageHelper.prototype.isPager = function(message) {\n        return (message && message.type == 'Pager');\n    };\n\n    MessageHelper.prototype.isVoiceMail = function(message) {\n        return (message && message.type == 'VoiceMail');\n    };\n\n    MessageHelper.prototype.isFax = function(message) {\n        return (message && message.type == 'Fax');\n    };\n\n    MessageHelper.prototype.isAlive = function(message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n\n    MessageHelper.prototype.isRead = function(message) {\n        return (message.readStatus == 'Read');\n    };\n\n    MessageHelper.prototype.setIsRead = function(message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n\n    MessageHelper.prototype.getAttachmentUrl = function(message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {addMethod: 'GET', addServer: true, addToken: true}) : '';\n    };\n\n    MessageHelper.prototype.getAttachmentContentType = function(message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n\n    /**\n     * @returns {Subscription}\n     */\n    MessageHelper.prototype.getSubscription = function(options) {\n\n        return (require('../core/Subscription').$get(this.context)).setEvents([this.createUrl(options)]);\n\n    };\n\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getCallerInfos = function(message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getAllCallerInfos = function(message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    MessageHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n\n    };\n\n    /**\n     * @param {IMessageFilterOptions} [options]\n     * @returns {function(IMessage)}\n     */\n    MessageHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n\n        return List.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'type', condition: options.type},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'conversationId', condition: options.conversationId},\n            {filterBy: 'readStatus', condition: options.readStatus},\n            {filterBy: 'subject', condition: options.search, filterFn: List.containsFilter}\n        ]);\n\n    };\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     * @param {IContact[]} contacts\n     * @param {IMessage[]} messages\n     * @param {IContactMatchOptions} [options]\n     */\n    MessageHelper.prototype.attachContacts = function(contacts, messages, options) {\n\n        var self = this;\n\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function(callerInfos, message) {\n\n            return callerInfos.concat(self.getAllCallerInfos(message));\n\n        }, []);\n\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    };\n\n    /**\n     *\n     * @param message\n     * @returns {IMessageShort}\n     */\n    MessageHelper.prototype.shorten = function(message) {\n\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n\n    };\n\n\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validateSMS = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(Utils.getProperty(item, 'to[0].phoneNumber'))},\n            {field: 'from', validator: Validator.required(Utils.getProperty(item, 'from.phoneNumber'))},\n            {field: 'subject', validator: Validator.required(Utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: Validator.length(Utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    };\n\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validatePager = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(Utils.getProperty(item, 'to.extensionNumber'))},\n            {field: 'from', validator: Validator.required(Utils.getProperty(item, 'from.extensionNumber'))},\n            {field: 'subject', validator: Validator.required(Utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: Validator.length(Utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: MessageHelper,\n        /**\n         * @param {Context} context\n         * @returns {MessageHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('MessageHelper', function() {\n                return new MessageHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IMessage\n     * @property {string} id\n     * @property {string} uri\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} type\n     * @property {string} creationTime\n     * @property {string} readStatus\n     * @property {string} priority\n     * @property {IMessageAttachment} attachments\n     * @property {string} direction\n     * @property {string} availability\n     * @property {string} subject\n     * @property {string} messageStatus\n     * @property {string} conversationId\n     * @property {string} lastModifiedTime\n     */\n\n    /**\n     * @typedef {object} IMessageShort\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} text\n     */\n\n    /**\n     * @typedef {object} IMessageOptions\n     * @property {boolean} fax\n     * @property {boolean} sync\n     * @property {boolean} sms\n     * @property {boolean} pager\n     * @property {string} extensionId\n     */\n\n    /**\n     * @typedef {object} IMessageFilterOptions\n     * @property {boolean} alive\n     * @property {string} conversationId\n     * @property {string} direction\n     * @property {string} readStatus\n     * @property {string} type\n     */\n\n    /**\n     * @typedef {object} IMessageFaxAttachment\n     * @property {string} contentType\n     * @property {string} content\n     * @property {string} fileName\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch18s01.html#MessageAttachmentInfo\n     * @typedef {Object} IMessageAttachment\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} contentType\n     * @property {string} vmDuration\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Message.js\n ** module id = 36\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var List = require('../core/List'),\n        Utils = require('../core/Utils'),\n        Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PhoneNumberHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n\n    PhoneNumberHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IPhoneNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PhoneNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (options.lookup) return '/number-pool/lookup';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/phone-number' +\n               (id ? '/' + id : '');\n\n    };\n\n    PhoneNumberHelper.prototype.isSMS = function(phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n\n    PhoneNumberHelper.prototype.hasFeature = function(phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n\n    PhoneNumberHelper.prototype.reserve = function(phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n\n    PhoneNumberHelper.prototype.unreserve = function(phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(IPhoneNumber, IPhoneNumber)}\n     */\n    PhoneNumberHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            /**\n             * @param {IPhoneNumber} item\n             * @returns {string}\n             */\n            extractFn: function(item) {\n                return item.usageType + '-' +\n                       item.paymentType + '-' +\n                       item.type;\n            }\n        }, options));\n\n    };\n\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     * @param {IPhoneNumberFilterOptions} options\n     * @returns {function(IForwardingNumber)}\n     */\n    PhoneNumberHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n\n        return List.filter([\n            {filterBy: 'usageType', condition: options.usageType},\n            {filterBy: 'paymentType', condition: options.paymentType},\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.features.length, filterFn: function(item) {\n\n                return options.features.some(function(feature) {\n                    return self.hasFeature(item, feature);\n                });\n\n            }\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: PhoneNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {PhoneNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('PhoneNumberHelper', function() {\n                return new PhoneNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IPhoneNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} phoneNumber\n     * @property {string} paymentType - External, TollFree, Local\n     * @property {string} location\n     * @property {string} type - VoiceFax, FaxOnly, VoiceOnly\n     * @property {string} usageType - CompanyNumber, DirectNumber, CompanyFaxNumber, ForwardedNumber\n     * @property {array} features - CallerId, SmsSender\n     * @property {string} reservedTill - Date\n     * @property {string} error\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberOptions\n     * @property {string} extensionId\n     * @property {true} lookup\n     * @property {string} countryId\n     * @property {string} paymentType\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {string} line\n     * @property {string} exclude\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberFilterOptions\n     * @property {string} paymentType\n     * @property {string} usageType\n     * @property {string} type\n     * @property {string[]} features\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberOrder\n     * @property {IPhoneNumber[]} records\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/PhoneNumber.js\n ** module id = 37\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Utils = require('../core/Utils');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PresenceHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n\n    PresenceHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PresenceHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n\n    };\n\n    /**\n     * @param {IPresence} presence\n     * @returns {string}\n     */\n    PresenceHelper.prototype.getId = function(presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n\n    /**\n     * @param {IPresence} presence\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isAvailable = function(presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {Subscription}\n     */\n    PresenceHelper.prototype.getSubscription = function(options, id) {\n\n        return require('../core/Subscription').$get(this.context).setEvents([this.createUrl(options, id)]);\n\n    };\n\n    /**\n     *\n     * @param {Subscription} subscription\n     * @param {IPresence[]} presences\n     * @param {IPresenceOptions} options\n     * @returns {*}\n     */\n    PresenceHelper.prototype.updateSubscription = function(subscription, presences, options) {\n\n        var events = presences.map(this.getId, this).map(function(id) {\n            return this.createUrl(options, id);\n        }, this);\n\n        subscription.addEvents(events);\n\n        return subscription;\n\n    };\n\n    /**\n     * @param {IExtension[]} extensions\n     * @param {IPresence[]} presences\n     * @param {bool} [merge]\n     * @returns {*}\n     */\n    PresenceHelper.prototype.attachToExtensions = function(extensions, presences, merge) {\n\n        var index = this.index(presences);\n\n        extensions.forEach(/** @param {IExtension} extension */ function(extension) {\n\n            var presence = index[this.extension.getId(extension)];\n\n            if (presence) {\n                if ('presence' in extension && merge) {\n                    Utils.extend(extension.presence, presence);\n                } else {\n                    extension.presence = presence;\n                }\n            }\n\n        }, this);\n\n    };\n\n    /**\n     * @param {IPresenceCall} presenceCall\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isCallInProgress = function(presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n\n    module.exports = {\n        Class: PresenceHelper,\n        /**\n         * @param {Context} context\n         * @returns {PresenceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('PresenceHelper', function() {\n                return new PresenceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IPresence\n     * @property {IExtension} extension\n     * @property {IPresenceCall[]} activeCalls\n     * @property {string} presenceStatus - Offline, Busy, Available\n     * @property {string} telephonyStatus - NoCall, CallConnected, Ringing, OnHold\n     * @property {string} userStatus - Offline, Busy, Available\n     * @property {string} dndStatus - TakeAllCalls, DoNotAcceptAnyCalls, DoNotAcceptDepartmentCalls, TakeDepartmentCallsOnly\n     * @property {boolean} allowSeeMyPresence\n     * @property {boolean} ringOnMonitoredCall\n     * @property {boolean} pickUpCallsOnHold\n     * @property {number} extensionId\n     * @property {number} sequence\n     */\n\n    /**\n     * @typedef {Object} IPresenceCall\n     * @property {string} direction\n     * @property {string} from\n     * @property {string} to\n     * @property {string} sessionId\n     * @property {string} id\n     * @property {string} telephonyStatus\n     */\n\n    /**\n     * @typedef {Object} IPresenceOptions\n     * @property {boolean} detailed\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Presence.js\n ** module id = 38\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function RingoutHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n\n    RingoutHelper.prototype = Object.create(Helper.prototype);\n\n    RingoutHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n\n    };\n\n    RingoutHelper.prototype.resetAsNew = function(object) {\n        object = Helper.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n\n    RingoutHelper.prototype.isInProgress = function(ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n\n    RingoutHelper.prototype.isSuccess = function(ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n\n    RingoutHelper.prototype.isError = function(ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n\n    /**\n     * @param {IRingout} item\n     */\n    RingoutHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(item && item.to && item.to.phoneNumber)},\n            {field: 'from', validator: Validator.required(item && item.from && item.from.phoneNumber)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: RingoutHelper,\n        /**\n         * @param {Context} context\n         * @returns {RingoutHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('RingoutHelper', function() {\n                return new RingoutHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IRingout\n     * @property {ICallerInfo} [from] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [to] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [callerId] (!) ONLY PHONE NUMBER\n     * @property {boolean} [playPrompt]\n     * @property {{callStatus:boolean, callerStatus:boolean, calleeStatus:boolean}} [status]\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Ringout.js\n ** module id = 39\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ServiceHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ServiceHelper.prototype = Object.create(Helper.prototype);\n\n    ServiceHelper.prototype.createUrl = function() {\n        return '/account/~/service-info';\n    };\n\n    /**\n     * @param {string} feature\n     * @param {IServiceFeature[]} serviceFeatures\n     * @returns {*}\n     */\n    ServiceHelper.prototype.isEnabled = function(feature, serviceFeatures) {\n\n        return serviceFeatures.reduce(function(value, f) {\n\n            if (f.featureName == feature) value = f.enabled;\n            return value;\n\n        }, false);\n\n    };\n\n    function isServiceFeatureEnabledMethod(feature) {\n        return function(serviceFeatures) {\n            return this.isEnabled(feature, serviceFeatures);\n        };\n    }\n\n    ServiceHelper.prototype.isSmsEnabled = isServiceFeatureEnabledMethod('SMS');\n    ServiceHelper.prototype.isSmsReceivingEnabled = isServiceFeatureEnabledMethod('SMSReceiving');\n    ServiceHelper.prototype.isPresenceEnabled = isServiceFeatureEnabledMethod('Presence');\n    ServiceHelper.prototype.isRingOutEnabled = isServiceFeatureEnabledMethod('RingOut');\n    ServiceHelper.prototype.isInternationalCallingEnabled = isServiceFeatureEnabledMethod('InternationalCalling');\n    ServiceHelper.prototype.isDndEnabled = isServiceFeatureEnabledMethod('DND');\n    ServiceHelper.prototype.isFaxEnabled = isServiceFeatureEnabledMethod('Fax');\n    ServiceHelper.prototype.isFaxReceivingEnabled = isServiceFeatureEnabledMethod('FaxReceiving');\n    ServiceHelper.prototype.isVoicemailEnabled = isServiceFeatureEnabledMethod('Voicemail');\n    ServiceHelper.prototype.isPagerEnabled = isServiceFeatureEnabledMethod('Pager');\n    ServiceHelper.prototype.isPagerReceivingEnabled = isServiceFeatureEnabledMethod('PagerReceiving');\n    ServiceHelper.prototype.isVoipCallingEnabled = isServiceFeatureEnabledMethod('VoipCalling');\n    ServiceHelper.prototype.isVideoConferencingEnabled = isServiceFeatureEnabledMethod('VideoConferencing');\n    ServiceHelper.prototype.isSalesForceEnabled = isServiceFeatureEnabledMethod('SalesForce');\n    ServiceHelper.prototype.isIntercomEnabled = isServiceFeatureEnabledMethod('Intercom');\n    ServiceHelper.prototype.isPagingEnabled = isServiceFeatureEnabledMethod('Paging');\n    ServiceHelper.prototype.isConferencingEnabled = isServiceFeatureEnabledMethod('Conferencing');\n    ServiceHelper.prototype.isFreeSoftPhoneLinesEnabled = isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n    ServiceHelper.prototype.isHipaaComplianceEnabled = isServiceFeatureEnabledMethod('HipaaCompliance');\n    ServiceHelper.prototype.isCallParkEnabled = isServiceFeatureEnabledMethod('CallPark');\n    ServiceHelper.prototype.isOnDemandCallRecordingEnabled = isServiceFeatureEnabledMethod('OnDemandCallRecording');\n\n    module.exports = {\n        Class: ServiceHelper,\n        /**\n         * @param {Context} context\n         * @returns {ServiceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('serviceHelper', function() {\n                return new ServiceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IServiceFeature\n     * @property {string} featureName\n     * @property {boolean} enabled\n     */\n\n    /**\n     * @typedef {object} IService\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} servicePlanName\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Service.js\n ** module id = 40\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    function PubnubMock(options) {}\n\n    PubnubMock.prototype.ready = function() {};\n\n    PubnubMock.prototype.unsubscribe = function(options) {};\n\n    PubnubMock.prototype.subscribe = function(options) {\n        this.onMessage = options.message;\n    };\n\n    PubnubMock.prototype.receiveMessage = function(msg) {\n        this.onMessage(msg, 'env', 'channel');\n    };\n\n    /**\n     * @alias RCSDK.core.pubnub.Mock\n     * @type {PUBNUB}\n     */\n    module.exports = {\n        /**\n         * @param {Context} context\n         * @returns {PUBNUB}\n         */\n        $get: function(context) {\n\n            return {\n                init: function(options) {\n                    return new PubnubMock(options);\n                }\n            };\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/pubnub/PubnubMock.js\n ** module id = 41\n ** module chunks = 0\n **/","/**\n * istanbul ignore next\n */\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    var Log = require('../Log'),\n        Utils = require('../Utils');\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.ajax.XhrMock\n     * @extends XMLHttpRequest\n     */\n    function XhrMock(context) {\n        // Service\n        this.responses = require('./XhrResponse').$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n        this.context = context;\n    }\n\n    XhrMock.prototype.getResponseHeader = function(header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n\n    XhrMock.prototype.setRequestHeader = function(header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n\n    XhrMock.prototype.open = function(method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n\n    XhrMock.prototype.send = function(data) {\n\n        var contentType = this.getRequestHeader('Content-Type');\n\n        this.data = data;\n\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json') this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded') this.data = Utils.parseQueryString(this.data);\n        }\n\n        Log.debug('API REQUEST', this.method, this.url);\n\n        var currentResponse = this.responses.find(this);\n\n        if (!currentResponse) {\n            setTimeout(function() {\n                if (this.onerror) this.onerror(new Error('Unknown request: ' + this.url));\n            }.bind(this), 1);\n            return;\n        }\n\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n\n        var res = currentResponse.response(this),\n            Promise = this.context.getPromise(),\n            onLoad = function(res) {\n\n                if (this.getResponseHeader('Content-Type') == 'application/json') res = JSON.stringify(res);\n\n                this.responseText = res;\n\n                setTimeout(function() {\n                    if (this.onload) this.onload();\n                }.bind(this), 1);\n\n            }.bind(this);\n\n        if (res instanceof Promise) {\n\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n\n        } else onLoad(res);\n\n    };\n\n    XhrMock.prototype.abort = function() {\n        Log.debug('XhrMock.destroy(): Aborted');\n    };\n\n    XhrMock.prototype.getRequestHeader = function(header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n\n    XhrMock.prototype.setResponseHeader = function(header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n\n    XhrMock.prototype.setStatus = function(status) {\n        this.status = status;\n        return this;\n    };\n\n    module.exports = {\n        Class: XhrMock,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrMock}\n         */\n        $get: function(context) {\n\n            return new XhrMock(context);\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/xhr/XhrMock.js\n ** module id = 42\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}