{"version":3,"sources":["webpack/universalModuleDefinition","rc-sdk.js","webpack/bootstrap 09dcd3083603c2494cea","../lib/browser.js","external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}","external {\"amd\":\"crypto-js\",\"commonjs\":\"crypto-js\",\"commonjs2\":\"crypto-js\",\"root\":\"CryptoJS\"}","external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}","../lib/RCSDK.js","../lib/core/Context.js","../lib/core/Ajax.js","../lib/core/AjaxObserver.js","../lib/core/xhr/XhrResponse.js","../lib/core/Platform.js","../lib/core/Cache.js","../lib/core/Subscription.js","../lib/core/PageVisibility.js","../lib/core/Helper.js","../lib/core/Observable.js","../lib/core/Validator.js","../lib/core/Log.js","../lib/core/Utils.js","../lib/core/List.js","../lib/helpers/Country.js","../lib/helpers/DeviceModel.js","../lib/helpers/Language.js","../lib/helpers/Location.js","../lib/helpers/ShippingMethod.js","../lib/helpers/State.js","../lib/helpers/Timezone.js","../lib/helpers/Account.js","../lib/helpers/BlockedNumber.js","../lib/helpers/Call.js","../lib/helpers/Conferencing.js","../lib/helpers/Contact.js","../lib/helpers/ContactGroup.js","../lib/helpers/Device.js","../lib/helpers/Extension.js","../lib/helpers/ForwardingNumber.js","../lib/helpers/Message.js","../lib/helpers/PhoneNumber.js","../lib/helpers/Presence.js","../lib/helpers/Ringout.js","../lib/helpers/Service.js","../lib/core/pubnub/PubnubMock.js","../lib/core/xhr/XhrMock.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","CryptoJS","localStorage","window","Promise","PUBNUB","XHR","XMLHttpRequest","undefined","injections","RCSDK","_context","$get","version","prototype","useStubs","platform","getPlatform","context","getContext","server","apiKey","useAjaxStub","usePubnubStub","getAjax","getAjaxObserver","getXhrResponse","getCache","getSubscription","getPageVisibility","getHelper","getObservable","getValidator","getLog","getUtils","getList","getCountryHelper","getDeviceModelHelper","getLanguageHelper","getLocationHelper","getShippingMethodHelper","getStateHelper","getTimezoneHelper","getAccountHelper","getBlockedNumberHelper","getCallHelper","getConferencingHelper","getContactHelper","getContactGroupHelper","getDeviceHelper","getExtensionHelper","getForwardingNumberHelper","getMessageHelper","getPhoneNumberHelper","getPresenceHelper","getRingoutHelper","getServiceHelper","Error","ActiveXObject","e1","e2","e3","Context","singletons","stubPubnub","stubAjax","createSingleton","name","flag","getCryptoJS","getPubnub","getLocalStorage","bind","getPromise","getXHR","Class","Ajax","Observable","data","error","response","headers","status","options","observer","xhr","Utils","Log","jsonContentType","multipartContentType","boundarySeparator","headerSeparator","bodySeparator","Object","create","defineProperty","value","enumerable","getOptions","setOptions","setRequestHeader","toLowerCase","setResponseHeader","getRequestHeader","getResponseHeader","isResponseContentType","type","getResponseContentType","indexOf","isResponseMultipart","isResponseUnauthorized","getContentType","isMultipart","isUnauthorized","isLoaded","checkOptions","url","defaultHeaders","Accept","Content-Type","keys","forEach","key","method","toUpperCase","async","get","post","JSON","stringify","queryStringify","send","emit","events","beforeRequest","request","then","ajax","parseResponse","requestSuccess","e","requestError","resolve","reject","open","withCredentials","onload","responseText","onerror","header","checkStatus","toString","substr","boundary","match","parts","split","trim","shift","length","pop","map","part","subParts","replace","ajaxPart","res","headerParts","join","statusInfo","i","parse","message","error_description","description","stack","destroy","abort","AjaxObserver","XhrResponse","responses","add","push","clear","find","currentResponse","path","test","Platform","account","urlPrefix","apiVersion","accountPrefix","accessTokenTtl","refreshTokenTtl","refreshTokenTtlRemember","refreshHandicapMs","refreshDelayMs","clearCacheOnRefreshError","refreshPromise","forcedTokenType","cacheId","pollInterval","releaseTimeout","accessViolation","logoutSuccess","logoutError","authorizeSuccess","authorizeError","refreshSuccess","refreshError","getStorage","clearStorage","clean","remember","setItem","getItem","authorize","authCall","grant_type","username","extension","password","access_token_ttl","refresh_token_ttl","setCache","emitAndCallback","isPaused","storage","Date","now","parseInt","pause","resume","removeItem","refresh","refreshPolling","setTimeout","authData","getAuthData","debug","access_token","refresh_token","refreshExpireTime","info","result","logout","token","getToken","warn","poll","next","isTokenValid","getTokenType","token_type","expires_in","refresh_token_expires_in","expireTime","getTime","isAuthorized","cancelAccessToken","extend","oldAuthData","forceAuthentication","apiCall","apiUrl","addServer","builtUrl","addMethod","addToken","Cache","prefix","prefixKey","item","hasOwnProperty","Subscription","eventFilters","timeout","subscription","expirationTime","expiresIn","deliveryMode","transportType","encryption","address","subscriberKey","secretKey","creationTime","uri","pubnub","renewHandicapMs","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","getCrypto","register","isSubscribed","renew","subscribe","addEvents","concat","setEvents","getFullEventFilters","event","clearTimeout","updateSubscription","subscribeAtPubnub","unsubscribe","remove","timeToExpiration","channel","notify","encryptionKey","enc","Base64","decrypted","AES","decrypt","ciphertext","mode","ECB","padding","pad","Pkcs7","Utf8","init","subscribe_key","ready","connect","PageVisibility","hidden","onchange","evt","v","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","visible","document","change","addEventListener","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","isVisible","Helper","defaultProperty","createUrl","getId","object","isNew","getUri","resetAsNew","parseMultipartResponse","filter","loadRequest","saveRequest","deleteRequest","syncRequest","sync","syncToken","syncType","nextPageExists","navigation","index","array","getIdFn","gather","reduce","merge","target","supplement","mergeItems","supplementIndex","updatedIDs","newItem","writable","hasListeners","listeners","registerOneTimeEvent","oneTimeEvents","oneTimeArguments","on","callback","self","isOneTimeEventFired","apply","getOneTimeEventArgumens","args","argumentsToArray","arguments","splice","isOneTimeEvent","setOneTimeEventFired","setOneTimeEventArgumens","some","off","cb","offAll","Validator","validate","validators","errors","isValid","validator","field","email","multiple","isEmail","phone","isPhoneNumber","required","max","min","logDebug","logInfo","logWarnings","logErrors","addTimestamps","console","log","disableAll","enableAll","parseArguments","unshift","toLocaleString","hasOwn","rdigit","class2type","src","copy","copyIsArray","clone","deep","isFunction","isPlainObject","isArray","parameters","vv","encodeURIComponent","parseQueryString","queryString","argsParsed","arg","decodeURIComponent","pair","Array","slice","isDate","obj","isWindow","isNaN","String","nodeType","constructor","getProperty","property","fn","interval","stopPolling","delay","parseString","s","parseNumber","n","parseFloat","List","propertyExtractor","stringComparator","a","b","localeCompare","numberComparator","comparator","item1","item2","compareFn","extractFn","sortBy","equalsFilter","condition","containsFilter","regexpFilter","RegExp","filterConfigs","pass","opt","filterFn","filterBy","CountryHelper","DeviceModelHelper","device","addons","count","cleanForSaving","deviceClass","addon","devices","LanguageHelper","languages","LocationHelper","state","uniqueNPAs","stateId","onlyUniqueNPA","opts","npa","nxx","ShippingMethodHelper","shippingMethods","StateHelper","countryHelper","countryId","country","TimezoneHelper","AccountHelper","BlockedNumberHelper","extensionId","phoneNumber","CallHelper","presence","contact","personal","active","getSessionId","sessionId","isInProgress","isAlive","availability","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","duration","hours","Math","floor","mins","secs","alive","attachContacts","contacts","calls","callerInfos","attachToCallerInfos","checkMergeability","outboundRingOutCall","inboundCall","dateString","strict","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","secondCall","parsePresenceCalls","activeCalls","activeCall","isCallInProgress","telephonyStatus","getSignature","cleanup","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","ConferencingHelper","ContactHelper","groupId","getFieldValues","where","fields","asHash","getFullName","nameFields","getEmails","emailFields","getPhones","phoneFields","getFaxes","faxFields","getAddresses","addressFields","string","matchWith","found","transformed","transformFn","otherFields","inAddresses","toLocaleLowerCase","addressSubFields","subField","matchAsPhone","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","startsWith","phonesOnly","faxesOnly","firstName","lastName","email2","email3","ContactGroupHelper","groupName","DeviceHelper","deviceModel","order","emergencyServiceAddress","street","city","zip","customerName","model","ExtensionHelper","department","user","announcement","voicemail","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","search","extensionNumber","ForwardingNumberHelper","forwardingNumber","hasFeature","feature","features","MessageHelper","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentUrl","attachments","getAttachmentContentType","contentType","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","validatePager","PhoneNumberHelper","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","PresenceHelper","detailed","isAvailable","presenceStatus","presences","attachToExtensions","extensions","presenceCall","RingoutHelper","ringout","callStatus","isSuccess","isError","ServiceHelper","isServiceFeatureEnabledMethod","serviceFeatures","isEnabled","f","featureName","enabled","isSmsEnabled","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","PubnubMock","onMessage","receiveMessage","msg","XhrMock","requestHeaders","readyState","responseHeaders","setStatus","onLoad"],"mappings":"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","file":"rc-sdk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"crypto-js\"), require(\"pubnub\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"crypto-js\", \"pubnub\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"crypto-js\"), require(\"pubnub\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"CryptoJS\"], root[\"PUBNUB\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"crypto-js\"), require(\"pubnub\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"crypto-js\", \"pubnub\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"crypto-js\"), require(\"pubnub\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"CryptoJS\"], root[\"PUBNUB\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Browser-compatible version\n */\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    // ES6 Promise Polyfill only needs to be required since it modifies window object\n    __webpack_require__(2);\n\n    module.exports = __webpack_require__(5)({\n        CryptoJS: __webpack_require__(3),\n        localStorage: window.localStorage,\n        Promise: window.Promise,\n        PUBNUB: __webpack_require__(4),\n        XHR: window.XMLHttpRequest\n    });\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * @param {IInjections} injections\n     * @returns {RCSDK}\n     */\n    module.exports = function(injections) {\n\n        /**\n         * @name RCSDK\n         * @constructor\n         */\n        function RCSDK(options) {\n\n            /** @private */\n            this._context = __webpack_require__(6).$get(injections);\n\n            //TODO Link Platform events with Subscriptions and the rest\n\n        }\n\n        RCSDK.version = '1.1.5';\n\n        RCSDK.prototype.useStubs = function() {\n\n            var platform = this.getPlatform(),\n                context = this.getContext();\n\n            platform.server = '';\n            platform.apiKey = 'whatever';\n\n            context.useAjaxStub(true);\n            context.usePubnubStub(true);\n\n            return this;\n\n        };\n\n        // Internals\n\n        /** @returns {Context} */\n        RCSDK.prototype.getContext = function() { return this._context; };\n\n        // Core\n\n        /** @returns {Ajax} */\n        RCSDK.prototype.getAjax = function() { return __webpack_require__(7).$get(this.getContext()); };\n\n        /**\n         * @returns {AjaxObserver}\n         */\n        RCSDK.prototype.getAjaxObserver = function() { return __webpack_require__(8).$get(this.getContext()); };\n\n        /**\n         * @returns {XhrResponse}\n         */\n        RCSDK.prototype.getXhrResponse = function() { return __webpack_require__(9).$get(this.getContext()); };\n\n        /**\n         * @returns {Platform}\n         */\n        RCSDK.prototype.getPlatform = function() { return __webpack_require__(10).$get(this.getContext()); };\n\n        /**\n         * @returns {Cache}\n         */\n        RCSDK.prototype.getCache = function() { return __webpack_require__(11).$get(this.getContext()); };\n\n        /**\n         * @returns {Subscription}\n         */\n        RCSDK.prototype.getSubscription = function() { return __webpack_require__(12).$get(this.getContext()); };\n\n        /**\n         * @returns {PageVisibility}\n         */\n        RCSDK.prototype.getPageVisibility = function() { return __webpack_require__(13).$get(this.getContext()); };\n\n        /**\n         * @returns {Helper}\n         */\n        RCSDK.prototype.getHelper = function() { return __webpack_require__(14).$get(this.getContext()); };\n\n        /**\n         * @returns {Observable}\n         */\n        RCSDK.prototype.getObservable = function() { return __webpack_require__(15).$get(this.getContext()); };\n\n        /**\n         * @returns {Validator}\n         */\n        RCSDK.prototype.getValidator = function() { return __webpack_require__(16).$get(this.getContext()); };\n\n        /**\n         * @returns {Log}\n         */\n        RCSDK.prototype.getLog = function() { return __webpack_require__(17).$get(this.getContext()); };\n\n        /**\n         * @returns {Utils}\n         */\n        RCSDK.prototype.getUtils = function() { return __webpack_require__(18).$get(this.getContext()); };\n\n        /**\n         * @returns {List}\n         */\n        RCSDK.prototype.getList = function() { return __webpack_require__(19).$get(this.getContext()); };\n\n        // Helpers\n\n        /**\n         * @returns {CountryHelper}\n         */\n        RCSDK.prototype.getCountryHelper = function() { return __webpack_require__(20).$get(this.getContext()); };\n\n        /**\n         * @returns {DeviceModelHelper}\n         */\n        RCSDK.prototype.getDeviceModelHelper = function() { return __webpack_require__(21).$get(this.getContext()); };\n\n        /**\n         * @returns {LanguageHelper}\n         */\n        RCSDK.prototype.getLanguageHelper = function() { return __webpack_require__(22).$get(this.getContext()); };\n\n        /**\n         * @returns {LocationHelper}\n         */\n        RCSDK.prototype.getLocationHelper = function() { return __webpack_require__(23).$get(this.getContext()); };\n\n        /**\n         * @returns {ShippingMethodHelper}\n         */\n        RCSDK.prototype.getShippingMethodHelper = function() { return __webpack_require__(24).$get(this.getContext()); };\n\n        /**\n         * @returns {StateHelper}\n         */\n        RCSDK.prototype.getStateHelper = function() { return __webpack_require__(25).$get(this.getContext()); };\n\n        /**\n         * @returns {TimezoneHelper}\n         */\n        RCSDK.prototype.getTimezoneHelper = function() { return __webpack_require__(26).$get(this.getContext()); };\n\n        /**\n         * @returns {AccountHelper}\n         */\n        RCSDK.prototype.getAccountHelper = function() { return __webpack_require__(27).$get(this.getContext()); };\n\n        /**\n         * @returns {BlockedNumberHelper}\n         */\n        RCSDK.prototype.getBlockedNumberHelper = function() { return __webpack_require__(28).$get(this.getContext()); };\n\n        /**\n         * @returns {CallHelper}\n         */\n        RCSDK.prototype.getCallHelper = function() { return __webpack_require__(29).$get(this.getContext()); };\n\n        /**\n         * @returns {ConferencingHelper}\n         */\n        RCSDK.prototype.getConferencingHelper = function() { return __webpack_require__(30).$get(this.getContext()); };\n\n        /**\n         * @returns {ContactHelper}\n         */\n        RCSDK.prototype.getContactHelper = function() { return __webpack_require__(31).$get(this.getContext()); };\n\n        /**\n         * @returns {ContactGroupHelper}\n         */\n        RCSDK.prototype.getContactGroupHelper = function() { return __webpack_require__(32).$get(this.getContext()); };\n\n        /**\n         * @returns {DeviceHelper}\n         */\n        RCSDK.prototype.getDeviceHelper = function() { return __webpack_require__(33).$get(this.getContext()); };\n\n        /**\n         * @returns {ExtensionHelper}\n         */\n        RCSDK.prototype.getExtensionHelper = function() { return __webpack_require__(34).$get(this.getContext()); };\n\n        /**\n         * @returns {ForwardingNumberHelper}\n         */\n        RCSDK.prototype.getForwardingNumberHelper = function() { return __webpack_require__(35).$get(this.getContext()); };\n\n        /**\n         * @returns {MessageHelper}\n         */\n        RCSDK.prototype.getMessageHelper = function() { return __webpack_require__(36).$get(this.getContext()); };\n\n        /**\n         * @returns {PhoneNumberHelper}\n         */\n        RCSDK.prototype.getPhoneNumberHelper = function() { return __webpack_require__(37).$get(this.getContext()); };\n\n        /**\n         * @returns {PresenceHelper}\n         */\n        RCSDK.prototype.getPresenceHelper = function() { return __webpack_require__(38).$get(this.getContext()); };\n\n        /**\n         * @returns {RingoutHelper}\n         */\n        RCSDK.prototype.getRingoutHelper = function() { return __webpack_require__(39).$get(this.getContext()); };\n\n        /**\n         * @returns {ServiceHelper}\n         */\n        RCSDK.prototype.getServiceHelper = function() { return __webpack_require__(40).$get(this.getContext()); };\n\n        if (!injections\n            || !('CryptoJS' in injections)\n            || !('localStorage' in injections)\n            || !('Promise' in injections)\n            || !('PUBNUB' in injections)\n            || !('XHR' in injections)) throw new Error('Injections object is not complete');\n\n        injections.XHR = (injections.XHR || function() {\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\"); } catch (e1) {}\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\"); } catch (e2) {}\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e3) {}\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        });\n\n        return RCSDK;\n\n    };\n\n    /**\n     * @typedef {Object} IInjections\n     * @property {PUBNUB} PUBNUB\n     * @property {CryptoJS} CryptoJS\n     * @property {Storage} localStorage\n     * @property {XMLHttpRequest} XHR\n     * @property {Promise} Promise\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * @constructor\n     * @param {IInjections} injections\n     */\n    function Context(injections) {\n        /** @private */\n        this.singletons = {};\n        /** @type {IInjections} */\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n\n    /**\n     * @param {string} name\n     * @param {function} factory\n     * @returns {*}\n     */\n    Context.prototype.createSingleton = function(name, factory) {\n\n        if (!this.singletons[name]) this.singletons[name] = factory();\n        return this.singletons[name];\n\n    };\n\n    Context.prototype.usePubnubStub = function(flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n\n    Context.prototype.useAjaxStub = function(flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n\n    /**\n     * @returns {CryptoJS}\n     */\n    Context.prototype.getCryptoJS = function() {\n        return this.injections.CryptoJS;\n    };\n\n    /**\n     * @returns {PUBNUB}\n     */\n    Context.prototype.getPubnub = function() {\n        return this.stubPubnub ? __webpack_require__(41).$get(this) : this.injections.PUBNUB;\n    };\n\n    /**\n     * @returns {Storage}\n     * @abstract\n     */\n    Context.prototype.getLocalStorage = function() {\n        return this.createSingleton('localStorage', function() {\n            return (typeof this.injections.localStorage == 'function')\n                ? new this.injections.localStorage() // this is NPM dom-storage constructor\n                : this.injections.localStorage; // this is window.localStorage\n        }.bind(this));\n    };\n\n    /**\n     * @returns {function(new:Promise)}\n     */\n    Context.prototype.getPromise = function() {\n        return this.injections.Promise;\n    };\n\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Context.prototype.getXHR = function() {\n        return this.stubAjax ? __webpack_require__(42).$get(this) : new this.injections.XHR();\n    };\n\n    module.exports = {\n        Class: Context,\n        /**\n         * @param {IInjections} injections\n         */\n        $get: function(injections) {\n            return new Context(injections);\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = __webpack_require__(15).Class,\n        Utils = __webpack_require__(18),\n        Log = __webpack_require__(17),\n        jsonContentType = 'application/json',\n        multipartContentType = 'multipart/mixed',\n        boundarySeparator = '--',\n        headerSeparator = ':',\n        bodySeparator = '\\n\\n';\n\n    /**\n     * @typedef {Object} IAjaxOptions\n     * @property {string} url\n     * @property {string} method?\n     * @property {boolean} async?\n     * @property {Object} post?\n     * @property {Object} get?\n     * @property {Object} headers?\n     */\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Ajax\n     * @param {Context} [context]\n     */\n    function Ajax(context) {\n        Observable.call(this);\n        /** @type {Ajax[]|object} */\n        this.data = null;\n        /** @type {Error|null} */\n        this.error = null;\n        this.response = '';\n        this.headers = {};\n        this.status = 0;\n        /**\n         * @type {IAjaxOptions}\n         * @protected\n         */\n        this.options = {};\n        this.context = context;\n        /** @type {AjaxObserver} */\n        this.observer = __webpack_require__(8).$get(context);\n        /** @type {XMLHttpRequest} */\n        this.xhr = null;\n    }\n\n    Ajax.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Ajax.prototype, 'constructor', {value: Ajax, enumerable: false});\n\n    /**\n     * @returns {IAjaxOptions}\n     */\n    Ajax.prototype.getOptions = function() {\n        return this.options;\n    };\n\n    /**\n     * @param {IAjaxOptions} [options]\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setOptions = function(options) {\n        if (options) this.options = options;\n        return this;\n    };\n\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setRequestHeader = function(name, value) {\n        name = name.toLowerCase();\n        this.options.headers = this.options.headers || {};\n        if (value) {\n            this.options.headers[name] = value;\n        } else {\n            delete this.options.headers[name];\n        }\n        return this;\n    };\n\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setResponseHeader = function(name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n\n    /**\n     * @param {string} name\n     * @returns {string}\n     */\n    Ajax.prototype.getRequestHeader = function(name) {\n        this.options.headers = this.options.headers || {};\n        return this.options.headers[name.toLowerCase()];\n    };\n\n    /**\n     * @param {string} name\n     * @returns {string}\n     */\n    Ajax.prototype.getResponseHeader = function(name) {\n        return this.headers[name.toLowerCase()];\n    };\n\n    /**\n     * @param {string} type\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseContentType = function(type) {\n        return this.getResponseContentType().indexOf(type) > -1;\n    };\n\n    /**\n     * @returns {string}\n     */\n    Ajax.prototype.getResponseContentType = function() {\n        return this.getResponseHeader('Content-Type') || '';\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseMultipart = function() {\n        return this.isResponseContentType(multipartContentType);\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseUnauthorized = function() {\n        return (this.status == 401);\n    };\n\n    /**\n     * @deprecated\n     * @returns {string}\n     */\n    Ajax.prototype.getContentType = function() {\n        return this.getResponseContentType();\n    };\n\n    /**\n     * @deprecated\n     * @returns {boolean}\n     */\n    Ajax.prototype.isMultipart = function() {\n        return this.isResponseMultipart();\n    };\n\n    /**\n     * @deprecated\n     * @returns {boolean}\n     */\n    Ajax.prototype.isUnauthorized = function() {\n        return this.isResponseUnauthorized();\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isLoaded = function() {\n        return !!this.status;\n    };\n\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     * @returns {Ajax}\n     */\n    Ajax.prototype.checkOptions = function() {\n\n        if (!this.options.url) throw new Error('Url is not defined');\n\n        var defaultHeaders = {\n                'Accept': jsonContentType,\n                'Content-Type': jsonContentType\n            },\n            headers = this.options.headers || {};\n\n        this.options.headers = {};\n\n        Object.keys(defaultHeaders).forEach(function(key) {\n            this.setRequestHeader(key, defaultHeaders[key]);\n        }, this);\n\n        Object.keys(headers).forEach(function(key) {\n            this.setRequestHeader(key, headers[key]);\n        }, this);\n\n        // Delete all headers that don't have value\n        Object.keys(this.options.headers).forEach(function(key) {\n            if (!this.options.headers[key]) delete this.options.headers[key];\n        }, this);\n\n        this.options.method = this.options.method ? this.options.method.toUpperCase() : 'GET';\n        this.options.async = (this.options.async !== undefined) ? this.options.async : true;\n        this.options.get = this.options.get || null;\n        this.options.post = this.options.post ? (\n            (typeof this.options.post !== 'string' && this.getRequestHeader('Content-Type') === jsonContentType)\n                ? JSON.stringify(this.options.post)\n                : this.options.post\n        ) : '';\n        this.options.url = this.options.url + (this.options.get ? ((this.options.url.indexOf('?') > -1 ? '&' : '?') + Utils.queryStringify(this.options.get)) : '');\n\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'].indexOf(this.options.method) < 0) throw new Error('Method has wrong value');\n\n        delete this.options.get;\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Ajax.prototype.send = function() {\n\n        this.observer.emit(this.observer.events.beforeRequest, this);\n\n        return this.request()\n            .then(function(ajax) {\n\n                ajax.parseResponse();\n                if (ajax.error) throw ajax.error;\n                return ajax;\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.observer.emit(this.observer.events.requestSuccess, ajax);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                e.ajax = this;\n\n                this.observer.emit(this.observer.events.requestError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Ajax.prototype.getXHR = function() {\n        return this.context.getXHR();\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Ajax.prototype.request = function() {\n\n        return new (this.context.getPromise())(function(resolve, reject) {\n\n            this.checkOptions();\n\n            var options = this.options,\n                xhr = this.getXHR();\n\n            xhr.open(options.method, options.url, options.async);\n\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n\n            xhr.onload = function() {\n\n                this.status = xhr.status;\n                this.response = xhr.responseText;\n                this.setResponseHeader('Content-Type', xhr.getResponseHeader('Content-Type') || jsonContentType); // if no header, set default\n\n                resolve(this);\n\n            }.bind(this);\n\n            xhr.onerror = function(event) {\n                reject(new Error('The request cannot be sent')); // CORS or network issue\n            };\n\n            Utils.forEach(options.headers, function(value, header) {\n                xhr.setRequestHeader(header, value);\n            });\n\n            xhr.send(options.method === 'GET' ? null : options.post);\n\n            this.xhr = xhr;\n\n        }.bind(this));\n\n    };\n\n    Ajax.prototype.checkStatus = function(status) {\n        return status.toString().substr(0, 1) == '2';\n    };\n\n    Ajax.prototype.parseResponse = function() {\n\n        try {\n\n            if (!this.isResponseMultipart()) {\n\n                if (typeof(this.response) == 'string' && !!this.response && this.isResponseContentType(jsonContentType)) { // Handle 204 No Content -- response may be empty\n\n                    this.data = JSON.parse(this.response);\n\n                } else {\n\n                    this.data = this.response; //TODO Add more parsers\n\n                }\n\n                if (!this.checkStatus(this.status)) this.error = new Error(this.data.message || this.data.error_description || this.data.description || 'Unknown error');\n\n            } else {\n\n                var boundary = this.getResponseContentType().match(/boundary=([^;]+)/i)[1],\n                    parts = this.response.split(boundarySeparator + boundary);\n\n                if (parts[0].trim() === '') parts.shift();\n                if (parts[parts.length - 1].trim() == boundarySeparator) parts.pop();\n\n                // Step 1. Parse all parts into Ajax objects\n                parts = parts.map(function(part) {\n\n                    var subParts = part.trim().replace(/\\r/g, '').split(bodySeparator),\n                        ajaxPart = new Ajax(this.context);\n\n                    (subParts.length > 1 ? subParts.shift() : '')\n                        .split('\\n')\n                        .forEach(function(header) {\n\n                            if (header.length === 0) return res;\n\n                            var headerParts = header.split(headerSeparator),\n                                name = headerParts.shift().trim();\n\n                            ajaxPart.setResponseHeader(name, headerParts.join(headerSeparator).trim());\n\n                        }, this);\n\n                    ajaxPart.response = subParts.join(bodySeparator);\n\n                    return ajaxPart;\n\n                }, this);\n\n                // Step 2. Claim first part as statuses, assign status from this and parse the response\n                var statusInfo = parts.shift();\n                statusInfo.status = this.status;\n                statusInfo.parseResponse();\n\n                // Steo 3. For the rest of parts assign status and parse the response\n                this.data = parts.map(function(part, i) {\n\n                    part.status = statusInfo.data.response[i].status;\n                    part.parseResponse();\n\n                    return part;\n\n                }, this);\n\n            }\n\n        } catch (e) { // Capture parse errors\n\n            Log.error('Ajax.parseResponse(): Unable to parse data');\n            Log.error(e.stack || e);\n            Log.error(this.response);\n\n            this.error = e;\n\n        }\n\n        return this;\n\n    };\n\n    Ajax.prototype.destroy = function() {\n        if (this.xhr) this.xhr.abort();\n        return Observable.prototype.destroy.call(this);\n    };\n\n    module.exports = {\n        Class: Ajax,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {Ajax}\n         */\n        $get: function(context) {\n            return new Ajax(context);\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = __webpack_require__(15).Class;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.AjaxObserver\n     */\n    function AjaxObserver() {\n\n        Observable.call(this);\n\n    }\n\n    AjaxObserver.prototype = Object.create(Observable.prototype);\n\n    AjaxObserver.prototype.events = {\n        beforeRequest: 'beforeRequest', // parameters: ajax\n        requestSuccess: 'requestSuccess', // means that response was successfully fetched from server\n        requestError: 'requestError' // means that request failed completely\n    };\n\n    module.exports = {\n        Class: AjaxObserver,\n        /**\n         * @param {Context} context\n         * @returns {AjaxObserver}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('AjaxObserver', function() {\n                return new AjaxObserver();\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * Ajax Response Manager\n     * @constructor\n     * @alias RCSDK.core.XhrResponse\n     */\n    function XhrResponse() {\n        /** @type {IXhrResponse[]} */\n        this.responses = [];\n    }\n\n    /**\n     * @param {IXhrResponse} response\n     */\n    XhrResponse.prototype.add = function(response) {\n        this.responses.push(response);\n    };\n\n    XhrResponse.prototype.clear = function() {\n        this.responses = [];\n    };\n\n    /**\n     * @param {XhrMock} ajax\n     * @returns {IXhrResponse}\n     */\n    XhrResponse.prototype.find = function(ajax) {\n\n        var currentResponse = null;\n\n        this.responses.forEach(function(response) {\n\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n\n        });\n\n        return currentResponse;\n\n    };\n\n    module.exports = {\n        Class: XhrResponse,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrResponse}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('XhrResponse', function() {\n                return new XhrResponse(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IXhrResponse\n     * @property {string} path\n     * @property {function(Ajax)} response Response mock function\n     * @property {function(Ajax)} test? This will be executed to determine, whether this mock is applicable\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(18),\n        Observable = __webpack_require__(15).Class,\n        Log = __webpack_require__(17),\n        forcedTokenType = 'forced';\n\n    /**\n     * @typedef {Object} PlatformAuthInfo\n     * @property {string} token_type\n     * @property {string} access_token\n     * @property {string} expires_in\n     * @property {int} expireTime\n     * @property {string} refresh_token\n     * @property {string} refresh_token_expires_in\n     * @property {int} refreshExpireTime\n     * @property {string} scope\n     */\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Platform\n     * @param {Context} context\n     */\n    function Platform(context) {\n        Observable.call(this);\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = 10 * 60; // 10 minutes\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        /** @type {Promise} */\n        this.refreshPromise = null;\n        this.context = context;\n    }\n\n    Platform.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Platform.prototype, 'constructor', {value: Platform, enumerable: false});\n\n    Platform.prototype.cacheId = 'platform';\n\n    Platform.prototype.pollInterval = 250;\n\n    Platform.prototype.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n\n    Platform.prototype.events = {\n        accessViolation: 'accessViolation',\n        logoutSuccess: 'logoutSuccess',\n        logoutError: 'logoutError',\n        authorizeSuccess: 'authorizeSuccess',\n        authorizeError: 'authorizeError',\n        refreshSuccess: 'refreshSuccess',\n        refreshError: 'refreshError'\n    };\n\n    /**\n     * @returns {Cache}\n     */\n    Platform.prototype.getStorage = function() {\n\n        return __webpack_require__(11).$get(this.context);\n\n    };\n\n    /**\n     * @returns {Ajax}\n     */\n    Platform.prototype.getAjax = function() {\n\n        return __webpack_require__(7).$get(this.context);\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.clearStorage = function() {\n\n        this.getStorage().clean();\n\n        return this;\n\n    };\n\n    /**\n     * @param {boolean} [remember]\n     * @returns {Platform|boolean}\n     */\n    Platform.prototype.remember = function(remember) {\n\n        var key = this.cacheId + '-remember';\n\n        if (remember !== undefined) {\n\n            this.getStorage().setItem(key, remember);\n            return this;\n\n        }\n\n        return this.getStorage().getItem(key) || false;\n\n    };\n\n    /**\n     * @param {string} options.username\n     * @param {string} options.password\n     * @param {string} [options.extension]\n     * @param {boolean} [options.remember]\n     * @returns {Promise}\n     */\n    Platform.prototype.authorize = function(options) {\n\n        options = options || {};\n\n        options.remember = options.remember || false;\n\n        return this\n            .authCall({\n                url: '/restapi/oauth/token',\n                post: {\n                    \"grant_type\": \"password\",\n                    \"username\": options.username,\n                    \"extension\": options.extension || '',\n                    \"password\": options.password,\n                    \"access_token_ttl\": this.accessTokenTtl,\n                    \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                }\n            })\n            .then(function(ajax) {\n\n                this.setCache(ajax.data)\n                    .remember(options.remember)\n                    .emitAndCallback(this.events.authorizeSuccess, []);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.clearStorage()\n                    .emitAndCallback(this.events.authorizeError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Platform.prototype.isPaused = function() {\n        var storage = this.getStorage(),\n            cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n\n    Platform.prototype.pause = function() {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function() {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n\n    /**\n     * Gets resolved into Ajax or null if refresh resolved from elsewhere\n     * @returns {Promise}\n     */\n    Platform.prototype.refresh = function() {\n\n        var refresh = new (this.context.getPromise())(function(resolve, reject) {\n\n            if (this.isPaused()) {\n                return resolve(this.refreshPolling(null));\n            } else {\n                this.pause();\n            }\n\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function() {\n\n                var authData = this.getAuthData();\n\n                Log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n\n                if (!authData || !authData.refresh_token) return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime) return reject(new Error('Refresh token has expired'));\n                if (!this.isPaused()) return reject(new Error('Queue was resumed before refresh call'));\n\n                resolve(this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": this.accessTokenTtl,\n                        \"refresh_token_ttl\": this.remember() ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                    }\n                }));\n\n            }.bind(this), this.refreshDelayMs);\n\n        }.bind(this));\n\n        return refresh\n            .then(function(ajax) {\n\n                // This means refresh has happened elsewhere and we are here because of timeout\n                if (!ajax || !ajax.data) return ajax;\n\n                Log.info('Platform.refresh(): Token was refreshed');\n\n                if (!ajax.data.refresh_token || !ajax.data.access_token) {\n                    var e = new Error('Malformed OAuth response');\n                    e.ajax = ajax;\n                    throw e;\n                }\n\n                this.setCache(ajax.data)\n                    .resume();\n\n                return ajax;\n\n            }.bind(this))\n            .then(function(result) {\n\n                this.emit(this.events.refreshSuccess, result);\n                return result;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                if (this.clearCacheOnRefreshError) this.clearStorage();\n\n                this.emitAndCallback(this.events.accessViolation, [e])\n                    .emitAndCallback(this.events.refreshError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function() {\n\n        this.pause();\n\n        return this\n            .authCall({\n                url: '/restapi/oauth/revoke',\n                get: {\n                    token: this.getToken()\n                }\n            })\n            .then(function(ajax) {\n\n                this.resume()\n                    .clearStorage()\n                    .emit(this.events.logoutSuccess, ajax);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.resume()\n                    .emitAndCallback(this.events.accessViolation, [e])\n                    .emitAndCallback(this.events.logoutError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Platform.prototype.refreshPolling = function(result) {\n\n        if (this.refreshPromise) return this.refreshPromise;\n\n        this.refreshPromise = new (this.context.getPromise())(function(resolve, reject) {\n\n            Log.warn('Platform.refresh(): Refresh is already in progress polling started');\n\n            Utils.poll(function(next) {\n\n                if (this.isPaused()) return next();\n\n                this.refreshPromise = null;\n                this.resume();\n\n                if (this.isTokenValid()) {\n                    resolve(result);\n                } else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n\n            }.bind(this), this.pollInterval);\n\n        }.bind(this));\n\n        return this.refreshPromise;\n\n    };\n\n    Platform.prototype.getToken = function() {\n\n        return this.getAuthData().access_token;\n\n    };\n\n    Platform.prototype.getTokenType = function() {\n\n        return this.getAuthData().token_type;\n\n    };\n\n    /**\n     * @returns {PlatformAuthInfo}\n     */\n    Platform.prototype.getAuthData = function() {\n\n        return this.getStorage().getItem(this.cacheId) || {\n                token_type: '',\n                access_token: '',\n                expires_in: 0,\n                refresh_token: '',\n                refresh_token_expires_in: 0\n            };\n\n    };\n\n    /**\n     * Check if there is a valid (not expired) access token\n     * @returns {boolean}\n     */\n    Platform.prototype.isTokenValid = function() {\n\n        var authData = this.getAuthData();\n        return (authData.token_type == forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n\n    };\n\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     * @returns {Promise}\n     */\n    Platform.prototype.isAuthorized = function() {\n\n        if (this.isTokenValid()) return this.context.getPromise().resolve(true);\n        return this.refresh();\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.cancelAccessToken = function() {\n\n        return this.setCache(Utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n\n    };\n\n    /**\n     * @param {object} authData\n     * @returns {Platform}\n     */\n    Platform.prototype.setCache = function(authData) {\n\n        var oldAuthData = this.getAuthData();\n\n        Log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n\n        this.getStorage().setItem(this.cacheId, authData);\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.forceAuthentication = function() {\n\n        this.setCache({\n            token_type: forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n\n        return this;\n\n    };\n\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.apiCall = function(options) {\n\n        options = options || {};\n        options.url = this.apiUrl(options.url, {addServer: true});\n\n        return this\n            .isAuthorized() // Refresh will occur inside\n            .then(function() {\n\n                var token = this.getToken();\n\n                return this.getAjax()\n                    .setOptions(options)\n                    .setRequestHeader('Authorization', this.getTokenType() + (token ? ' ' + token : ''))\n                    .send();\n\n            }.bind(this))\n            .catch(function(e) {\n\n                if (!e.ajax || !e.ajax.isResponseUnauthorized()) throw e;\n\n                this.cancelAccessToken();\n\n                return this\n                    .refresh()\n                    .then(function() {\n\n                        // Re-send with same options\n                        return this.apiCall(options);\n\n                    }.bind(this));\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.authCall = function(options) {\n\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.post = Utils.queryStringify(options.post);\n        options.url = this.apiUrl(options.url, {addServer: true});\n\n        return this.getAjax()\n            .setOptions(options)\n            .setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setRequestHeader('Accept', 'application/json')\n            .setRequestHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n\n    };\n\n    /**\n     *\n     * @param url\n     * @param {{addMethod?: string, addToken?: boolean, addServer?: boolean}} [options]\n     * @returns {string}\n     */\n    Platform.prototype.apiUrl = function(url, options) {\n\n        url = url || '';\n        options = options || {};\n\n        var builtUrl = '';\n\n        if (options.addServer && url.indexOf('http://') == -1 && url.indexOf('https://') == -1) builtUrl += this.server;\n\n        if (url.indexOf(this.urlPrefix) == -1) builtUrl += this.urlPrefix + '/' + this.apiVersion;\n\n        if (url.indexOf(this.accountPrefix) > -1) builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n\n        builtUrl += url;\n\n        if (options.addMethod || options.addToken) builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n\n        if (options.addMethod) builtUrl += '_method=' + options.addMethod;\n        if (options.addToken) builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n\n        return builtUrl;\n\n    };\n\n    module.exports = {\n        Class: Platform,\n        /**\n         * @param {Context} context\n         * @returns {Platform}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('Platform', function() {\n                return new Platform(context);\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = __webpack_require__(15).Class,\n        Utils = __webpack_require__(18);\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Cache\n     * @param {Context} context\n     */\n    function Cache(context) {\n        Observable.call(this);\n        this.prefix = 'rc-';\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n\n    Cache.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Cache.prototype, 'constructor', {value: Cache, enumerable: false});\n\n    Cache.prototype.prefixKey = function(key) {\n        return this.prefix + key;\n    };\n\n    Cache.prototype.setItem = function(key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n\n    Cache.prototype.removeItem = function(key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n\n    Cache.prototype.getItem = function(key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item) return null;\n        return JSON.parse(item);\n    };\n\n    Cache.prototype.clean = function() {\n\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key)) continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n\n        return this;\n\n    };\n\n    module.exports = {\n        Class: Cache,\n        /**\n         * @param {Context} context\n         * @returns {Cache}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('Cache', function() {\n                return new Cache(context);\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = __webpack_require__(15).Class,\n        Log = __webpack_require__(17),\n        Utils = __webpack_require__(18),\n        renewHandicapMs = 60 * 1000;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Subscription\n     * @param {Context} context\n     */\n    function Subscription(context) {\n        Observable.call(this);\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '', // 2014-03-12T19:54:35.613Z\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '', // 2014-03-12T19:54:35.613Z\n            status: '', // Active\n            uri: ''\n        };\n        /** @type {PUBNUB} */\n        this.pubnub = null;\n        this.context = context;\n    }\n\n    Subscription.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Subscription.prototype, 'constructor', {value: Subscription, enumerable: false});\n\n    Subscription.prototype.events = {\n        notification: 'notification',\n        removeSuccess: 'removeSuccess',\n        removeError: 'removeError',\n        renewSuccess: 'renewSuccess',\n        renewError: 'renewError',\n        subscribeSuccess: 'subscribeSuccess',\n        subscribeError: 'subscribeError'\n    };\n\n    /**\n     * @returns {PUBNUB}\n     */\n    Subscription.prototype.getPubnub = function() {\n\n        return this.context.getPubnub();\n\n    };\n\n    Subscription.prototype.getCrypto = function() {\n\n        return this.context.getCryptoJS();\n\n    };\n\n    Subscription.prototype.getPlatform = function() {\n\n        return __webpack_require__(10).$get(this.context);\n\n    };\n\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function(options) {\n\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        } else {\n            return this.subscribe(options);\n        }\n\n    };\n\n    Subscription.prototype.addEvents = function(events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n\n    Subscription.prototype.setEvents = function(events) {\n        this.eventFilters = events;\n        return this;\n    };\n\n    Subscription.prototype.getFullEventFilters = function() {\n\n        return this.eventFilters.map(function(event) {\n            return this.getPlatform().apiUrl(event);\n        }.bind(this));\n\n    };\n\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.subscribe = function(options) {\n\n        options = options || {};\n        if (options.events) this.eventFilters = options.events;\n\n        this.clearTimeout();\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.eventFilters || !this.eventFilters.length) throw new Error('Events are undefined');\n\n                resolve(this.getPlatform().apiCall({\n                    method: 'POST',\n                    url: '/restapi/v1.0/subscription',\n                    post: {\n                        eventFilters: this.getFullEventFilters(),\n                        deliveryMode: {\n                            transportType: 'PubNub'\n                        }\n                    }\n                }));\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.updateSubscription(ajax.data)\n                    .subscribeAtPubnub()\n                    .emit(this.events.subscribeSuccess, ajax.data);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.unsubscribe()\n                    .emit(this.events.subscribeError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.renew = function(options) {\n\n        options = options || {};\n        if (options.events) this.eventFilters = options.events;\n\n        this.clearTimeout();\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.subscription || !this.subscription.id) throw new Error('Subscription ID is required');\n                if (!this.eventFilters || !this.eventFilters.length) throw new Error('Events are undefined');\n\n                resolve();\n\n            }.bind(this))\n            .then(function() {\n\n                return this.getPlatform().apiCall({\n                    method: 'PUT',\n                    url: '/restapi/v1.0/subscription/' + this.subscription.id,\n                    post: {\n                        eventFilters: this.getFullEventFilters()\n                    }\n                });\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.updateSubscription(ajax.data)\n                    .emit(this.events.renewSuccess, ajax.data);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.unsubscribe()\n                    .emit(this.events.renewError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @param {boolean} [options.async]\n     * @returns {Promise}\n     */\n    Subscription.prototype.remove = function(options) {\n\n        options = Utils.extend({\n            async: true\n        }, options);\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.subscription || !this.subscription.id) throw new Error('Subscription ID is required');\n\n                resolve(this.getPlatform().apiCall({\n                    async: !!options.async, // Warning! This is necessary because this method is used in beforeunload hook and has to be synchronous\n                    method: 'DELETE',\n                    url: '/restapi/v1.0/subscription/' + this.subscription.id\n                }));\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.unsubscribe()\n                    .emit(this.events.removeSuccess, ajax);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.emit(this.events.removeError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Subscription.prototype.destroy = function() {\n\n        this.unsubscribe();\n\n        Log.info('RC.core.Subscription: Destroyed');\n\n        return Observable.prototype.destroy.call(this);\n\n    };\n\n    Subscription.prototype.isSubscribed = function() {\n\n        return this.subscription &&\n               this.subscription.deliveryMode &&\n               this.subscription.deliveryMode.subscriberKey &&\n               this.subscription.deliveryMode.address;\n\n    };\n\n    /**\n     * @protected\n     */\n    Subscription.prototype.setTimeout = function() {\n\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - renewHandicapMs;\n\n        this.timeout = setTimeout(function() {\n\n            this.renew({});\n\n        }.bind(this), timeToExpiration);\n\n    };\n\n    /**\n     * @protected\n     */\n    Subscription.prototype.clearTimeout = function() {\n\n        clearTimeout(this.timeout);\n\n    };\n\n    /**\n     * Set new subscription info and re-create timeout\n     * @protected\n     * @param subscription\n     * @returns {Subscription}\n     */\n    Subscription.prototype.updateSubscription = function(subscription) {\n\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n\n    };\n\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     * @protected\n     * @returns {Subscription}\n     */\n    Subscription.prototype.unsubscribe = function() {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed()) this.pubnub.unsubscribe({channel: this.subscription.deliveryMode.address});\n        this.subscription = null;\n        return this;\n    };\n\n    /**\n     * @abstract\n     * @param {Object} message\n     * @returns {Subscription}\n     */\n    Subscription.prototype.notify = function(message) {\n\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n\n            var CryptoJS = this.getCrypto();\n\n            var key = CryptoJS.enc.Base64.parse(this.subscription.deliveryMode.encryptionKey);\n            var data = CryptoJS.enc.Base64.parse(message);\n            var decrypted = CryptoJS.AES.decrypt({ciphertext: data}, key, {mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7}).toString(CryptoJS.enc.Utf8);\n            message = JSON.parse(decrypted);\n\n        }\n\n        this.emit(this.events.notification, message);\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Subscription}\n     */\n    Subscription.prototype.subscribeAtPubnub = function() {\n\n        if (!this.isSubscribed()) return this;\n\n        var PUBNUB = this.getPubnub();\n\n        this.pubnub = PUBNUB.init({\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n\n        this.pubnub.ready();\n\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function(message, env, channel) {\n\n                Log.info('RC.core.Subscription: Incoming message', message);\n                this.notify(message);\n\n            }.bind(this),\n            connect: function() {\n                Log.info('RC.core.Subscription: PUBNUB connected');\n            }.bind(this)\n        });\n\n        return this;\n\n    };\n\n    module.exports = {\n        Class: Subscription,\n        /**\n         * @param {Context} context\n         * @returns {Subscription}\n         */\n        $get: function(context) {\n            return new Subscription(context);\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n * istanbul ignore next\n */\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n    'use strict';\n\n    var Observable = __webpack_require__(15).Class;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.PageVisibility\n     */\n    function PageVisibility() {\n\n        Observable.call(this);\n\n        var hidden = \"hidden\",\n            onchange = function(evt) {\n\n                evt = evt || window.event;\n\n                var v = 'visible',\n                    h = 'hidden',\n                    evtMap = {\n                        focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n                    };\n\n                this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n\n                this.emit(this.events.change, this.visible);\n\n            }.bind(this);\n\n        this.visible = true;\n\n        if (typeof document == 'undefined' || typeof window == 'undefined') return;\n\n        // Standards:\n\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        // IE 9 and lower:\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        // All others:\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n\n    }\n\n    PageVisibility.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(PageVisibility.prototype, 'constructor', {value: PageVisibility, enumerable: false});\n\n    PageVisibility.prototype.events = {\n        change: 'change'\n    };\n\n    PageVisibility.prototype.isVisible = function() {\n        return this.visible;\n    };\n\n    module.exports = {\n        Class: PageVisibility,\n        /**\n         * @param {Context} context\n         * @returns {PageVisibility}\n         */\n        $get: function(context) {\n            return new PageVisibility();\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(18);\n\n    /**\n     * @alias RCSDK.core.Helper\n     * @constructor\n     * @param {Context} context\n     */\n    function Helper(context) {\n        this.context = context;\n    }\n\n    Helper.prototype.defaultProperty = 'id';\n\n    /**\n     * @returns {Context}\n     */\n    Helper.prototype.getContext = function() {\n        return this.context;\n    };\n\n    /**\n     * @param {object} [options]\n     * @param {string} [id]\n     */\n    Helper.prototype.createUrl = function(options, id) {\n        return '';\n    };\n\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getId = function(object) {\n        return object && object[this.defaultProperty];\n    };\n\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {boolean}\n     */\n    Helper.prototype.isNew = function(object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {IHelperObject}\n     */\n    Helper.prototype.resetAsNew = function(object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getUri = function(object) {\n        return object && object.uri;\n    };\n\n    /**\n     * @param {Ajax} ajax\n     * @return {IHelperObject[]}\n     */\n    Helper.prototype.parseMultipartResponse = function(ajax) {\n\n        if (ajax.isResponseMultipart()) {\n\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function(result) {\n                return (!result.error);\n            }).map(function(result) {\n                return result.data;\n            });\n\n        } else { // Single ID\n\n            return [ajax.data];\n\n        }\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} [object]\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.loadRequest = function(object, options) {\n\n        return Utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.saveRequest = function(object, options) {\n\n        if (!object && !(options && options.post)) throw new Error('No Object');\n\n        return Utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            post: (options && options.post) || object\n        });\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.deleteRequest = function(object, options) {\n\n        options = options || {};\n\n        if (!this.getUri(object) && !(options && options.url)) throw new Error('Object has to be not new or URL must be provided');\n\n        return Utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n\n    };\n\n    /**\n     * If no url was provided, default SYNC url will be returned\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.syncRequest = function(options) {\n\n        options = options || {};\n\n        options.url = options.url || this.createUrl({sync: true});\n        options.get = options.get || {};\n\n        if (!!options.get.syncToken) {\n            options.get = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        } else {\n            options.get.syncType = 'FSync';\n        }\n\n        return options;\n\n    };\n\n    Helper.prototype.nextPageExists = function(data) {\n\n        return (data && data.navigation && ('nextPage' in data.navigation));\n\n    };\n\n    /**\n     * @param {IHelperObject[]} array - an array to be indexed\n     * @param {function(object)} [getIdFn] - must return an ID for each array item\n     * @param {boolean} [gather] - if true, then each index will have an array of items, that has same ID, otherwise the first indexed item wins\n     * @returns {*}\n     */\n    Helper.prototype.index = function(array, getIdFn, gather) {\n\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n\n        return array.reduce(function(index, item) {\n\n            var id = getIdFn(item);\n\n            if (!id || (index[id] && !gather)) return index;\n\n            if (gather) {\n                if (!index[id]) index[id] = [];\n                index[id].push(item);\n            } else {\n                index[id] = item;\n            }\n\n            return index;\n\n        }, {});\n\n    };\n\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * @param {IHelperObject[]} target\n     * @param {IHelperObject[]} supplement\n     * @param {function(IHelperObject)} [getIdFn]\n     * @param {boolean} [mergeItems] - if true, properties of _supplement_ item will be applied to _target_ item, otherwise _target_ item will be replaced\n     * @returns {*}\n     */\n    Helper.prototype.merge = function(target, supplement, getIdFn, mergeItems) {\n\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n\n        var supplementIndex = this.index(supplement, getIdFn),\n            updatedIDs = [];\n\n        var result = target.map(function(item) {\n\n            var id = getIdFn(item),\n                newItem = supplementIndex[id];\n\n            if (newItem) updatedIDs.push(id);\n\n            return newItem ? (mergeItems ? Utils.extend(item, newItem) : newItem) : item;\n\n        });\n\n        supplement.forEach(function(item) {\n\n            if (updatedIDs.indexOf(getIdFn(item)) == -1) result.push(item);\n\n        });\n\n        return result;\n\n    };\n\n    module.exports = {\n        Class: Helper,\n        /**\n         * @param {Context} context\n         * @returns {Helper}\n         */\n        $get: function(context) {\n            return new Helper(context);\n        }\n    };\n\n    /**\n     * @typedef {object} IHelperObject\n     * @property {string} id\n     * @property {string} uri\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    var Utils = __webpack_require__(18),\n        Log = __webpack_require__(17);\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.Observable\n     */\n    function Observable() {\n        if (!(this instanceof Observable)) throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', {value: {}, enumerable: false, writable: true});\n        Object.defineProperty(this, 'oneTimeEvents', {value: {}, enumerable: false, writable: true});\n        Object.defineProperty(this, 'oneTimeArguments', {value: {}, enumerable: false, writable: true});\n    }\n\n    // Object.create({}) is not needed\n    // Do not put Object or Function.prototype instead of {}, otherwise all instances will get non-writable 'name' property\n    // Observable.prototype = {};\n    Object.defineProperty(Observable.prototype, 'constructor', {value: Observable, enumerable: false});\n\n    Observable.prototype.hasListeners = function(event) {\n        return (event in this.listeners);\n    };\n\n    Observable.prototype.registerOneTimeEvent = function(event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n\n    Observable.prototype.on = function(events, callback) {\n\n        if (typeof events == 'string') events = [events];\n        if (!events) throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function') throw new Error('Callback must be a function');\n\n        var self = this;\n\n        events.forEach(function(event) {\n\n            if (!self.hasListeners(event)) self.listeners[event] = [];\n\n            self.listeners[event].push(callback);\n\n            if (self.isOneTimeEventFired(event)) { // Fire listener immediately if is inited already\n                Log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n\n        });\n\n        return this;\n\n    };\n\n    Observable.prototype.emit = function(event) {\n\n        if (this.isOneTimeEventFired(event)) {\n            Log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n\n        var self = this,\n            args = Utils.argumentsToArray(arguments).splice(1),\n            result = null;\n\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n\n        if (!this.hasListeners(event)) return null;\n\n        this.listeners[event].some(function(callback) {\n\n            result = callback.apply(self, args);\n            return (result === false);\n\n        });\n\n        return result;\n\n    };\n\n    Observable.prototype.off = function(event, callback) {\n        var self = this;\n        if (!callback) {\n            delete this.listeners[event];\n        } else {\n            if (!this.hasListeners(event)) return this;\n            this.listeners[event].forEach(function(cb, i) {\n\n                if (cb === callback) delete self.listeners[event][i];\n\n            });\n        }\n        return this;\n    };\n\n    Observable.prototype.isOneTimeEvent = function(event) {\n        return (event in this.oneTimeEvents);\n    };\n\n    Observable.prototype.isOneTimeEventFired = function(event) {\n        if (!this.isOneTimeEvent(event)) return false;\n        return (this.oneTimeEvents[event]);\n    };\n\n    Observable.prototype.setOneTimeEventFired = function(event) {\n        this.oneTimeEvents[event] = true;\n    };\n\n    Observable.prototype.setOneTimeEventArgumens = function(event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n\n    Observable.prototype.getOneTimeEventArgumens = function(event) {\n        return this.oneTimeArguments[event];\n    };\n\n    Observable.prototype.offAll = function() {\n        this.listeners = {};\n        this.oneTimeEvents = {};\n        this.oneTimeArguments = {};\n    };\n\n    Observable.prototype.destroy = function() {\n        this.offAll();\n        Log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n\n    /**\n     * @param {string} event\n     * @param {Array} args\n     * @param {function} [callback]\n     */\n    Observable.prototype.emitAndCallback = function(event, args, callback) {\n        args = Utils.argumentsToArray(args);\n        if (event) this.emit.apply(this, [event].concat(args));\n        if (callback) callback.apply(this, args);\n        return this;\n    };\n\n    module.exports = {\n        Class: Observable,\n        /**\n         * @param {Context} context\n         * @returns {Observable}\n         */\n        $get: function(context) {\n            return new Observable(context);\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(18);\n\n    /**\n     * @typedef {object} IValidator\n     * @property {string} field\n     * @property {function} validator\n     */\n\n    /**\n     * @typedef {object} IValidatorResult\n     * @property {boolean} isValid\n     * @property {Object.<number, Error[]>} errors\n     */\n\n    /**\n     * @alias RCSDK.core.Validator\n     * @name Validator\n     */\n    var Validator = module.exports = {\n        /**\n         * @param {IValidator[]} validators\n         * @returns {IValidatorResult}\n         */\n        validate: function(validators) {\n\n            /** @type {IValidatorResult} */\n            var result = {\n                errors: {},\n                isValid: true\n            };\n\n            result.errors = validators.reduce(function(errors, validator) {\n\n                var res = validator.validator();\n\n                if (res.length > 0) {\n                    result.isValid = false;\n                    errors[validator.field] = errors[validator.field] || [];\n                    errors[validator.field] = errors[validator.field].concat(res);\n                }\n\n                return errors;\n\n            }, {});\n\n            return result;\n\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * @deprecated\n         * @param value\n         * @param multiple\n         * @returns {Function}\n         */\n        email: function(value, multiple) {\n            return function() {\n                if (!value) return [];\n                return Utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n            };\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * TODO International phone numbers\n         * @deprecated\n         * @param value\n         * @returns {Function}\n         */\n        phone: function(value) {\n            return function() {\n                if (!value) return [];\n                return Utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n            };\n        },\n        required: function(value) {\n            return function() {\n                return !value ? [new Error('Field is required')] : [];\n            };\n        },\n        length: function(value, max, min) {\n            return function() {\n\n                var errors = [];\n\n                if (!value) return errors;\n\n                value = value.toString();\n\n                if (min && value.length < min) errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n                if (max && value.length > max) errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n\n                return errors;\n\n            };\n        },\n        $get: function(context) {\n            return Validator;\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(18);\n\n    /**\n     * @alias RCSDK.core.Log\n     * @name Log\n     */\n    var Log = module.exports = {\n        logDebug: false,\n        logInfo: false,\n        logWarnings: false,\n        logErrors: false,\n        addTimestamps: true,\n        /** @type {Console} */\n        console: console || { // safety\n            log: function() {},\n            warn: function() {},\n            info: function() {},\n            error: function() {}\n        },\n        disableAll: function() {\n            this.logDebug = false;\n            this.logInfo = false;\n            this.logWarnings = false;\n            this.logErrors = false;\n        },\n        enableAll: function() {\n            this.logDebug = true;\n            this.logInfo = true;\n            this.logWarnings = true;\n            this.logErrors = true;\n        },\n        parseArguments: function(args) {\n            args = Utils.argumentsToArray(args);\n            if (this.addTimestamps) args.unshift(new Date().toLocaleString(), '-');\n            return args;\n        },\n        debug: function() {\n            if (this.logDebug) this.console.log.apply(this.console, this.parseArguments(arguments));\n        },\n        info: function() {\n            if (this.logInfo) this.console.info.apply(this.console, this.parseArguments(arguments));\n        },\n        warn: function() {\n            if (this.logWarnings) this.console.warn.apply(this.console, this.parseArguments(arguments));\n        },\n        error: function() {\n            if (this.logErrors) this.console.error.apply(this.console, this.parseArguments(arguments));\n        },\n        $get: function(context) {\n            return Log;\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var hasOwn = Object.prototype.hasOwnProperty,\n        toString = Object.prototype.toString,\n        rdigit = /\\d/,\n        class2type = {};\n\n    // Populate the class2type map\n    'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function(name) {\n        class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n    });\n\n    /**\n     * @alias RCSDK.core.Utils\n     * @name Utils\n     */\n    var Utils = module.exports = {\n\n        /**\n         * Ported from jQuery.fn.extend\n         * Optional first parameter makes deep copy\n         * @param {object} targetObject\n         * @param {object} sourceObject\n         * @returns {object}\n         */\n        extend: function extend(targetObject, sourceObject) {\n\n            var options, name, src, copy, copyIsArray, clone,\n                target = arguments[0] || {},\n                i = 1,\n                length = arguments.length,\n                deep = false;\n\n            // Handle a deep copy situation\n            if (typeof target === \"boolean\") {\n                deep = target;\n\n                // skip the boolean and the target\n                target = arguments[i] || {};\n                i++;\n            }\n\n            // Handle case when target is a string or something (possible in deep copy)\n            if (typeof target !== \"object\" && !this.isFunction(target)) {\n                target = {};\n            }\n\n            for (; i < length; i++) {\n\n                // Only deal with non-null/undefined values\n                if ((options = arguments[i]) !== null) {\n\n                    // Extend the base object\n                    for (name in options) {\n\n                        src = target[name];\n                        copy = options[name];\n\n                        // Prevent never-ending loop\n                        if (target === copy) {\n                            continue;\n                        }\n\n                        // Recurse if we're merging plain objects or arrays\n                        if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n\n                            if (copyIsArray) {\n                                copyIsArray = false;\n                                clone = src && this.isArray(src) ? src : [];\n                            } else {\n                                clone = src && this.isPlainObject(src) ? src : {};\n                            }\n\n                            // Never move original objects, clone them\n                            target[name] = this.extend(deep, clone, copy);\n\n                            // Don't bring in undefined values\n                        } else if (copy !== undefined) {\n\n                            target[name] = copy;\n\n                        }\n                    }\n                }\n            }\n\n            // Return the modified object\n            return target;\n\n        },\n\n        forEach: function(object, cb) {\n\n            for (var i in object) {\n\n                if (!object.hasOwnProperty(i)) continue;\n\n                var res = cb(object[i], i);\n\n                if (res === false) break;\n\n            }\n\n        },\n\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n         * @param {object} parameters\n         * @returns {string}\n         */\n        queryStringify: function(parameters) {\n\n            var array = [],\n                self = this;\n\n            this.forEach(parameters, function(v, i) {\n\n                if (self.isArray(v)) {\n                    v.forEach(function(vv) {\n                        array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                    });\n                } else {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n                }\n\n            });\n\n            return array.join('&');\n\n        },\n\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n         * @param {string} queryString\n         * @returns {object}\n         */\n        parseQueryString: function(queryString) {\n\n            var argsParsed = {},\n                self = this;\n\n            queryString.split('&').forEach(function(arg) {\n\n                arg = decodeURIComponent(arg);\n\n                if (arg.indexOf('=') == -1) {\n\n                    argsParsed[arg.trim()] = true;\n\n                } else {\n\n                    var pair = arg.split('='),\n                        key = pair[0].trim(),\n                        value = pair[1].trim();\n\n                    if (key in argsParsed) {\n                        if (key in argsParsed && !self.isArray(argsParsed[key])) argsParsed[key] = [argsParsed[key]];\n                        argsParsed[key].push(value);\n                    } else {\n                        argsParsed[key] = value;\n                    }\n\n                }\n\n            });\n\n            return argsParsed;\n\n        },\n\n        /**\n         * Returns true if the passed value is valid email address.\n         * @param {string} v\n         * @param {boolean} multiple Checks multiple comma separated emails according to RFC 2822\n         * @returns {boolean}\n         */\n        isEmail: function(v, multiple) {\n            if (!!multiple) {\n                //this Regexp is also suitable for multiple emails (comma separated)\n                return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n            } else {\n                return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n            }\n\n        },\n\n        isPhoneNumber: function(v) {\n            return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n        },\n\n        /**\n         * @param args\n         * @returns {Array}\n         */\n        argumentsToArray: function(args) {\n            return Array.prototype.slice.call(args || [], 0);\n        },\n\n        isDate: function(obj) {\n            return this.type(obj) === \"date\";\n        },\n\n        isFunction: function(obj) {\n            return this.type(obj) === \"function\";\n        },\n\n        isArray: Array.isArray || function(obj) {\n            return this.type(obj) === \"array\";\n        },\n\n        // A crude way of determining if an object is a window\n        isWindow: function(obj) {\n            return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n        },\n\n        isNaN: function(obj) {\n            return obj === null || !rdigit.test(obj) || isNaN(obj);\n        },\n\n        type: function(obj) {\n            return obj === null ?\n                   String(obj) :\n                   class2type[toString.call(obj)] || \"object\";\n        },\n\n        isPlainObject: function(obj) {\n            // Must be an Object.\n            // Because of IE, we also have to check the presence of the constructor property.\n            // Make sure that DOM nodes and window objects don't pass through, as well\n            if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n                return false;\n            }\n\n            // Not own constructor property must be Object\n            if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n                return false;\n            }\n\n            // Own properties are enumerated firstly, so to speed up,\n            // if last one is own, then all properties are own.\n\n            var key;\n            for (key in obj) {}\n\n            return key === undefined || hasOwn.call(obj, key);\n        },\n\n        getProperty: function(obj, property) {\n\n            return property\n                .split(/[.[\\]]/)\n                .reduce(function(res, part) {\n                    if (!res) return undefined;\n                    return part ? res[part] : res;\n                }, obj);\n\n        },\n\n        poll: function(fn, interval, timeout) {\n\n            this.stopPolling(timeout);\n\n            interval = interval || 1000;\n\n            var next = function(delay) {\n\n                delay = delay || interval;\n\n                interval = delay;\n\n                return setTimeout(function() {\n\n                    fn(next, delay);\n\n                }, delay);\n\n            };\n\n            return next();\n\n        },\n\n        stopPolling: function(timeout) {\n            if (timeout) clearTimeout(timeout);\n        },\n\n        parseString: function(s) {\n            return s ? s.toString() : '';\n        },\n\n        parseNumber: function(n) {\n            if (!n) return 0;\n            n = parseFloat(n);\n            return isNaN(n) ? 0 : n;\n        },\n\n        $get: function(context) {\n            return Utils;\n        }\n\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(18);\n\n    /**\n     * @alias RCSDK.core.List\n     * @name List\n     */\n    var List = module.exports = {\n\n        /**\n         * @param {string} property\n         * @returns {function(object)}\n         */\n        propertyExtractor: function(property) {\n            return function(item, options) {\n                return property ? ((item && item[property]) || null) : item;\n            };\n        },\n\n        /**\n         * Non-string types are converted to string\n         * Non-string types are extracted as an empty string if they could be converted to false\n         * If no options.sortBy given the item itself is extracted\n         * Compares strings:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {string} a\n         * @param {string} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        stringComparator: function(a, b, options) {\n\n            return Utils.parseString(a).localeCompare(Utils.parseString(b));\n\n        },\n\n        /**\n         * Non-numeric types are extracted as 0 if they could be converted to false\n         * Objects that could not be converted to number are extracted as 0\n         * If no options.sortBy given the item itself is extracted\n         * See parseFloat for more info\n         * Compares numbers:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Function does not check types\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {number} a\n         * @param {number} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        numberComparator: function(a, b, options) {\n\n            return (Utils.parseNumber(a) - Utils.parseNumber(b));\n\n        },\n\n        /**\n         * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n         * compare function (_compareFn_ option, by default Helper.stringComparator)\n         * Merged options are provided to _extractFn_ and _compareFn_\n         * TODO Check memory leaks for all that options links\n         * @param {IListComparatorOptions} [options]\n         * @returns {function(object, object)}\n         */\n        comparator: function(options) {\n\n            options = Utils.extend({\n                extractFn: this.propertyExtractor((options && options.sortBy) || null),\n                compareFn: this.stringComparator\n            }, options);\n\n            /**\n             * @param {object} item1\n             * @param {object} item2\n             * @returns {number}\n             */\n            function comparator(item1, item2) {\n\n                return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n\n            }\n\n            return comparator;\n\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        equalsFilter: function(obj, options) {\n            return (options.condition === obj);\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        containsFilter: function(obj, options) {\n            return (obj && obj.toString().indexOf(options.condition) > -1);\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options - `condition` must be an instance of RegExp\n         * @returns {boolean}\n         */\n        regexpFilter: function(obj, options) {\n            if (!(options.condition instanceof RegExp)) throw new Error('Condition must be an instance of RegExp');\n            return (options.condition.test(obj));\n        },\n\n        /**\n         * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n         * compare function (`filterFn` option, by default Helper.equalsFilter)\n         * Merged options are provided to `extractFn` and `compareFn`\n         * Set `filterBy` to null to force `propertyExtractor` to return object itself\n         * TODO Check memory leaks for all that options links\n         * @param {IListFilterOptions[]} [filterConfigs]\n         * @returns {function(object)}\n         */\n        filter: function(filterConfigs) {\n\n            var self = this;\n\n            filterConfigs = (filterConfigs || []).map(function(opt) {\n\n                return Utils.extend({\n                    condition: '',\n                    extractFn: self.propertyExtractor((opt && opt.filterBy) || null),\n                    filterFn: self.equalsFilter\n                }, opt);\n\n            });\n\n            /**\n             * @param {object} item\n             * @returns {boolean}\n             */\n            function filter(item) {\n\n                return filterConfigs.reduce(function(pass, opt) {\n\n                    if (!pass || !opt.condition) return pass;\n                    return opt.filterFn(opt.extractFn(item, opt), opt);\n\n                }, true);\n\n            }\n\n            return filter;\n\n        },\n\n        $get: function(context) {\n            return List;\n        }\n\n    };\n\n    /**\n     * @typedef {object} IListComparatorOptions\n     * @property {string} sortBy\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} compareFn\n     */\n\n    /**\n     * @typedef {object} IListFilterOptions\n     * @property {string} filterBy\n     * @property {object} condition\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} filterFn\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CountryHelper(context) {\n        Helper.call(this, context);\n    }\n\n    CountryHelper.prototype = Object.create(Helper.prototype);\n\n    CountryHelper.prototype.createUrl = function() {\n        return '/dictionary/country';\n    };\n\n    module.exports = {\n        Class: CountryHelper,\n        /**\n         * @param {Context} context\n         * @returns {CountryHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('CountryHelper', function() {\n                return new CountryHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ICountry\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} callingCode\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceModelHelper(context) {\n        Helper.call(this, context);\n    }\n\n    DeviceModelHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IDeviceModel} device\n     * @returns {string}\n     */\n    DeviceModelHelper.prototype.getId = function(device) {\n\n        if (!device) return null;\n\n        return device.id + (\n                device.addons && device.addons[0]\n                    ? '-' + device.addons[0].id + '-' + device.addons[0].count\n                    : ''\n            );\n\n    };\n\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     * @param {IDeviceModel} device\n     * @returns {IDeviceModel}\n     */\n    DeviceModelHelper.prototype.cleanForSaving = function(device) {\n\n        if (!device) return null;\n\n        delete device.name;\n        delete device.deviceClass;\n\n        if (device.addons && device.addons.length > 0) {\n\n            device.addons.forEach(function(addon, i) {\n                delete device.addons[i].name;\n            });\n\n        } else {\n\n            delete device.addons;\n\n        }\n\n        return device;\n\n    };\n\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n     * @type {IDeviceModel[]}\n     */\n    DeviceModelHelper.prototype.devices = [\n        {\n            id: '-1',\n            name: 'Softphone'\n        },\n        {\n            id: '0',\n            name: 'Existing device'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '23',\n            name: 'Polycom IP 321 Basic IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '30',\n            name: 'Polycom IP 550 HD Manager IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '37',\n            name: 'Polycom IP 6000 Conference Phone',\n            deviceClass: 'Conference Phone'\n        },\n        {\n            id: '40',\n            name: 'Polycom IP 335 HD IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '51',\n            name: 'Cisco SPA-303 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\tDesk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '3'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '52',\n            name: 'Cisco SPA-122 ATA',\n            deviceClass: 'Analog Adapter'\n        },\n        {\n            id: '53',\n            name: 'Polycom VVX-500 Color Touchscreen',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '54',\n            name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '55',\n            name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        }\n    ];\n\n    module.exports = {\n        Class: DeviceModelHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceModelHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('DeviceModelHelper', function() {\n                return new DeviceModelHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IDeviceModel\n     * @property {string} id\n     * @property {string} name\n     * @property {string} deviceClass\n     * @property {string} addons\n     */\n\n    /**\n     * @typedef {Object} IDeviceModelAddon\n     * @property {string} id\n     * @property {string} name\n     * @property {string} count\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LanguageHelper(context) {\n        Helper.call(this, context);\n    }\n\n    LanguageHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @type {ILanguage[]}\n     */\n    LanguageHelper.prototype.languages = [\n        {\n            id: '1033',\n            name: 'English (US)'\n        },\n        {\n            id: '3084',\n            name: 'French (Canada)'\n        }\n    ];\n\n    module.exports = {\n        Class: LanguageHelper,\n        /**\n         * @param {Context} context\n         * @returns {LanguageHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('LanguageHelper', function() {\n                return new LanguageHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ILanguage\n     * @property {string} id\n     * @property {string} name\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        List = __webpack_require__(19),\n        Utils = __webpack_require__(18);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LocationHelper(context) {\n        Helper.call(this, context);\n        this.state = __webpack_require__(25).$get(context);\n    }\n\n    LocationHelper.prototype = Object.create(Helper.prototype);\n\n    LocationHelper.prototype.createUrl = function() {\n        return '/dictionary/location';\n    };\n\n    /**\n     * @param {ILocationFilterOptions} options\n     * @returns {function(ILocation)}\n     */\n    LocationHelper.prototype.filter = function(options) {\n\n        var uniqueNPAs = [];\n\n        options = Utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.stateId,\n                filterFn: function(item, opts) {\n                    return (this.state.getId(item.state) == opts.condition);\n                }.bind(this)\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function(item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    } else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {comparator}\n     */\n    LocationHelper.prototype.comparator = function(options) {\n\n        options = Utils.extend({\n            sortBy: 'npa'\n        }, options);\n\n        if (options.sortBy == 'nxx') {\n\n            /**\n             * @param {ILocation} item\n             * @returns {number}\n             */\n            options.extractFn = function(item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n\n            options.compareFn = List.numberComparator;\n\n        }\n\n        return List.comparator(options);\n\n    };\n\n    module.exports = {\n        Class: LocationHelper,\n        /**\n         * @param {Context} context\n         * @returns {LocationHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('LocationHelper', function() {\n                return new LocationHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ILocation\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {IState} state\n     */\n\n    /**\n     * @typedef {object} ILocationFilterOptions\n     * @property {string} stateId\n     * @property {boolean} onlyUniqueNPA\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ShippingMethodHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ShippingMethodHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-3 id done\n     * @type {IShippingMethod[]}\n     */\n    ShippingMethodHelper.prototype.shippingMethods = [\n        {\n            id: '1',\n            name: 'Ground Shipping (5-7 business days)'\n        },\n        {\n            id: '2',\n            name: '2-days Shipping'\n        },\n        {\n            id: '3',\n            name: 'Overnight Shipping'\n        }\n    ];\n\n    module.exports = {\n        Class: ShippingMethodHelper,\n        /**\n         * @param {Context} context\n         * @returns {ShippingMethodHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ShippingMethodHelper', function() {\n                return new ShippingMethodHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IShippingMethod\n     * @property {string} id\n     * @property {string} name\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        List = __webpack_require__(19),\n        Utils = __webpack_require__(18);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function StateHelper(context) {\n        Helper.call(this, context);\n        this.countryHelper = __webpack_require__(20).$get(context);\n    }\n\n    StateHelper.prototype = Object.create(Helper.prototype);\n\n    StateHelper.prototype.createUrl = function() {\n        return '/dictionary/state';\n    };\n\n    /**\n     * @param {IStateOptions} options\n     * @returns {function(IState)}\n     */\n    StateHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            countryId: ''\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.countryId,\n                filterFn: function(item, opts) {\n                    return (this.countryHelper.getId(item.country) == opts.condition);\n                }.bind(this)\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: StateHelper,\n        /**\n         * @param {Context} context\n         * @returns {StateHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('StateHelper', function() {\n                return new StateHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IState\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {ICountry} country\n     */\n\n    /**\n     * @typedef {object} IStateOptions\n     * @property {string} countryId\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function TimezoneHelper(context) {\n        Helper.call(this, context);\n    }\n\n    TimezoneHelper.prototype = Object.create(Helper.prototype);\n\n    TimezoneHelper.prototype.createUrl = function() {\n        return '/dictionary/timezone';\n    };\n\n    module.exports = {\n        Class: TimezoneHelper,\n        /**\n         * @param {Context} context\n         * @returns {TimezoneHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('TimezoneHelper', function() {\n                return new TimezoneHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ITimezone\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} description\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function AccountHelper(context) {\n        Helper.call(this, context);\n    }\n\n    AccountHelper.prototype = Object.create(Helper.prototype);\n\n    AccountHelper.prototype.createUrl = function() {\n        return '/account/~';\n    };\n\n    module.exports = {\n        Class: AccountHelper,\n        /**\n         * @param {Context} context\n         * @returns {AccountHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('AccountHelper', function() {\n                return new AccountHelper(context);\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Validator = __webpack_require__(16);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function BlockedNumberHelper(context) {\n        Helper.call(this, context);\n    }\n\n    BlockedNumberHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     *\n     * @param {IBlockedNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    BlockedNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' +\n               (options.extensionId ? options.extensionId : '~') +\n               '/blocked-number' +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IBlockedNumber} item\n     */\n    BlockedNumberHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'phoneNumber', validator: Validator.phone(item.phoneNumber)},\n            {field: 'phoneNumber', validator: Validator.required(item.phoneNumber)},\n            {field: 'name', validator: Validator.required(item.name)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: BlockedNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {BlockedNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('BlockedNumberHelper', function() {\n                return new BlockedNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IBlockedNumber\n     * @property {string} name\n     * @property {string} phoneNumber\n     */\n\n    /**\n     * @typedef {object} IBlockedNumberOptions\n     * @property {string} extensionId\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Utils = __webpack_require__(18),\n        List = __webpack_require__(19);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CallHelper(context) {\n        Helper.call(this, context);\n        this.presence = __webpack_require__(38).$get(context);\n        this.contact = __webpack_require__(31).$get(context);\n    }\n\n    CallHelper.prototype = Object.create(Helper.prototype);\n\n\n    /**\n     * @param {ICallOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    CallHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (!('personal' in options) && !('extensionId' in options)) options.personal = true;\n\n        return '/account/~/' +\n               (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n               (options.active ? 'active-calls' : 'call-log') +\n               (id ? '/' + id : '');\n\n    };\n\n    CallHelper.prototype.getSessionId = function(call) {\n        return (call && call.sessionId);\n    };\n\n    CallHelper.prototype.isInProgress = function(call) {\n        return (call && call.result == 'In Progress');\n    };\n\n    CallHelper.prototype.isAlive = function(call) {\n        return (call && call.availability == 'Alive');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isInbound = function(call) {\n        return (call && call.direction == 'Inbound');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isOutbound = function(call) {\n        return !this.isInbound(call);\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isMissed = function(call) {\n        return (call && call.result == 'Missed');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isFindMe = function(call) {\n        return (call && call.action == 'FindMe');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo}\n     */\n    CallHelper.prototype.getCallerInfo = function(call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo[]}\n     */\n    CallHelper.prototype.getAllCallerInfos = function(call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n\n    CallHelper.prototype.formatDuration = function(call) {\n\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n\n        var duration = parseInt(call.duration),\n            hours = Math.floor(duration / (60 * 60)),\n            mins = Math.floor((duration % (60 * 60)) / 60),\n            secs = Math.floor(duration % 60);\n\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n\n    };\n\n    /**\n     * @param {ICallFilterOptions} [options]\n     * @returns {function(ICall)}\n     */\n    CallHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n\n        return List.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'type', condition: options.type}\n        ]);\n\n    };\n\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    CallHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'startTime'\n        }, options));\n\n    };\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     * @param {IContact[]} contacts\n     * @param {ICall[]} calls\n     * @param {IContactMatchOptions} [options]\n     */\n    CallHelper.prototype.attachContacts = function(contacts, calls, options) {\n\n        var self = this;\n\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function(callerInfos, call) {\n\n            return callerInfos.concat(self.getAllCallerInfos(call));\n\n        }, []);\n\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    };\n\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} options\n     * @returns {boolean}\n     */\n    CallHelper.prototype.checkMergeability = function(outboundRingOutCall, inboundCall, options) {\n\n        function getTime(dateString) {\n            return (new Date(dateString)).getTime();\n        }\n\n        return (\n        (!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n        // Check directions\n        outboundRingOutCall.direction == 'Outbound' &&\n        inboundCall.direction == 'Inbound' &&\n        // Check that start times are equal or close enough\n        ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n        // Check that numbers match\n        inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n        (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n\n    };\n\n    /**\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} [options]\n     * @returns {Array}\n     */\n    CallHelper.prototype.combineCalls = function(outboundRingOutCall, inboundCall, options) {\n\n        options = options || {};\n\n        var result = [];\n\n        outboundRingOutCall.hasSubsequent = true;\n\n        if (options.merge) {\n\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n\n        } else {\n\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n\n        }\n\n        return result;\n\n    };\n\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     *\n     * @param {ICall[]} calls\n     * @param {ICallProcessingOptions} options\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.processCalls = function(calls, options) {\n\n        var processedCalls = [],\n            callsToMerge = [],\n            self = this;\n\n        // Iterate through calls\n        calls.forEach(function(call) {\n\n            var merged = false;\n\n            call.subsequent = false;\n            call.hasSubsequent = false;\n\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function(secondCall) {\n\n                if (call === secondCall) return false;\n\n                if (self.checkMergeability(call, secondCall, options)) {\n\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n\n                    merged = true;\n\n                }\n\n                return merged;\n\n            });\n\n        });\n\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function(call) {\n\n            if (callsToMerge.indexOf(call) == -1) processedCalls.push(call);\n\n        });\n\n        return processedCalls;\n\n    };\n\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     * @param {IPresenceCall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.parsePresenceCalls = function(activeCalls) {\n\n        return activeCalls.map(function(activeCall) {\n\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: {phoneNumber: activeCall.from},\n                to: {phoneNumber: activeCall.to},\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n\n        }, this);\n\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {string}\n     */\n    CallHelper.prototype.getSignature = function(call) {\n\n        function cleanup(phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        }\n\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n\n    };\n\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {IPresence} presence\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergePresenceCalls = function(presenceCalls, presence) {\n\n        var currentDate = new Date(),\n\n            activeCalls = this\n                .parsePresenceCalls(presence && presence.activeCalls || [])\n                .map(function(call) {\n                    // delete property to make sure it is skipped during merge\n                    delete call.startTime;\n                    return call;\n                });\n\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n\n        presenceCalls.forEach(function(call) {\n            if (!call.startTime) call.startTime = currentDate.toISOString();\n        });\n\n        return presenceCalls;\n\n    };\n\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {ICall[]} calls\n     * @param {ICall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergeAll = function(presenceCalls, calls, activeCalls) {\n\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n\n    };\n\n    module.exports = {\n        Class: CallHelper,\n        /**\n         * @param {Context} context\n         * @returns {CallHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('CallHelper', function() {\n                return new CallHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ICall\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} sessionId\n     * @property {string} startTime\n     * @property {string} duration\n     * @property {string} type\n     * @property {string} direction\n     * @property {string} action\n     * @property {string} result\n     * @property {ICallerInfo} to\n     * @property {ICallerInfo} from\n     */\n\n    /**\n     * @typedef {object} ICallOptions\n     * @property {string} extensionId\n     * @property {boolean} active\n     * @property {boolean} personal\n     */\n\n    /**\n     * @typedef {object} ICallProcessingOptions\n     * @property {boolean} strict\n     * @property {boolean} merge\n     * @property {number} maxStartTimeDiscrepancy\n     */\n\n    /**\n     * @typedef {object} ICallFilterOptions\n     * @property {string} extensionId\n     * @property {string} direction\n     * @property {string} type\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/CallerInfo.html\n     * @typedef {Object} ICallerInfo\n     * @property {string} phoneNumber\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} location\n     * @property {IContact} [contact] - corresponding contact (added by attachContacts methods)\n     * @property {string} [contactPhone] - contact's phone as written in contact (added by attachContacts methods)\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ConferencingHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ConferencingHelper.prototype = Object.create(Helper.prototype);\n\n    ConferencingHelper.prototype.createUrl = function() {\n        return '/account/~/extension/~/conferencing';\n    };\n\n    module.exports = {\n        Class: ConferencingHelper,\n        /**\n         * @param {Context} context\n         * @returns {ConferencingHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ConferencingHelper', function() {\n                return new ConferencingHelper(context);\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(18),\n        Validator = __webpack_require__(16),\n        Helper = __webpack_require__(14).Class,\n        List = __webpack_require__(19);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ContactHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IContactOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ContactHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' +\n                   (options.extensionId ? options.extensionId : '~') +\n                   '/address-book';\n\n        if (options.sync) return root + '-sync';\n\n        return root +\n               (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * Returns all values of the given fields if value exists\n     * @param {(IContact|object)} where\n     * @param {Array} fields\n     * @param {boolean} [asHash]\n     * @protected\n     * @returns {Object}\n     */\n    ContactHelper.prototype.getFieldValues = function(where, fields, asHash) {\n\n        return fields.reduce(function(result, field) {\n\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                } else {\n                    result.push(where[field]);\n                }\n            }\n\n            return result;\n\n        }, asHash ? {} : []);\n\n    };\n\n    /**\n     * @param {IContact} contact\n     * @returns {string}\n     */\n    ContactHelper.prototype.getFullName = function(contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getEmails = function(contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getPhones = function(contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getFaxes = function(contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getAddresses = function(contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @returns {boolean}\n     */\n    ContactHelper.prototype.isAlive = function(contact) {\n        return (contact.availability == 'Alive');\n    };\n\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} string\n     * @param {IContactMatchOptions} [options]\n     * @returns {(string|null)}\n     */\n    ContactHelper.prototype.match = function(contact, string, options) {\n\n        options = Utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function(value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n\n        string = options.transformFn(string, options);\n\n        var found = null;\n\n        if (!string) return found;\n\n        function matchWith(value) {\n\n            // skip unnecessary cycles if match has been found\n            if (found) return;\n\n            var transformed = options.transformFn(value, options);\n\n            if (!transformed) return;\n\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n\n            if (match) found = value;\n\n        }\n\n        // Search in fields\n        options.fields.forEach(function(field) {\n            matchWith(contact[field]);\n        });\n\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found) this.addressFields.forEach(function(field) {\n\n            // skip unnecessary cycles if match has been found or no field value\n            if (!contact[field] || found) return;\n\n            this.addressSubFields.forEach(function(subField) {\n                matchWith(contact[field][subField]);\n            });\n\n        }, this);\n\n        return found;\n\n    };\n\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} phone\n     * @param {IContactMatchOptions} [options]\n     * @returns {string|null}\n     */\n    ContactHelper.prototype.matchAsPhone = function(contact, phone, options) {\n\n        return this.match(contact, phone, Utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function(value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n\n    };\n\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     * @param {ICallerInfo[]} callerInfos\n     * @param {IContact[]} contacts\n     * @param {IContactMatchOptions} [options]\n     */\n    ContactHelper.prototype.attachToCallerInfos = function(callerInfos, contacts, options) {\n\n        var self = this,\n            callerInfoIndex = this.index(callerInfos, function(callerInfo) { return callerInfo.phoneNumber; }, true);\n\n        Utils.forEach(callerInfoIndex, function(indexedCallerInfos, phoneNumber) {\n\n            var foundContact = null,\n                foundPhone = null;\n\n            contacts.some(function(contact) {\n\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n\n                if (foundPhone) foundContact = contact;\n\n                return foundPhone;\n\n            });\n\n            if (foundContact) {\n\n                indexedCallerInfos.forEach(function(callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n\n            }\n\n        });\n\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ContactHelper.prototype.comparator = function(options) {\n\n        var self = this;\n\n        return List.comparator(Utils.extend({\n            extractFn: function(contact, options) {\n                return self.getFullName(contact);\n            }\n        }, options));\n\n    };\n\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     * @param {IContactOptions} [options]\n     * @returns {function(IContact)}\n     */\n    ContactHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n\n        return List.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {condition: options.startsWith, filterFn: function(item, opts) { return self.match(item, opts.condition); }},\n            {condition: options.phonesOnly, filterFn: function(item, opts) { return (self.getPhones(item).length > 0); }},\n            {condition: options.faxesOnly, filterFn: function(item, opts) { return (self.getFaxes(item).length > 0); }}\n        ]);\n\n    };\n\n    /**\n     * @param {IContact} item\n     */\n    ContactHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'firstName', validator: Validator.required(item.firstName)},\n            {field: 'lastName', validator: Validator.required(item.lastName)},\n            {field: 'email', validator: Validator.email(item.email)},\n            {field: 'email2', validator: Validator.email(item.email2)},\n            {field: 'email3', validator: Validator.email(item.email3)}\n        ]);\n\n    };\n\n    ContactHelper.prototype.phoneFields = [\n        'homePhone',\n        'homePhone2',\n        'businessPhone',\n        'businessPhone2',\n        'mobilePhone',\n        'companyPhone',\n        'assistantPhone',\n        'carPhone',\n        'otherPhone',\n        'callbackPhone'\n    ];\n\n    ContactHelper.prototype.faxFields = [\n        'businessFax',\n        'otherFax'\n    ];\n\n    ContactHelper.prototype.addressFields = [\n        'homeAddress',\n        'businessAddress',\n        'otherAddress'\n    ];\n\n    ContactHelper.prototype.addressSubFields = [\n        'street',\n        'city',\n        'state',\n        'zip'\n    ];\n\n    ContactHelper.prototype.nameFields = [\n        'firstName',\n        'middleName',\n        'lastName',\n        'nickName'\n    ];\n\n    ContactHelper.prototype.otherFields = [\n        'company',\n        'jobTitle',\n        'webPage',\n        'notes'\n    ];\n\n    ContactHelper.prototype.emailFields = [\n        'email',\n        'email2',\n        'email3'\n    ];\n\n    module.exports = {\n        Class: ContactHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ContactHelper', function() {\n                return new ContactHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IContactOptions\n     * @property {string} extensionId\n     * @property {string} groupId\n     */\n\n    /**\n     * @typedef {object} IContactFilterOptions\n     * @property {string} startsWith\n     * @property {boolean} alive\n     */\n\n    /**\n     * @typedef {object} IContactMatchOptions\n     * @property {function(object, IContactMatchOptions)} transformFn\n     * @property {boolean} strict - if false look for as sub string\n     * @property {boolean} inAddresses - look in addresses as well\n     * @property {string[]} fields - in which fields to look for\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactAddressInfo\n     * @typedef {Object} IContactAddress\n     * @property {string} country\n     * @property {string} street\n     * @property {string} city\n     * @property {string} state\n     * @property {string} zip\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ContactInfo\n     * @typedef {Object} IContactBrief\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} email\n     * @property {IContactAddress} businessAddress\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactInfo\n     * @typedef {Object} IContact\n     *\n     * Shared:\n     * @property {string} id\n     * @property {string} uri\n     *\n     * Names:\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} nickName\n     * @property {string} middleName\n     *\n     * Emails:\n     * @property {string} email\n     * @property {string} email2\n     * @property {string} email3\n     *\n     * Addresses:\n     * @property {IContactAddress} businessAddress\n     * @property {IContactAddress} homeAddress\n     * @property {IContactAddress} otherAddress\n     *\n     * Phones:\n     * @property {string} homePhone\n     * @property {string} homePhone2\n     * @property {string} businessPhone\n     * @property {string} businessPhone2\n     * @property {string} mobilePhone\n     * @property {string} companyPhone\n     * @property {string} assistantPhone\n     * @property {string} carPhone\n     * @property {string} otherPhone\n     * @property {string} callbackPhone\n     *\n     * @property {string} businessFax\n     * @property {string} otherFax\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Validator = __webpack_require__(16);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactGroupHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ContactGroupHelper.prototype = Object.create(Helper.prototype);\n    ContactGroupHelper.prototype.createUrl = function(options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n\n    /**\n     * @param {IContactGroup} item\n     */\n    ContactGroupHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'groupName', validator: Validator.required(item && item.groupName)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: ContactGroupHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactGroupHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ContactGroupHelper', function() {\n                return new ContactGroupHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IContactGroup\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} notes\n     * @property {string} groupName\n     * @property {number} contactsCount\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Validator = __webpack_require__(16);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceHelper(context) {\n        Helper.call(this, context);\n        this.extension = __webpack_require__(34).$get(context);\n        this.deviceModel = __webpack_require__(21).$get(context);\n    }\n\n    DeviceHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IDeviceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    DeviceHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (options.order) return '/account/~/order';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/device' +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IDevice} item\n     */\n    DeviceHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'emergencyServiceAddress-street', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)},\n            {field: 'emergencyServiceAddress-city', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)},\n            {field: 'emergencyServiceAddress-state', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)},\n            {field: 'emergencyServiceAddress-country', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)},\n            {field: 'emergencyServiceAddress-zip', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)},\n            {field: 'emergencyServiceAddress-customerName', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)},\n            {field: 'extension', validator: Validator.required(this.extension.getId(item && item.extension))},\n            {field: 'model', validator: Validator.required(this.deviceModel.getId(item && item.model))}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: DeviceHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('DeviceHelper', function() {\n                return new DeviceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IDevice\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} type\n     * @property {string} name\n     * @property {string} serial\n     * @property {IDeviceModel} model\n     * @property {IExtensionShort} extension TODO IExtension?\n     * @property {IDeviceAddress} emergencyServiceAddress\n     * @property {IDeviceShipping} shipping\n     * @property {IDevicePhoneLine[]} phoneLines\n     */\n\n    /**\n     * @typedef {Object} IDeviceOrder\n     * @property {IDevice[]} devices\n     */\n\n    /**\n     * @typedef {Object} IDeviceAddress\n     * @property {string} street\n     * @property {string} street2\n     * @property {string} city\n     * @property {string} state\n     * @property {string} country\n     * @property {string} zip\n     * @property {string} customerName\n     */\n\n    /**\n     * @typedef {Object} IDeviceShipping\n     * @property {IDeviceAddress} address\n     * @property {IShippingMethod} method\n     * @property {string} status\n     */\n\n    /**\n     * @typedef {Object} IDevicePhoneLine\n     * @property {string} lineType\n     * @property {IPhoneNumber} phoneInfo\n     */\n\n    /**\n     * @typedef {Object} IDeviceOptions\n     * @property {string} extensionId\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        List = __webpack_require__(19),\n        Utils = __webpack_require__(18);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ExtensionHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ExtensionHelper.prototype = Object.create(Helper.prototype);\n\n    ExtensionHelper.prototype.type = {\n        department: 'Department',\n        user: 'User',\n        announcement: 'Announcement',\n        voicemail: 'Voicemail'\n    };\n\n    /**\n     *\n     * @param {IExtensionOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ExtensionHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~' +\n               (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isUser = function(extension) {\n        return extension && extension.type == this.type.user;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isDepartment = function(extension) {\n        return extension && extension.type == this.type.department;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isAnnouncement = function(extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isVoicemail = function(extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ExtensionHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: List.numberComparator\n        }, options));\n\n    };\n\n    /**\n     * @param {IExtensionFilterOptions} [options]\n     * @returns {function(IExtension)}\n     */\n    ExtensionHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            search: '',\n            type: ''\n        }, options);\n\n        return List.filter([\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: List.containsFilter,\n                extractFn: function(item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                           (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: ExtensionHelper,\n        /**\n         * @param {Context} context\n         * @returns {ExtensionHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ExtensionHelper', function() {\n                return new ExtensionHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IExtensionOptions\n     * @property {string} departmentId\n     */\n\n    /**\n     * @typedef {object} IExtensionFilterOptions\n     * @property {string} search\n     * @property {string} type\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ShortExtensionInfo\n     * @typedef {object} IExtensionShort\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ExtensionInfo\n     * @typedef {object} IExtension\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} type\n     * @property {IContactBrief} contact\n     * @property {IExtensionRegionalSettings} regionalSettings\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} status\n     * @property {string} setupWizardState\n     */\n\n    /**\n     * @typedef {object} IExtensionRegionalSettings\n     * @property {ITimezone} timezone\n     * @property {ILanguage} language\n     * @property {ICountry} homeCountry\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Utils = __webpack_require__(18),\n        List = __webpack_require__(19);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ForwardingNumberHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ForwardingNumberHelper.prototype = Object.create(Helper.prototype);\n\n\n    ForwardingNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n\n    };\n\n    ForwardingNumberHelper.prototype.getId = function(forwardingNumber) {\n        return forwardingNumber.id || (forwardingNumber.phoneNumber);\n    };\n\n    ForwardingNumberHelper.prototype.hasFeature = function(phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ForwardingNumberHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'label'\n        }, options));\n\n    };\n\n    /**\n     * @param options\n     * @returns {function(IForwardingNumber)}\n     */\n    ForwardingNumberHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            features: []\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.features.length, filterFn: function(item) {\n\n                return options.features.some(function(feature) {\n                    return self.hasFeature(item, feature);\n                });\n\n            }\n            }\n        ]);\n\n    };\n\n\n    module.exports = {\n        Class: ForwardingNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {ForwardingNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ForwardingNumberHelper', function() {\n                return new ForwardingNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     *\n     * @typedef {object} IForwardingNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} label\n     * @property {string} phoneNumber\n     * @property {string} flipNumber\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Validator = __webpack_require__(16),\n        Utils = __webpack_require__(18),\n        List = __webpack_require__(19);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function MessageHelper(context) {\n        Helper.call(this, context);\n        this.platform = __webpack_require__(10).$get(context);\n        this.contact = __webpack_require__(31).$get(context);\n    }\n\n    MessageHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     *\n     * @param {IMessageOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    MessageHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n\n        if (options.fax) return root + '/fax';\n        if (options.sms) return root + '/sms';\n        if (options.pager) return root + '/company-pager';\n        if (options.sync) return root + '/message-sync';\n\n        return root + '/message-store' + (id ? '/' + id : '');\n\n    };\n\n    MessageHelper.prototype.isInbound = function(message) {\n        return (message && message.direction == 'Inbound');\n    };\n\n    MessageHelper.prototype.isOutbound = function(message) {\n        return !this.isInbound(message);\n    };\n\n    MessageHelper.prototype.isSMS = function(message) {\n        return (message && message.type == 'SMS');\n    };\n\n    MessageHelper.prototype.isPager = function(message) {\n        return (message && message.type == 'Pager');\n    };\n\n    MessageHelper.prototype.isVoiceMail = function(message) {\n        return (message && message.type == 'VoiceMail');\n    };\n\n    MessageHelper.prototype.isFax = function(message) {\n        return (message && message.type == 'Fax');\n    };\n\n    MessageHelper.prototype.isAlive = function(message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n\n    MessageHelper.prototype.isRead = function(message) {\n        return (message.readStatus == 'Read');\n    };\n\n    MessageHelper.prototype.setIsRead = function(message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n\n    MessageHelper.prototype.getAttachmentUrl = function(message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {addMethod: 'GET', addServer: true, addToken: true}) : '';\n    };\n\n    MessageHelper.prototype.getAttachmentContentType = function(message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n\n    /**\n     * @returns {Subscription}\n     */\n    MessageHelper.prototype.getSubscription = function(options) {\n\n        return (__webpack_require__(12).$get(this.context)).setEvents([this.createUrl(options)]);\n\n    };\n\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getCallerInfos = function(message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getAllCallerInfos = function(message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    MessageHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n\n    };\n\n    /**\n     * @param {IMessageFilterOptions} [options]\n     * @returns {function(IMessage)}\n     */\n    MessageHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n\n        return List.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'type', condition: options.type},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'conversationId', condition: options.conversationId},\n            {filterBy: 'readStatus', condition: options.readStatus},\n            {filterBy: 'subject', condition: options.search, filterFn: List.containsFilter}\n        ]);\n\n    };\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     * @param {IContact[]} contacts\n     * @param {IMessage[]} messages\n     * @param {IContactMatchOptions} [options]\n     */\n    MessageHelper.prototype.attachContacts = function(contacts, messages, options) {\n\n        var self = this;\n\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function(callerInfos, message) {\n\n            return callerInfos.concat(self.getAllCallerInfos(message));\n\n        }, []);\n\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    };\n\n    /**\n     *\n     * @param message\n     * @returns {IMessageShort}\n     */\n    MessageHelper.prototype.shorten = function(message) {\n\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n\n    };\n\n\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validateSMS = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(Utils.getProperty(item, 'to[0].phoneNumber'))},\n            {field: 'from', validator: Validator.required(Utils.getProperty(item, 'from.phoneNumber'))},\n            {field: 'subject', validator: Validator.required(Utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: Validator.length(Utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    };\n\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validatePager = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(Utils.getProperty(item, 'to.extensionNumber'))},\n            {field: 'from', validator: Validator.required(Utils.getProperty(item, 'from.extensionNumber'))},\n            {field: 'subject', validator: Validator.required(Utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: Validator.length(Utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: MessageHelper,\n        /**\n         * @param {Context} context\n         * @returns {MessageHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('MessageHelper', function() {\n                return new MessageHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IMessage\n     * @property {string} id\n     * @property {string} uri\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} type\n     * @property {string} creationTime\n     * @property {string} readStatus\n     * @property {string} priority\n     * @property {IMessageAttachment} attachments\n     * @property {string} direction\n     * @property {string} availability\n     * @property {string} subject\n     * @property {string} messageStatus\n     * @property {string} conversationId\n     * @property {string} lastModifiedTime\n     */\n\n    /**\n     * @typedef {object} IMessageShort\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} text\n     */\n\n    /**\n     * @typedef {object} IMessageOptions\n     * @property {boolean} fax\n     * @property {boolean} sync\n     * @property {boolean} sms\n     * @property {boolean} pager\n     * @property {string} extensionId\n     */\n\n    /**\n     * @typedef {object} IMessageFilterOptions\n     * @property {boolean} alive\n     * @property {string} conversationId\n     * @property {string} direction\n     * @property {string} readStatus\n     * @property {string} type\n     */\n\n    /**\n     * @typedef {object} IMessageFaxAttachment\n     * @property {string} contentType\n     * @property {string} content\n     * @property {string} fileName\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch18s01.html#MessageAttachmentInfo\n     * @typedef {Object} IMessageAttachment\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} contentType\n     * @property {string} vmDuration\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var List = __webpack_require__(19),\n        Utils = __webpack_require__(18),\n        Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PhoneNumberHelper(context) {\n        Helper.call(this, context);\n        this.extension = __webpack_require__(34).$get(context);\n    }\n\n    PhoneNumberHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IPhoneNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PhoneNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (options.lookup) return '/number-pool/lookup';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/phone-number' +\n               (id ? '/' + id : '');\n\n    };\n\n    PhoneNumberHelper.prototype.isSMS = function(phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n\n    PhoneNumberHelper.prototype.hasFeature = function(phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n\n    PhoneNumberHelper.prototype.reserve = function(phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n\n    PhoneNumberHelper.prototype.unreserve = function(phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(IPhoneNumber, IPhoneNumber)}\n     */\n    PhoneNumberHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            /**\n             * @param {IPhoneNumber} item\n             * @returns {string}\n             */\n            extractFn: function(item) {\n                return item.usageType + '-' +\n                       item.paymentType + '-' +\n                       item.type;\n            }\n        }, options));\n\n    };\n\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     * @param {IPhoneNumberFilterOptions} options\n     * @returns {function(IForwardingNumber)}\n     */\n    PhoneNumberHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n\n        return List.filter([\n            {filterBy: 'usageType', condition: options.usageType},\n            {filterBy: 'paymentType', condition: options.paymentType},\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.features.length, filterFn: function(item) {\n\n                return options.features.some(function(feature) {\n                    return self.hasFeature(item, feature);\n                });\n\n            }\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: PhoneNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {PhoneNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('PhoneNumberHelper', function() {\n                return new PhoneNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IPhoneNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} phoneNumber\n     * @property {string} paymentType - External, TollFree, Local\n     * @property {string} location\n     * @property {string} type - VoiceFax, FaxOnly, VoiceOnly\n     * @property {string} usageType - CompanyNumber, DirectNumber, CompanyFaxNumber, ForwardedNumber\n     * @property {array} features - CallerId, SmsSender\n     * @property {string} reservedTill - Date\n     * @property {string} error\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberOptions\n     * @property {string} extensionId\n     * @property {true} lookup\n     * @property {string} countryId\n     * @property {string} paymentType\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {string} line\n     * @property {string} exclude\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberFilterOptions\n     * @property {string} paymentType\n     * @property {string} usageType\n     * @property {string} type\n     * @property {string[]} features\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberOrder\n     * @property {IPhoneNumber[]} records\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Utils = __webpack_require__(18);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PresenceHelper(context) {\n        Helper.call(this, context);\n        this.extension = __webpack_require__(34).$get(context);\n    }\n\n    PresenceHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PresenceHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n\n    };\n\n    /**\n     * @param {IPresence} presence\n     * @returns {string}\n     */\n    PresenceHelper.prototype.getId = function(presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n\n    /**\n     * @param {IPresence} presence\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isAvailable = function(presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {Subscription}\n     */\n    PresenceHelper.prototype.getSubscription = function(options, id) {\n\n        return __webpack_require__(12).$get(this.context).setEvents([this.createUrl(options, id)]);\n\n    };\n\n    /**\n     *\n     * @param {Subscription} subscription\n     * @param {IPresence[]} presences\n     * @param {IPresenceOptions} options\n     * @returns {*}\n     */\n    PresenceHelper.prototype.updateSubscription = function(subscription, presences, options) {\n\n        var events = presences.map(this.getId, this).map(function(id) {\n            return this.createUrl(options, id);\n        }, this);\n\n        subscription.addEvents(events);\n\n        return subscription;\n\n    };\n\n    /**\n     * @param {IExtension[]} extensions\n     * @param {IPresence[]} presences\n     * @param {bool} [merge]\n     * @returns {*}\n     */\n    PresenceHelper.prototype.attachToExtensions = function(extensions, presences, merge) {\n\n        var index = this.index(presences);\n\n        extensions.forEach(/** @param {IExtension} extension */ function(extension) {\n\n            var presence = index[this.extension.getId(extension)];\n\n            if (presence) {\n                if ('presence' in extension && merge) {\n                    Utils.extend(extension.presence, presence);\n                } else {\n                    extension.presence = presence;\n                }\n            }\n\n        }, this);\n\n    };\n\n    /**\n     * @param {IPresenceCall} presenceCall\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isCallInProgress = function(presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n\n    module.exports = {\n        Class: PresenceHelper,\n        /**\n         * @param {Context} context\n         * @returns {PresenceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('PresenceHelper', function() {\n                return new PresenceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IPresence\n     * @property {IExtension} extension\n     * @property {IPresenceCall[]} activeCalls\n     * @property {string} presenceStatus - Offline, Busy, Available\n     * @property {string} telephonyStatus - NoCall, CallConnected, Ringing, OnHold\n     * @property {string} userStatus - Offline, Busy, Available\n     * @property {string} dndStatus - TakeAllCalls, DoNotAcceptAnyCalls, DoNotAcceptDepartmentCalls, TakeDepartmentCallsOnly\n     * @property {boolean} allowSeeMyPresence\n     * @property {boolean} ringOnMonitoredCall\n     * @property {boolean} pickUpCallsOnHold\n     * @property {number} extensionId\n     * @property {number} sequence\n     */\n\n    /**\n     * @typedef {Object} IPresenceCall\n     * @property {string} direction\n     * @property {string} from\n     * @property {string} to\n     * @property {string} sessionId\n     * @property {string} id\n     * @property {string} telephonyStatus\n     */\n\n    /**\n     * @typedef {Object} IPresenceOptions\n     * @property {boolean} detailed\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class,\n        Validator = __webpack_require__(16);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function RingoutHelper(context) {\n        Helper.call(this, context);\n        this.extension = __webpack_require__(34).$get(context);\n    }\n\n    RingoutHelper.prototype = Object.create(Helper.prototype);\n\n    RingoutHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n\n    };\n\n    RingoutHelper.prototype.resetAsNew = function(object) {\n        object = Helper.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n\n    RingoutHelper.prototype.isInProgress = function(ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n\n    RingoutHelper.prototype.isSuccess = function(ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n\n    RingoutHelper.prototype.isError = function(ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n\n    /**\n     * @param {IRingout} item\n     */\n    RingoutHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(item && item.to && item.to.phoneNumber)},\n            {field: 'from', validator: Validator.required(item && item.from && item.from.phoneNumber)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: RingoutHelper,\n        /**\n         * @param {Context} context\n         * @returns {RingoutHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('RingoutHelper', function() {\n                return new RingoutHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IRingout\n     * @property {ICallerInfo} [from] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [to] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [callerId] (!) ONLY PHONE NUMBER\n     * @property {boolean} [playPrompt]\n     * @property {{callStatus:boolean, callerStatus:boolean, calleeStatus:boolean}} [status]\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(14).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ServiceHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ServiceHelper.prototype = Object.create(Helper.prototype);\n\n    ServiceHelper.prototype.createUrl = function() {\n        return '/account/~/service-info';\n    };\n\n    /**\n     * @param {string} feature\n     * @param {IServiceFeature[]} serviceFeatures\n     * @returns {*}\n     */\n    ServiceHelper.prototype.isEnabled = function(feature, serviceFeatures) {\n\n        return serviceFeatures.reduce(function(value, f) {\n\n            if (f.featureName == feature) value = f.enabled;\n            return value;\n\n        }, false);\n\n    };\n\n    function isServiceFeatureEnabledMethod(feature) {\n        return function(serviceFeatures) {\n            return this.isEnabled(feature, serviceFeatures);\n        };\n    }\n\n    ServiceHelper.prototype.isSmsEnabled = isServiceFeatureEnabledMethod('SMS');\n    ServiceHelper.prototype.isSmsReceivingEnabled = isServiceFeatureEnabledMethod('SMSReceiving');\n    ServiceHelper.prototype.isPresenceEnabled = isServiceFeatureEnabledMethod('Presence');\n    ServiceHelper.prototype.isRingOutEnabled = isServiceFeatureEnabledMethod('RingOut');\n    ServiceHelper.prototype.isInternationalCallingEnabled = isServiceFeatureEnabledMethod('InternationalCalling');\n    ServiceHelper.prototype.isDndEnabled = isServiceFeatureEnabledMethod('DND');\n    ServiceHelper.prototype.isFaxEnabled = isServiceFeatureEnabledMethod('Fax');\n    ServiceHelper.prototype.isFaxReceivingEnabled = isServiceFeatureEnabledMethod('FaxReceiving');\n    ServiceHelper.prototype.isVoicemailEnabled = isServiceFeatureEnabledMethod('Voicemail');\n    ServiceHelper.prototype.isPagerEnabled = isServiceFeatureEnabledMethod('Pager');\n    ServiceHelper.prototype.isPagerReceivingEnabled = isServiceFeatureEnabledMethod('PagerReceiving');\n    ServiceHelper.prototype.isVoipCallingEnabled = isServiceFeatureEnabledMethod('VoipCalling');\n    ServiceHelper.prototype.isVideoConferencingEnabled = isServiceFeatureEnabledMethod('VideoConferencing');\n    ServiceHelper.prototype.isSalesForceEnabled = isServiceFeatureEnabledMethod('SalesForce');\n    ServiceHelper.prototype.isIntercomEnabled = isServiceFeatureEnabledMethod('Intercom');\n    ServiceHelper.prototype.isPagingEnabled = isServiceFeatureEnabledMethod('Paging');\n    ServiceHelper.prototype.isConferencingEnabled = isServiceFeatureEnabledMethod('Conferencing');\n    ServiceHelper.prototype.isFreeSoftPhoneLinesEnabled = isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n    ServiceHelper.prototype.isHipaaComplianceEnabled = isServiceFeatureEnabledMethod('HipaaCompliance');\n    ServiceHelper.prototype.isCallParkEnabled = isServiceFeatureEnabledMethod('CallPark');\n    ServiceHelper.prototype.isOnDemandCallRecordingEnabled = isServiceFeatureEnabledMethod('OnDemandCallRecording');\n\n    module.exports = {\n        Class: ServiceHelper,\n        /**\n         * @param {Context} context\n         * @returns {ServiceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('serviceHelper', function() {\n                return new ServiceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IServiceFeature\n     * @property {string} featureName\n     * @property {boolean} enabled\n     */\n\n    /**\n     * @typedef {object} IService\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} servicePlanName\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    function PubnubMock(options) {}\n\n    PubnubMock.prototype.ready = function() {};\n\n    PubnubMock.prototype.unsubscribe = function(options) {};\n\n    PubnubMock.prototype.subscribe = function(options) {\n        this.onMessage = options.message;\n    };\n\n    PubnubMock.prototype.receiveMessage = function(msg) {\n        this.onMessage(msg, 'env', 'channel');\n    };\n\n    /**\n     * @alias RCSDK.core.pubnub.Mock\n     * @type {PUBNUB}\n     */\n    module.exports = {\n        /**\n         * @param {Context} context\n         * @returns {PUBNUB}\n         */\n        $get: function(context) {\n\n            return {\n                init: function(options) {\n                    return new PubnubMock(options);\n                }\n            };\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n * istanbul ignore next\n */\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Log = __webpack_require__(17),\n        Utils = __webpack_require__(18);\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.ajax.XhrMock\n     * @extends XMLHttpRequest\n     */\n    function XhrMock(context) {\n        // Service\n        this.responses = __webpack_require__(9).$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n        this.context = context;\n    }\n\n    XhrMock.prototype.getResponseHeader = function(header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n\n    XhrMock.prototype.setRequestHeader = function(header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n\n    XhrMock.prototype.open = function(method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n\n    XhrMock.prototype.send = function(data) {\n\n        var contentType = this.getRequestHeader('Content-Type');\n\n        this.data = data;\n\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json') this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded') this.data = Utils.parseQueryString(this.data);\n        }\n\n        Log.debug('API REQUEST', this.method, this.url);\n\n        var currentResponse = this.responses.find(this);\n\n        if (!currentResponse) {\n            setTimeout(function() {\n                if (this.onerror) this.onerror(new Error('Unknown request: ' + this.url));\n            }.bind(this), 1);\n            return;\n        }\n\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n\n        var res = currentResponse.response(this),\n            Promise = this.context.getPromise(),\n            onLoad = function(res) {\n\n                if (this.getResponseHeader('Content-Type') == 'application/json') res = JSON.stringify(res);\n\n                this.responseText = res;\n\n                setTimeout(function() {\n                    if (this.onload) this.onload();\n                }.bind(this), 1);\n\n            }.bind(this);\n\n        if (res instanceof Promise) {\n\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n\n        } else onLoad(res);\n\n    };\n\n    XhrMock.prototype.abort = function() {\n        Log.debug('XhrMock.destroy(): Aborted');\n    };\n\n    XhrMock.prototype.getRequestHeader = function(header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n\n    XhrMock.prototype.setResponseHeader = function(header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n\n    XhrMock.prototype.setStatus = function(status) {\n        this.status = status;\n        return this;\n    };\n\n    module.exports = {\n        Class: XhrMock,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrMock}\n         */\n        $get: function(context) {\n\n            return new XhrMock(context);\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }\n/******/ ])\n});\n\n//# sourceMappingURL=rc-sdk.js.map"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 09dcd3083603c2494cea\n **/","/**\n * Browser-compatible version\n */\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    // ES6 Promise Polyfill only needs to be required since it modifies window object\n    require('es6-promise');\n\n    module.exports = require('./RCSDK')({\n        CryptoJS: require('crypto-js'),\n        localStorage: window.localStorage,\n        Promise: window.Promise,\n        PUBNUB: require('pubnub'),\n        XHR: window.XMLHttpRequest\n    });\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/browser.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"crypto-js\",\"commonjs\":\"crypto-js\",\"commonjs2\":\"crypto-js\",\"root\":\"CryptoJS\"}\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}\n ** module id = 4\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * @param {IInjections} injections\n     * @returns {RCSDK}\n     */\n    module.exports = function(injections) {\n\n        /**\n         * @name RCSDK\n         * @constructor\n         */\n        function RCSDK(options) {\n\n            /** @private */\n            this._context = require('./core/Context').$get(injections);\n\n            //TODO Link Platform events with Subscriptions and the rest\n\n        }\n\n        RCSDK.version = '1.1.5';\n\n        RCSDK.prototype.useStubs = function() {\n\n            var platform = this.getPlatform(),\n                context = this.getContext();\n\n            platform.server = '';\n            platform.apiKey = 'whatever';\n\n            context.useAjaxStub(true);\n            context.usePubnubStub(true);\n\n            return this;\n\n        };\n\n        // Internals\n\n        /** @returns {Context} */\n        RCSDK.prototype.getContext = function() { return this._context; };\n\n        // Core\n\n        /** @returns {Ajax} */\n        RCSDK.prototype.getAjax = function() { return require('./core/Ajax').$get(this.getContext()); };\n\n        /**\n         * @returns {AjaxObserver}\n         */\n        RCSDK.prototype.getAjaxObserver = function() { return require('./core/AjaxObserver').$get(this.getContext()); };\n\n        /**\n         * @returns {XhrResponse}\n         */\n        RCSDK.prototype.getXhrResponse = function() { return require('./core/xhr/XhrResponse').$get(this.getContext()); };\n\n        /**\n         * @returns {Platform}\n         */\n        RCSDK.prototype.getPlatform = function() { return require('./core/Platform').$get(this.getContext()); };\n\n        /**\n         * @returns {Cache}\n         */\n        RCSDK.prototype.getCache = function() { return require('./core/Cache').$get(this.getContext()); };\n\n        /**\n         * @returns {Subscription}\n         */\n        RCSDK.prototype.getSubscription = function() { return require('./core/Subscription').$get(this.getContext()); };\n\n        /**\n         * @returns {PageVisibility}\n         */\n        RCSDK.prototype.getPageVisibility = function() { return require('./core/PageVisibility').$get(this.getContext()); };\n\n        /**\n         * @returns {Helper}\n         */\n        RCSDK.prototype.getHelper = function() { return require('./core/Helper').$get(this.getContext()); };\n\n        /**\n         * @returns {Observable}\n         */\n        RCSDK.prototype.getObservable = function() { return require('./core/Observable').$get(this.getContext()); };\n\n        /**\n         * @returns {Validator}\n         */\n        RCSDK.prototype.getValidator = function() { return require('./core/Validator').$get(this.getContext()); };\n\n        /**\n         * @returns {Log}\n         */\n        RCSDK.prototype.getLog = function() { return require('./core/Log').$get(this.getContext()); };\n\n        /**\n         * @returns {Utils}\n         */\n        RCSDK.prototype.getUtils = function() { return require('./core/Utils').$get(this.getContext()); };\n\n        /**\n         * @returns {List}\n         */\n        RCSDK.prototype.getList = function() { return require('./core/List').$get(this.getContext()); };\n\n        // Helpers\n\n        /**\n         * @returns {CountryHelper}\n         */\n        RCSDK.prototype.getCountryHelper = function() { return require('./helpers/Country').$get(this.getContext()); };\n\n        /**\n         * @returns {DeviceModelHelper}\n         */\n        RCSDK.prototype.getDeviceModelHelper = function() { return require('./helpers/DeviceModel').$get(this.getContext()); };\n\n        /**\n         * @returns {LanguageHelper}\n         */\n        RCSDK.prototype.getLanguageHelper = function() { return require('./helpers/Language').$get(this.getContext()); };\n\n        /**\n         * @returns {LocationHelper}\n         */\n        RCSDK.prototype.getLocationHelper = function() { return require('./helpers/Location').$get(this.getContext()); };\n\n        /**\n         * @returns {ShippingMethodHelper}\n         */\n        RCSDK.prototype.getShippingMethodHelper = function() { return require('./helpers/ShippingMethod').$get(this.getContext()); };\n\n        /**\n         * @returns {StateHelper}\n         */\n        RCSDK.prototype.getStateHelper = function() { return require('./helpers/State').$get(this.getContext()); };\n\n        /**\n         * @returns {TimezoneHelper}\n         */\n        RCSDK.prototype.getTimezoneHelper = function() { return require('./helpers/Timezone').$get(this.getContext()); };\n\n        /**\n         * @returns {AccountHelper}\n         */\n        RCSDK.prototype.getAccountHelper = function() { return require('./helpers/Account').$get(this.getContext()); };\n\n        /**\n         * @returns {BlockedNumberHelper}\n         */\n        RCSDK.prototype.getBlockedNumberHelper = function() { return require('./helpers/BlockedNumber').$get(this.getContext()); };\n\n        /**\n         * @returns {CallHelper}\n         */\n        RCSDK.prototype.getCallHelper = function() { return require('./helpers/Call').$get(this.getContext()); };\n\n        /**\n         * @returns {ConferencingHelper}\n         */\n        RCSDK.prototype.getConferencingHelper = function() { return require('./helpers/Conferencing').$get(this.getContext()); };\n\n        /**\n         * @returns {ContactHelper}\n         */\n        RCSDK.prototype.getContactHelper = function() { return require('./helpers/Contact').$get(this.getContext()); };\n\n        /**\n         * @returns {ContactGroupHelper}\n         */\n        RCSDK.prototype.getContactGroupHelper = function() { return require('./helpers/ContactGroup').$get(this.getContext()); };\n\n        /**\n         * @returns {DeviceHelper}\n         */\n        RCSDK.prototype.getDeviceHelper = function() { return require('./helpers/Device').$get(this.getContext()); };\n\n        /**\n         * @returns {ExtensionHelper}\n         */\n        RCSDK.prototype.getExtensionHelper = function() { return require('./helpers/Extension').$get(this.getContext()); };\n\n        /**\n         * @returns {ForwardingNumberHelper}\n         */\n        RCSDK.prototype.getForwardingNumberHelper = function() { return require('./helpers/ForwardingNumber').$get(this.getContext()); };\n\n        /**\n         * @returns {MessageHelper}\n         */\n        RCSDK.prototype.getMessageHelper = function() { return require('./helpers/Message').$get(this.getContext()); };\n\n        /**\n         * @returns {PhoneNumberHelper}\n         */\n        RCSDK.prototype.getPhoneNumberHelper = function() { return require('./helpers/PhoneNumber').$get(this.getContext()); };\n\n        /**\n         * @returns {PresenceHelper}\n         */\n        RCSDK.prototype.getPresenceHelper = function() { return require('./helpers/Presence').$get(this.getContext()); };\n\n        /**\n         * @returns {RingoutHelper}\n         */\n        RCSDK.prototype.getRingoutHelper = function() { return require('./helpers/Ringout').$get(this.getContext()); };\n\n        /**\n         * @returns {ServiceHelper}\n         */\n        RCSDK.prototype.getServiceHelper = function() { return require('./helpers/Service').$get(this.getContext()); };\n\n        if (!injections\n            || !('CryptoJS' in injections)\n            || !('localStorage' in injections)\n            || !('Promise' in injections)\n            || !('PUBNUB' in injections)\n            || !('XHR' in injections)) throw new Error('Injections object is not complete');\n\n        injections.XHR = (injections.XHR || function() {\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\"); } catch (e1) {}\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\"); } catch (e2) {}\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e3) {}\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        });\n\n        return RCSDK;\n\n    };\n\n    /**\n     * @typedef {Object} IInjections\n     * @property {PUBNUB} PUBNUB\n     * @property {CryptoJS} CryptoJS\n     * @property {Storage} localStorage\n     * @property {XMLHttpRequest} XHR\n     * @property {Promise} Promise\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/RCSDK.js\n ** module id = 5\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * @constructor\n     * @param {IInjections} injections\n     */\n    function Context(injections) {\n        /** @private */\n        this.singletons = {};\n        /** @type {IInjections} */\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n\n    /**\n     * @param {string} name\n     * @param {function} factory\n     * @returns {*}\n     */\n    Context.prototype.createSingleton = function(name, factory) {\n\n        if (!this.singletons[name]) this.singletons[name] = factory();\n        return this.singletons[name];\n\n    };\n\n    Context.prototype.usePubnubStub = function(flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n\n    Context.prototype.useAjaxStub = function(flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n\n    /**\n     * @returns {CryptoJS}\n     */\n    Context.prototype.getCryptoJS = function() {\n        return this.injections.CryptoJS;\n    };\n\n    /**\n     * @returns {PUBNUB}\n     */\n    Context.prototype.getPubnub = function() {\n        return this.stubPubnub ? require('./pubnub/PubnubMock').$get(this) : this.injections.PUBNUB;\n    };\n\n    /**\n     * @returns {Storage}\n     * @abstract\n     */\n    Context.prototype.getLocalStorage = function() {\n        return this.createSingleton('localStorage', function() {\n            return (typeof this.injections.localStorage == 'function')\n                ? new this.injections.localStorage() // this is NPM dom-storage constructor\n                : this.injections.localStorage; // this is window.localStorage\n        }.bind(this));\n    };\n\n    /**\n     * @returns {function(new:Promise)}\n     */\n    Context.prototype.getPromise = function() {\n        return this.injections.Promise;\n    };\n\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Context.prototype.getXHR = function() {\n        return this.stubAjax ? require('./xhr/XhrMock').$get(this) : new this.injections.XHR();\n    };\n\n    module.exports = {\n        Class: Context,\n        /**\n         * @param {IInjections} injections\n         */\n        $get: function(injections) {\n            return new Context(injections);\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Context.js\n ** module id = 6\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = require('./Observable').Class,\n        Utils = require('./Utils'),\n        Log = require('./Log'),\n        jsonContentType = 'application/json',\n        multipartContentType = 'multipart/mixed',\n        boundarySeparator = '--',\n        headerSeparator = ':',\n        bodySeparator = '\\n\\n';\n\n    /**\n     * @typedef {Object} IAjaxOptions\n     * @property {string} url\n     * @property {string} method?\n     * @property {boolean} async?\n     * @property {Object} post?\n     * @property {Object} get?\n     * @property {Object} headers?\n     */\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Ajax\n     * @param {Context} [context]\n     */\n    function Ajax(context) {\n        Observable.call(this);\n        /** @type {Ajax[]|object} */\n        this.data = null;\n        /** @type {Error|null} */\n        this.error = null;\n        this.response = '';\n        this.headers = {};\n        this.status = 0;\n        /**\n         * @type {IAjaxOptions}\n         * @protected\n         */\n        this.options = {};\n        this.context = context;\n        /** @type {AjaxObserver} */\n        this.observer = require('./AjaxObserver').$get(context);\n        /** @type {XMLHttpRequest} */\n        this.xhr = null;\n    }\n\n    Ajax.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Ajax.prototype, 'constructor', {value: Ajax, enumerable: false});\n\n    /**\n     * @returns {IAjaxOptions}\n     */\n    Ajax.prototype.getOptions = function() {\n        return this.options;\n    };\n\n    /**\n     * @param {IAjaxOptions} [options]\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setOptions = function(options) {\n        if (options) this.options = options;\n        return this;\n    };\n\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setRequestHeader = function(name, value) {\n        name = name.toLowerCase();\n        this.options.headers = this.options.headers || {};\n        if (value) {\n            this.options.headers[name] = value;\n        } else {\n            delete this.options.headers[name];\n        }\n        return this;\n    };\n\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @returns {Ajax}\n     */\n    Ajax.prototype.setResponseHeader = function(name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n\n    /**\n     * @param {string} name\n     * @returns {string}\n     */\n    Ajax.prototype.getRequestHeader = function(name) {\n        this.options.headers = this.options.headers || {};\n        return this.options.headers[name.toLowerCase()];\n    };\n\n    /**\n     * @param {string} name\n     * @returns {string}\n     */\n    Ajax.prototype.getResponseHeader = function(name) {\n        return this.headers[name.toLowerCase()];\n    };\n\n    /**\n     * @param {string} type\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseContentType = function(type) {\n        return this.getResponseContentType().indexOf(type) > -1;\n    };\n\n    /**\n     * @returns {string}\n     */\n    Ajax.prototype.getResponseContentType = function() {\n        return this.getResponseHeader('Content-Type') || '';\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseMultipart = function() {\n        return this.isResponseContentType(multipartContentType);\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isResponseUnauthorized = function() {\n        return (this.status == 401);\n    };\n\n    /**\n     * @deprecated\n     * @returns {string}\n     */\n    Ajax.prototype.getContentType = function() {\n        return this.getResponseContentType();\n    };\n\n    /**\n     * @deprecated\n     * @returns {boolean}\n     */\n    Ajax.prototype.isMultipart = function() {\n        return this.isResponseMultipart();\n    };\n\n    /**\n     * @deprecated\n     * @returns {boolean}\n     */\n    Ajax.prototype.isUnauthorized = function() {\n        return this.isResponseUnauthorized();\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Ajax.prototype.isLoaded = function() {\n        return !!this.status;\n    };\n\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     * @returns {Ajax}\n     */\n    Ajax.prototype.checkOptions = function() {\n\n        if (!this.options.url) throw new Error('Url is not defined');\n\n        var defaultHeaders = {\n                'Accept': jsonContentType,\n                'Content-Type': jsonContentType\n            },\n            headers = this.options.headers || {};\n\n        this.options.headers = {};\n\n        Object.keys(defaultHeaders).forEach(function(key) {\n            this.setRequestHeader(key, defaultHeaders[key]);\n        }, this);\n\n        Object.keys(headers).forEach(function(key) {\n            this.setRequestHeader(key, headers[key]);\n        }, this);\n\n        // Delete all headers that don't have value\n        Object.keys(this.options.headers).forEach(function(key) {\n            if (!this.options.headers[key]) delete this.options.headers[key];\n        }, this);\n\n        this.options.method = this.options.method ? this.options.method.toUpperCase() : 'GET';\n        this.options.async = (this.options.async !== undefined) ? this.options.async : true;\n        this.options.get = this.options.get || null;\n        this.options.post = this.options.post ? (\n            (typeof this.options.post !== 'string' && this.getRequestHeader('Content-Type') === jsonContentType)\n                ? JSON.stringify(this.options.post)\n                : this.options.post\n        ) : '';\n        this.options.url = this.options.url + (this.options.get ? ((this.options.url.indexOf('?') > -1 ? '&' : '?') + Utils.queryStringify(this.options.get)) : '');\n\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'].indexOf(this.options.method) < 0) throw new Error('Method has wrong value');\n\n        delete this.options.get;\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Ajax.prototype.send = function() {\n\n        this.observer.emit(this.observer.events.beforeRequest, this);\n\n        return this.request()\n            .then(function(ajax) {\n\n                ajax.parseResponse();\n                if (ajax.error) throw ajax.error;\n                return ajax;\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.observer.emit(this.observer.events.requestSuccess, ajax);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                e.ajax = this;\n\n                this.observer.emit(this.observer.events.requestError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Ajax.prototype.getXHR = function() {\n        return this.context.getXHR();\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Ajax.prototype.request = function() {\n\n        return new (this.context.getPromise())(function(resolve, reject) {\n\n            this.checkOptions();\n\n            var options = this.options,\n                xhr = this.getXHR();\n\n            xhr.open(options.method, options.url, options.async);\n\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n\n            xhr.onload = function() {\n\n                this.status = xhr.status;\n                this.response = xhr.responseText;\n                this.setResponseHeader('Content-Type', xhr.getResponseHeader('Content-Type') || jsonContentType); // if no header, set default\n\n                resolve(this);\n\n            }.bind(this);\n\n            xhr.onerror = function(event) {\n                reject(new Error('The request cannot be sent')); // CORS or network issue\n            };\n\n            Utils.forEach(options.headers, function(value, header) {\n                xhr.setRequestHeader(header, value);\n            });\n\n            xhr.send(options.method === 'GET' ? null : options.post);\n\n            this.xhr = xhr;\n\n        }.bind(this));\n\n    };\n\n    Ajax.prototype.checkStatus = function(status) {\n        return status.toString().substr(0, 1) == '2';\n    };\n\n    Ajax.prototype.parseResponse = function() {\n\n        try {\n\n            if (!this.isResponseMultipart()) {\n\n                if (typeof(this.response) == 'string' && !!this.response && this.isResponseContentType(jsonContentType)) { // Handle 204 No Content -- response may be empty\n\n                    this.data = JSON.parse(this.response);\n\n                } else {\n\n                    this.data = this.response; //TODO Add more parsers\n\n                }\n\n                if (!this.checkStatus(this.status)) this.error = new Error(this.data.message || this.data.error_description || this.data.description || 'Unknown error');\n\n            } else {\n\n                var boundary = this.getResponseContentType().match(/boundary=([^;]+)/i)[1],\n                    parts = this.response.split(boundarySeparator + boundary);\n\n                if (parts[0].trim() === '') parts.shift();\n                if (parts[parts.length - 1].trim() == boundarySeparator) parts.pop();\n\n                // Step 1. Parse all parts into Ajax objects\n                parts = parts.map(function(part) {\n\n                    var subParts = part.trim().replace(/\\r/g, '').split(bodySeparator),\n                        ajaxPart = new Ajax(this.context);\n\n                    (subParts.length > 1 ? subParts.shift() : '')\n                        .split('\\n')\n                        .forEach(function(header) {\n\n                            if (header.length === 0) return res;\n\n                            var headerParts = header.split(headerSeparator),\n                                name = headerParts.shift().trim();\n\n                            ajaxPart.setResponseHeader(name, headerParts.join(headerSeparator).trim());\n\n                        }, this);\n\n                    ajaxPart.response = subParts.join(bodySeparator);\n\n                    return ajaxPart;\n\n                }, this);\n\n                // Step 2. Claim first part as statuses, assign status from this and parse the response\n                var statusInfo = parts.shift();\n                statusInfo.status = this.status;\n                statusInfo.parseResponse();\n\n                // Steo 3. For the rest of parts assign status and parse the response\n                this.data = parts.map(function(part, i) {\n\n                    part.status = statusInfo.data.response[i].status;\n                    part.parseResponse();\n\n                    return part;\n\n                }, this);\n\n            }\n\n        } catch (e) { // Capture parse errors\n\n            Log.error('Ajax.parseResponse(): Unable to parse data');\n            Log.error(e.stack || e);\n            Log.error(this.response);\n\n            this.error = e;\n\n        }\n\n        return this;\n\n    };\n\n    Ajax.prototype.destroy = function() {\n        if (this.xhr) this.xhr.abort();\n        return Observable.prototype.destroy.call(this);\n    };\n\n    module.exports = {\n        Class: Ajax,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {Ajax}\n         */\n        $get: function(context) {\n            return new Ajax(context);\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Ajax.js\n ** module id = 7\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = require('./Observable').Class;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.AjaxObserver\n     */\n    function AjaxObserver() {\n\n        Observable.call(this);\n\n    }\n\n    AjaxObserver.prototype = Object.create(Observable.prototype);\n\n    AjaxObserver.prototype.events = {\n        beforeRequest: 'beforeRequest', // parameters: ajax\n        requestSuccess: 'requestSuccess', // means that response was successfully fetched from server\n        requestError: 'requestError' // means that request failed completely\n    };\n\n    module.exports = {\n        Class: AjaxObserver,\n        /**\n         * @param {Context} context\n         * @returns {AjaxObserver}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('AjaxObserver', function() {\n                return new AjaxObserver();\n            });\n\n        }\n    };\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/AjaxObserver.js\n ** module id = 8\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * Ajax Response Manager\n     * @constructor\n     * @alias RCSDK.core.XhrResponse\n     */\n    function XhrResponse() {\n        /** @type {IXhrResponse[]} */\n        this.responses = [];\n    }\n\n    /**\n     * @param {IXhrResponse} response\n     */\n    XhrResponse.prototype.add = function(response) {\n        this.responses.push(response);\n    };\n\n    XhrResponse.prototype.clear = function() {\n        this.responses = [];\n    };\n\n    /**\n     * @param {XhrMock} ajax\n     * @returns {IXhrResponse}\n     */\n    XhrResponse.prototype.find = function(ajax) {\n\n        var currentResponse = null;\n\n        this.responses.forEach(function(response) {\n\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n\n        });\n\n        return currentResponse;\n\n    };\n\n    module.exports = {\n        Class: XhrResponse,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrResponse}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('XhrResponse', function() {\n                return new XhrResponse(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IXhrResponse\n     * @property {string} path\n     * @property {function(Ajax)} response Response mock function\n     * @property {function(Ajax)} test? This will be executed to determine, whether this mock is applicable\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/xhr/XhrResponse.js\n ** module id = 9\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils'),\n        Observable = require('./Observable').Class,\n        Log = require('./Log'),\n        forcedTokenType = 'forced';\n\n    /**\n     * @typedef {Object} PlatformAuthInfo\n     * @property {string} token_type\n     * @property {string} access_token\n     * @property {string} expires_in\n     * @property {int} expireTime\n     * @property {string} refresh_token\n     * @property {string} refresh_token_expires_in\n     * @property {int} refreshExpireTime\n     * @property {string} scope\n     */\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Platform\n     * @param {Context} context\n     */\n    function Platform(context) {\n        Observable.call(this);\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = 10 * 60; // 10 minutes\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        /** @type {Promise} */\n        this.refreshPromise = null;\n        this.context = context;\n    }\n\n    Platform.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Platform.prototype, 'constructor', {value: Platform, enumerable: false});\n\n    Platform.prototype.cacheId = 'platform';\n\n    Platform.prototype.pollInterval = 250;\n\n    Platform.prototype.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n\n    Platform.prototype.events = {\n        accessViolation: 'accessViolation',\n        logoutSuccess: 'logoutSuccess',\n        logoutError: 'logoutError',\n        authorizeSuccess: 'authorizeSuccess',\n        authorizeError: 'authorizeError',\n        refreshSuccess: 'refreshSuccess',\n        refreshError: 'refreshError'\n    };\n\n    /**\n     * @returns {Cache}\n     */\n    Platform.prototype.getStorage = function() {\n\n        return require('./Cache').$get(this.context);\n\n    };\n\n    /**\n     * @returns {Ajax}\n     */\n    Platform.prototype.getAjax = function() {\n\n        return require('./Ajax').$get(this.context);\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.clearStorage = function() {\n\n        this.getStorage().clean();\n\n        return this;\n\n    };\n\n    /**\n     * @param {boolean} [remember]\n     * @returns {Platform|boolean}\n     */\n    Platform.prototype.remember = function(remember) {\n\n        var key = this.cacheId + '-remember';\n\n        if (remember !== undefined) {\n\n            this.getStorage().setItem(key, remember);\n            return this;\n\n        }\n\n        return this.getStorage().getItem(key) || false;\n\n    };\n\n    /**\n     * @param {string} options.username\n     * @param {string} options.password\n     * @param {string} [options.extension]\n     * @param {boolean} [options.remember]\n     * @returns {Promise}\n     */\n    Platform.prototype.authorize = function(options) {\n\n        options = options || {};\n\n        options.remember = options.remember || false;\n\n        return this\n            .authCall({\n                url: '/restapi/oauth/token',\n                post: {\n                    \"grant_type\": \"password\",\n                    \"username\": options.username,\n                    \"extension\": options.extension || '',\n                    \"password\": options.password,\n                    \"access_token_ttl\": this.accessTokenTtl,\n                    \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                }\n            })\n            .then(function(ajax) {\n\n                this.setCache(ajax.data)\n                    .remember(options.remember)\n                    .emitAndCallback(this.events.authorizeSuccess, []);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.clearStorage()\n                    .emitAndCallback(this.events.authorizeError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Platform.prototype.isPaused = function() {\n        var storage = this.getStorage(),\n            cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n\n    Platform.prototype.pause = function() {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function() {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n\n    /**\n     * Gets resolved into Ajax or null if refresh resolved from elsewhere\n     * @returns {Promise}\n     */\n    Platform.prototype.refresh = function() {\n\n        var refresh = new (this.context.getPromise())(function(resolve, reject) {\n\n            if (this.isPaused()) {\n                return resolve(this.refreshPolling(null));\n            } else {\n                this.pause();\n            }\n\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function() {\n\n                var authData = this.getAuthData();\n\n                Log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n\n                if (!authData || !authData.refresh_token) return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime) return reject(new Error('Refresh token has expired'));\n                if (!this.isPaused()) return reject(new Error('Queue was resumed before refresh call'));\n\n                resolve(this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": this.accessTokenTtl,\n                        \"refresh_token_ttl\": this.remember() ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                    }\n                }));\n\n            }.bind(this), this.refreshDelayMs);\n\n        }.bind(this));\n\n        return refresh\n            .then(function(ajax) {\n\n                // This means refresh has happened elsewhere and we are here because of timeout\n                if (!ajax || !ajax.data) return ajax;\n\n                Log.info('Platform.refresh(): Token was refreshed');\n\n                if (!ajax.data.refresh_token || !ajax.data.access_token) {\n                    var e = new Error('Malformed OAuth response');\n                    e.ajax = ajax;\n                    throw e;\n                }\n\n                this.setCache(ajax.data)\n                    .resume();\n\n                return ajax;\n\n            }.bind(this))\n            .then(function(result) {\n\n                this.emit(this.events.refreshSuccess, result);\n                return result;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                if (this.clearCacheOnRefreshError) this.clearStorage();\n\n                this.emitAndCallback(this.events.accessViolation, [e])\n                    .emitAndCallback(this.events.refreshError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function() {\n\n        this.pause();\n\n        return this\n            .authCall({\n                url: '/restapi/oauth/revoke',\n                get: {\n                    token: this.getToken()\n                }\n            })\n            .then(function(ajax) {\n\n                this.resume()\n                    .clearStorage()\n                    .emit(this.events.logoutSuccess, ajax);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.resume()\n                    .emitAndCallback(this.events.accessViolation, [e])\n                    .emitAndCallback(this.events.logoutError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Platform.prototype.refreshPolling = function(result) {\n\n        if (this.refreshPromise) return this.refreshPromise;\n\n        this.refreshPromise = new (this.context.getPromise())(function(resolve, reject) {\n\n            Log.warn('Platform.refresh(): Refresh is already in progress polling started');\n\n            Utils.poll(function(next) {\n\n                if (this.isPaused()) return next();\n\n                this.refreshPromise = null;\n                this.resume();\n\n                if (this.isTokenValid()) {\n                    resolve(result);\n                } else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n\n            }.bind(this), this.pollInterval);\n\n        }.bind(this));\n\n        return this.refreshPromise;\n\n    };\n\n    Platform.prototype.getToken = function() {\n\n        return this.getAuthData().access_token;\n\n    };\n\n    Platform.prototype.getTokenType = function() {\n\n        return this.getAuthData().token_type;\n\n    };\n\n    /**\n     * @returns {PlatformAuthInfo}\n     */\n    Platform.prototype.getAuthData = function() {\n\n        return this.getStorage().getItem(this.cacheId) || {\n                token_type: '',\n                access_token: '',\n                expires_in: 0,\n                refresh_token: '',\n                refresh_token_expires_in: 0\n            };\n\n    };\n\n    /**\n     * Check if there is a valid (not expired) access token\n     * @returns {boolean}\n     */\n    Platform.prototype.isTokenValid = function() {\n\n        var authData = this.getAuthData();\n        return (authData.token_type == forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n\n    };\n\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     * @returns {Promise}\n     */\n    Platform.prototype.isAuthorized = function() {\n\n        if (this.isTokenValid()) return this.context.getPromise().resolve(true);\n        return this.refresh();\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.cancelAccessToken = function() {\n\n        return this.setCache(Utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n\n    };\n\n    /**\n     * @param {object} authData\n     * @returns {Platform}\n     */\n    Platform.prototype.setCache = function(authData) {\n\n        var oldAuthData = this.getAuthData();\n\n        Log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n\n        this.getStorage().setItem(this.cacheId, authData);\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.forceAuthentication = function() {\n\n        this.setCache({\n            token_type: forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n\n        return this;\n\n    };\n\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.apiCall = function(options) {\n\n        options = options || {};\n        options.url = this.apiUrl(options.url, {addServer: true});\n\n        return this\n            .isAuthorized() // Refresh will occur inside\n            .then(function() {\n\n                var token = this.getToken();\n\n                return this.getAjax()\n                    .setOptions(options)\n                    .setRequestHeader('Authorization', this.getTokenType() + (token ? ' ' + token : ''))\n                    .send();\n\n            }.bind(this))\n            .catch(function(e) {\n\n                if (!e.ajax || !e.ajax.isResponseUnauthorized()) throw e;\n\n                this.cancelAccessToken();\n\n                return this\n                    .refresh()\n                    .then(function() {\n\n                        // Re-send with same options\n                        return this.apiCall(options);\n\n                    }.bind(this));\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.authCall = function(options) {\n\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.post = Utils.queryStringify(options.post);\n        options.url = this.apiUrl(options.url, {addServer: true});\n\n        return this.getAjax()\n            .setOptions(options)\n            .setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setRequestHeader('Accept', 'application/json')\n            .setRequestHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n\n    };\n\n    /**\n     *\n     * @param url\n     * @param {{addMethod?: string, addToken?: boolean, addServer?: boolean}} [options]\n     * @returns {string}\n     */\n    Platform.prototype.apiUrl = function(url, options) {\n\n        url = url || '';\n        options = options || {};\n\n        var builtUrl = '';\n\n        if (options.addServer && url.indexOf('http://') == -1 && url.indexOf('https://') == -1) builtUrl += this.server;\n\n        if (url.indexOf(this.urlPrefix) == -1) builtUrl += this.urlPrefix + '/' + this.apiVersion;\n\n        if (url.indexOf(this.accountPrefix) > -1) builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n\n        builtUrl += url;\n\n        if (options.addMethod || options.addToken) builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n\n        if (options.addMethod) builtUrl += '_method=' + options.addMethod;\n        if (options.addToken) builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n\n        return builtUrl;\n\n    };\n\n    module.exports = {\n        Class: Platform,\n        /**\n         * @param {Context} context\n         * @returns {Platform}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('Platform', function() {\n                return new Platform(context);\n            });\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Platform.js\n ** module id = 10\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = require('./Observable').Class,\n        Utils = require('./Utils');\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Cache\n     * @param {Context} context\n     */\n    function Cache(context) {\n        Observable.call(this);\n        this.prefix = 'rc-';\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n\n    Cache.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Cache.prototype, 'constructor', {value: Cache, enumerable: false});\n\n    Cache.prototype.prefixKey = function(key) {\n        return this.prefix + key;\n    };\n\n    Cache.prototype.setItem = function(key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n\n    Cache.prototype.removeItem = function(key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n\n    Cache.prototype.getItem = function(key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item) return null;\n        return JSON.parse(item);\n    };\n\n    Cache.prototype.clean = function() {\n\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key)) continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n\n        return this;\n\n    };\n\n    module.exports = {\n        Class: Cache,\n        /**\n         * @param {Context} context\n         * @returns {Cache}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('Cache', function() {\n                return new Cache(context);\n            });\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Cache.js\n ** module id = 11\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = require('./Observable').Class,\n        Log = require('./Log'),\n        Utils = require('./Utils'),\n        renewHandicapMs = 60 * 1000;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Subscription\n     * @param {Context} context\n     */\n    function Subscription(context) {\n        Observable.call(this);\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '', // 2014-03-12T19:54:35.613Z\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '', // 2014-03-12T19:54:35.613Z\n            status: '', // Active\n            uri: ''\n        };\n        /** @type {PUBNUB} */\n        this.pubnub = null;\n        this.context = context;\n    }\n\n    Subscription.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Subscription.prototype, 'constructor', {value: Subscription, enumerable: false});\n\n    Subscription.prototype.events = {\n        notification: 'notification',\n        removeSuccess: 'removeSuccess',\n        removeError: 'removeError',\n        renewSuccess: 'renewSuccess',\n        renewError: 'renewError',\n        subscribeSuccess: 'subscribeSuccess',\n        subscribeError: 'subscribeError'\n    };\n\n    /**\n     * @returns {PUBNUB}\n     */\n    Subscription.prototype.getPubnub = function() {\n\n        return this.context.getPubnub();\n\n    };\n\n    Subscription.prototype.getCrypto = function() {\n\n        return this.context.getCryptoJS();\n\n    };\n\n    Subscription.prototype.getPlatform = function() {\n\n        return require('./Platform').$get(this.context);\n\n    };\n\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function(options) {\n\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        } else {\n            return this.subscribe(options);\n        }\n\n    };\n\n    Subscription.prototype.addEvents = function(events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n\n    Subscription.prototype.setEvents = function(events) {\n        this.eventFilters = events;\n        return this;\n    };\n\n    Subscription.prototype.getFullEventFilters = function() {\n\n        return this.eventFilters.map(function(event) {\n            return this.getPlatform().apiUrl(event);\n        }.bind(this));\n\n    };\n\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.subscribe = function(options) {\n\n        options = options || {};\n        if (options.events) this.eventFilters = options.events;\n\n        this.clearTimeout();\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.eventFilters || !this.eventFilters.length) throw new Error('Events are undefined');\n\n                resolve(this.getPlatform().apiCall({\n                    method: 'POST',\n                    url: '/restapi/v1.0/subscription',\n                    post: {\n                        eventFilters: this.getFullEventFilters(),\n                        deliveryMode: {\n                            transportType: 'PubNub'\n                        }\n                    }\n                }));\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.updateSubscription(ajax.data)\n                    .subscribeAtPubnub()\n                    .emit(this.events.subscribeSuccess, ajax.data);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.unsubscribe()\n                    .emit(this.events.subscribeError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.renew = function(options) {\n\n        options = options || {};\n        if (options.events) this.eventFilters = options.events;\n\n        this.clearTimeout();\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.subscription || !this.subscription.id) throw new Error('Subscription ID is required');\n                if (!this.eventFilters || !this.eventFilters.length) throw new Error('Events are undefined');\n\n                resolve();\n\n            }.bind(this))\n            .then(function() {\n\n                return this.getPlatform().apiCall({\n                    method: 'PUT',\n                    url: '/restapi/v1.0/subscription/' + this.subscription.id,\n                    post: {\n                        eventFilters: this.getFullEventFilters()\n                    }\n                });\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.updateSubscription(ajax.data)\n                    .emit(this.events.renewSuccess, ajax.data);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.unsubscribe()\n                    .emit(this.events.renewError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @param {boolean} [options.async]\n     * @returns {Promise}\n     */\n    Subscription.prototype.remove = function(options) {\n\n        options = Utils.extend({\n            async: true\n        }, options);\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.subscription || !this.subscription.id) throw new Error('Subscription ID is required');\n\n                resolve(this.getPlatform().apiCall({\n                    async: !!options.async, // Warning! This is necessary because this method is used in beforeunload hook and has to be synchronous\n                    method: 'DELETE',\n                    url: '/restapi/v1.0/subscription/' + this.subscription.id\n                }));\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.unsubscribe()\n                    .emit(this.events.removeSuccess, ajax);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.emit(this.events.removeError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Subscription.prototype.destroy = function() {\n\n        this.unsubscribe();\n\n        Log.info('RC.core.Subscription: Destroyed');\n\n        return Observable.prototype.destroy.call(this);\n\n    };\n\n    Subscription.prototype.isSubscribed = function() {\n\n        return this.subscription &&\n               this.subscription.deliveryMode &&\n               this.subscription.deliveryMode.subscriberKey &&\n               this.subscription.deliveryMode.address;\n\n    };\n\n    /**\n     * @protected\n     */\n    Subscription.prototype.setTimeout = function() {\n\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - renewHandicapMs;\n\n        this.timeout = setTimeout(function() {\n\n            this.renew({});\n\n        }.bind(this), timeToExpiration);\n\n    };\n\n    /**\n     * @protected\n     */\n    Subscription.prototype.clearTimeout = function() {\n\n        clearTimeout(this.timeout);\n\n    };\n\n    /**\n     * Set new subscription info and re-create timeout\n     * @protected\n     * @param subscription\n     * @returns {Subscription}\n     */\n    Subscription.prototype.updateSubscription = function(subscription) {\n\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n\n    };\n\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     * @protected\n     * @returns {Subscription}\n     */\n    Subscription.prototype.unsubscribe = function() {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed()) this.pubnub.unsubscribe({channel: this.subscription.deliveryMode.address});\n        this.subscription = null;\n        return this;\n    };\n\n    /**\n     * @abstract\n     * @param {Object} message\n     * @returns {Subscription}\n     */\n    Subscription.prototype.notify = function(message) {\n\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n\n            var CryptoJS = this.getCrypto();\n\n            var key = CryptoJS.enc.Base64.parse(this.subscription.deliveryMode.encryptionKey);\n            var data = CryptoJS.enc.Base64.parse(message);\n            var decrypted = CryptoJS.AES.decrypt({ciphertext: data}, key, {mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7}).toString(CryptoJS.enc.Utf8);\n            message = JSON.parse(decrypted);\n\n        }\n\n        this.emit(this.events.notification, message);\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Subscription}\n     */\n    Subscription.prototype.subscribeAtPubnub = function() {\n\n        if (!this.isSubscribed()) return this;\n\n        var PUBNUB = this.getPubnub();\n\n        this.pubnub = PUBNUB.init({\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n\n        this.pubnub.ready();\n\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function(message, env, channel) {\n\n                Log.info('RC.core.Subscription: Incoming message', message);\n                this.notify(message);\n\n            }.bind(this),\n            connect: function() {\n                Log.info('RC.core.Subscription: PUBNUB connected');\n            }.bind(this)\n        });\n\n        return this;\n\n    };\n\n    module.exports = {\n        Class: Subscription,\n        /**\n         * @param {Context} context\n         * @returns {Subscription}\n         */\n        $get: function(context) {\n            return new Subscription(context);\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Subscription.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * istanbul ignore next\n */\ndefine(function(require, exports, module) {\n    'use strict';\n\n    var Observable = require('./Observable').Class;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.PageVisibility\n     */\n    function PageVisibility() {\n\n        Observable.call(this);\n\n        var hidden = \"hidden\",\n            onchange = function(evt) {\n\n                evt = evt || window.event;\n\n                var v = 'visible',\n                    h = 'hidden',\n                    evtMap = {\n                        focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n                    };\n\n                this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n\n                this.emit(this.events.change, this.visible);\n\n            }.bind(this);\n\n        this.visible = true;\n\n        if (typeof document == 'undefined' || typeof window == 'undefined') return;\n\n        // Standards:\n\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        // IE 9 and lower:\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        // All others:\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n\n    }\n\n    PageVisibility.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(PageVisibility.prototype, 'constructor', {value: PageVisibility, enumerable: false});\n\n    PageVisibility.prototype.events = {\n        change: 'change'\n    };\n\n    PageVisibility.prototype.isVisible = function() {\n        return this.visible;\n    };\n\n    module.exports = {\n        Class: PageVisibility,\n        /**\n         * @param {Context} context\n         * @returns {PageVisibility}\n         */\n        $get: function(context) {\n            return new PageVisibility();\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/PageVisibility.js\n ** module id = 13\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils');\n\n    /**\n     * @alias RCSDK.core.Helper\n     * @constructor\n     * @param {Context} context\n     */\n    function Helper(context) {\n        this.context = context;\n    }\n\n    Helper.prototype.defaultProperty = 'id';\n\n    /**\n     * @returns {Context}\n     */\n    Helper.prototype.getContext = function() {\n        return this.context;\n    };\n\n    /**\n     * @param {object} [options]\n     * @param {string} [id]\n     */\n    Helper.prototype.createUrl = function(options, id) {\n        return '';\n    };\n\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getId = function(object) {\n        return object && object[this.defaultProperty];\n    };\n\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {boolean}\n     */\n    Helper.prototype.isNew = function(object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {IHelperObject}\n     */\n    Helper.prototype.resetAsNew = function(object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getUri = function(object) {\n        return object && object.uri;\n    };\n\n    /**\n     * @param {Ajax} ajax\n     * @return {IHelperObject[]}\n     */\n    Helper.prototype.parseMultipartResponse = function(ajax) {\n\n        if (ajax.isResponseMultipart()) {\n\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function(result) {\n                return (!result.error);\n            }).map(function(result) {\n                return result.data;\n            });\n\n        } else { // Single ID\n\n            return [ajax.data];\n\n        }\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} [object]\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.loadRequest = function(object, options) {\n\n        return Utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.saveRequest = function(object, options) {\n\n        if (!object && !(options && options.post)) throw new Error('No Object');\n\n        return Utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            post: (options && options.post) || object\n        });\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.deleteRequest = function(object, options) {\n\n        options = options || {};\n\n        if (!this.getUri(object) && !(options && options.url)) throw new Error('Object has to be not new or URL must be provided');\n\n        return Utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n\n    };\n\n    /**\n     * If no url was provided, default SYNC url will be returned\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.syncRequest = function(options) {\n\n        options = options || {};\n\n        options.url = options.url || this.createUrl({sync: true});\n        options.get = options.get || {};\n\n        if (!!options.get.syncToken) {\n            options.get = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        } else {\n            options.get.syncType = 'FSync';\n        }\n\n        return options;\n\n    };\n\n    Helper.prototype.nextPageExists = function(data) {\n\n        return (data && data.navigation && ('nextPage' in data.navigation));\n\n    };\n\n    /**\n     * @param {IHelperObject[]} array - an array to be indexed\n     * @param {function(object)} [getIdFn] - must return an ID for each array item\n     * @param {boolean} [gather] - if true, then each index will have an array of items, that has same ID, otherwise the first indexed item wins\n     * @returns {*}\n     */\n    Helper.prototype.index = function(array, getIdFn, gather) {\n\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n\n        return array.reduce(function(index, item) {\n\n            var id = getIdFn(item);\n\n            if (!id || (index[id] && !gather)) return index;\n\n            if (gather) {\n                if (!index[id]) index[id] = [];\n                index[id].push(item);\n            } else {\n                index[id] = item;\n            }\n\n            return index;\n\n        }, {});\n\n    };\n\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * @param {IHelperObject[]} target\n     * @param {IHelperObject[]} supplement\n     * @param {function(IHelperObject)} [getIdFn]\n     * @param {boolean} [mergeItems] - if true, properties of _supplement_ item will be applied to _target_ item, otherwise _target_ item will be replaced\n     * @returns {*}\n     */\n    Helper.prototype.merge = function(target, supplement, getIdFn, mergeItems) {\n\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n\n        var supplementIndex = this.index(supplement, getIdFn),\n            updatedIDs = [];\n\n        var result = target.map(function(item) {\n\n            var id = getIdFn(item),\n                newItem = supplementIndex[id];\n\n            if (newItem) updatedIDs.push(id);\n\n            return newItem ? (mergeItems ? Utils.extend(item, newItem) : newItem) : item;\n\n        });\n\n        supplement.forEach(function(item) {\n\n            if (updatedIDs.indexOf(getIdFn(item)) == -1) result.push(item);\n\n        });\n\n        return result;\n\n    };\n\n    module.exports = {\n        Class: Helper,\n        /**\n         * @param {Context} context\n         * @returns {Helper}\n         */\n        $get: function(context) {\n            return new Helper(context);\n        }\n    };\n\n    /**\n     * @typedef {object} IHelperObject\n     * @property {string} id\n     * @property {string} uri\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Helper.js\n ** module id = 14\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    var Utils = require('./Utils'),\n        Log = require('./Log');\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.Observable\n     */\n    function Observable() {\n        if (!(this instanceof Observable)) throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', {value: {}, enumerable: false, writable: true});\n        Object.defineProperty(this, 'oneTimeEvents', {value: {}, enumerable: false, writable: true});\n        Object.defineProperty(this, 'oneTimeArguments', {value: {}, enumerable: false, writable: true});\n    }\n\n    // Object.create({}) is not needed\n    // Do not put Object or Function.prototype instead of {}, otherwise all instances will get non-writable 'name' property\n    // Observable.prototype = {};\n    Object.defineProperty(Observable.prototype, 'constructor', {value: Observable, enumerable: false});\n\n    Observable.prototype.hasListeners = function(event) {\n        return (event in this.listeners);\n    };\n\n    Observable.prototype.registerOneTimeEvent = function(event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n\n    Observable.prototype.on = function(events, callback) {\n\n        if (typeof events == 'string') events = [events];\n        if (!events) throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function') throw new Error('Callback must be a function');\n\n        var self = this;\n\n        events.forEach(function(event) {\n\n            if (!self.hasListeners(event)) self.listeners[event] = [];\n\n            self.listeners[event].push(callback);\n\n            if (self.isOneTimeEventFired(event)) { // Fire listener immediately if is inited already\n                Log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n\n        });\n\n        return this;\n\n    };\n\n    Observable.prototype.emit = function(event) {\n\n        if (this.isOneTimeEventFired(event)) {\n            Log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n\n        var self = this,\n            args = Utils.argumentsToArray(arguments).splice(1),\n            result = null;\n\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n\n        if (!this.hasListeners(event)) return null;\n\n        this.listeners[event].some(function(callback) {\n\n            result = callback.apply(self, args);\n            return (result === false);\n\n        });\n\n        return result;\n\n    };\n\n    Observable.prototype.off = function(event, callback) {\n        var self = this;\n        if (!callback) {\n            delete this.listeners[event];\n        } else {\n            if (!this.hasListeners(event)) return this;\n            this.listeners[event].forEach(function(cb, i) {\n\n                if (cb === callback) delete self.listeners[event][i];\n\n            });\n        }\n        return this;\n    };\n\n    Observable.prototype.isOneTimeEvent = function(event) {\n        return (event in this.oneTimeEvents);\n    };\n\n    Observable.prototype.isOneTimeEventFired = function(event) {\n        if (!this.isOneTimeEvent(event)) return false;\n        return (this.oneTimeEvents[event]);\n    };\n\n    Observable.prototype.setOneTimeEventFired = function(event) {\n        this.oneTimeEvents[event] = true;\n    };\n\n    Observable.prototype.setOneTimeEventArgumens = function(event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n\n    Observable.prototype.getOneTimeEventArgumens = function(event) {\n        return this.oneTimeArguments[event];\n    };\n\n    Observable.prototype.offAll = function() {\n        this.listeners = {};\n        this.oneTimeEvents = {};\n        this.oneTimeArguments = {};\n    };\n\n    Observable.prototype.destroy = function() {\n        this.offAll();\n        Log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n\n    /**\n     * @param {string} event\n     * @param {Array} args\n     * @param {function} [callback]\n     */\n    Observable.prototype.emitAndCallback = function(event, args, callback) {\n        args = Utils.argumentsToArray(args);\n        if (event) this.emit.apply(this, [event].concat(args));\n        if (callback) callback.apply(this, args);\n        return this;\n    };\n\n    module.exports = {\n        Class: Observable,\n        /**\n         * @param {Context} context\n         * @returns {Observable}\n         */\n        $get: function(context) {\n            return new Observable(context);\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Observable.js\n ** module id = 15\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils');\n\n    /**\n     * @typedef {object} IValidator\n     * @property {string} field\n     * @property {function} validator\n     */\n\n    /**\n     * @typedef {object} IValidatorResult\n     * @property {boolean} isValid\n     * @property {Object.<number, Error[]>} errors\n     */\n\n    /**\n     * @alias RCSDK.core.Validator\n     * @name Validator\n     */\n    var Validator = module.exports = {\n        /**\n         * @param {IValidator[]} validators\n         * @returns {IValidatorResult}\n         */\n        validate: function(validators) {\n\n            /** @type {IValidatorResult} */\n            var result = {\n                errors: {},\n                isValid: true\n            };\n\n            result.errors = validators.reduce(function(errors, validator) {\n\n                var res = validator.validator();\n\n                if (res.length > 0) {\n                    result.isValid = false;\n                    errors[validator.field] = errors[validator.field] || [];\n                    errors[validator.field] = errors[validator.field].concat(res);\n                }\n\n                return errors;\n\n            }, {});\n\n            return result;\n\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * @deprecated\n         * @param value\n         * @param multiple\n         * @returns {Function}\n         */\n        email: function(value, multiple) {\n            return function() {\n                if (!value) return [];\n                return Utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n            };\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * TODO International phone numbers\n         * @deprecated\n         * @param value\n         * @returns {Function}\n         */\n        phone: function(value) {\n            return function() {\n                if (!value) return [];\n                return Utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n            };\n        },\n        required: function(value) {\n            return function() {\n                return !value ? [new Error('Field is required')] : [];\n            };\n        },\n        length: function(value, max, min) {\n            return function() {\n\n                var errors = [];\n\n                if (!value) return errors;\n\n                value = value.toString();\n\n                if (min && value.length < min) errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n                if (max && value.length > max) errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n\n                return errors;\n\n            };\n        },\n        $get: function(context) {\n            return Validator;\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Validator.js\n ** module id = 16\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils');\n\n    /**\n     * @alias RCSDK.core.Log\n     * @name Log\n     */\n    var Log = module.exports = {\n        logDebug: false,\n        logInfo: false,\n        logWarnings: false,\n        logErrors: false,\n        addTimestamps: true,\n        /** @type {Console} */\n        console: console || { // safety\n            log: function() {},\n            warn: function() {},\n            info: function() {},\n            error: function() {}\n        },\n        disableAll: function() {\n            this.logDebug = false;\n            this.logInfo = false;\n            this.logWarnings = false;\n            this.logErrors = false;\n        },\n        enableAll: function() {\n            this.logDebug = true;\n            this.logInfo = true;\n            this.logWarnings = true;\n            this.logErrors = true;\n        },\n        parseArguments: function(args) {\n            args = Utils.argumentsToArray(args);\n            if (this.addTimestamps) args.unshift(new Date().toLocaleString(), '-');\n            return args;\n        },\n        debug: function() {\n            if (this.logDebug) this.console.log.apply(this.console, this.parseArguments(arguments));\n        },\n        info: function() {\n            if (this.logInfo) this.console.info.apply(this.console, this.parseArguments(arguments));\n        },\n        warn: function() {\n            if (this.logWarnings) this.console.warn.apply(this.console, this.parseArguments(arguments));\n        },\n        error: function() {\n            if (this.logErrors) this.console.error.apply(this.console, this.parseArguments(arguments));\n        },\n        $get: function(context) {\n            return Log;\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Log.js\n ** module id = 17\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var hasOwn = Object.prototype.hasOwnProperty,\n        toString = Object.prototype.toString,\n        rdigit = /\\d/,\n        class2type = {};\n\n    // Populate the class2type map\n    'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function(name) {\n        class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n    });\n\n    /**\n     * @alias RCSDK.core.Utils\n     * @name Utils\n     */\n    var Utils = module.exports = {\n\n        /**\n         * Ported from jQuery.fn.extend\n         * Optional first parameter makes deep copy\n         * @param {object} targetObject\n         * @param {object} sourceObject\n         * @returns {object}\n         */\n        extend: function extend(targetObject, sourceObject) {\n\n            var options, name, src, copy, copyIsArray, clone,\n                target = arguments[0] || {},\n                i = 1,\n                length = arguments.length,\n                deep = false;\n\n            // Handle a deep copy situation\n            if (typeof target === \"boolean\") {\n                deep = target;\n\n                // skip the boolean and the target\n                target = arguments[i] || {};\n                i++;\n            }\n\n            // Handle case when target is a string or something (possible in deep copy)\n            if (typeof target !== \"object\" && !this.isFunction(target)) {\n                target = {};\n            }\n\n            for (; i < length; i++) {\n\n                // Only deal with non-null/undefined values\n                if ((options = arguments[i]) !== null) {\n\n                    // Extend the base object\n                    for (name in options) {\n\n                        src = target[name];\n                        copy = options[name];\n\n                        // Prevent never-ending loop\n                        if (target === copy) {\n                            continue;\n                        }\n\n                        // Recurse if we're merging plain objects or arrays\n                        if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n\n                            if (copyIsArray) {\n                                copyIsArray = false;\n                                clone = src && this.isArray(src) ? src : [];\n                            } else {\n                                clone = src && this.isPlainObject(src) ? src : {};\n                            }\n\n                            // Never move original objects, clone them\n                            target[name] = this.extend(deep, clone, copy);\n\n                            // Don't bring in undefined values\n                        } else if (copy !== undefined) {\n\n                            target[name] = copy;\n\n                        }\n                    }\n                }\n            }\n\n            // Return the modified object\n            return target;\n\n        },\n\n        forEach: function(object, cb) {\n\n            for (var i in object) {\n\n                if (!object.hasOwnProperty(i)) continue;\n\n                var res = cb(object[i], i);\n\n                if (res === false) break;\n\n            }\n\n        },\n\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/maste.r/lib/querystring.js\n         * @param {object} parameters\n         * @returns {string}\n         */\n        queryStringify: function(parameters) {\n\n            var array = [],\n                self = this;\n\n            this.forEach(parameters, function(v, i) {\n\n                if (self.isArray(v)) {\n                    v.forEach(function(vv) {\n                        array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                    });\n                } else {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n                }\n\n            });\n\n            return array.join('&');\n\n        },\n\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/maste.r/lib/querystring.js\n         * @param {string} queryString\n         * @returns {object}\n         */\n        parseQueryString: function(queryString) {\n\n            var argsParsed = {},\n                self = this;\n\n            queryString.split('&').forEach(function(arg) {\n\n                arg = decodeURIComponent(arg);\n\n                if (arg.indexOf('=') == -1) {\n\n                    argsParsed[arg.trim()] = true;\n\n                } else {\n\n                    var pair = arg.split('='),\n                        key = pair[0].trim(),\n                        value = pair[1].trim();\n\n                    if (key in argsParsed) {\n                        if (key in argsParsed && !self.isArray(argsParsed[key])) argsParsed[key] = [argsParsed[key]];\n                        argsParsed[key].push(value);\n                    } else {\n                        argsParsed[key] = value;\n                    }\n\n                }\n\n            });\n\n            return argsParsed;\n\n        },\n\n        /**\n         * Returns true if the passed value is valid email address.\n         * @param {string} v\n         * @param {boolean} multiple Checks multiple comma separated emails according to RFC 2822\n         * @returns {boolean}\n         */\n        isEmail: function(v, multiple) {\n            if (!!multiple) {\n                //this Regexp is also suitable for multiple emails (comma separated)\n                return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n            } else {\n                return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n            }\n\n        },\n\n        isPhoneNumber: function(v) {\n            return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n        },\n\n        /**\n         * @param args\n         * @returns {Array}\n         */\n        argumentsToArray: function(args) {\n            return Array.prototype.slice.call(args || [], 0);\n        },\n\n        isDate: function(obj) {\n            return this.type(obj) === \"date\";\n        },\n\n        isFunction: function(obj) {\n            return this.type(obj) === \"function\";\n        },\n\n        isArray: Array.isArray || function(obj) {\n            return this.type(obj) === \"array\";\n        },\n\n        // A crude way of determining if an object is a window\n        isWindow: function(obj) {\n            return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n        },\n\n        isNaN: function(obj) {\n            return obj === null || !rdigit.test(obj) || isNaN(obj);\n        },\n\n        type: function(obj) {\n            return obj === null ?\n                   String(obj) :\n                   class2type[toString.call(obj)] || \"object\";\n        },\n\n        isPlainObject: function(obj) {\n            // Must be an Object.\n            // Because of IE, we also have to check the presence of the constructor property.\n            // Make sure that DOM nodes and window objects don't pass through, as well\n            if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n                return false;\n            }\n\n            // Not own constructor property must be Object\n            if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n                return false;\n            }\n\n            // Own properties are enumerated firstly, so to speed up,\n            // if last one is own, then all properties are own.\n\n            var key;\n            for (key in obj) {}\n\n            return key === undefined || hasOwn.call(obj, key);\n        },\n\n        getProperty: function(obj, property) {\n\n            return property\n                .split(/[.[\\]]/)\n                .reduce(function(res, part) {\n                    if (!res) return undefined;\n                    return part ? res[part] : res;\n                }, obj);\n\n        },\n\n        poll: function(fn, interval, timeout) {\n\n            this.stopPolling(timeout);\n\n            interval = interval || 1000;\n\n            var next = function(delay) {\n\n                delay = delay || interval;\n\n                interval = delay;\n\n                return setTimeout(function() {\n\n                    fn(next, delay);\n\n                }, delay);\n\n            };\n\n            return next();\n\n        },\n\n        stopPolling: function(timeout) {\n            if (timeout) clearTimeout(timeout);\n        },\n\n        parseString: function(s) {\n            return s ? s.toString() : '';\n        },\n\n        parseNumber: function(n) {\n            if (!n) return 0;\n            n = parseFloat(n);\n            return isNaN(n) ? 0 : n;\n        },\n\n        $get: function(context) {\n            return Utils;\n        }\n\n    };\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Utils.js\n ** module id = 18\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils');\n\n    /**\n     * @alias RCSDK.core.List\n     * @name List\n     */\n    var List = module.exports = {\n\n        /**\n         * @param {string} property\n         * @returns {function(object)}\n         */\n        propertyExtractor: function(property) {\n            return function(item, options) {\n                return property ? ((item && item[property]) || null) : item;\n            };\n        },\n\n        /**\n         * Non-string types are converted to string\n         * Non-string types are extracted as an empty string if they could be converted to false\n         * If no options.sortBy given the item itself is extracted\n         * Compares strings:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {string} a\n         * @param {string} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        stringComparator: function(a, b, options) {\n\n            return Utils.parseString(a).localeCompare(Utils.parseString(b));\n\n        },\n\n        /**\n         * Non-numeric types are extracted as 0 if they could be converted to false\n         * Objects that could not be converted to number are extracted as 0\n         * If no options.sortBy given the item itself is extracted\n         * See parseFloat for more info\n         * Compares numbers:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Function does not check types\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {number} a\n         * @param {number} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        numberComparator: function(a, b, options) {\n\n            return (Utils.parseNumber(a) - Utils.parseNumber(b));\n\n        },\n\n        /**\n         * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n         * compare function (_compareFn_ option, by default Helper.stringComparator)\n         * Merged options are provided to _extractFn_ and _compareFn_\n         * TODO Check memory leaks for all that options links\n         * @param {IListComparatorOptions} [options]\n         * @returns {function(object, object)}\n         */\n        comparator: function(options) {\n\n            options = Utils.extend({\n                extractFn: this.propertyExtractor((options && options.sortBy) || null),\n                compareFn: this.stringComparator\n            }, options);\n\n            /**\n             * @param {object} item1\n             * @param {object} item2\n             * @returns {number}\n             */\n            function comparator(item1, item2) {\n\n                return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n\n            }\n\n            return comparator;\n\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        equalsFilter: function(obj, options) {\n            return (options.condition === obj);\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        containsFilter: function(obj, options) {\n            return (obj && obj.toString().indexOf(options.condition) > -1);\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options - `condition` must be an instance of RegExp\n         * @returns {boolean}\n         */\n        regexpFilter: function(obj, options) {\n            if (!(options.condition instanceof RegExp)) throw new Error('Condition must be an instance of RegExp');\n            return (options.condition.test(obj));\n        },\n\n        /**\n         * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n         * compare function (`filterFn` option, by default Helper.equalsFilter)\n         * Merged options are provided to `extractFn` and `compareFn`\n         * Set `filterBy` to null to force `propertyExtractor` to return object itself\n         * TODO Check memory leaks for all that options links\n         * @param {IListFilterOptions[]} [filterConfigs]\n         * @returns {function(object)}\n         */\n        filter: function(filterConfigs) {\n\n            var self = this;\n\n            filterConfigs = (filterConfigs || []).map(function(opt) {\n\n                return Utils.extend({\n                    condition: '',\n                    extractFn: self.propertyExtractor((opt && opt.filterBy) || null),\n                    filterFn: self.equalsFilter\n                }, opt);\n\n            });\n\n            /**\n             * @param {object} item\n             * @returns {boolean}\n             */\n            function filter(item) {\n\n                return filterConfigs.reduce(function(pass, opt) {\n\n                    if (!pass || !opt.condition) return pass;\n                    return opt.filterFn(opt.extractFn(item, opt), opt);\n\n                }, true);\n\n            }\n\n            return filter;\n\n        },\n\n        $get: function(context) {\n            return List;\n        }\n\n    };\n\n    /**\n     * @typedef {object} IListComparatorOptions\n     * @property {string} sortBy\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} compareFn\n     */\n\n    /**\n     * @typedef {object} IListFilterOptions\n     * @property {string} filterBy\n     * @property {object} condition\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} filterFn\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/List.js\n ** module id = 19\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CountryHelper(context) {\n        Helper.call(this, context);\n    }\n\n    CountryHelper.prototype = Object.create(Helper.prototype);\n\n    CountryHelper.prototype.createUrl = function() {\n        return '/dictionary/country';\n    };\n\n    module.exports = {\n        Class: CountryHelper,\n        /**\n         * @param {Context} context\n         * @returns {CountryHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('CountryHelper', function() {\n                return new CountryHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ICountry\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} callingCode\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Country.js\n ** module id = 20\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceModelHelper(context) {\n        Helper.call(this, context);\n    }\n\n    DeviceModelHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IDeviceModel} device\n     * @returns {string}\n     */\n    DeviceModelHelper.prototype.getId = function(device) {\n\n        if (!device) return null;\n\n        return device.id + (\n                device.addons && device.addons[0]\n                    ? '-' + device.addons[0].id + '-' + device.addons[0].count\n                    : ''\n            );\n\n    };\n\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     * @param {IDeviceModel} device\n     * @returns {IDeviceModel}\n     */\n    DeviceModelHelper.prototype.cleanForSaving = function(device) {\n\n        if (!device) return null;\n\n        delete device.name;\n        delete device.deviceClass;\n\n        if (device.addons && device.addons.length > 0) {\n\n            device.addons.forEach(function(addon, i) {\n                delete device.addons[i].name;\n            });\n\n        } else {\n\n            delete device.addons;\n\n        }\n\n        return device;\n\n    };\n\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n     * @type {IDeviceModel[]}\n     */\n    DeviceModelHelper.prototype.devices = [\n        {\n            id: '-1',\n            name: 'Softphone'\n        },\n        {\n            id: '0',\n            name: 'Existing device'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '23',\n            name: 'Polycom IP 321 Basic IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '30',\n            name: 'Polycom IP 550 HD Manager IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '37',\n            name: 'Polycom IP 6000 Conference Phone',\n            deviceClass: 'Conference Phone'\n        },\n        {\n            id: '40',\n            name: 'Polycom IP 335 HD IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '51',\n            name: 'Cisco SPA-303 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\tDesk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '3'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '52',\n            name: 'Cisco SPA-122 ATA',\n            deviceClass: 'Analog Adapter'\n        },\n        {\n            id: '53',\n            name: 'Polycom VVX-500 Color Touchscreen',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '54',\n            name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '55',\n            name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        }\n    ];\n\n    module.exports = {\n        Class: DeviceModelHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceModelHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('DeviceModelHelper', function() {\n                return new DeviceModelHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IDeviceModel\n     * @property {string} id\n     * @property {string} name\n     * @property {string} deviceClass\n     * @property {string} addons\n     */\n\n    /**\n     * @typedef {Object} IDeviceModelAddon\n     * @property {string} id\n     * @property {string} name\n     * @property {string} count\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/DeviceModel.js\n ** module id = 21\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LanguageHelper(context) {\n        Helper.call(this, context);\n    }\n\n    LanguageHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @type {ILanguage[]}\n     */\n    LanguageHelper.prototype.languages = [\n        {\n            id: '1033',\n            name: 'English (US)'\n        },\n        {\n            id: '3084',\n            name: 'French (Canada)'\n        }\n    ];\n\n    module.exports = {\n        Class: LanguageHelper,\n        /**\n         * @param {Context} context\n         * @returns {LanguageHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('LanguageHelper', function() {\n                return new LanguageHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ILanguage\n     * @property {string} id\n     * @property {string} name\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Language.js\n ** module id = 22\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        List = require('../core/List'),\n        Utils = require('../core/Utils');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LocationHelper(context) {\n        Helper.call(this, context);\n        this.state = require('./State').$get(context);\n    }\n\n    LocationHelper.prototype = Object.create(Helper.prototype);\n\n    LocationHelper.prototype.createUrl = function() {\n        return '/dictionary/location';\n    };\n\n    /**\n     * @param {ILocationFilterOptions} options\n     * @returns {function(ILocation)}\n     */\n    LocationHelper.prototype.filter = function(options) {\n\n        var uniqueNPAs = [];\n\n        options = Utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.stateId,\n                filterFn: function(item, opts) {\n                    return (this.state.getId(item.state) == opts.condition);\n                }.bind(this)\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function(item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    } else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {comparator}\n     */\n    LocationHelper.prototype.comparator = function(options) {\n\n        options = Utils.extend({\n            sortBy: 'npa'\n        }, options);\n\n        if (options.sortBy == 'nxx') {\n\n            /**\n             * @param {ILocation} item\n             * @returns {number}\n             */\n            options.extractFn = function(item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n\n            options.compareFn = List.numberComparator;\n\n        }\n\n        return List.comparator(options);\n\n    };\n\n    module.exports = {\n        Class: LocationHelper,\n        /**\n         * @param {Context} context\n         * @returns {LocationHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('LocationHelper', function() {\n                return new LocationHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ILocation\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {IState} state\n     */\n\n    /**\n     * @typedef {object} ILocationFilterOptions\n     * @property {string} stateId\n     * @property {boolean} onlyUniqueNPA\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Location.js\n ** module id = 23\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ShippingMethodHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ShippingMethodHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-3 id done\n     * @type {IShippingMethod[]}\n     */\n    ShippingMethodHelper.prototype.shippingMethods = [\n        {\n            id: '1',\n            name: 'Ground Shipping (5-7 business days)'\n        },\n        {\n            id: '2',\n            name: '2-days Shipping'\n        },\n        {\n            id: '3',\n            name: 'Overnight Shipping'\n        }\n    ];\n\n    module.exports = {\n        Class: ShippingMethodHelper,\n        /**\n         * @param {Context} context\n         * @returns {ShippingMethodHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ShippingMethodHelper', function() {\n                return new ShippingMethodHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IShippingMethod\n     * @property {string} id\n     * @property {string} name\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/ShippingMethod.js\n ** module id = 24\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        List = require('../core/List'),\n        Utils = require('../core/Utils');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function StateHelper(context) {\n        Helper.call(this, context);\n        this.countryHelper = require('./Country').$get(context);\n    }\n\n    StateHelper.prototype = Object.create(Helper.prototype);\n\n    StateHelper.prototype.createUrl = function() {\n        return '/dictionary/state';\n    };\n\n    /**\n     * @param {IStateOptions} options\n     * @returns {function(IState)}\n     */\n    StateHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            countryId: ''\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.countryId,\n                filterFn: function(item, opts) {\n                    return (this.countryHelper.getId(item.country) == opts.condition);\n                }.bind(this)\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: StateHelper,\n        /**\n         * @param {Context} context\n         * @returns {StateHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('StateHelper', function() {\n                return new StateHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IState\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {ICountry} country\n     */\n\n    /**\n     * @typedef {object} IStateOptions\n     * @property {string} countryId\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/State.js\n ** module id = 25\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function TimezoneHelper(context) {\n        Helper.call(this, context);\n    }\n\n    TimezoneHelper.prototype = Object.create(Helper.prototype);\n\n    TimezoneHelper.prototype.createUrl = function() {\n        return '/dictionary/timezone';\n    };\n\n    module.exports = {\n        Class: TimezoneHelper,\n        /**\n         * @param {Context} context\n         * @returns {TimezoneHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('TimezoneHelper', function() {\n                return new TimezoneHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ITimezone\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} description\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Timezone.js\n ** module id = 26\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function AccountHelper(context) {\n        Helper.call(this, context);\n    }\n\n    AccountHelper.prototype = Object.create(Helper.prototype);\n\n    AccountHelper.prototype.createUrl = function() {\n        return '/account/~';\n    };\n\n    module.exports = {\n        Class: AccountHelper,\n        /**\n         * @param {Context} context\n         * @returns {AccountHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('AccountHelper', function() {\n                return new AccountHelper(context);\n            });\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Account.js\n ** module id = 27\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function BlockedNumberHelper(context) {\n        Helper.call(this, context);\n    }\n\n    BlockedNumberHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     *\n     * @param {IBlockedNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    BlockedNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' +\n               (options.extensionId ? options.extensionId : '~') +\n               '/blocked-number' +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IBlockedNumber} item\n     */\n    BlockedNumberHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'phoneNumber', validator: Validator.phone(item.phoneNumber)},\n            {field: 'phoneNumber', validator: Validator.required(item.phoneNumber)},\n            {field: 'name', validator: Validator.required(item.name)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: BlockedNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {BlockedNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('BlockedNumberHelper', function() {\n                return new BlockedNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IBlockedNumber\n     * @property {string} name\n     * @property {string} phoneNumber\n     */\n\n    /**\n     * @typedef {object} IBlockedNumberOptions\n     * @property {string} extensionId\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/BlockedNumber.js\n ** module id = 28\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Utils = require('../core/Utils'),\n        List = require('../core/List');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CallHelper(context) {\n        Helper.call(this, context);\n        this.presence = require('./Presence').$get(context);\n        this.contact = require('./Contact').$get(context);\n    }\n\n    CallHelper.prototype = Object.create(Helper.prototype);\n\n\n    /**\n     * @param {ICallOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    CallHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (!('personal' in options) && !('extensionId' in options)) options.personal = true;\n\n        return '/account/~/' +\n               (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n               (options.active ? 'active-calls' : 'call-log') +\n               (id ? '/' + id : '');\n\n    };\n\n    CallHelper.prototype.getSessionId = function(call) {\n        return (call && call.sessionId);\n    };\n\n    CallHelper.prototype.isInProgress = function(call) {\n        return (call && call.result == 'In Progress');\n    };\n\n    CallHelper.prototype.isAlive = function(call) {\n        return (call && call.availability == 'Alive');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isInbound = function(call) {\n        return (call && call.direction == 'Inbound');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isOutbound = function(call) {\n        return !this.isInbound(call);\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isMissed = function(call) {\n        return (call && call.result == 'Missed');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isFindMe = function(call) {\n        return (call && call.action == 'FindMe');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo}\n     */\n    CallHelper.prototype.getCallerInfo = function(call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo[]}\n     */\n    CallHelper.prototype.getAllCallerInfos = function(call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n\n    CallHelper.prototype.formatDuration = function(call) {\n\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n\n        var duration = parseInt(call.duration),\n            hours = Math.floor(duration / (60 * 60)),\n            mins = Math.floor((duration % (60 * 60)) / 60),\n            secs = Math.floor(duration % 60);\n\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n\n    };\n\n    /**\n     * @param {ICallFilterOptions} [options]\n     * @returns {function(ICall)}\n     */\n    CallHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n\n        return List.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'type', condition: options.type}\n        ]);\n\n    };\n\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    CallHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'startTime'\n        }, options));\n\n    };\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     * @param {IContact[]} contacts\n     * @param {ICall[]} calls\n     * @param {IContactMatchOptions} [options]\n     */\n    CallHelper.prototype.attachContacts = function(contacts, calls, options) {\n\n        var self = this;\n\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function(callerInfos, call) {\n\n            return callerInfos.concat(self.getAllCallerInfos(call));\n\n        }, []);\n\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    };\n\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} options\n     * @returns {boolean}\n     */\n    CallHelper.prototype.checkMergeability = function(outboundRingOutCall, inboundCall, options) {\n\n        function getTime(dateString) {\n            return (new Date(dateString)).getTime();\n        }\n\n        return (\n        (!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n        // Check directions\n        outboundRingOutCall.direction == 'Outbound' &&\n        inboundCall.direction == 'Inbound' &&\n        // Check that start times are equal or close enough\n        ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n        // Check that numbers match\n        inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n        (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n\n    };\n\n    /**\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} [options]\n     * @returns {Array}\n     */\n    CallHelper.prototype.combineCalls = function(outboundRingOutCall, inboundCall, options) {\n\n        options = options || {};\n\n        var result = [];\n\n        outboundRingOutCall.hasSubsequent = true;\n\n        if (options.merge) {\n\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n\n        } else {\n\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n\n        }\n\n        return result;\n\n    };\n\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     *\n     * @param {ICall[]} calls\n     * @param {ICallProcessingOptions} options\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.processCalls = function(calls, options) {\n\n        var processedCalls = [],\n            callsToMerge = [],\n            self = this;\n\n        // Iterate through calls\n        calls.forEach(function(call) {\n\n            var merged = false;\n\n            call.subsequent = false;\n            call.hasSubsequent = false;\n\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function(secondCall) {\n\n                if (call === secondCall) return false;\n\n                if (self.checkMergeability(call, secondCall, options)) {\n\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n\n                    merged = true;\n\n                }\n\n                return merged;\n\n            });\n\n        });\n\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function(call) {\n\n            if (callsToMerge.indexOf(call) == -1) processedCalls.push(call);\n\n        });\n\n        return processedCalls;\n\n    };\n\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     * @param {IPresenceCall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.parsePresenceCalls = function(activeCalls) {\n\n        return activeCalls.map(function(activeCall) {\n\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: {phoneNumber: activeCall.from},\n                to: {phoneNumber: activeCall.to},\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n\n        }, this);\n\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {string}\n     */\n    CallHelper.prototype.getSignature = function(call) {\n\n        function cleanup(phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        }\n\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n\n    };\n\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {IPresence} presence\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergePresenceCalls = function(presenceCalls, presence) {\n\n        var currentDate = new Date(),\n\n            activeCalls = this\n                .parsePresenceCalls(presence && presence.activeCalls || [])\n                .map(function(call) {\n                    // delete property to make sure it is skipped during merge\n                    delete call.startTime;\n                    return call;\n                });\n\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n\n        presenceCalls.forEach(function(call) {\n            if (!call.startTime) call.startTime = currentDate.toISOString();\n        });\n\n        return presenceCalls;\n\n    };\n\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {ICall[]} calls\n     * @param {ICall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergeAll = function(presenceCalls, calls, activeCalls) {\n\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n\n    };\n\n    module.exports = {\n        Class: CallHelper,\n        /**\n         * @param {Context} context\n         * @returns {CallHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('CallHelper', function() {\n                return new CallHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ICall\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} sessionId\n     * @property {string} startTime\n     * @property {string} duration\n     * @property {string} type\n     * @property {string} direction\n     * @property {string} action\n     * @property {string} result\n     * @property {ICallerInfo} to\n     * @property {ICallerInfo} from\n     */\n\n    /**\n     * @typedef {object} ICallOptions\n     * @property {string} extensionId\n     * @property {boolean} active\n     * @property {boolean} personal\n     */\n\n    /**\n     * @typedef {object} ICallProcessingOptions\n     * @property {boolean} strict\n     * @property {boolean} merge\n     * @property {number} maxStartTimeDiscrepancy\n     */\n\n    /**\n     * @typedef {object} ICallFilterOptions\n     * @property {string} extensionId\n     * @property {string} direction\n     * @property {string} type\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/CallerInfo.html\n     * @typedef {Object} ICallerInfo\n     * @property {string} phoneNumber\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} location\n     * @property {IContact} [contact] - corresponding contact (added by attachContacts methods)\n     * @property {string} [contactPhone] - contact's phone as written in contact (added by attachContacts methods)\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Call.js\n ** module id = 29\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ConferencingHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ConferencingHelper.prototype = Object.create(Helper.prototype);\n\n    ConferencingHelper.prototype.createUrl = function() {\n        return '/account/~/extension/~/conferencing';\n    };\n\n    module.exports = {\n        Class: ConferencingHelper,\n        /**\n         * @param {Context} context\n         * @returns {ConferencingHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ConferencingHelper', function() {\n                return new ConferencingHelper(context);\n            });\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Conferencing.js\n ** module id = 30\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('../core/Utils'),\n        Validator = require('../core/Validator'),\n        Helper = require('../core/Helper').Class,\n        List = require('../core/List');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ContactHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IContactOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ContactHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' +\n                   (options.extensionId ? options.extensionId : '~') +\n                   '/address-book';\n\n        if (options.sync) return root + '-sync';\n\n        return root +\n               (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * Returns all values of the given fields if value exists\n     * @param {(IContact|object)} where\n     * @param {Array} fields\n     * @param {boolean} [asHash]\n     * @protected\n     * @returns {Object}\n     */\n    ContactHelper.prototype.getFieldValues = function(where, fields, asHash) {\n\n        return fields.reduce(function(result, field) {\n\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                } else {\n                    result.push(where[field]);\n                }\n            }\n\n            return result;\n\n        }, asHash ? {} : []);\n\n    };\n\n    /**\n     * @param {IContact} contact\n     * @returns {string}\n     */\n    ContactHelper.prototype.getFullName = function(contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getEmails = function(contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getPhones = function(contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getFaxes = function(contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getAddresses = function(contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @returns {boolean}\n     */\n    ContactHelper.prototype.isAlive = function(contact) {\n        return (contact.availability == 'Alive');\n    };\n\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} string\n     * @param {IContactMatchOptions} [options]\n     * @returns {(string|null)}\n     */\n    ContactHelper.prototype.match = function(contact, string, options) {\n\n        options = Utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function(value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n\n        string = options.transformFn(string, options);\n\n        var found = null;\n\n        if (!string) return found;\n\n        function matchWith(value) {\n\n            // skip unnecessary cycles if match has been found\n            if (found) return;\n\n            var transformed = options.transformFn(value, options);\n\n            if (!transformed) return;\n\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n\n            if (match) found = value;\n\n        }\n\n        // Search in fields\n        options.fields.forEach(function(field) {\n            matchWith(contact[field]);\n        });\n\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found) this.addressFields.forEach(function(field) {\n\n            // skip unnecessary cycles if match has been found or no field value\n            if (!contact[field] || found) return;\n\n            this.addressSubFields.forEach(function(subField) {\n                matchWith(contact[field][subField]);\n            });\n\n        }, this);\n\n        return found;\n\n    };\n\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} phone\n     * @param {IContactMatchOptions} [options]\n     * @returns {string|null}\n     */\n    ContactHelper.prototype.matchAsPhone = function(contact, phone, options) {\n\n        return this.match(contact, phone, Utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function(value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n\n    };\n\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     * @param {ICallerInfo[]} callerInfos\n     * @param {IContact[]} contacts\n     * @param {IContactMatchOptions} [options]\n     */\n    ContactHelper.prototype.attachToCallerInfos = function(callerInfos, contacts, options) {\n\n        var self = this,\n            callerInfoIndex = this.index(callerInfos, function(callerInfo) { return callerInfo.phoneNumber; }, true);\n\n        Utils.forEach(callerInfoIndex, function(indexedCallerInfos, phoneNumber) {\n\n            var foundContact = null,\n                foundPhone = null;\n\n            contacts.some(function(contact) {\n\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n\n                if (foundPhone) foundContact = contact;\n\n                return foundPhone;\n\n            });\n\n            if (foundContact) {\n\n                indexedCallerInfos.forEach(function(callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n\n            }\n\n        });\n\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ContactHelper.prototype.comparator = function(options) {\n\n        var self = this;\n\n        return List.comparator(Utils.extend({\n            extractFn: function(contact, options) {\n                return self.getFullName(contact);\n            }\n        }, options));\n\n    };\n\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     * @param {IContactOptions} [options]\n     * @returns {function(IContact)}\n     */\n    ContactHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n\n        return List.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {condition: options.startsWith, filterFn: function(item, opts) { return self.match(item, opts.condition); }},\n            {condition: options.phonesOnly, filterFn: function(item, opts) { return (self.getPhones(item).length > 0); }},\n            {condition: options.faxesOnly, filterFn: function(item, opts) { return (self.getFaxes(item).length > 0); }}\n        ]);\n\n    };\n\n    /**\n     * @param {IContact} item\n     */\n    ContactHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'firstName', validator: Validator.required(item.firstName)},\n            {field: 'lastName', validator: Validator.required(item.lastName)},\n            {field: 'email', validator: Validator.email(item.email)},\n            {field: 'email2', validator: Validator.email(item.email2)},\n            {field: 'email3', validator: Validator.email(item.email3)}\n        ]);\n\n    };\n\n    ContactHelper.prototype.phoneFields = [\n        'homePhone',\n        'homePhone2',\n        'businessPhone',\n        'businessPhone2',\n        'mobilePhone',\n        'companyPhone',\n        'assistantPhone',\n        'carPhone',\n        'otherPhone',\n        'callbackPhone'\n    ];\n\n    ContactHelper.prototype.faxFields = [\n        'businessFax',\n        'otherFax'\n    ];\n\n    ContactHelper.prototype.addressFields = [\n        'homeAddress',\n        'businessAddress',\n        'otherAddress'\n    ];\n\n    ContactHelper.prototype.addressSubFields = [\n        'street',\n        'city',\n        'state',\n        'zip'\n    ];\n\n    ContactHelper.prototype.nameFields = [\n        'firstName',\n        'middleName',\n        'lastName',\n        'nickName'\n    ];\n\n    ContactHelper.prototype.otherFields = [\n        'company',\n        'jobTitle',\n        'webPage',\n        'notes'\n    ];\n\n    ContactHelper.prototype.emailFields = [\n        'email',\n        'email2',\n        'email3'\n    ];\n\n    module.exports = {\n        Class: ContactHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ContactHelper', function() {\n                return new ContactHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IContactOptions\n     * @property {string} extensionId\n     * @property {string} groupId\n     */\n\n    /**\n     * @typedef {object} IContactFilterOptions\n     * @property {string} startsWith\n     * @property {boolean} alive\n     */\n\n    /**\n     * @typedef {object} IContactMatchOptions\n     * @property {function(object, IContactMatchOptions)} transformFn\n     * @property {boolean} strict - if false look for as sub string\n     * @property {boolean} inAddresses - look in addresses as well\n     * @property {string[]} fields - in which fields to look for\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactAddressInfo\n     * @typedef {Object} IContactAddress\n     * @property {string} country\n     * @property {string} street\n     * @property {string} city\n     * @property {string} state\n     * @property {string} zip\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ContactInfo\n     * @typedef {Object} IContactBrief\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} email\n     * @property {IContactAddress} businessAddress\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactInfo\n     * @typedef {Object} IContact\n     *\n     * Shared:\n     * @property {string} id\n     * @property {string} uri\n     *\n     * Names:\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} nickName\n     * @property {string} middleName\n     *\n     * Emails:\n     * @property {string} email\n     * @property {string} email2\n     * @property {string} email3\n     *\n     * Addresses:\n     * @property {IContactAddress} businessAddress\n     * @property {IContactAddress} homeAddress\n     * @property {IContactAddress} otherAddress\n     *\n     * Phones:\n     * @property {string} homePhone\n     * @property {string} homePhone2\n     * @property {string} businessPhone\n     * @property {string} businessPhone2\n     * @property {string} mobilePhone\n     * @property {string} companyPhone\n     * @property {string} assistantPhone\n     * @property {string} carPhone\n     * @property {string} otherPhone\n     * @property {string} callbackPhone\n     *\n     * @property {string} businessFax\n     * @property {string} otherFax\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Contact.js\n ** module id = 31\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactGroupHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ContactGroupHelper.prototype = Object.create(Helper.prototype);\n    ContactGroupHelper.prototype.createUrl = function(options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n\n    /**\n     * @param {IContactGroup} item\n     */\n    ContactGroupHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'groupName', validator: Validator.required(item && item.groupName)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: ContactGroupHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactGroupHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ContactGroupHelper', function() {\n                return new ContactGroupHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IContactGroup\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} notes\n     * @property {string} groupName\n     * @property {number} contactsCount\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/ContactGroup.js\n ** module id = 32\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n        this.deviceModel = require('./DeviceModel').$get(context);\n    }\n\n    DeviceHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IDeviceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    DeviceHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (options.order) return '/account/~/order';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/device' +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IDevice} item\n     */\n    DeviceHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'emergencyServiceAddress-street', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)},\n            {field: 'emergencyServiceAddress-city', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)},\n            {field: 'emergencyServiceAddress-state', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)},\n            {field: 'emergencyServiceAddress-country', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)},\n            {field: 'emergencyServiceAddress-zip', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)},\n            {field: 'emergencyServiceAddress-customerName', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)},\n            {field: 'extension', validator: Validator.required(this.extension.getId(item && item.extension))},\n            {field: 'model', validator: Validator.required(this.deviceModel.getId(item && item.model))}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: DeviceHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('DeviceHelper', function() {\n                return new DeviceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IDevice\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} type\n     * @property {string} name\n     * @property {string} serial\n     * @property {IDeviceModel} model\n     * @property {IExtensionShort} extension TODO IExtension?\n     * @property {IDeviceAddress} emergencyServiceAddress\n     * @property {IDeviceShipping} shipping\n     * @property {IDevicePhoneLine[]} phoneLines\n     */\n\n    /**\n     * @typedef {Object} IDeviceOrder\n     * @property {IDevice[]} devices\n     */\n\n    /**\n     * @typedef {Object} IDeviceAddress\n     * @property {string} street\n     * @property {string} street2\n     * @property {string} city\n     * @property {string} state\n     * @property {string} country\n     * @property {string} zip\n     * @property {string} customerName\n     */\n\n    /**\n     * @typedef {Object} IDeviceShipping\n     * @property {IDeviceAddress} address\n     * @property {IShippingMethod} method\n     * @property {string} status\n     */\n\n    /**\n     * @typedef {Object} IDevicePhoneLine\n     * @property {string} lineType\n     * @property {IPhoneNumber} phoneInfo\n     */\n\n    /**\n     * @typedef {Object} IDeviceOptions\n     * @property {string} extensionId\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Device.js\n ** module id = 33\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        List = require('../core/List'),\n        Utils = require('../core/Utils');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ExtensionHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ExtensionHelper.prototype = Object.create(Helper.prototype);\n\n    ExtensionHelper.prototype.type = {\n        department: 'Department',\n        user: 'User',\n        announcement: 'Announcement',\n        voicemail: 'Voicemail'\n    };\n\n    /**\n     *\n     * @param {IExtensionOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ExtensionHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~' +\n               (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isUser = function(extension) {\n        return extension && extension.type == this.type.user;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isDepartment = function(extension) {\n        return extension && extension.type == this.type.department;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isAnnouncement = function(extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isVoicemail = function(extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ExtensionHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: List.numberComparator\n        }, options));\n\n    };\n\n    /**\n     * @param {IExtensionFilterOptions} [options]\n     * @returns {function(IExtension)}\n     */\n    ExtensionHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            search: '',\n            type: ''\n        }, options);\n\n        return List.filter([\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: List.containsFilter,\n                extractFn: function(item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                           (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: ExtensionHelper,\n        /**\n         * @param {Context} context\n         * @returns {ExtensionHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ExtensionHelper', function() {\n                return new ExtensionHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IExtensionOptions\n     * @property {string} departmentId\n     */\n\n    /**\n     * @typedef {object} IExtensionFilterOptions\n     * @property {string} search\n     * @property {string} type\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ShortExtensionInfo\n     * @typedef {object} IExtensionShort\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ExtensionInfo\n     * @typedef {object} IExtension\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} type\n     * @property {IContactBrief} contact\n     * @property {IExtensionRegionalSettings} regionalSettings\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} status\n     * @property {string} setupWizardState\n     */\n\n    /**\n     * @typedef {object} IExtensionRegionalSettings\n     * @property {ITimezone} timezone\n     * @property {ILanguage} language\n     * @property {ICountry} homeCountry\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Extension.js\n ** module id = 34\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Utils = require('../core/Utils'),\n        List = require('../core/List');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ForwardingNumberHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ForwardingNumberHelper.prototype = Object.create(Helper.prototype);\n\n\n    ForwardingNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n\n    };\n\n    ForwardingNumberHelper.prototype.getId = function(forwardingNumber) {\n        return forwardingNumber.id || (forwardingNumber.phoneNumber);\n    };\n\n    ForwardingNumberHelper.prototype.hasFeature = function(phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ForwardingNumberHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'label'\n        }, options));\n\n    };\n\n    /**\n     * @param options\n     * @returns {function(IForwardingNumber)}\n     */\n    ForwardingNumberHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            features: []\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.features.length, filterFn: function(item) {\n\n                return options.features.some(function(feature) {\n                    return self.hasFeature(item, feature);\n                });\n\n            }\n            }\n        ]);\n\n    };\n\n\n    module.exports = {\n        Class: ForwardingNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {ForwardingNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ForwardingNumberHelper', function() {\n                return new ForwardingNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     *\n     * @typedef {object} IForwardingNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} label\n     * @property {string} phoneNumber\n     * @property {string} flipNumber\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/ForwardingNumber.js\n ** module id = 35\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator'),\n        Utils = require('../core/Utils'),\n        List = require('../core/List');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function MessageHelper(context) {\n        Helper.call(this, context);\n        this.platform = require('../core/Platform').$get(context);\n        this.contact = require('./Contact').$get(context);\n    }\n\n    MessageHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     *\n     * @param {IMessageOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    MessageHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n\n        if (options.fax) return root + '/fax';\n        if (options.sms) return root + '/sms';\n        if (options.pager) return root + '/company-pager';\n        if (options.sync) return root + '/message-sync';\n\n        return root + '/message-store' + (id ? '/' + id : '');\n\n    };\n\n    MessageHelper.prototype.isInbound = function(message) {\n        return (message && message.direction == 'Inbound');\n    };\n\n    MessageHelper.prototype.isOutbound = function(message) {\n        return !this.isInbound(message);\n    };\n\n    MessageHelper.prototype.isSMS = function(message) {\n        return (message && message.type == 'SMS');\n    };\n\n    MessageHelper.prototype.isPager = function(message) {\n        return (message && message.type == 'Pager');\n    };\n\n    MessageHelper.prototype.isVoiceMail = function(message) {\n        return (message && message.type == 'VoiceMail');\n    };\n\n    MessageHelper.prototype.isFax = function(message) {\n        return (message && message.type == 'Fax');\n    };\n\n    MessageHelper.prototype.isAlive = function(message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n\n    MessageHelper.prototype.isRead = function(message) {\n        return (message.readStatus == 'Read');\n    };\n\n    MessageHelper.prototype.setIsRead = function(message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n\n    MessageHelper.prototype.getAttachmentUrl = function(message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {addMethod: 'GET', addServer: true, addToken: true}) : '';\n    };\n\n    MessageHelper.prototype.getAttachmentContentType = function(message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n\n    /**\n     * @returns {Subscription}\n     */\n    MessageHelper.prototype.getSubscription = function(options) {\n\n        return (require('../core/Subscription').$get(this.context)).setEvents([this.createUrl(options)]);\n\n    };\n\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getCallerInfos = function(message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getAllCallerInfos = function(message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    MessageHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n\n    };\n\n    /**\n     * @param {IMessageFilterOptions} [options]\n     * @returns {function(IMessage)}\n     */\n    MessageHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n\n        return List.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'type', condition: options.type},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'conversationId', condition: options.conversationId},\n            {filterBy: 'readStatus', condition: options.readStatus},\n            {filterBy: 'subject', condition: options.search, filterFn: List.containsFilter}\n        ]);\n\n    };\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     * @param {IContact[]} contacts\n     * @param {IMessage[]} messages\n     * @param {IContactMatchOptions} [options]\n     */\n    MessageHelper.prototype.attachContacts = function(contacts, messages, options) {\n\n        var self = this;\n\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function(callerInfos, message) {\n\n            return callerInfos.concat(self.getAllCallerInfos(message));\n\n        }, []);\n\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    };\n\n    /**\n     *\n     * @param message\n     * @returns {IMessageShort}\n     */\n    MessageHelper.prototype.shorten = function(message) {\n\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n\n    };\n\n\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validateSMS = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(Utils.getProperty(item, 'to[0].phoneNumber'))},\n            {field: 'from', validator: Validator.required(Utils.getProperty(item, 'from.phoneNumber'))},\n            {field: 'subject', validator: Validator.required(Utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: Validator.length(Utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    };\n\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validatePager = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(Utils.getProperty(item, 'to.extensionNumber'))},\n            {field: 'from', validator: Validator.required(Utils.getProperty(item, 'from.extensionNumber'))},\n            {field: 'subject', validator: Validator.required(Utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: Validator.length(Utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: MessageHelper,\n        /**\n         * @param {Context} context\n         * @returns {MessageHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('MessageHelper', function() {\n                return new MessageHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IMessage\n     * @property {string} id\n     * @property {string} uri\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} type\n     * @property {string} creationTime\n     * @property {string} readStatus\n     * @property {string} priority\n     * @property {IMessageAttachment} attachments\n     * @property {string} direction\n     * @property {string} availability\n     * @property {string} subject\n     * @property {string} messageStatus\n     * @property {string} conversationId\n     * @property {string} lastModifiedTime\n     */\n\n    /**\n     * @typedef {object} IMessageShort\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} text\n     */\n\n    /**\n     * @typedef {object} IMessageOptions\n     * @property {boolean} fax\n     * @property {boolean} sync\n     * @property {boolean} sms\n     * @property {boolean} pager\n     * @property {string} extensionId\n     */\n\n    /**\n     * @typedef {object} IMessageFilterOptions\n     * @property {boolean} alive\n     * @property {string} conversationId\n     * @property {string} direction\n     * @property {string} readStatus\n     * @property {string} type\n     */\n\n    /**\n     * @typedef {object} IMessageFaxAttachment\n     * @property {string} contentType\n     * @property {string} content\n     * @property {string} fileName\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch18s01.html#MessageAttachmentInfo\n     * @typedef {Object} IMessageAttachment\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} contentType\n     * @property {string} vmDuration\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Message.js\n ** module id = 36\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var List = require('../core/List'),\n        Utils = require('../core/Utils'),\n        Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PhoneNumberHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n\n    PhoneNumberHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IPhoneNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PhoneNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (options.lookup) return '/number-pool/lookup';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/phone-number' +\n               (id ? '/' + id : '');\n\n    };\n\n    PhoneNumberHelper.prototype.isSMS = function(phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n\n    PhoneNumberHelper.prototype.hasFeature = function(phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n\n    PhoneNumberHelper.prototype.reserve = function(phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n\n    PhoneNumberHelper.prototype.unreserve = function(phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(IPhoneNumber, IPhoneNumber)}\n     */\n    PhoneNumberHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            /**\n             * @param {IPhoneNumber} item\n             * @returns {string}\n             */\n            extractFn: function(item) {\n                return item.usageType + '-' +\n                       item.paymentType + '-' +\n                       item.type;\n            }\n        }, options));\n\n    };\n\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     * @param {IPhoneNumberFilterOptions} options\n     * @returns {function(IForwardingNumber)}\n     */\n    PhoneNumberHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n\n        return List.filter([\n            {filterBy: 'usageType', condition: options.usageType},\n            {filterBy: 'paymentType', condition: options.paymentType},\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.features.length, filterFn: function(item) {\n\n                return options.features.some(function(feature) {\n                    return self.hasFeature(item, feature);\n                });\n\n            }\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: PhoneNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {PhoneNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('PhoneNumberHelper', function() {\n                return new PhoneNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IPhoneNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} phoneNumber\n     * @property {string} paymentType - External, TollFree, Local\n     * @property {string} location\n     * @property {string} type - VoiceFax, FaxOnly, VoiceOnly\n     * @property {string} usageType - CompanyNumber, DirectNumber, CompanyFaxNumber, ForwardedNumber\n     * @property {array} features - CallerId, SmsSender\n     * @property {string} reservedTill - Date\n     * @property {string} error\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberOptions\n     * @property {string} extensionId\n     * @property {true} lookup\n     * @property {string} countryId\n     * @property {string} paymentType\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {string} line\n     * @property {string} exclude\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberFilterOptions\n     * @property {string} paymentType\n     * @property {string} usageType\n     * @property {string} type\n     * @property {string[]} features\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberOrder\n     * @property {IPhoneNumber[]} records\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/PhoneNumber.js\n ** module id = 37\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Utils = require('../core/Utils');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PresenceHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n\n    PresenceHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PresenceHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n\n    };\n\n    /**\n     * @param {IPresence} presence\n     * @returns {string}\n     */\n    PresenceHelper.prototype.getId = function(presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n\n    /**\n     * @param {IPresence} presence\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isAvailable = function(presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {Subscription}\n     */\n    PresenceHelper.prototype.getSubscription = function(options, id) {\n\n        return require('../core/Subscription').$get(this.context).setEvents([this.createUrl(options, id)]);\n\n    };\n\n    /**\n     *\n     * @param {Subscription} subscription\n     * @param {IPresence[]} presences\n     * @param {IPresenceOptions} options\n     * @returns {*}\n     */\n    PresenceHelper.prototype.updateSubscription = function(subscription, presences, options) {\n\n        var events = presences.map(this.getId, this).map(function(id) {\n            return this.createUrl(options, id);\n        }, this);\n\n        subscription.addEvents(events);\n\n        return subscription;\n\n    };\n\n    /**\n     * @param {IExtension[]} extensions\n     * @param {IPresence[]} presences\n     * @param {bool} [merge]\n     * @returns {*}\n     */\n    PresenceHelper.prototype.attachToExtensions = function(extensions, presences, merge) {\n\n        var index = this.index(presences);\n\n        extensions.forEach(/** @param {IExtension} extension */ function(extension) {\n\n            var presence = index[this.extension.getId(extension)];\n\n            if (presence) {\n                if ('presence' in extension && merge) {\n                    Utils.extend(extension.presence, presence);\n                } else {\n                    extension.presence = presence;\n                }\n            }\n\n        }, this);\n\n    };\n\n    /**\n     * @param {IPresenceCall} presenceCall\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isCallInProgress = function(presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n\n    module.exports = {\n        Class: PresenceHelper,\n        /**\n         * @param {Context} context\n         * @returns {PresenceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('PresenceHelper', function() {\n                return new PresenceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IPresence\n     * @property {IExtension} extension\n     * @property {IPresenceCall[]} activeCalls\n     * @property {string} presenceStatus - Offline, Busy, Available\n     * @property {string} telephonyStatus - NoCall, CallConnected, Ringing, OnHold\n     * @property {string} userStatus - Offline, Busy, Available\n     * @property {string} dndStatus - TakeAllCalls, DoNotAcceptAnyCalls, DoNotAcceptDepartmentCalls, TakeDepartmentCallsOnly\n     * @property {boolean} allowSeeMyPresence\n     * @property {boolean} ringOnMonitoredCall\n     * @property {boolean} pickUpCallsOnHold\n     * @property {number} extensionId\n     * @property {number} sequence\n     */\n\n    /**\n     * @typedef {Object} IPresenceCall\n     * @property {string} direction\n     * @property {string} from\n     * @property {string} to\n     * @property {string} sessionId\n     * @property {string} id\n     * @property {string} telephonyStatus\n     */\n\n    /**\n     * @typedef {Object} IPresenceOptions\n     * @property {boolean} detailed\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Presence.js\n ** module id = 38\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function RingoutHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n\n    RingoutHelper.prototype = Object.create(Helper.prototype);\n\n    RingoutHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n\n    };\n\n    RingoutHelper.prototype.resetAsNew = function(object) {\n        object = Helper.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n\n    RingoutHelper.prototype.isInProgress = function(ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n\n    RingoutHelper.prototype.isSuccess = function(ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n\n    RingoutHelper.prototype.isError = function(ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n\n    /**\n     * @param {IRingout} item\n     */\n    RingoutHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(item && item.to && item.to.phoneNumber)},\n            {field: 'from', validator: Validator.required(item && item.from && item.from.phoneNumber)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: RingoutHelper,\n        /**\n         * @param {Context} context\n         * @returns {RingoutHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('RingoutHelper', function() {\n                return new RingoutHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IRingout\n     * @property {ICallerInfo} [from] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [to] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [callerId] (!) ONLY PHONE NUMBER\n     * @property {boolean} [playPrompt]\n     * @property {{callStatus:boolean, callerStatus:boolean, calleeStatus:boolean}} [status]\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Ringout.js\n ** module id = 39\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ServiceHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ServiceHelper.prototype = Object.create(Helper.prototype);\n\n    ServiceHelper.prototype.createUrl = function() {\n        return '/account/~/service-info';\n    };\n\n    /**\n     * @param {string} feature\n     * @param {IServiceFeature[]} serviceFeatures\n     * @returns {*}\n     */\n    ServiceHelper.prototype.isEnabled = function(feature, serviceFeatures) {\n\n        return serviceFeatures.reduce(function(value, f) {\n\n            if (f.featureName == feature) value = f.enabled;\n            return value;\n\n        }, false);\n\n    };\n\n    function isServiceFeatureEnabledMethod(feature) {\n        return function(serviceFeatures) {\n            return this.isEnabled(feature, serviceFeatures);\n        };\n    }\n\n    ServiceHelper.prototype.isSmsEnabled = isServiceFeatureEnabledMethod('SMS');\n    ServiceHelper.prototype.isSmsReceivingEnabled = isServiceFeatureEnabledMethod('SMSReceiving');\n    ServiceHelper.prototype.isPresenceEnabled = isServiceFeatureEnabledMethod('Presence');\n    ServiceHelper.prototype.isRingOutEnabled = isServiceFeatureEnabledMethod('RingOut');\n    ServiceHelper.prototype.isInternationalCallingEnabled = isServiceFeatureEnabledMethod('InternationalCalling');\n    ServiceHelper.prototype.isDndEnabled = isServiceFeatureEnabledMethod('DND');\n    ServiceHelper.prototype.isFaxEnabled = isServiceFeatureEnabledMethod('Fax');\n    ServiceHelper.prototype.isFaxReceivingEnabled = isServiceFeatureEnabledMethod('FaxReceiving');\n    ServiceHelper.prototype.isVoicemailEnabled = isServiceFeatureEnabledMethod('Voicemail');\n    ServiceHelper.prototype.isPagerEnabled = isServiceFeatureEnabledMethod('Pager');\n    ServiceHelper.prototype.isPagerReceivingEnabled = isServiceFeatureEnabledMethod('PagerReceiving');\n    ServiceHelper.prototype.isVoipCallingEnabled = isServiceFeatureEnabledMethod('VoipCalling');\n    ServiceHelper.prototype.isVideoConferencingEnabled = isServiceFeatureEnabledMethod('VideoConferencing');\n    ServiceHelper.prototype.isSalesForceEnabled = isServiceFeatureEnabledMethod('SalesForce');\n    ServiceHelper.prototype.isIntercomEnabled = isServiceFeatureEnabledMethod('Intercom');\n    ServiceHelper.prototype.isPagingEnabled = isServiceFeatureEnabledMethod('Paging');\n    ServiceHelper.prototype.isConferencingEnabled = isServiceFeatureEnabledMethod('Conferencing');\n    ServiceHelper.prototype.isFreeSoftPhoneLinesEnabled = isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n    ServiceHelper.prototype.isHipaaComplianceEnabled = isServiceFeatureEnabledMethod('HipaaCompliance');\n    ServiceHelper.prototype.isCallParkEnabled = isServiceFeatureEnabledMethod('CallPark');\n    ServiceHelper.prototype.isOnDemandCallRecordingEnabled = isServiceFeatureEnabledMethod('OnDemandCallRecording');\n\n    module.exports = {\n        Class: ServiceHelper,\n        /**\n         * @param {Context} context\n         * @returns {ServiceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('serviceHelper', function() {\n                return new ServiceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IServiceFeature\n     * @property {string} featureName\n     * @property {boolean} enabled\n     */\n\n    /**\n     * @typedef {object} IService\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} servicePlanName\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Service.js\n ** module id = 40\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    function PubnubMock(options) {}\n\n    PubnubMock.prototype.ready = function() {};\n\n    PubnubMock.prototype.unsubscribe = function(options) {};\n\n    PubnubMock.prototype.subscribe = function(options) {\n        this.onMessage = options.message;\n    };\n\n    PubnubMock.prototype.receiveMessage = function(msg) {\n        this.onMessage(msg, 'env', 'channel');\n    };\n\n    /**\n     * @alias RCSDK.core.pubnub.Mock\n     * @type {PUBNUB}\n     */\n    module.exports = {\n        /**\n         * @param {Context} context\n         * @returns {PUBNUB}\n         */\n        $get: function(context) {\n\n            return {\n                init: function(options) {\n                    return new PubnubMock(options);\n                }\n            };\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/pubnub/PubnubMock.js\n ** module id = 41\n ** module chunks = 0\n **/","/**\n * istanbul ignore next\n */\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    var Log = require('../Log'),\n        Utils = require('../Utils');\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.ajax.XhrMock\n     * @extends XMLHttpRequest\n     */\n    function XhrMock(context) {\n        // Service\n        this.responses = require('./XhrResponse').$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n        this.context = context;\n    }\n\n    XhrMock.prototype.getResponseHeader = function(header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n\n    XhrMock.prototype.setRequestHeader = function(header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n\n    XhrMock.prototype.open = function(method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n\n    XhrMock.prototype.send = function(data) {\n\n        var contentType = this.getRequestHeader('Content-Type');\n\n        this.data = data;\n\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json') this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded') this.data = Utils.parseQueryString(this.data);\n        }\n\n        Log.debug('API REQUEST', this.method, this.url);\n\n        var currentResponse = this.responses.find(this);\n\n        if (!currentResponse) {\n            setTimeout(function() {\n                if (this.onerror) this.onerror(new Error('Unknown request: ' + this.url));\n            }.bind(this), 1);\n            return;\n        }\n\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n\n        var res = currentResponse.response(this),\n            Promise = this.context.getPromise(),\n            onLoad = function(res) {\n\n                if (this.getResponseHeader('Content-Type') == 'application/json') res = JSON.stringify(res);\n\n                this.responseText = res;\n\n                setTimeout(function() {\n                    if (this.onload) this.onload();\n                }.bind(this), 1);\n\n            }.bind(this);\n\n        if (res instanceof Promise) {\n\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n\n        } else onLoad(res);\n\n    };\n\n    XhrMock.prototype.abort = function() {\n        Log.debug('XhrMock.destroy(): Aborted');\n    };\n\n    XhrMock.prototype.getRequestHeader = function(header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n\n    XhrMock.prototype.setResponseHeader = function(header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n\n    XhrMock.prototype.setStatus = function(status) {\n        this.status = status;\n        return this;\n    };\n\n    module.exports = {\n        Class: XhrMock,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrMock}\n         */\n        $get: function(context) {\n\n            return new XhrMock(context);\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/xhr/XhrMock.js\n ** module id = 42\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}