{"version":3,"sources":["webpack/universalModuleDefinition","rc-sdk.js","webpack/bootstrap 74e68545595c59b4548c","../lib/browser.js","external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}","external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}","external {\"amd\":\"crypto-js/aes\",\"commonjs\":\"crypto-js/aes\",\"commonjs2\":\"crypto-js/aes\",\"root\":[\"CryptoJS\",\"AES\"]}","external {\"amd\":\"crypto-js/mode-ecb\",\"commonjs\":\"crypto-js/mode-ecb\",\"commonjs2\":\"crypto-js/mode-ecb\",\"root\":[\"CryptoJS\",\"mode\",\"ECB\"]}","external {\"amd\":\"crypto-js/core\",\"commonjs\":\"crypto-js/core\",\"commonjs2\":\"crypto-js/core\",\"root\":[\"CryptoJS\"]}","../lib/RCSDK.js","../lib/core/xhr/XhrResponse.js","../lib/core/AjaxObserver.js","../lib/core/Cache.js","../lib/core/Context.js","../lib/core/Helper.js","../lib/core/List.js","../lib/core/Log.js","../lib/core/Observable.js","../lib/core/PageVisibility.js","../lib/core/Platform.js","../lib/core/Subscription.js","../lib/core/Utils.js","../lib/core/Validator.js","../lib/helpers/Account.js","../lib/helpers/BlockedNumber.js","../lib/helpers/Call.js","../lib/helpers/Contact.js","../lib/helpers/ContactGroup.js","../lib/helpers/Conferencing.js","../lib/helpers/Country.js","../lib/helpers/Device.js","../lib/helpers/DeviceModel.js","../lib/helpers/Extension.js","../lib/helpers/ForwardingNumber.js","../lib/helpers/Language.js","../lib/helpers/Location.js","../lib/helpers/Message.js","../lib/helpers/PhoneNumber.js","../lib/helpers/Presence.js","../lib/helpers/Ringout.js","../lib/helpers/Service.js","../lib/helpers/ShippingMethod.js","../lib/helpers/State.js","../lib/helpers/Timezone.js","../lib/core/pubnub/PubnubMock.js","../lib/core/xhr/XhrMock.js","../lib/core/http/Request.js","../lib/core/http/Headers.js","../lib/core/http/Response.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","promise","pubnub","rcsdk","CryptoJS","XHR","XMLHttpRequest","ActiveXObject","e1","e2","e3","Error","localStorage","Promise","PUBNUB","injections","RCSDK","setInjections","xhrResponse","ajaxObserver","cache","context","helper","list","log","observable","pageVisibility","platform","subscription","utils","validator","accountHelper","blockedNumberHelper","callHelper","contactHelper","contactGroupHelper","conferencingHelper","countryHelper","deviceHelper","deviceModelHelper","extensionHelper","forwardingNumberHelper","languageHelper","locationHelper","messageHelper","phoneNumberHelper","presenceHelper","ringoutHelper","serviceHelper","shippingMethodHelper","stateHelper","timezoneHelper","options","_context","$get","getCache","setPrefix","cachePrefix","getPlatform","setServer","server","setCredentials","appKey","appSecret","prototype","getContext","getAjaxObserver","getXhrResponse","getSubscription","getPageVisibility","getHelper","getObservable","getValidator","getLog","getUtils","getList","getCountryHelper","getDeviceModelHelper","getLanguageHelper","getLocationHelper","getShippingMethodHelper","getStateHelper","getTimezoneHelper","getAccountHelper","getBlockedNumberHelper","getCallHelper","getConferencingHelper","getContactHelper","getContactGroupHelper","getDeviceHelper","getExtensionHelper","getForwardingNumberHelper","getMessageHelper","getPhoneNumberHelper","getPresenceHelper","getRingoutHelper","getServiceHelper","version","createSingleton","XhrResponse","responses","add","response","push","clear","find","ajax","currentResponse","forEach","url","indexOf","path","test","AjaxObserver","__extends","d","b","__","constructor","hasOwnProperty","_super","apply","arguments","events","beforeRequest","requestSuccess","requestError","Observable","Cache","storage","getLocalStorage","prefix","prefixKey","key","setItem","data","JSON","stringify","removeItem","getItem","item","parse","clean","Context","pubnubMock","xhrMock","singletons","stubPubnub","stubAjax","name","usePubnubStub","flag","useAjaxStub","getCryptoJS","getPubnub","_this","getPromise","getXHR","Helper","defaultProperty","createUrl","getId","object","isNew","getUri","resetAsNew","uri","parseMultipartResponse","isMultipart","filter","result","error","map","loadRequest","extend","method","saveRequest","post","body","deleteRequest","syncRequest","sync","query","get","syncToken","syncType","nextPageExists","navigation","index","array","getIdFn","gather","bind","reduce","merge","target","supplement","mergeItems","supplementIndex","updatedIDs","newItem","List","numberComparator","stringComparator","propertyExtractor","property","a","parseString","localeCompare","parseNumber","comparator","extractFn","sortBy","compareFn","item1","item2","equalsFilter","obj","condition","containsFilter","toString","regexpFilter","RegExp","filterConfigs","self","opt","filterBy","filterFn","pass","Log","console","warn","info","logDebug","logInfo","logWarnings","logErrors","addTimestamps","disableAll","enableAll","parseArguments","args","argumentsToArray","unshift","Date","toLocaleString","debug","_i","length","Object","defineProperty","value","enumerable","writable","hasListeners","event","listeners","registerOneTimeEvent","oneTimeEvents","oneTimeArguments","on","callback","isOneTimeEventFired","getOneTimeEventArgumens","emit","isOneTimeEvent","setOneTimeEventFired","setOneTimeEventArgumens","some","off","cb","i","offAll","destroy","emitAndCallback","concat","PageVisibility","change","hidden","onchange","evt","window","v","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","visible","type","document","addEventListener","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","isVisible","Platform","request","accessViolation","logoutSuccess","logoutError","authorizeSuccess","authorizeError","refreshSuccess","refreshError","apiKey","account","urlPrefix","apiVersion","accountPrefix","accessTokenTtl","refreshTokenTtl","refreshTokenTtlRemember","refreshHandicapMs","refreshDelayMs","clearCacheOnRefreshError","refreshPromise","cacheId","pollInterval","releaseTimeout","getStorage","getRequest","clearStorage","btoa","Buffer","remember","undefined","authorize","authCall","grant_type","username","extension","password","access_token_ttl","refresh_token_ttl","then","setCache","e","isPaused","now","parseInt","pause","resume","refresh","resolve","reject","refreshPolling","setTimeout","authData","getAuthData","access_token","refresh_token","refreshExpireTime","logout","token","getToken","poll","next","isTokenValid","getTokenType","token_type","expires_in","refresh_token_expires_in","forcedTokenType","expireTime","getTime","isAuthorized","cancelAccessToken","oldAuthData","forceAuthentication","apiCall","apiUrl","addServer","setOptions","setHeader","send","isUnauthorized","put","builtUrl","replace","addMethod","addToken","Subscription","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","eventFilters","timeout","expirationTime","expiresIn","deliveryMode","transportType","encryption","address","subscriberKey","secretKey","creationTime","status","getCrypto","register","isSubscribed","renew","subscribe","addEvents","setEvents","getFullEventFilters","clearTimeout","updateSubscription","subscribeAtPubnub","unsubscribe","remove","async","timeToExpiration","renewHandicapMs","channel","notify","message","encryptionKey","enc","Base64","decrypted","AES","decrypt","ciphertext","mode","ECB","padding","pad","Pkcs7","Utf8","init","ssl","subscribe_key","ready","connect","Utils","hasOwn","rdigit","class2type","split","toLowerCase","src","copy","copyIsArray","clone","deep","isFunction","isPlainObject","isArray","res","queryStringify","parameters","vv","encodeURIComponent","join","parseQueryString","queryString","argsParsed","arg","decodeURIComponent","trim","pair","isEmail","multiple","isPhoneNumber","Array","slice","isDate","isWindow","isNaN","String","nodeType","getProperty","part","fn","interval","stopPolling","delay","s","n","parseFloat","Validator","validate","validators","errors","isValid","field","email","phone","required","max","min","Account","BlockedNumber","extensionId","phoneNumber","Call","presence","contact","personal","active","getSessionId","sessionId","isInProgress","isAlive","availability","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","duration","hours","Math","floor","mins","secs","alive","attachContacts","contacts","calls","callerInfos","attachToCallerInfos","checkMergeability","outboundRingOutCall","inboundCall","dateString","strict","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","secondCall","parsePresenceCalls","activeCalls","activeCall","isCallInProgress","telephonyStatus","getSignature","cleanup","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","Contact","phoneFields","faxFields","addressFields","addressSubFields","nameFields","otherFields","emailFields","groupId","getFieldValues","where","fields","asHash","getFullName","getEmails","getPhones","getFaxes","getAddresses","match","string","inAddresses","transformFn","toLocaleLowerCase","found","matchWith","transformed","subField","matchAsPhone","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","startsWith","phonesOnly","faxesOnly","opts","firstName","lastName","email2","email3","ContactGroup","groupName","Conferencing","Country","Device","deviceModel","order","emergencyServiceAddress","street","city","state","country","zip","customerName","model","DeviceModel","devices","deviceClass","addons","count","device","cleanForSaving","addon","Extension","department","user","announcement","voicemail","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","search","extensionNumber","ForwardingNumber","forwardingNumber","hasFeature","feature","features","Language","languages","Location","uniqueNPAs","stateId","onlyUniqueNPA","npa","nxx","Message","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentUrl","attachments","getAttachmentContentType","contentType","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","validatePager","PhoneNumber","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","Presence","detailed","isAvailable","presenceStatus","presences","attachToExtensions","extensions","ex","presenceCall","Ringout","ringout","callStatus","isSuccess","isError","Service","isSmsEnabled","isServiceFeatureEnabledMethod","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","isEnabled","serviceFeatures","f","featureName","enabled","ShippingMethod","shippingMethods","State","countryId","Timezone","PubnubFactory","PubnubMock","onMessage","receiveMessage","msg","XhrMock","requestHeaders","withCredentials","readyState","responseHeaders","getResponseHeader","header","setRequestHeader","getAllResponseHeaders","open","getRequestHeader","onerror","setStatus","setResponseHeader","onLoad","responseText","onload","abort","Request","r","xhr","observer","isLoaded","setHeaders","headers","checkOptions","hasHeader","Headers","jsonContentType","toUpperCase","getEncodedBody","isJson","isUrlEncoded","responsePromise","statusText","getHeader","isContentType","getContentType","multipartContentType","urlencodedContentType","Response","tmp","bodySeparator","shift","json","parts","headerSeparator","checkStatus","getError","boundary","boundarySeparator","pop","statusInfo","stack","error_description","description"],"mappings":"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","file":"rc-sdk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"crypto-js/aes\"), require(\"crypto-js/mode-ecb\"), require(\"crypto-js/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"pubnub\", \"crypto-js/aes\", \"crypto-js/mode-ecb\", \"crypto-js/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"crypto-js/aes\"), require(\"crypto-js/mode-ecb\"), require(\"crypto-js/core\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"PUBNUB\"], root[\"CryptoJS\"][\"AES\"], root[\"CryptoJS\"][\"mode\"][\"ECB\"], root[\"CryptoJS\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"crypto-js/aes\"), require(\"crypto-js/mode-ecb\"), require(\"crypto-js/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"pubnub\", \"crypto-js/aes\", \"crypto-js/mode-ecb\", \"crypto-js/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"crypto-js/aes\"), require(\"crypto-js/mode-ecb\"), require(\"crypto-js/core\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"PUBNUB\"], root[\"CryptoJS\"][\"AES\"], root[\"CryptoJS\"][\"mode\"][\"ECB\"], root[\"CryptoJS\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../typings/tsd.d.ts\" />\n/// <amd-dependency path=\"es6-promise\"/>\n/// <amd-dependency path=\"pubnub\"/>\n/// <amd-dependency path=\"crypto-js/aes\"/>\n/// <amd-dependency path=\"crypto-js/core\"/>\n/// <amd-dependency path=\"crypto-js/mode-aes\"/>\nvar promise = __webpack_require__(1);\nvar pubnub = __webpack_require__(2);\nvar rcsdk = __webpack_require__(6);\n__webpack_require__(3);\n__webpack_require__(4);\nvar CryptoJS = __webpack_require__(5);\nvar XHR = (XMLHttpRequest || function () {\n    try {\n        return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n    }\n    catch (e1) {\n    }\n    try {\n        return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n    }\n    catch (e2) {\n    }\n    try {\n        return new ActiveXObject(\"Msxml2.XMLHTTP\");\n    }\n    catch (e3) {\n    }\n    throw new Error(\"This browser does not support XMLHttpRequest.\");\n});\nexports = module.exports = rcsdk.factory({\n    CryptoJS: CryptoJS,\n    localStorage: localStorage,\n    Promise: typeof (Promise) !== 'undefined' ? Promise : promise.Promise,\n    PUBNUB: pubnub,\n    XHR: XHR\n});\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar xhrResponse = __webpack_require__(7);\nvar ajaxObserver = __webpack_require__(8);\nvar cache = __webpack_require__(9);\nvar context = __webpack_require__(10);\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar log = __webpack_require__(13);\nvar observable = __webpack_require__(14);\nvar pageVisibility = __webpack_require__(15);\nvar platform = __webpack_require__(16);\nvar subscription = __webpack_require__(17);\nvar utils = __webpack_require__(18);\nvar validator = __webpack_require__(19);\nvar accountHelper = __webpack_require__(20);\nvar blockedNumberHelper = __webpack_require__(21);\nvar callHelper = __webpack_require__(22);\nvar contactHelper = __webpack_require__(23);\nvar contactGroupHelper = __webpack_require__(24);\nvar conferencingHelper = __webpack_require__(25);\nvar countryHelper = __webpack_require__(26);\nvar deviceHelper = __webpack_require__(27);\nvar deviceModelHelper = __webpack_require__(28);\nvar extensionHelper = __webpack_require__(29);\nvar forwardingNumberHelper = __webpack_require__(30);\nvar languageHelper = __webpack_require__(31);\nvar locationHelper = __webpack_require__(32);\nvar messageHelper = __webpack_require__(33);\nvar phoneNumberHelper = __webpack_require__(34);\nvar presenceHelper = __webpack_require__(35);\nvar ringoutHelper = __webpack_require__(36);\nvar serviceHelper = __webpack_require__(37);\nvar shippingMethodHelper = __webpack_require__(38);\nvar stateHelper = __webpack_require__(39);\nvar timezoneHelper = __webpack_require__(40);\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache().setPrefix(options.cachePrefix || '');\n        this.getPlatform().setServer(options.server || '').setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    RCSDK.setInjections = function (injections) {\n        this.injections = injections;\n        return this;\n    };\n    // Internals\n    RCSDK.prototype.getContext = function () {\n        return this._context;\n    };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () {\n        return ajaxObserver.$get(this.getContext());\n    };\n    RCSDK.prototype.getXhrResponse = function () {\n        return xhrResponse.$get(this.getContext());\n    };\n    RCSDK.prototype.getPlatform = function () {\n        return platform.$get(this.getContext());\n    };\n    RCSDK.prototype.getCache = function () {\n        return cache.$get(this.getContext());\n    };\n    RCSDK.prototype.getSubscription = function () {\n        return subscription.$get(this.getContext());\n    };\n    RCSDK.prototype.getPageVisibility = function () {\n        return pageVisibility.$get(this.getContext());\n    };\n    RCSDK.prototype.getHelper = function () {\n        return helper.$get(this.getContext());\n    };\n    RCSDK.prototype.getObservable = function () {\n        return observable.$get(this.getContext());\n    };\n    RCSDK.prototype.getValidator = function () {\n        return validator.$get(this.getContext());\n    };\n    RCSDK.prototype.getLog = function () {\n        return log.$get(this.getContext());\n    };\n    RCSDK.prototype.getUtils = function () {\n        return utils.$get(this.getContext());\n    };\n    RCSDK.prototype.getList = function () {\n        return list.$get(this.getContext());\n    };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () {\n        return countryHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getDeviceModelHelper = function () {\n        return deviceModelHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getLanguageHelper = function () {\n        return languageHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getLocationHelper = function () {\n        return locationHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getShippingMethodHelper = function () {\n        return shippingMethodHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getStateHelper = function () {\n        return stateHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getTimezoneHelper = function () {\n        return timezoneHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getAccountHelper = function () {\n        return accountHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getBlockedNumberHelper = function () {\n        return blockedNumberHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getCallHelper = function () {\n        return callHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getConferencingHelper = function () {\n        return conferencingHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getContactHelper = function () {\n        return contactHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getContactGroupHelper = function () {\n        return contactGroupHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getDeviceHelper = function () {\n        return deviceHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getExtensionHelper = function () {\n        return extensionHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getForwardingNumberHelper = function () {\n        return forwardingNumberHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getMessageHelper = function () {\n        return messageHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getPhoneNumberHelper = function () {\n        return phoneNumberHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getPresenceHelper = function () {\n        return presenceHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getRingoutHelper = function () {\n        return ringoutHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getServiceHelper = function () {\n        return serviceHelper.$get(this.getContext());\n    };\n    RCSDK.version = '1.2.1';\n    return RCSDK;\n})();\nexports.RCSDK = RCSDK;\nfunction factory(injections) {\n    if (!injections || !('CryptoJS' in injections) || !('localStorage' in injections) || !('Promise' in injections) || !('PUBNUB' in injections) || !('XHR' in injections))\n        throw new Error('Injections object is not complete');\n    return RCSDK.setInjections(injections);\n}\nexports.factory = factory;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(14);\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar pubnubMock = __webpack_require__(41); //TODO Fix circular\nvar xhrMock = __webpack_require__(42); //TODO Fix circular\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getCryptoJS = function () {\n        return this.injections.CryptoJS;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? pubnubMock.$get(this) : this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? xhrMock.$get(this) : new this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar utils = __webpack_require__(18);\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar utils = __webpack_require__(18);\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar utils = __webpack_require__(18);\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () {\n                },\n                warn: function () {\n                },\n                info: function () {\n                },\n                error: function () {\n                }\n            };\n        }\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar utils = __webpack_require__(18);\nvar log = __webpack_require__(13);\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @alias RCSDK.core.Observable\n     */\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        var self = this;\n        if (!callback) {\n            delete this.listeners[event];\n        }\n        else {\n            if (!this.hasListeners(event))\n                return this;\n            this.listeners[event].forEach(function (cb, i) {\n                if (cb === callback)\n                    delete _this.listeners[event][i];\n            });\n        }\n        return this;\n    };\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    Observable.prototype.offAll = function () {\n        this.listeners = {};\n        this.oneTimeEvents = {};\n        this.oneTimeArguments = {};\n        return this;\n    };\n    Observable.prototype.destroy = function () {\n        this.offAll();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(14);\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v,\n                focusin: v,\n                pageshow: v,\n                blur: h,\n                focusout: h,\n                pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(14);\nvar cache = __webpack_require__(9);\nvar request = __webpack_require__(43);\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: {\n                \"grant_type\": \"password\",\n                \"username\": options.username,\n                \"extension\": options.extension || '',\n                \"password\": options.password,\n                \"access_token_ttl\": this.accessTokenTtl,\n                \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n            }\n        }).then(function (response) {\n            _this.setCache(response.data).remember(options.remember).emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage().emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data).resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e]).emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume().clearStorage().emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume().emitAndCallback(_this.events.accessViolation, [e]).emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest().setOptions(options).setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : '')).send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this.refresh().then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest().setOptions(options).setHeader('Content-Type', 'application/x-www-form-urlencoded').setHeader('Accept', 'application/json').setHeader('Authorization', 'Basic ' + this.apiKey).send();\n    };\n    /**\n     *\n     * @param url\n     * @param {{addMethod?: string, addToken?: boolean, addServer?: boolean}} [options]\n     * @returns {string}\n     */\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '';\n        if (options.addServer && url.indexOf('http://') == -1 && url.indexOf('https://') == -1)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        return this;\n    };\n    Platform.prototype.on = function (events, callback) {\n        _super.prototype.on.call(this, events, callback);\n        return this;\n    };\n    Platform.prototype.off = function (events, callback) {\n        _super.prototype.on.call(this, events, callback);\n        return this;\n    };\n    Platform.prototype.emitAndCallback = function (event, args, callback) {\n        _super.prototype.emitAndCallback.call(this, event, args, callback);\n        return this;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(14);\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getCrypto = function () {\n        return this.context.getCryptoJS();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return __webpack_require__(16).$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data).subscribeAtPubnub().emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe().emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data).emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe().emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe().emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription && this.subscription.deliveryMode && this.subscription.deliveryMode.subscriberKey && this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            _this.renew({});\n        }, timeToExpiration);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     * @param message\n     * @returns {Subscription}\n     */\n    Subscription.prototype.notify = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var CryptoJS = this.getCrypto();\n            var key = CryptoJS.enc.Base64.parse(this.subscription.deliveryMode.encryptionKey);\n            var data = CryptoJS.enc.Base64.parse(message);\n            var decrypted = CryptoJS.AES.decrypt({ ciphertext: data }, key, {\n                mode: CryptoJS.mode.ECB,\n                padding: CryptoJS.pad.Pkcs7\n            }).toString(CryptoJS.enc.Utf8);\n            message = JSON.parse(decrypted);\n        }\n        this.emit(this.events.notification, message);\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     * @returns {Subscription}\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.prototype.on = function (events, callback) {\n        _super.prototype.on.call(this, events, callback);\n        return this;\n    };\n    Subscription.prototype.off = function (events, callback) {\n        _super.prototype.on.call(this, events, callback);\n        return this;\n    };\n    Subscription.prototype.emitAndCallback = function (event, args, callback) {\n        _super.prototype.emitAndCallback.call(this, event, args, callback);\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null ? String(obj) : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) {\n        }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property.split(/[.[\\]]/).reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar utils = __webpack_require__(18);\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId ? options.extensionId : '~') + '/blocked-number' + (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar presence = __webpack_require__(35);\nvar contact = __webpack_require__(23);\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' + (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') + (options.active ? 'active-calls' : 'call-log') + (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(self.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        function getTime(dateString) {\n            return (new Date(dateString)).getTime();\n        }\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) && outboundRingOutCall.direction == 'Outbound' && inboundCall.direction == 'Inbound' && ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) && inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber && (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name));\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        function cleanup(phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        }\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this.parsePresenceCalls(presence && presence.activeCalls || []).map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar list = __webpack_require__(12);\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId ? options.extensionId : '~') + '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root + (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') + (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var self = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return self.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) {\n                return _this.match(item, opts.condition);\n            } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) {\n                return (_this.getPhones(item).length > 0);\n            } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) {\n                return (_this.getFaxes(item).length > 0);\n            } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar extension = __webpack_require__(29);\nvar deviceModel = __webpack_require__(28);\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' + (options.extensionId ? '/extension/' + options.extensionId : '') + '/device' + (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'emergencyServiceAddress-street', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street) },\n            { field: 'emergencyServiceAddress-city', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city) },\n            { field: 'emergencyServiceAddress-state', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state) },\n            { field: 'emergencyServiceAddress-country', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country) },\n            { field: 'emergencyServiceAddress-zip', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip) },\n            { field: 'emergencyServiceAddress-customerName', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName) },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n        /**\n         * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n         */\n        this.devices = [\n            {\n                id: '-1',\n                name: 'Softphone'\n            },\n            {\n                id: '0',\n                name: 'Existing device'\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '23',\n                name: 'Polycom IP 321 Basic IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '30',\n                name: 'Polycom IP 550 HD Manager IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '37',\n                name: 'Polycom IP 6000 Conference Phone',\n                deviceClass: 'Conference Phone'\n            },\n            {\n                id: '40',\n                name: 'Polycom IP 335 HD IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '51',\n                name: 'Cisco SPA-303 Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\tDesk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '3'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '52',\n                name: 'Cisco SPA-122 ATA',\n                deviceClass: 'Analog Adapter'\n            },\n            {\n                id: '53',\n                name: 'Polycom VVX-500 Color Touchscreen',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '54',\n                name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '55',\n                name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n                deviceClass: 'Desk Phone'\n            }\n        ];\n    }\n    DeviceModel.prototype.getId = function (device) {\n        if (!device)\n            return null;\n        return device.id + (device.addons && device.addons[0] ? '-' + device.addons[0].id + '-' + device.addons[0].count : '');\n    };\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     */\n    DeviceModel.prototype.cleanForSaving = function (device) {\n        if (!device)\n            return null;\n        delete device.name;\n        delete device.deviceClass;\n        if (device.addons && device.addons.length > 0) {\n            device.addons.forEach(function (addon, i) {\n                delete device.addons[i].name;\n            });\n        }\n        else {\n            delete device.addons;\n        }\n        return device;\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' + (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') + (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) + (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n            condition: options.features.length,\n            filterFn: function (item) {\n                return options.features.some(function (feature) {\n                    return _this.hasFeature(item, feature);\n                });\n            }\n        }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n        this.languages = [\n            {\n                id: '1033',\n                name: 'English (US)'\n            },\n            {\n                id: '3084',\n                name: 'French (Canada)'\n            }\n        ];\n    }\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar state = __webpack_require__(39);\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (this.state.getId(item.state) == opts.condition);\n                }.bind(this)\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar validator = __webpack_require__(19);\nvar subscription = __webpack_require__(17);\nvar platform = __webpack_require__(16);\nvar contact = __webpack_require__(23);\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, { addMethod: 'GET', addServer: true, addToken: true }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar extension = __webpack_require__(29);\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' + (options.extensionId ? '/extension/' + options.extensionId : '') + '/phone-number' + (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' + item.paymentType + '-' + item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar subscription = __webpack_require__(17);\nvar extension = __webpack_require__(29);\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var events = presences.map(this.getId, this).map(function (id) {\n            return this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        return function (serviceFeatures) {\n            return this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n        /**\n         * TODO Remove when http://jira.ringcentral.com/browse/SDK-3 id done\n         */\n        this.shippingMethods = [\n            {\n                id: '1',\n                name: 'Ground Shipping (5-7 business days)'\n            },\n            {\n                id: '2',\n                name: '2-days Shipping'\n            },\n            {\n                id: '3',\n                name: 'Overnight Shipping'\n            }\n        ];\n    }\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar country = __webpack_require__(26);\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/tsd.d.ts\" />\nvar PubnubMock = (function () {\n    function PubnubMock() {\n    }\n    PubnubMock.prototype.ready = function () {\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n    };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.onMessage = options.message;\n    };\n    PubnubMock.prototype.receiveMessage = function (msg) {\n        this.onMessage(msg, 'env', 'channel');\n    };\n    return PubnubMock;\n})();\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock();\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar utils = __webpack_require__(18);\nvar log = __webpack_require__(13);\nvar xhrResponse = __webpack_require__(7);\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = __webpack_require__(44);\nvar ajaxObserver = __webpack_require__(8);\nvar r = __webpack_require__(45);\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    //TODO Remove\n    Request.prototype.setHeader = function (name, value) {\n        _super.prototype.setHeader.call(this, name, value);\n        return this;\n    };\n    //TODO Remove\n    Request.prototype.setHeaders = function (headers) {\n        _super.prototype.setHeaders.call(this, headers);\n        return this;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/tsd.d.ts\" />\nvar utils = __webpack_require__(18);\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = __webpack_require__(44);\nvar log = __webpack_require__(13);\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '').split('\\n').forEach(function (header) {\n                    if (!header)\n                        return;\n                    /** @type {string[]} */\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message || this.data.error_description || this.data.description || 'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=rc-sdk.js.map"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 74e68545595c59b4548c\n **/","/// <reference path=\"../typings/tsd.d.ts\" />\n/// <amd-dependency path=\"es6-promise\"/>\n/// <amd-dependency path=\"pubnub\"/>\n/// <amd-dependency path=\"crypto-js/aes\"/>\n/// <amd-dependency path=\"crypto-js/core\"/>\n/// <amd-dependency path=\"crypto-js/mode-aes\"/>\nvar promise = require('es6-promise');\nvar pubnub = require('pubnub');\nvar rcsdk = require('./RCSDK');\nrequire('crypto-js/aes');\nrequire('crypto-js/mode-ecb');\nvar CryptoJS = require('crypto-js/core');\nvar XHR = (XMLHttpRequest || function () {\n    try {\n        return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n    }\n    catch (e1) {\n    }\n    try {\n        return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n    }\n    catch (e2) {\n    }\n    try {\n        return new ActiveXObject(\"Msxml2.XMLHTTP\");\n    }\n    catch (e3) {\n    }\n    throw new Error(\"This browser does not support XMLHttpRequest.\");\n});\nexports = module.exports = rcsdk.factory({\n    CryptoJS: CryptoJS,\n    localStorage: localStorage,\n    Promise: typeof (Promise) !== 'undefined' ? Promise : promise.Promise,\n    PUBNUB: pubnub,\n    XHR: XHR\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/browser.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"crypto-js/aes\",\"commonjs\":\"crypto-js/aes\",\"commonjs2\":\"crypto-js/aes\",\"root\":[\"CryptoJS\",\"AES\"]}\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"crypto-js/mode-ecb\",\"commonjs\":\"crypto-js/mode-ecb\",\"commonjs2\":\"crypto-js/mode-ecb\",\"root\":[\"CryptoJS\",\"mode\",\"ECB\"]}\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"crypto-js/core\",\"commonjs\":\"crypto-js/core\",\"commonjs2\":\"crypto-js/core\",\"root\":[\"CryptoJS\"]}\n ** module id = 5\n ** module chunks = 0\n **/","var xhrResponse = require('./core/xhr/XhrResponse');\nvar ajaxObserver = require('./core/AjaxObserver');\nvar cache = require('./core/Cache');\nvar context = require('./core/Context');\nvar helper = require('./core/Helper');\nvar list = require('./core/List');\nvar log = require('./core/Log');\nvar observable = require('./core/Observable');\nvar pageVisibility = require('./core/PageVisibility');\nvar platform = require('./core/Platform');\nvar subscription = require('./core/Subscription');\nvar utils = require('./core/Utils');\nvar validator = require('./core/Validator');\nvar accountHelper = require('./helpers/Account');\nvar blockedNumberHelper = require('./helpers/BlockedNumber');\nvar callHelper = require('./helpers/Call');\nvar contactHelper = require('./helpers/Contact');\nvar contactGroupHelper = require('./helpers/ContactGroup');\nvar conferencingHelper = require('./helpers/Conferencing');\nvar countryHelper = require('./helpers/Country');\nvar deviceHelper = require('./helpers/Device');\nvar deviceModelHelper = require('./helpers/DeviceModel');\nvar extensionHelper = require('./helpers/Extension');\nvar forwardingNumberHelper = require('./helpers/ForwardingNumber');\nvar languageHelper = require('./helpers/Language');\nvar locationHelper = require('./helpers/Location');\nvar messageHelper = require('./helpers/Message');\nvar phoneNumberHelper = require('./helpers/PhoneNumber');\nvar presenceHelper = require('./helpers/Presence');\nvar ringoutHelper = require('./helpers/Ringout');\nvar serviceHelper = require('./helpers/Service');\nvar shippingMethodHelper = require('./helpers/ShippingMethod');\nvar stateHelper = require('./helpers/State');\nvar timezoneHelper = require('./helpers/Timezone');\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache().setPrefix(options.cachePrefix || '');\n        this.getPlatform().setServer(options.server || '').setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    RCSDK.setInjections = function (injections) {\n        this.injections = injections;\n        return this;\n    };\n    // Internals\n    RCSDK.prototype.getContext = function () {\n        return this._context;\n    };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () {\n        return ajaxObserver.$get(this.getContext());\n    };\n    RCSDK.prototype.getXhrResponse = function () {\n        return xhrResponse.$get(this.getContext());\n    };\n    RCSDK.prototype.getPlatform = function () {\n        return platform.$get(this.getContext());\n    };\n    RCSDK.prototype.getCache = function () {\n        return cache.$get(this.getContext());\n    };\n    RCSDK.prototype.getSubscription = function () {\n        return subscription.$get(this.getContext());\n    };\n    RCSDK.prototype.getPageVisibility = function () {\n        return pageVisibility.$get(this.getContext());\n    };\n    RCSDK.prototype.getHelper = function () {\n        return helper.$get(this.getContext());\n    };\n    RCSDK.prototype.getObservable = function () {\n        return observable.$get(this.getContext());\n    };\n    RCSDK.prototype.getValidator = function () {\n        return validator.$get(this.getContext());\n    };\n    RCSDK.prototype.getLog = function () {\n        return log.$get(this.getContext());\n    };\n    RCSDK.prototype.getUtils = function () {\n        return utils.$get(this.getContext());\n    };\n    RCSDK.prototype.getList = function () {\n        return list.$get(this.getContext());\n    };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () {\n        return countryHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getDeviceModelHelper = function () {\n        return deviceModelHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getLanguageHelper = function () {\n        return languageHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getLocationHelper = function () {\n        return locationHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getShippingMethodHelper = function () {\n        return shippingMethodHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getStateHelper = function () {\n        return stateHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getTimezoneHelper = function () {\n        return timezoneHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getAccountHelper = function () {\n        return accountHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getBlockedNumberHelper = function () {\n        return blockedNumberHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getCallHelper = function () {\n        return callHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getConferencingHelper = function () {\n        return conferencingHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getContactHelper = function () {\n        return contactHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getContactGroupHelper = function () {\n        return contactGroupHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getDeviceHelper = function () {\n        return deviceHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getExtensionHelper = function () {\n        return extensionHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getForwardingNumberHelper = function () {\n        return forwardingNumberHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getMessageHelper = function () {\n        return messageHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getPhoneNumberHelper = function () {\n        return phoneNumberHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getPresenceHelper = function () {\n        return presenceHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getRingoutHelper = function () {\n        return ringoutHelper.$get(this.getContext());\n    };\n    RCSDK.prototype.getServiceHelper = function () {\n        return serviceHelper.$get(this.getContext());\n    };\n    RCSDK.version = '1.2.1';\n    return RCSDK;\n})();\nexports.RCSDK = RCSDK;\nfunction factory(injections) {\n    if (!injections || !('CryptoJS' in injections) || !('localStorage' in injections) || !('Promise' in injections) || !('PUBNUB' in injections) || !('XHR' in injections))\n        throw new Error('Injections object is not complete');\n    return RCSDK.setInjections(injections);\n}\nexports.factory = factory;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/RCSDK.js\n ** module id = 6\n ** module chunks = 0\n **/","var XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/xhr/XhrResponse.js\n ** module id = 7\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/AjaxObserver.js\n ** module id = 8\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Cache.js\n ** module id = 9\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar pubnubMock = require('./pubnub/PubnubMock'); //TODO Fix circular\nvar xhrMock = require('./xhr/XhrMock'); //TODO Fix circular\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getCryptoJS = function () {\n        return this.injections.CryptoJS;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? pubnubMock.$get(this) : this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? xhrMock.$get(this) : new this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Context.js\n ** module id = 10\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar utils = require('./Utils');\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Helper.js\n ** module id = 11\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar utils = require('./Utils');\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/List.js\n ** module id = 12\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar utils = require('./Utils');\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () {\n                },\n                warn: function () {\n                },\n                info: function () {\n                },\n                error: function () {\n                }\n            };\n        }\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Log.js\n ** module id = 13\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar utils = require('./Utils');\nvar log = require('./Log');\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @alias RCSDK.core.Observable\n     */\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        var self = this;\n        if (!callback) {\n            delete this.listeners[event];\n        }\n        else {\n            if (!this.hasListeners(event))\n                return this;\n            this.listeners[event].forEach(function (cb, i) {\n                if (cb === callback)\n                    delete _this.listeners[event][i];\n            });\n        }\n        return this;\n    };\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    Observable.prototype.offAll = function () {\n        this.listeners = {};\n        this.oneTimeEvents = {};\n        this.oneTimeArguments = {};\n        return this;\n    };\n    Observable.prototype.destroy = function () {\n        this.offAll();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Observable.js\n ** module id = 14\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v,\n                focusin: v,\n                pageshow: v,\n                blur: h,\n                focusout: h,\n                pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/PageVisibility.js\n ** module id = 15\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar cache = require('./Cache');\nvar request = require('./http/Request');\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: {\n                \"grant_type\": \"password\",\n                \"username\": options.username,\n                \"extension\": options.extension || '',\n                \"password\": options.password,\n                \"access_token_ttl\": this.accessTokenTtl,\n                \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n            }\n        }).then(function (response) {\n            _this.setCache(response.data).remember(options.remember).emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage().emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data).resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e]).emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume().clearStorage().emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume().emitAndCallback(_this.events.accessViolation, [e]).emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest().setOptions(options).setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : '')).send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this.refresh().then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest().setOptions(options).setHeader('Content-Type', 'application/x-www-form-urlencoded').setHeader('Accept', 'application/json').setHeader('Authorization', 'Basic ' + this.apiKey).send();\n    };\n    /**\n     *\n     * @param url\n     * @param {{addMethod?: string, addToken?: boolean, addServer?: boolean}} [options]\n     * @returns {string}\n     */\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '';\n        if (options.addServer && url.indexOf('http://') == -1 && url.indexOf('https://') == -1)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        return this;\n    };\n    Platform.prototype.on = function (events, callback) {\n        _super.prototype.on.call(this, events, callback);\n        return this;\n    };\n    Platform.prototype.off = function (events, callback) {\n        _super.prototype.on.call(this, events, callback);\n        return this;\n    };\n    Platform.prototype.emitAndCallback = function (event, args, callback) {\n        _super.prototype.emitAndCallback.call(this, event, args, callback);\n        return this;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Platform.js\n ** module id = 16\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getCrypto = function () {\n        return this.context.getCryptoJS();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return require('./Platform').$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data).subscribeAtPubnub().emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe().emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data).emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe().emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe().emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription && this.subscription.deliveryMode && this.subscription.deliveryMode.subscriberKey && this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            _this.renew({});\n        }, timeToExpiration);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     * @param message\n     * @returns {Subscription}\n     */\n    Subscription.prototype.notify = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var CryptoJS = this.getCrypto();\n            var key = CryptoJS.enc.Base64.parse(this.subscription.deliveryMode.encryptionKey);\n            var data = CryptoJS.enc.Base64.parse(message);\n            var decrypted = CryptoJS.AES.decrypt({ ciphertext: data }, key, {\n                mode: CryptoJS.mode.ECB,\n                padding: CryptoJS.pad.Pkcs7\n            }).toString(CryptoJS.enc.Utf8);\n            message = JSON.parse(decrypted);\n        }\n        this.emit(this.events.notification, message);\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     * @returns {Subscription}\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.prototype.on = function (events, callback) {\n        _super.prototype.on.call(this, events, callback);\n        return this;\n    };\n    Subscription.prototype.off = function (events, callback) {\n        _super.prototype.on.call(this, events, callback);\n        return this;\n    };\n    Subscription.prototype.emitAndCallback = function (event, args, callback) {\n        _super.prototype.emitAndCallback.call(this, event, args, callback);\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Subscription.js\n ** module id = 17\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/maste.r/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/maste.r/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null ? String(obj) : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) {\n        }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property.split(/[.[\\]]/).reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Utils.js\n ** module id = 18\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar utils = require('./Utils');\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Validator.js\n ** module id = 19\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Account.js\n ** module id = 20\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId ? options.extensionId : '~') + '/blocked-number' + (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/BlockedNumber.js\n ** module id = 21\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar presence = require('./Presence');\nvar contact = require('./Contact');\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' + (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') + (options.active ? 'active-calls' : 'call-log') + (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(self.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        function getTime(dateString) {\n            return (new Date(dateString)).getTime();\n        }\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) && outboundRingOutCall.direction == 'Outbound' && inboundCall.direction == 'Inbound' && ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) && inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber && (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name));\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        function cleanup(phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        }\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this.parsePresenceCalls(presence && presence.activeCalls || []).map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Call.js\n ** module id = 22\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar list = require('../core/List');\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId ? options.extensionId : '~') + '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root + (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') + (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var self = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return self.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) {\n                return _this.match(item, opts.condition);\n            } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) {\n                return (_this.getPhones(item).length > 0);\n            } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) {\n                return (_this.getFaxes(item).length > 0);\n            } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Contact.js\n ** module id = 23\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/ContactGroup.js\n ** module id = 24\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Conferencing.js\n ** module id = 25\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Country.js\n ** module id = 26\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar extension = require('./Extension');\nvar deviceModel = require('./DeviceModel');\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' + (options.extensionId ? '/extension/' + options.extensionId : '') + '/device' + (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'emergencyServiceAddress-street', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street) },\n            { field: 'emergencyServiceAddress-city', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city) },\n            { field: 'emergencyServiceAddress-state', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state) },\n            { field: 'emergencyServiceAddress-country', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country) },\n            { field: 'emergencyServiceAddress-zip', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip) },\n            { field: 'emergencyServiceAddress-customerName', validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName) },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Device.js\n ** module id = 27\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n        /**\n         * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n         */\n        this.devices = [\n            {\n                id: '-1',\n                name: 'Softphone'\n            },\n            {\n                id: '0',\n                name: 'Existing device'\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '23',\n                name: 'Polycom IP 321 Basic IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '30',\n                name: 'Polycom IP 550 HD Manager IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '37',\n                name: 'Polycom IP 6000 Conference Phone',\n                deviceClass: 'Conference Phone'\n            },\n            {\n                id: '40',\n                name: 'Polycom IP 335 HD IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '51',\n                name: 'Cisco SPA-303 Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '16',\n                name: 'Cisco SPA-508G Desk Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '19',\n                name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\tDesk Phone',\n                addons: [\n                    {\n                        id: '2',\n                        name: 'Cisco Sidecar',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '1'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '2'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n                deviceClass: 'Desk Phone',\n                addons: [\n                    {\n                        id: '1',\n                        name: 'Plolycom Expansion',\n                        count: '3'\n                    }\n                ]\n            },\n            {\n                id: '34',\n                name: 'Polycom IP 650 HD Executive IP phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '52',\n                name: 'Cisco SPA-122 ATA',\n                deviceClass: 'Analog Adapter'\n            },\n            {\n                id: '53',\n                name: 'Polycom VVX-500 Color Touchscreen',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '54',\n                name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n                deviceClass: 'Desk Phone'\n            },\n            {\n                id: '55',\n                name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n                deviceClass: 'Desk Phone'\n            }\n        ];\n    }\n    DeviceModel.prototype.getId = function (device) {\n        if (!device)\n            return null;\n        return device.id + (device.addons && device.addons[0] ? '-' + device.addons[0].id + '-' + device.addons[0].count : '');\n    };\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     */\n    DeviceModel.prototype.cleanForSaving = function (device) {\n        if (!device)\n            return null;\n        delete device.name;\n        delete device.deviceClass;\n        if (device.addons && device.addons.length > 0) {\n            device.addons.forEach(function (addon, i) {\n                delete device.addons[i].name;\n            });\n        }\n        else {\n            delete device.addons;\n        }\n        return device;\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/DeviceModel.js\n ** module id = 28\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' + (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') + (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) + (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Extension.js\n ** module id = 29\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n            condition: options.features.length,\n            filterFn: function (item) {\n                return options.features.some(function (feature) {\n                    return _this.hasFeature(item, feature);\n                });\n            }\n        }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/ForwardingNumber.js\n ** module id = 30\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n        this.languages = [\n            {\n                id: '1033',\n                name: 'English (US)'\n            },\n            {\n                id: '3084',\n                name: 'French (Canada)'\n            }\n        ];\n    }\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Language.js\n ** module id = 31\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar state = require('./State');\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (this.state.getId(item.state) == opts.condition);\n                }.bind(this)\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Location.js\n ** module id = 32\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar validator = require('../core/Validator');\nvar subscription = require('../core/Subscription');\nvar platform = require('../core/Platform');\nvar contact = require('./Contact');\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, { addMethod: 'GET', addServer: true, addToken: true }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Message.js\n ** module id = 33\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar extension = require('./Extension');\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' + (options.extensionId ? '/extension/' + options.extensionId : '') + '/phone-number' + (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' + item.paymentType + '-' + item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/PhoneNumber.js\n ** module id = 34\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar subscription = require('../core/Subscription');\nvar extension = require('./Extension');\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var events = presences.map(this.getId, this).map(function (id) {\n            return this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Presence.js\n ** module id = 35\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Ringout.js\n ** module id = 36\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        return function (serviceFeatures) {\n            return this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Service.js\n ** module id = 37\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n        /**\n         * TODO Remove when http://jira.ringcentral.com/browse/SDK-3 id done\n         */\n        this.shippingMethods = [\n            {\n                id: '1',\n                name: 'Ground Shipping (5-7 business days)'\n            },\n            {\n                id: '2',\n                name: '2-days Shipping'\n            },\n            {\n                id: '3',\n                name: 'Overnight Shipping'\n            }\n        ];\n    }\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/ShippingMethod.js\n ** module id = 38\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar country = require('./Country');\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/State.js\n ** module id = 39\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Timezone.js\n ** module id = 40\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/tsd.d.ts\" />\nvar PubnubMock = (function () {\n    function PubnubMock() {\n    }\n    PubnubMock.prototype.ready = function () {\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n    };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.onMessage = options.message;\n    };\n    PubnubMock.prototype.receiveMessage = function (msg) {\n        this.onMessage(msg, 'env', 'channel');\n    };\n    return PubnubMock;\n})();\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock();\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/pubnub/PubnubMock.js\n ** module id = 41\n ** module chunks = 0\n **/","var utils = require('../Utils');\nvar log = require('../Log');\nvar xhrResponse = require('./XhrResponse');\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/xhr/XhrMock.js\n ** module id = 42\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = require('./Headers');\nvar ajaxObserver = require('../AjaxObserver');\nvar r = require('./Response');\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    //TODO Remove\n    Request.prototype.setHeader = function (name, value) {\n        _super.prototype.setHeader.call(this, name, value);\n        return this;\n    };\n    //TODO Remove\n    Request.prototype.setHeaders = function (headers) {\n        _super.prototype.setHeaders.call(this, headers);\n        return this;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/http/Request.js\n ** module id = 43\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/tsd.d.ts\" />\nvar utils = require('../Utils');\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/http/Headers.js\n ** module id = 44\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/tsd.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = require('./Headers');\nvar log = require('../Log');\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '').split('\\n').forEach(function (header) {\n                    if (!header)\n                        return;\n                    /** @type {string[]} */\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message || this.data.error_description || this.data.description || 'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/http/Response.js\n ** module id = 45\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}